{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Agent/add-agent/add-agent.component.ts","./src/app/Agent/add-agent/add-agent.component.html","./src/app/Agent/assign-agent/assign-agent.component.ts","./src/app/Agent/assign-agent/assign-agent.component.html","./src/app/Agent/search-agent/search-agent.component.ts","./src/app/Agent/search-agent/search-agent.component.html","./src/app/Agent/update-agent/update-agent.component.ts","./src/app/Agent/update-agent/update-agent.component.html","./src/app/Classes/AddUser.ts","./src/app/Classes/Check.ts","./src/app/Classes/Complaint.ts","./src/app/Classes/Deactivate.ts","./src/app/Classes/DisplayUser.ts","./src/app/Complaint/add-complaint/add-complaint.component.ts","./src/app/Complaint/add-complaint/add-complaint.component.html","./src/app/Complaint/search-complaint/search-complaint.component.ts","./src/app/Complaint/search-complaint/search-complaint.component.html","./src/app/Complaint/update-complaint/update-complaint.component.ts","./src/app/Complaint/update-complaint/update-complaint.component.html","./src/app/Global.ts","./src/app/Services/Complaint.service.ts","./src/app/Services/User.service.ts","./src/app/Services/api.service.js","./src/app/Services/api.service.ts","./src/app/Services/loader.ts","./src/app/User/add-user/add-user.component.ts","./src/app/User/add-user/add-user.component.html","./src/app/User/search-user/search-user.component.ts","./src/app/User/search-user/search-user.component.html","./src/app/User/update-user/update-user.component.ts","./src/app/User/update-user/update-user.component.html","./src/app/User/view-user/view-user.component.ts","./src/app/User/view-user/view-user.component.html","./src/app/accept-rental-agree.ts","./src/app/accept-rental-agreement/accept-rental-agreement.component.ts","./src/app/accept-rental-agreement/accept-rental-agreement.component.html","./src/app/account/account.component.ts","./src/app/account/account.component.html","./src/app/agent/agent.component.ts","./src/app/agent/agent.component.html","./src/app/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/apply-for-rental-agreement/apply-for-rental-agreement.component.ts","./src/app/apply-for-rental-agreement/apply-for-rental-agreement.component.html","./src/app/approved-application/approved-application.component.ts","./src/app/approved-application/approved-application.component.html","./src/app/autologout.service.ts","./src/app/booking.service.ts","./src/app/booking.ts","./src/app/browseproperties/browseproperties.component.ts","./src/app/browseproperties/browseproperties.component.html","./src/app/components/my-loader/my-loader.component.ts","./src/app/components/my-loader/my-loader.component.html","./src/app/employee-type/employee-type.component.ts","./src/app/employee-type/employee-type.component.html","./src/app/error-page/error-page.component.ts","./src/app/error-page/error-page.component.html","./src/app/fail/fail.component.ts","./src/app/fail/fail.component.html","./src/app/interceptors/loader-interceptor.service.ts","./src/app/is-logged-in/is-logged-in.component.ts","./src/app/location/location.component.ts","./src/app/location/location.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/make-payment.service.ts","./src/app/make-payment/make-payment.component.ts","./src/app/make-payment/make-payment.component.html","./src/app/make-property-viewing-booking/make-property-viewing-booking.component.ts","./src/app/make-property-viewing-booking/make-property-viewing-booking.component.html","./src/app/my-service.service.ts","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/newpass.ts","./src/app/notify/notify.component.ts","./src/app/otp.ts","./src/app/payment-cancelled/payment-cancelled.component.ts","./src/app/payment-cancelled/payment-cancelled.component.html","./src/app/payment-succesful/payment-succesful.component.ts","./src/app/payment-succesful/payment-succesful.component.html","./src/app/payment.ts","./src/app/request-maintenance-job/request-maintenance-job.component.ts","./src/app/request-maintenance-job/request-maintenance-job.component.html","./src/app/request-to-extend-rental-agreement/request-to-extend-rental-agreement.component.ts","./src/app/request-to-extend-rental-agreement/request-to-extend-rental-agreement.component.html","./src/app/request-to-terminate-rental-agreement/request-to-terminate-rental-agreement.component.ts","./src/app/request-to-terminate-rental-agreement/request-to-terminate-rental-agreement.component.html","./src/app/requestedjobs.service.ts","./src/app/reset-password/reset-password.component.ts","./src/app/reset-password/reset-password.component.html","./src/app/search-propety.ts","./src/app/services/loader.service.ts","./src/app/success/success.component.ts","./src/app/success/success.component.html","./src/app/terminate-r.service.ts","./src/app/terminate.ts","./src/app/update-booking/update-booking.component.ts","./src/app/update-booking/update-booking.component.html","./src/app/username/username.component.ts","./src/app/username/username.component.html","./src/app/verify-otp.ts","./src/app/verify/verify.component.ts","./src/app/verify/verify.component.html","./src/app/view-booking/view-booking.component.ts","./src/app/view-booking/view-booking.component.html","./src/app/view-feedback/view-feedback.component.ts","./src/app/view-feedback/view-feedback.component.html","./src/app/view-payments/view-payments.component.ts","./src/app/view-payments/view-payments.component.html","./src/app/view-property/view-property.component.ts","./src/app/view-property/view-property.component.html","./src/app/viewrequestedjobs/viewrequestedjobs.component.ts","./src/app/viewrequestedjobs/viewrequestedjobs.component.html","./src/classes/hash.ts","./src/environments/environment.ts","./src/lib/mobiscroll/js/mobiscroll.angular.min.js","./src/main.ts"],"names":[],"mappings":"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ACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD;;;;;;;;;;;;;;AEZD;AAAA;AAAO,MAAM,IAAI;CAEhB;;;;;;;;;;;;;ACFD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;ACfnE;AACA;AACA,EAAE,KAA4D,oBAAoB,mBAAO,CAAC,iFAAe,GAAG,mBAAO,CAAC,uFAAiB,GAAG,mBAAO,CAAC,oFAAgB;AAChK,EAAE,SACyH;AAC3H,CAAC,iDAAiD;;AAElD;;AAEA;AACA;AACA,iEAAiE;AACjE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,mCAAmC;AACnC,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;;;AAGhB,iBAAiB,gBAAgB;AACjC;AACA;;AAEA,gCAAgC;;AAEhC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,kCAAkC;AACzD;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,eAAe;;;AAGf;AACA;;AAEA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA,yBAAyB,qBAAqB;AAC9C;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,oBAAoB;AAC3C,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,oBAAoB;AAC3C,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA,uBAAuB,oBAAoB;AAC3C,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,uBAAuB,iBAAiB;AACxC;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,yBAAyB,iBAAiB;AAC1C;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,yBAAyB,iBAAiB;AAC1C;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,mBAAmB;AAC1C,gCAAgC;;AAEhC;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA,uBAAuB,mBAAmB;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,iBAAiB;AACtC;AACA;;AAEA;AACA,yBAAyB,uBAAuB;AAChD;;AAEA;AACA;AACA;AACA;AACA,eAAe;;;AAGf,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,mBAAmB;AACtC;;AAEA,qBAAqB,iBAAiB;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;AACA;AACA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA,uBAAuB,mBAAmB;AAC1C,yBAAyB,iBAAiB;AAC1C;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,uBAAuB,iBAAiB;AACxC;AACA;;AAEA;AACA,OAAO;AACP;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA;AACA,aAAa;AACb,+EAA+E;AAC/E;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC,SAAS;AACT,OAAO;AACP;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;;AAEA,yBAAyB,iBAAiB;AAC1C;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT,yBAAyB,iBAAiB;AAC1C;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA,OAAO;AACP;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,uBAAuB,qBAAqB;AAC5C;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA;;AAEA,mDAAmD,QAAQ;AAC3D;AACA,aAAa;;AAEb,WAAW;AACX,uBAAuB,qBAAqB;AAC5C;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;AACA,WAAW;AACX,2BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;AACA,WAAW;AACX,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;;AAEA,yBAAyB,kBAAkB;AAC3C;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;;AAEA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;;AAEA,mBAAmB,sBAAsB;AACzC;;AAEA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA,GAAG,GAAG;;;AAGN,cAAc;;AAEd,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,qBAAqB;AACtC;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB;AAChB;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,8CAA8C;;AAE9C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,KAAK;AAClB,aAAa,OAAO,aAAa;AACjC,cAAc,OAAO;AACrB;;;AAGA;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mFAAmF;;AAEnF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO,aAAa;AACjC,cAAc,KAAK;AACnB;;;AAGA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oCAAoC,eAAe;AACnD;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA,iBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC;;AAElC;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,aAAa,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,oBAAoB,EAAE,SAAS,EAAE;AAC7I,6BAA6B,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,sBAAsB,EAAE,SAAS,EAAE;AACjG,0BAA0B,IAAI,MAAM,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,0BAA0B;AAC1B;;AAEA,qDAAqD;;AAErD,sDAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,SAAS;AACT;AACA;AACA,mDAAmD;AACnD,WAAW;AACX;AACA,gDAAgD;AAChD,aAAa;AACb;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,kBAAkB;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,cAAc;AACd,eAAe;AACf,kBAAkB;AAClB,kBAAkB;AAClB,oBAAoB;AACpB,kBAAkB;AAClB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,YAAY;AACZ;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC,4CAA4C;AAC5C;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB;;AAErB;AACA;AACA,OAAO;;;AAGP;AACA;AACA;;AAEA,wBAAwB;;AAExB,sCAAsC;;AAEtC;AACA;AACA,OAAO;;;AAGP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA,OAAO;;;AAGP;;AAEA,sCAAsC,EAAE;;;AAGxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,gCAAgC;AAChC;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,UAAU;AACV;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,SAAS;;;AAGT,mBAAmB,4BAA4B;AAC/C;AACA,SAAS;;;AAGT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;;AAGb,0CAA0C;AAC1C,qCAAqC;AACrC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB;;AAEA,uBAAuB,cAAc;AACrC;AACA,aAAa;;;AAGb;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;;AAEP;;AAEA;AACA;AACA;;AAEA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;;AAEA;AACA,yCAAyC;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,MAAM;;;AAGN;AACA,0CAA0C;;AAE1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA,oCAAoC;;AAEpC;AACA;AACA,OAAO;AACP;AACA,OAAO;;;AAGP;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA;AACA,wDAAwD,gCAAgC;AACxF,+CAA+C,oFAAoF,SAAS;;AAE5I;AACA,4CAA4C;AAC5C,KAAK,YAAY;AACjB;;AAEA;AACA;AACA;AACA,KAAK;AACL,gDAAgD,uCAAuC;;AAEvF;AACA,oDAAoD;AACpD,OAAO,YAAY;AACnB;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO,MAAM;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8CAA8C,oCAAoC;AAClF;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA,WAAW,wBAAwB;AACnC;AACA,uDAAuD,WAAW;AAClE;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA,WAAW,wBAAwB;AACnC;AACA,qDAAqD,WAAW;AAChE;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC;AACA,oDAAoD,WAAW;AAC/D;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B,uBAAuB,IAAI;AACrE;AACA,6CAA6C;AAC7C,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,QAAQ;AACR;AACA,uBAAuB,4CAA4C;AACnE,wBAAwB,mBAAmB;AAC3C,qBAAqB,mBAAmB;AACxC,4BAA4B,mBAAmB;AAC/C,oBAAoB,mBAAmB;AACvC,mBAAmB,mBAAmB;AACtC,0BAA0B,mBAAmB;AAC7C,sBAAsB,oBAAoB;AAC1C,yBAAyB,oBAAoB;AAC7C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B,yBAAyB,IAAI;AACvE;AACA,kDAAkD;AAClD,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,QAAQ;AACR;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kBAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B,yBAAyB,IAAI;AACvE;AACA,kDAAkD;AAClD,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,QAAQ;AACR;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B,0BAA0B,IAAI;AACxE;AACA,oDAAoD;AACpD,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,yBAAyB;AACpC,WAAW,0BAA0B;AACrC,WAAW,+BAA+B;AAC1C,QAAQ;AACR;AACA,0BAA0B,2CAA2C;AACrE,0BAA0B,2CAA2C;AACrE,2BAA2B,mBAAmB;AAC9C,yBAAyB,mBAAmB;AAC5C,wBAAwB,mBAAmB;AAC3C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B,0BAA0B,IAAI;AACxE;AACA,kDAAkD;AAClD,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,yBAAyB;AACpC,WAAW,0BAA0B;AACrC,WAAW,+BAA+B;AAC1C,QAAQ;AACR;AACA,uBAAuB,mBAAmB;AAC1C,wBAAwB,mBAAmB;AAC3C,sBAAsB,mBAAmB;AACzC,uBAAuB,mBAAmB;AAC1C,uBAAuB,mBAAmB;AAC1C,iCAAiC,mBAAmB;AACpD,uBAAuB,mBAAmB;AAC1C,uBAAuB,mBAAmB;AAC1C,yBAAyB,mBAAmB;AAC5C,4BAA4B,mBAAmB;AAC/C,yBAAyB,mBAAmB;AAC5C,0BAA0B,mBAAmB;AAC7C,0BAA0B,mBAAmB;AAC7C,uBAAuB,mBAAmB;AAC1C,6BAA6B,oBAAoB;AACjD,4BAA4B,oBAAoB;AAChD,wBAAwB,oBAAoB;AAC5C,uBAAuB,oBAAoB;AAC3C,sBAAsB,oBAAoB;AAC1C,6BAA6B,oBAAoB;AACjD,0BAA0B,oBAAoB;AAC9C,sBAAsB,oBAAoB;AAC1C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B,yBAAyB,IAAI;AACvE;AACA,qDAAqD;AACrD,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,yBAAyB;AACpC,WAAW,0BAA0B;AACrC,WAAW,+BAA+B;AAC1C,QAAQ;AACR;AACA,wBAAwB,mBAAmB;AAC3C,sBAAsB,mBAAmB;AACzC,sBAAsB,mBAAmB;AACzC,wBAAwB,mBAAmB;AAC3C,wBAAwB,mBAAmB;AAC3C,yBAAyB,mBAAmB;AAC5C,wBAAwB,mBAAmB;AAC3C,oBAAoB,mBAAmB;AACvC,yBAAyB,mBAAmB;AAC5C,gCAAgC,mBAAmB;AACnD,sBAAsB,mBAAmB;AACzC,qBAAqB,mBAAmB;AACxC,wBAAwB,mBAAmB;AAC3C,0BAA0B,mBAAmB;AAC7C,yBAAyB,mBAAmB;AAC5C,4BAA4B,mBAAmB;AAC/C,uBAAuB,mBAAmB;AAC1C,2BAA2B,mBAAmB;AAC9C,0BAA0B,mBAAmB;AAC7C,6BAA6B,yCAAyC;AACtE,qBAAqB,oBAAoB;AACzC,yBAAyB,oBAAoB;AAC7C,uBAAuB,oBAAoB;AAC3C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,mDAAmD,WAAW;AAC9D;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,wDAAwD,WAAW;AACnE;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,2DAA2D,WAAW;AACtE;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,eAAe;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB;AACzB;AACA;AACA,sEAAsE;;AAEtE;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,oCAAoC;;AAEpC,6CAA6C;;AAE7C;AACA;AACA,OAAO,EAAE;;AAET;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uNAAuN;;AAEvN;AACA;;AAEA,uEAAuE;;AAEvE;AACA;AACA,OAAO,EAAE;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,qBAAqB,kBAAkB;AACvC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA,GAAG,cAAc;;AAEjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B,yBAAyB,IAAI;AACvE;AACA,iDAAiD;AACjD,WAAW,yBAAyB;AACpC,WAAW,4BAA4B;AACvC,WAAW,qBAAqB;AAChC,QAAQ;AACR;AACA,qBAAqB,mBAAmB;AACxC,uBAAuB,mBAAmB;AAC1C,wBAAwB,mBAAmB;AAC3C,oBAAoB,mBAAmB;AACvC,yBAAyB,8CAA8C,gBAAgB,IAAI;AAC3F;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B,0BAA0B,IAAI;AACxE;AACA,sDAAsD;AACtD,WAAW,yBAAyB;AACpC,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,uCAAuC,sBAAsB,IAAI;AAC5E,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,QAAQ;AACR;AACA,wBAAwB,mBAAmB;AAC3C,qBAAqB,mBAAmB;AACxC,qBAAqB,mBAAmB;AACxC,4BAA4B,mBAAmB;AAC/C,kCAAkC,4CAA4C;AAC9E;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B,yBAAyB,IAAI;AACvE;AACA,kDAAkD;AAClD,WAAW,yBAAyB;AACpC,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,uCAAuC,sBAAsB,IAAI;AAC5E,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,QAAQ;AACR;AACA,4BAA4B,mBAAmB;AAC/C,8BAA8B,mBAAmB;AACjD,2BAA2B,mBAAmB;AAC9C,0BAA0B,mBAAmB;AAC7C,yBAAyB,mBAAmB;AAC5C,yBAAyB,mBAAmB;AAC5C,yBAAyB,mBAAmB;AAC5C,wBAAwB,mBAAmB;AAC3C,oBAAoB,mBAAmB;AACvC,yBAAyB,0CAA0C;AACnE,oBAAoB,mBAAmB;AACvC,8BAA8B,+CAA+C;AAC7E,wBAAwB,yCAAyC;AACjE,wBAAwB,yCAAyC;AACjE,0BAA0B,2CAA2C;AACrE,0BAA0B,2CAA2C;AACrE,0BAA0B,2CAA2C;AACrE,2BAA2B,mBAAmB;AAC9C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,uBAAuB;AACvB,8mEAA8mE,cAAc;AAC5nE;AACA,mBAAmB,IAAI;AACvB;AACA,8CAA8C;AAC9C,WAAW,yBAAyB;AACpC,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,0BAA0B;AACrC,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,WAAW,qBAAqB;AAChC,QAAQ;AACR;AACA,mBAAmB,mBAAmB;AACtC,mBAAmB,mBAAmB;AACtC,oBAAoB,mBAAmB;AACvC,uBAAuB,mBAAmB;AAC1C,sBAAsB,mBAAmB;AACzC,wBAAwB,mBAAmB;AAC3C,yBAAyB,mBAAmB;AAC5C,wBAAwB,mBAAmB;AAC3C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,oDAAoD,WAAW;AAC/D;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,OAAO,MAAM;AACnD,oCAAoC,SAAS,gBAAgB,WAAW;AACxE,gKAAgK,YAAY;AAC5K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA,sJAAsJ;AACtJ;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;;AAEA,mBAAmB;;AAEnB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA,OAAO;;;AAGP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,8CAA8C;;AAE9C;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO,EAAE;;AAET;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP,kCAAkC;;;AAGlC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,UAAU;;;AAGV;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;;AAEzC,8HAA8H;AAC9H;;AAEA;;AAEA;AACA,qFAAqF;;AAErF;AACA,SAAS;AACT;AACA,SAAS;;;AAGT;AACA;AACA,SAAS,EAAE;;AAEX;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,EAAE;;AAEX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,eAAe,SAAS;AACxB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;;;AAGA;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA,gJAAgJ;;AAEhJ;AACA;AACA,SAAS;;;AAGT,6CAA6C;;AAE7C,yCAAyC;;AAEzC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;;;AAGA;AACA;AACA;AACA,gCAAgC;AAChC;;AAEA,sCAAsC;;AAEtC,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6CAA6C;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO,EAAE;;AAET;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;;;AAGP;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;;;AAGA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA,yFAAyF,OAAO;AAChG,iCAAiC;AACjC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;;AAGP,iFAAiF;;AAEjF,6EAA6E,MAAM;AACnF;AACA;AACA;AACA;AACA;AACA,uBAAuB;;AAEvB,iBAAiB,oBAAoB;AACrC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,EAAE;;AAET;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;;AAGT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;;AAEvD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mFAAmF;AACnF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;;AAE1C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;;;AAGT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,4BAA4B;;AAE5B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;;AAE1B;AACA;AACA,OAAO;;;AAGP,4FAA4F;;AAE5F;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC;;AAExC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA,WAAW,IAAI;;AAEf,SAAS;AACT;AACA;AACA,iBAAiB;AACjB,SAAS,QAAQ;AACjB;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;;AAEA;AACA;AACA;AACA,gGAAgG;;AAEhG;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,MAAM;;;AAGN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,qCAAqC;;AAErC;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC,qCAAqC;;AAErC;;AAEA;AACA;AACA;AACA,OAAO;AACP,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F;;AAE5F,wmBAAwmB,iCAAiC,+IAA+I,uHAAuH,yDAAyD;AACx8B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;;AAEA;AACA;;AAEA,oGAAoG;;AAEpG;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA,iGAAiG;;AAEjG;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iEAAiE,IAAI;;AAErE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,WAAW;;;AAGX;;AAEA;AACA;AACA;AACA,aAAa;;;AAGb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,aAAa;;;AAGb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,OAAO,EAAE;;AAET;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA,uBAAuB,2BAA2B;AAClD;AACA,yGAAyG;AACzG;;AAEA;AACA,0CAA0C;AAC1C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL,yCAAyC;;AAEzC;AACA;AACA,eAAe,MAAM;AACrB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA,yGAAyG;AACzG,kGAAkG,qEAAqE;AACvK;AACA;AACA,+VAA+V;AAC/V;AACA;AACA,6CAA6C,qBAAqB;;AAElE;AACA;AACA;AACA;AACA,mLAAmL,qEAAqE,2EAA2E;AACnU,kUAAkU;AAClU;AACA;AACA,gFAAgF,6CAA6C,qGAAqG,IAAI;;AAEtO;;AAEA;AACA,oFAAoF,qCAAqC;AACzH;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,mBAAmB;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;;AAE9C;AACA;AACA;AACA;;AAEA,sCAAsC;;AAEtC;AACA,wBAAwB;;AAExB;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,gBAAgB;AACnC,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,qBAAqB,WAAW;AAChC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sBAAsB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sBAAsB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,uCAAuC,yBAAyB;AAChE;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,4BAA4B;;AAE5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iCAAiC,aAAa;AAC9C;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,SAAS;;;AAGT,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB,OAAO;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;;;AAGf,yBAAyB,WAAW;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;;;AAGf;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;;AAGb;AACA,0BAA0B,SAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,uBAAuB;AACvB,wBAAwB;AACxB,qBAAqB;AACrB;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;;;AAGA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA,aAAa;;;AAGb;AACA;AACA,gCAAgC;;AAEhC,wEAAwE;;AAExE;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,SAAS,EAAE;;AAEX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;;AAEjB;AACA;AACA,WAAW;AACX,SAAS;AACT;;;AAGA;AACA;AACA;;AAEA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;;;AAGX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA,mCAAmC;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,EAAE;;AAET,wDAAwD;;AAExD,+CAA+C;;AAE/C;AACA;AACA;;AAEA,wBAAwB;;AAExB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA,8GAA8G;AAC9G;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA,4CAA4C;;AAE5C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gQAAgQ,6BAA6B;AAC7R;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA2C;;AAE3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA,6GAA6G,MAAM;;AAEnH;AACA;AACA,iBAAiB;;;AAGjB;AACA;;AAEA;AACA,uGAAuG,MAAM;AAC7G,mBAAmB;AACnB;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;;AAEvE;;AAEA,iBAAiB,4BAA4B;AAC7C;AACA;;AAEA,uNAAuN;;AAEvN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sJAAsJ;;AAEtJ;AACA;;AAEA,mBAAmB,YAAY;AAC/B;AACA;;AAEA,qBAAqB,OAAO;AAC5B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;;AAEA,qBAAqB,QAAQ;AAC7B;AACA;AACA;;AAEA,kSAAkS;AAClS;;AAEA;AACA;;AAEA,qCAAqC;;AAErC;;AAEA,oBAAoB,OAAO;AAC3B;AACA;;AAEA;AACA,OAAO;;;AAGP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,QAAQ;AACzB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,kCAAkC;;AAElC;AACA,4CAA4C;;AAE5C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gnBAAgnB;AAChnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;;AAEA;;AAEA,mBAAmB,eAAe;AAClC;AACA;AACA,OAAO,mBAAmB;;;AAG1B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD;;AAEpD,mDAAmD;;AAEnD,6GAA6G;;AAE7G;;AAEA;AACA,qBAAqB,cAAc;AACnC;AACA;AACA;;AAEA;AACA,gCAAgC,SAAS;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;;AAGP,8CAA8C;;AAE9C,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;;AAE7C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,YAAY;AACjC,wCAAwC;;AAExC;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,QAAQ;AAC3B,qFAAqF;;AAErF;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,QAAQ;AAC7B,uFAAuF;;AAEvF;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,oFAAoF;;AAEjH;AACA;AACA,SAAS,oEAAoE;;;AAG7E;AACA;AACA;AACA;;AAEA,+CAA+C;AAC/C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4DAA4D;;AAE5D;;AAEA;AACA;AACA,yGAAyG;;AAEzG,0JAA0J;;AAE1J;AACA;AACA;AACA,WAAW,EAAE;;AAEb;AACA;AACA;AACA,WAAW;AACX,SAAS;;;AAGT;AACA;AACA,SAAS,EAAE;;AAEX,yCAAyC;;AAEzC;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;;AAGP;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP;;AAEA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;;AAE3B;AACA,wBAAwB;;AAExB;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+FAA+F;;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8CAA8C;;AAE9C;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS,EAAE;;AAEX;AACA;AACA,SAAS,EAAE;;AAEX;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,SAAS,EAAE;;AAEX;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA,8CAA8C;;AAE9C,mFAAmF;;AAEnF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6GAA6G;;AAE7G;AACA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,YAAY;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2FAA2F;;AAE3F;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,OAAO;AAC5B;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAM;;;AAGN,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;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AACA,GAAG,cAAc;;AAEjB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,GAAG,cAAc;;AAEjB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF;;AAEvF;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA,OAAO;;;AAGP;AACA;;AAEA;AACA,GAAG,QAAQ;;AAEX;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG,cAAc;;AAEjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;;;AAGP;AACA;AACA,OAAO;;;AAGP;AACA;AACA,4BAA4B;;AAE5B;AACA;;AAEA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA,OAAO;AACP;AACA,+FAA+F;;AAE/F;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,0CAA0C;;AAE1C;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;;AAE1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA,kEAAkE,OAAO,iBAAiB,KAAK;;AAE/F;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,MAAM;;AAEpF;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP,6CAA6C;;AAE7C;AACA;AACA;AACA,OAAO;;;AAGP;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;;AAE9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA,OAAO;;;AAGP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;;AAEA,mBAAmB,aAAa;AAChC;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;;AAE1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB;;AAEA;AACA,0DAA0D;;AAE1D;AACA;AACA,OAAO;;;AAGP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;;AAE1B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,4CAA4C;;AAE5C;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtqBAAqB;AACrB,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,iBAAiB;AACjB;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,6EAA6E;;AAE7E;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;;;AAGX;AACA;AACA,WAAW;;;AAGX;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;;AAEf,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;;AAGX;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;;AAEf,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX,uDAAuD;;AAEvD;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA,SAAS;AACT;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;;;AAGT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAoD;;AAEpD,oFAAoF;;AAEpF,uBAAuB;;AAEvB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,kGAAkG;;AAElG;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uDAAuD;;AAEvD;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,SAAS;;;AAGT;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;;AAGT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,+IAA+I;;AAE/I;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA,2DAA2D;;AAE3D;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,EAAE;;AAET,kKAAkK;;AAElK;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qEAAqE;;AAErE;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,iDAAiD;;AAEjD;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA,SAAS;AACT;;AAEA;AACA,yEAAyE;;AAEzE;AACA,0CAA0C;;AAE1C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA,kEAAkE;;AAElE;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe;AACf,aAAa;AACb,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;;;AAGA;AACA,2BAA2B;;AAE3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD;AAClD;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iDAAiD;;AAEjD;;AAEA;AACA;AACA,uDAAuD;;AAEvD,uJAAuJ;;AAEvJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,sGAAsG;;AAEtG,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;;;AAGb;AACA;AACA;AACA;AACA,SAAS,EAAE;AACX;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B,OAAO;AACP,sCAAsC;;AAEtC,gDAAgD;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA,OAAO,EAAE;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,uBAAuB;AAC5C;AACA;;AAEA,qBAAqB,wBAAwB;AAC7C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO,EAAE;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC;;AAErC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,MAAM;AACN;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;;AAEA;AACA;AACA,0BAA0B;;AAE1B;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA,MAAM;AACN;;;AAGA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,6BAA6B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC;AACA,wDAAwD,WAAW;AACnE;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC;AACA,uDAAuD,WAAW;AAClE;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC;AACA,wDAAwD,WAAW;AACnE;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,wDAAwD;AACxD,WAAW,6BAA6B;AACxC,WAAW,4BAA4B;AACvC,WAAW,6BAA6B;AACxC,QAAQ;AACR;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,qDAAqD;AACrD,WAAW,yBAAyB;AACpC,WAAW,6BAA6B;AACxC,WAAW,6BAA6B;AACxC,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,QAAQ;AACR;AACA,kBAAkB,mBAAmB;AACrC,oBAAoB,mBAAmB;AACvC,yBAAyB,0CAA0C;AACnE,oBAAoB,mBAAmB;AACvC,wBAAwB,mBAAmB;AAC3C,8BAA8B,oBAAoB;AAClD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,uDAAuD;AACvD,WAAW,yBAAyB;AACpC,WAAW,6BAA6B;AACxC,WAAW,6BAA6B;AACxC,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,QAAQ;AACR;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sDAAsD,wCAAwC,uBAAuB;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,iDAAiD;AACjD,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,6BAA6B;AACxC,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,QAAQ;AACR;AACA,uBAAuB,mBAAmB;AAC1C,4BAA4B,mBAAmB;AAC/C,uBAAuB,mBAAmB;AAC1C,uBAAuB,mBAAmB;AAC1C,gCAAgC,mBAAmB;AACnD,0BAA0B,mBAAmB;AAC7C,4BAA4B,mBAAmB;AAC/C,uBAAuB,mBAAmB;AAC1C,6BAA6B,mBAAmB;AAChD,2BAA2B,mBAAmB;AAC9C,qBAAqB,mBAAmB;AACxC,yBAAyB,mBAAmB;AAC5C,0BAA0B,mBAAmB;AAC7C,2BAA2B,mBAAmB;AAC9C,8BAA8B,mBAAmB;AACjD,0BAA0B,mBAAmB;AAC7C,sBAAsB,mBAAmB;AACzC,wBAAwB,mBAAmB;AAC3C,yBAAyB,mBAAmB;AAC5C,sBAAsB,mBAAmB;AACzC,qBAAqB,mBAAmB;AACxC,yBAAyB,mBAAmB;AAC5C,0BAA0B,mBAAmB;AAC7C,uBAAuB,mBAAmB;AAC1C,wBAAwB,mBAAmB;AAC3C,wBAAwB,mBAAmB;AAC3C,yBAAyB,oBAAoB;AAC7C,yBAAyB,oBAAoB;AAC7C,4BAA4B,oBAAoB;AAChD,yBAAyB,oBAAoB;AAC7C,wBAAwB,oBAAoB;AAC5C,0BAA0B,oBAAoB;AAC9C,0BAA0B,oBAAoB;AAC9C,4BAA4B,oBAAoB;AAChD,sBAAsB,oBAAoB;AAC1C,4BAA4B,oBAAoB;AAChD,2BAA2B,oBAAoB;AAC/C,yBAAyB,oBAAoB;AAC7C,4BAA4B,oBAAoB;AAChD,6BAA6B,oBAAoB;AACjD,uBAAuB,uCAAuC;AAC9D,qBAAqB,uDAAuD,oBAAoB,IAAI;AACpG;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,uDAAuD,WAAW;AAClE;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA,mCAAmC,wDAAwD;AAC3F;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,6BAA6B;AAC7B,mBAAmB,IAAI;AACvB;AACA,6CAA6C;AAC7C,WAAW,yBAAyB;AACpC,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,0CAA0C,sBAAsB,IAAI;AAC/E,WAAW,qBAAqB;AAChC,QAAQ;AACR;AACA,gCAAgC,2CAA2C;AAC3E,oBAAoB,mBAAmB;AACvC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD,mBAAmB,IAAI;AACvB;AACA,sDAAsD;AACtD,WAAW,yBAAyB;AACpC,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,0CAA0C,sBAAsB,IAAI;AAC/E,WAAW,qBAAqB;AAChC,QAAQ;AACR;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,uCAAuC,gBAAgB,EAAE;AACzD;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,mDAAmD,WAAW;AAC9D;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,uCAAuC,gBAAgB,EAAE;AACzD;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,oDAAoD,WAAW;AAC/D;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,uCAAuC,gBAAgB,EAAE;AACzD;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,mDAAmD,WAAW;AAC9D;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,uCAAuC,gBAAgB,EAAE;AACzD;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,kDAAkD,WAAW;AAC7D;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,uCAAuC,gBAAgB,EAAE;AACzD;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,qDAAqD,WAAW;AAChE;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,mDAAmD,WAAW;AAC9D;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;;AAEA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA,WAAW,mGAAmG;AAC9G;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA,2CAA2C;AAC3C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6IAA6I;AAC7I;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,uBAAuB,wBAAwB;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oEAAoE;;AAEpE;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,EAAE;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qBAAqB,0BAA0B;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;;AAGP,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA,OAAO;;;AAGP,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA,OAAO;;;AAGP;AACA,yBAAyB,cAAc;AACvC;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA,uCAAuC;;AAEvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,6CAA6C;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mIAAmI;;AAEnI;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,KAAK;;;AAGL,yCAAyC;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+FAA+F,EAAE,YAAY,GAAG,gBAAgB,GAAG,cAAc,GAAG;AACpJ;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qGAAqG;;AAErG;;AAEA,iBAAiB,uBAAuB;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;;AAEA;AACA,iRAAiR;AACjR;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,qDAAqD;;AAErD;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,2DAA2D;;AAE3D;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,6CAA6C;;AAE7C;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;;AAEA,iCAAiC;;AAEjC,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD;;AAEnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B;;AAE3B;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,oDAAoD;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,mCAAmC,sDAAsD;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,8CAA8C;AAC9C,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,WAAW,uCAAuC,sBAAsB,IAAI;AAC5E,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,+BAA+B;AAC1C,QAAQ;AACR;AACA,qBAAqB,mBAAmB;AACxC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AC7D,yBAAyB,0CAA0C;AACnE,oBAAoB,mBAAmB;AACvC,qBAAqB,mBAAmB;AACxC,4BAA4B,mBAAmB;AAC/C,uBAAuB,mBAAmB;AAC1C,2BAA2B,mBAAmB;AAC9C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,uDAAuD,WAAW;AAClE;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;;AAEpB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qCAAqC,cAAc;AACnD;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;AACA;;AAEA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,6dAA6d;AAC7d;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,oDAAoD;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS,EAAE;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iWAAiW;AACjW,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,wDAAwD;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,yCAAyC;AACzC;;AAEA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B;;AAE/B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B;;AAE9B;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,MAAM;;;AAGN,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA,WAAW;AACX;;AAEA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,+BAA+B;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0BAA0B,sDAAsD;AAClH;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA,WAAW;AACX;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,sDAAsD;AACtD,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,QAAQ;AACR;AACA,oBAAoB,yCAAyC;AAC7D,sBAAsB,mBAAmB;AACzC,8BAA8B,mBAAmB;AACjD,2BAA2B,mBAAmB;AAC9C,8BAA8B,mBAAmB;AACjD,oBAAoB,mBAAmB;AACvC,0BAA0B,mBAAmB;AAC7C,yBAAyB,mBAAmB;AAC5C,0BAA0B,mBAAmB;AAC7C,2BAA2B,mBAAmB;AAC9C,4BAA4B,mBAAmB;AAC/C,6BAA6B,oBAAoB;AACjD,6BAA6B,oBAAoB;AACjD,8BAA8B,oBAAoB;AAClD,2BAA2B,oBAAoB;AAC/C,yBAAyB,oBAAoB;AAC7C,uBAAuB,4CAA4C;AACnE;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,+DAA+D;AAC/D,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,QAAQ;AACR;AACA,oBAAoB,mBAAmB;AACvC,uBAAuB,mBAAmB;AAC1C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,4DAA4D,WAAW;AACvE;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yCAAyC;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;;AAGT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,OAAO;;;AAGP,mSAAmS;;AAEnS;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,6BAA6B;;AAE7B;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,6CAA6C;AAC7C,WAAW,yBAAyB;AACpC,WAAW,4BAA4B;AACvC,WAAW,qBAAqB;AAChC,QAAQ;AACR;AACA,uBAAuB,uCAAuC;AAC9D,uBAAuB,mBAAmB;AAC1C,uBAAuB,mBAAmB;AAC1C,0BAA0B,2CAA2C;AACrE,0BAA0B,2CAA2C;AACrE,wBAAwB,8CAA8C,gBAAgB,IAAI;AAC1F;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,WAAW;AACX;AACA,6BAA6B,6BAA6B;AAC1D,uhDAAuhD,cAAc;AACriD;AACA,mBAAmB,IAAI;AACvB;AACA,iDAAiD;AACjD,WAAW,yBAAyB;AACpC,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,0BAA0B;AACrC,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,WAAW,qBAAqB;AAChC,QAAQ;AACR;AACA,oBAAoB,mBAAmB;AACvC,oBAAoB,mBAAmB;AACvC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,WAAW;AACX;AACA,6BAA6B,6BAA6B;AAC1D,ieAAie,OAAO,kjBAAkjB,cAAc;AACxiC;AACA,mBAAmB,IAAI;AACvB;AACA,iDAAiD;AACjD,WAAW,yBAAyB;AACpC,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,0BAA0B;AACrC,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,WAAW,qBAAqB;AAChC,QAAQ;AACR;AACA,qBAAqB,mBAAmB;AACxC,oBAAoB,mBAAmB;AACvC,yBAAyB,0CAA0C;AACnE,qBAAqB,mBAAmB;AACxC,0BAA0B,2CAA2C;AACrE,0BAA0B,2CAA2C;AACrE;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,uBAAuB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA,mCAAmC;AACnC;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,+CAA+C;AAC/C,WAAW,yBAAyB;AACpC,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,qBAAqB;AAChC,QAAQ;AACR;AACA,uBAAuB,qCAAqC;AAC5D,oBAAoB,mBAAmB;AACvC,oBAAoB,mBAAmB;AACvC,oBAAoB,mBAAmB;AACvC,qBAAqB,mBAAmB;AACxC,uBAAuB,mBAAmB;AAC1C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,6BAA6B,6BAA6B;AAC1D,8hBAA8hB,cAAc;AAC5iB;AACA,mBAAmB,IAAI;AACvB;AACA,iDAAiD;AACjD,WAAW,yBAAyB;AACpC,WAAW,gCAAgC;AAC3C,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,uCAAuC,sBAAsB,IAAI;AAC5E,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,WAAW,qBAAqB;AAChC,QAAQ;AACR;AACA,qBAAqB,mBAAmB;AACxC,0BAA0B,2CAA2C;AACrE,0BAA0B,2CAA2C;AACrE;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,6BAA6B,6BAA6B;AAC1D,+LAA+L,cAAc;AAC7M;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,+CAA+C;AAC/C,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,QAAQ;AACR;AACA,uBAAuB,uCAAuC;AAC9D,wBAAwB,mBAAmB;AAC3C,oBAAoB,mBAAmB;AACvC,qBAAqB,mBAAmB;AACxC,qBAAqB,mBAAmB;AACxC,4BAA4B,mBAAmB;AAC/C,qBAAqB,qCAAqC;AAC1D,+BAA+B,4CAA4C;AAC3E,yBAAyB,8CAA8C,gBAAgB,IAAI;AAC3F;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,6BAA6B,6BAA6B;AAC1D;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,gDAAgD;AAChD,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,QAAQ;AACR;AACA,wBAAwB,mBAAmB;AAC3C,uBAAuB,uCAAuC;AAC9D,qBAAqB,mBAAmB;AACxC,oBAAoB,mBAAmB;AACvC,mBAAmB,mBAAmB;AACtC,mBAAmB,mBAAmB;AACtC,oBAAoB,mBAAmB;AACvC,mBAAmB,mBAAmB;AACtC,wBAAwB,mBAAmB;AAC3C,qBAAqB,mBAAmB;AACxC,+BAA+B,4CAA4C;AAC3E,yBAAyB,8CAA8C,gBAAgB,IAAI;AAC3F;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,6BAA6B,6BAA6B;AAC1D;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,iDAAiD;AACjD,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,QAAQ;AACR;AACA,uBAAuB,uCAAuC;AAC9D,qBAAqB,mBAAmB;AACxC,mBAAmB,mBAAmB;AACtC,oBAAoB,mBAAmB;AACvC,yBAAyB,0CAA0C;AACnE,mBAAmB,mBAAmB;AACtC,wBAAwB,mBAAmB;AAC3C,0BAA0B,2CAA2C;AACrE,qBAAqB,mBAAmB;AACxC,yBAAyB,8CAA8C,gBAAgB,IAAI;AAC3F;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA,WAAW,wBAAwB;AACnC;AACA,qDAAqD,WAAW;AAChE;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B,0BAA0B,IAAI;AACxE;AACA,uDAAuD;AACvD,WAAW,yBAAyB;AACpC,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,uCAAuC,sBAAsB,IAAI;AAC5E,WAAW,0BAA0B;AACrC,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,QAAQ;AACR;AACA,oBAAoB,mBAAmB;AACvC,qBAAqB,mBAAmB;AACxC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,mDAAmD;AACnD,WAAW,yBAAyB;AACpC,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,uCAAuC,sBAAsB,IAAI;AAC5E,WAAW,0BAA0B;AACrC,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,WAAW,qBAAqB;AAChC,QAAQ;AACR;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,6BAA6B,6BAA6B;AAC1D,qfAAqf,cAAc;AACngB,mBAAmB,IAAI;AACvB;AACA,8CAA8C;AAC9C,WAAW,yBAAyB;AACpC,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,0BAA0B;AACrC,WAAW,qBAAqB;AAChC,QAAQ;AACR;AACA,qBAAqB,mBAAmB;AACxC,qBAAqB,mBAAmB;AACxC,4BAA4B,mBAAmB;AAC/C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,uDAAuD;AACvD,WAAW,yBAAyB;AACpC,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,uCAAuC,sBAAsB,IAAI;AAC5E,WAAW,0BAA0B;AACrC,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,WAAW,qBAAqB;AAChC,QAAQ;AACR;AACA,sBAAsB,mBAAmB;AACzC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,6BAA6B,wBAAwB;AACrD,qnBAAqnB,4BAA4B;AACjpB,mBAAmB,IAAI;AACvB;AACA,kDAAkD;AAClD,WAAW,yBAAyB;AACpC,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,0BAA0B;AACrC,WAAW,qBAAqB;AAChC,QAAQ;AACR;AACA,oBAAoB,mBAAmB;AACvC,qBAAqB,mBAAmB;AACxC,uBAAuB,mBAAmB;AAC1C,6BAA6B,oBAAoB;AACjD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,8GAA8G,UAAU,EAAE;AAC1H;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,6BAA6B,6BAA6B;AAC1D;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,+CAA+C;AAC/C,WAAW,yBAAyB;AACpC,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,qBAAqB;AAChC,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,QAAQ;AACR;AACA,uBAAuB,uCAAuC;AAC9D,oBAAoB,mBAAmB;AACvC,uBAAuB,mBAAmB;AAC1C,yBAAyB,mBAAmB;AAC5C,oBAAoB,mBAAmB;AACvC,6BAA6B,8CAA8C;AAC3E,oBAAoB,mBAAmB;AACvC,mBAAmB,mBAAmB;AACtC,mBAAmB,mBAAmB;AACtC,mBAAmB,mBAAmB;AACtC,oBAAoB,mBAAmB;AACvC,wBAAwB,mBAAmB;AAC3C,0BAA0B,2CAA2C;AACrE,qBAAqB,qCAAqC;AAC1D,qBAAqB,mBAAmB;AACxC,+BAA+B,4CAA4C;AAC3E,6BAA6B,oDAAoD;AACjF;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,6BAA6B,6BAA6B;AAC1D;AACA,mBAAmB,IAAI;AACvB;AACA,+CAA+C;AAC/C,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,QAAQ;AACR;AACA,uBAAuB,mBAAmB;AAC1C,oBAAoB,mBAAmB;AACvC,mBAAmB,mBAAmB;AACtC,mBAAmB,mBAAmB;AACtC,oBAAoB,mBAAmB;AACvC,wBAAwB,mBAAmB;AAC3C,qBAAqB,mBAAmB;AACxC,sBAAsB,mBAAmB;AACzC,wBAAwB,mBAAmB;AAC3C,mBAAmB,mBAAmB;AACtC,wBAAwB,mBAAmB;AAC3C,qBAAqB,qCAAqC;AAC1D,+BAA+B,4CAA4C;AAC3E,qBAAqB,mBAAmB;AACxC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,+EAA+E,+BAA+B;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,uCAAuC,gBAAgB,EAAE;AACzD,mBAAmB,IAAI;AACvB;AACA,kDAAkD;AAClD,WAAW,yBAAyB;AACpC,QAAQ;AACR;AACA,2BAA2B,mBAAmB;AAC9C,oBAAoB,mBAAmB;AACvC,qBAAqB,mBAAmB;AACxC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,uBAAuB;AACvB,uCAAuC,gBAAgB,EAAE;AACzD,mBAAmB,IAAI;AACvB;AACA,uDAAuD,WAAW;AAClE;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,uBAAuB;AACvB,uCAAuC,gBAAgB,EAAE;AACzD,mBAAmB,IAAI;AACvB;AACA,yDAAyD,WAAW;AACpE;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,uBAAuB;AACvB,uCAAuC,gBAAgB,EAAE;AACzD,mBAAmB,IAAI;AACvB;AACA,kDAAkD,WAAW;AAC7D;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,oDAAoD,WAAW;AAC/D;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,gBAAgB,MAAM;AACtB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA,WAAW;AACX,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA,2CAA2C;;AAE3C;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,aAAa;AAC5D,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iCAAiC,sDAAsD;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,8CAA8C;AAC9C,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,WAAW,uCAAuC,sBAAsB,IAAI;AAC5E,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,+BAA+B;AAC1C,QAAQ;AACR;AACA,4BAA4B,mBAAmB;AAC/C,uBAAuB,mBAAmB;AAC1C,0BAA0B,mBAAmB;AAC7C,uBAAuB,mBAAmB;AAC1C,sBAAsB,mBAAmB;AACzC,2BAA2B,mBAAmB;AAC9C,yBAAyB,mBAAmB;AAC5C,0BAA0B,yCAAyC;AACnE,uBAAuB,4CAA4C;AACnE,sBAAsB,2CAA2C;AACjE,qBAAqB,0CAA0C;AAC/D,+BAA+B,iDAAiD;AAChF;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,sXAAsX,OAAO;AAC7X;AACA,mBAAmB,IAAI;AACvB;AACA,uDAAuD;AACvD,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,yBAAyB;AACpC,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,WAAW,uCAAuC,sBAAsB,IAAI;AAC5E,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,QAAQ;AACR;AACA,yBAAyB,oCAAoC;AAC7D,yBAAyB,0CAA0C;AACnE,oBAAoB,mBAAmB;AACvC,qBAAqB,mBAAmB;AACxC,4BAA4B,mBAAmB;AAC/C,uBAAuB,mBAAmB;AAC1C,0BAA0B,oCAAoC;AAC9D,qBAAqB,mBAAmB;AACxC,2BAA2B,mBAAmB;AAC9C,2BAA2B,8CAA8C,gBAAgB,IAAI;AAC7F,yBAAyB,mBAAmB;AAC5C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,kDAAkD;AAClD,WAAW,yBAAyB;AACpC,QAAQ;AACR;AACA,qBAAqB,mBAAmB;AACxC,oBAAoB,mBAAmB;AACvC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,oDAAoD,WAAW;AAC/D;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA,kBAAkB;AAClB;AACA,0BAA0B;AAC1B,uBAAuB;AACvB,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA,MAAM;AACN;AACA;;;AAGA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;;AAEA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,uBAAuB;AACvB,+DAA+D;;AAE/D;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;;AAGT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,oCAAoC,2BAA2B;AAC/D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,EAAE;;AAEX;AACA,kEAAkE;;AAElE;AACA,kCAAkC;;AAElC;AACA;AACA,iEAAiE;;AAEjE;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;;;AAGX;AACA,6DAA6D;;AAE7D;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AA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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,EAAE;;AAET,mCAAmC;;AAEnC;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,iFAAiF;;AAEjF;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,2BAA2B;;AAE3B;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,uCAAuC;;AAEvC;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA,wCAAwC;;;AAGxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,4BAA4B;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;AAEpB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA,yCAAyC,YAAY;;AAErD;;AAEA;AACA;AACA;AACA,2DAA2D;;AAE3D;AACA;AACA;AACA;AACA,SAAS;;AAET,mLAAmL;;AAEnL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;;;AAGA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC;AACA,0DAA0D,WAAW;AACrE;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B,yBAAyB,IAAI;AACvE;AACA,uDAAuD;AACvD,WAAW,+BAA+B;AAC1C,WAAW,yBAAyB;AACpC,QAAQ;AACR;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B,wBAAwB,IAAI;AACtE;AACA,uDAAuD;AACvD,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,+BAA+B;AAC1C,QAAQ;AACR;AACA,uBAAuB,mBAAmB;AAC1C,yBAAyB,mBAAmB;AAC5C,sBAAsB,mBAAmB;AACzC,0BAA0B,mBAAmB;AAC7C,oBAAoB,mBAAmB;AACvC,yBAAyB,mBAAmB;AAC5C,sBAAsB,mBAAmB;AACzC,yBAAyB,oBAAoB;AAC7C,6BAA6B,oBAAoB;AACjD,gCAAgC,oBAAoB;AACpD,8BAA8B,oBAAoB;AAClD,sBAAsB,oBAAoB;AAC1C,8BAA8B,oBAAoB;AAClD,4BAA4B,oBAAoB;AAChD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,6DAA6D,WAAW;AACxE;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B,yBAAyB,IAAI;AACvE;AACA,oDAAoD;AACpD,WAAW,+BAA+B;AAC1C,WAAW,yBAAyB;AACpC,QAAQ;AACR;AACA,oBAAoB,mBAAmB;AACvC,wBAAwB,mBAAmB;AAC3C,wBAAwB,mBAAmB;AAC3C,8BAA8B,oBAAoB;AAClD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW,+BAA+B,wBAAwB,IAAI;AACtE;AACA,uDAAuD;AACvD,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,+BAA+B;AAC1C,QAAQ;AACR;AACA,uBAAuB,mBAAmB;AAC1C,uBAAuB,uCAAuC;AAC9D,qBAAqB,uDAAuD;AAC5E;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,6DAA6D,WAAW;AACxE;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,yEAAyE,kCAAkC;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,gDAAgD;AAChD,WAAW,+BAA+B;AAC1C,WAAW,yBAAyB;AACpC,WAAW,uBAAuB;AAClC,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,QAAQ;AACR;AACA,qBAAqB,mBAAmB;AACxC,0BAA0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B,IAAI;AAC5E,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,QAAQ;AACR;AACA,yBAAyB,oCAAoC;AAC7D,yBAAyB,0CAA0C;AACnE,oBAAoB,mBAAmB;AACvC,qBAAqB,mBAAmB;AACxC,4BAA4B,mBAAmB;AAC/C,uBAAuB,mBAAmB;AAC1C,2BAA2B,mBAAmB;AAC9C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,qDAAqD,WAAW;AAChE;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,sBAAsB;AACtB,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,iDAAiD;;AAEjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS,EAAE;;AAEX;AACA;AACA,SAAS,EAAE;;AAEX;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,SAAS;;;AAGT;;AAEA,mBAAmB,qBAAqB;AACxC;AACA,SAAS;;;AAGT;AACA;AACA,SAAS;AACT;AACA,SAAS;;;AAGT;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,gBAAgB;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;;AAGL,yCAAyC;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;AAEpB,kNAAkN;;AAElN,uGAAuG,SAAS;;AAEhH,oCAAoC,kCAAkC;AACtE;AACA,6BAA6B;;AAE7B;;AAEA,iBAAiB,OAAO;AACxB;;AAEA,mBAAmB,OAAO;AAC1B;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;;AAEA;AACA,MAAM;;;AAGN;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,aAAa;AAChC;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA,8BAA8B,UAAU;AACxC,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,qDAAqD;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,QAAQ;AACvB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO,WAAW;AAClB;;AAEA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;;;AAGP;AACA,+CAA+C,EAAE;AACjD,8DAA8D;AAC9D;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM;;;AAGN,uDAAuD;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,oCAAoC,KAAK;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA,8CAA8C;;AAE9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;;AAEA;AACA;AACA,WAAW;;;AAGX,6DAA6D;;AAE7D;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA,SAAS;;;AAGT;AACA,iHAAiH;AACjH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA,OAAO;AACP,mBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wDAAwD,uCAAuC;AAC/F;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yBAAyB,QAAQ;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA,0DAA0D,yCAAyC;AACnG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,QAAQ;AAC5C;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,aAAa;AACpC;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,8BAA8B;AAC3E;AACA;AACA;;AAEA;AACA,oEAAoE,qDAAqD;AACzH;AACA;AACA;;AAEA;AACA,6CAA6C,8BAA8B;AAC3E;AACA;AACA;;AAEA;AACA,oEAAoE,qDAAqD;AACzH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wIAAwI,QAAQ;AAChJ;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qDAAqD,QAAQ;AAC7D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oDAAoD,QAAQ;AAC5D;AACA;;AAEA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0EAA0E,iEAAiE;AAC3I;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA,0EAA0E,QAAQ;AAClF;AACA;;AAEA;AACA;AACA,qBAAqB,gCAAgC;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,cAAc;AACnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,8BAA8B;AACzE;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA,uEAAuE,4DAA4D;AACnI;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,cAAc;AACnC;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA,yBAAyB,oEAAoE;AAC7F;AACA;AACA;AACA;;AAEA;AACA,qEAAqE,QAAQ;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA,aAAa;AACb;AACA,aA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,0BAA0B;AAC1B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,mDAAmD;AACnD,WAAW,+BAA+B;AAC1C,WAAW,yBAAyB;AACpC,QAAQ;AACR;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,sDAAsD,wCAAwC,uBAAuB;AACxJ;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,mBAAmB,IAAI;AACvB;AACA,mDAAmD;AACnD,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,+BAA+B;AAC1C,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,QAAQ;AACR;AACA,sBAAsB,mBAAmB;AACzC,qBAAqB,sDAAsD;AAC3E;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,yDAAyD,WAAW;AACpE;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,MAAM;;;AAGN;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,6CAA6C;AAC7C,WAAW,yBAAyB;AACpC,WAAW,4BAA4B;AACvC,WAAW,qBAAqB;AAChC,QAAQ;AACR;AACA,uBAAuB,mBAAmB;AAC1C,uBAAuB,mBAAmB;AAC1C,wBAAwB,8CAA8C,gBAAgB,IAAI;AAC1F;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,uBAAuB;AACvB,uCAAuC,gBAAgB,EAAE;AACzD,mBAAmB,IAAI;AACvB;AACA,6CAA6C;AAC7C,WAAW,yBAAyB;AACpC,QAAQ;AACR;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,+CAA+C,WAAW;AAC1D;AACA,yBAAyB,mBAAmB;AAC5C,mBAAmB,mBAAmB;AACtC,mBAAmB,mBAAmB;AACtC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,mDAAmD,WAAW;AAC9D;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,sDAAsD;AACzF;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,6BAA6B;AAC7B,mBAAmB,IAAI;AACvB;AACA,8CAA8C;AAC9C,WAAW,yBAAyB;AACpC,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,qBAAqB;AAChC,QAAQ;AACR;AACA,uBAAuB,uCAAuC;AAC9D,sBAAsB,mBAAmB;AACzC,uBAAuB,mBAAmB;AAC1C,uBAAuB,mBAAmB;AAC1C,iCAAiC,mBAAmB;AACpD,uBAAuB,mBAAmB;AAC1C,wBAAwB,mBAAmB;AAC3C,uBAAuB,mBAAmB;AAC1C,4BAA4B,mBAAmB;AAC/C,yBAAyB,mBAAmB;AAC5C,0BAA0B,mBAAmB;AAC7C,2BAA2B,mBAAmB;AAC9C,yBAAyB,mBAAmB;AAC5C,uBAAuB,mBAAmB;AAC1C,sBAAsB,mBAAmB;AACzC,0BAA0B,mBAAmB;AAC7C,6BAA6B,oBAAoB;AACjD,4BAA4B,oBAAoB;AAChD,wBAAwB,oBAAoB;AAC5C,uBAAuB,oBAAoB;AAC3C,yBAAyB,oBAAoB;AAC7C,sBAAsB,oBAAoB;AAC1C,6BAA6B,oBAAoB;AACjD,0BAA0B,oBAAoB;AAC9C,sBAAsB,oBAAoB;AAC1C,qBAAqB,oBAAoB;AACzC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,6BAA6B;AAC7B,mBAAmB,IAAI;AACvB;AACA,+CAA+C,WAAW;AAC1D;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,oDAAoD,WAAW;AAC/D;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yEAAyE;AACzE,qEAAqE,GAAG;;AAExE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb,uCAAuC;;AAEvC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC;;AAEA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gGAAgG,MAAM;AACtG;AACA;;AAEA;AACA,OAAO;AACP;AACA,iBAAiB;;AAEjB,wBAAwB;;AAExB;AACA;AACA;AACA;;AAEA,wBAAwB;;AAExB;AACA;AACA;;AAEA;AACA,yTAAyT,qQAAqQ;;AAE9jB;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;;;AAGb;AACA;AACA;AACA,aAAa;;;AAGb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;;AAGT;AACA,4CAA4C;;AAE5C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,4DAA4D;AAC5D,WAAW,yBAAyB;AACpC,WAAW,yCAAyC,wDAAwD,2BAA2B,EAAE,KAAK,IAAI;AAClJ,WAAW,qBAAqB;AAChC,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,QAAQ;AACR;AACA,yBAAyB,oCAAoC;AAC7D,yBAAyB,0CAA0C;AACnE,oBAAoB,mBAAmB;AACvC,qBAAqB,mBAAmB;AACxC,4BAA4B,mBAAmB;AAC/C,wBAAwB,mBAAmB;AAC3C,2BAA2B,mBAAmB;AAC9C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,0DAA0D;AAC1D,WAAW,yBAAyB;AACpC,WAAW,yCAAyC,wDAAwD,2BAA2B,EAAE,KAAK,IAAI;AAClJ,WAAW,qBAAqB;AAChC,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,QAAQ;AACR;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW,sDAAsD;AACjE;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA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AC9C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,uDAAuD,WAAW;AAClE;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,sDAAsD;AACzF;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,6BAA6B;AAC7B,mBAAmB,IAAI;AACvB;AACA,mDAAmD;AACnD,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,+BAA+B;AAC1C,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,QAAQ;AACR;AACA,uBAAuB,4CAA4C;AACnE;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,uDAAuD;AACvD,WAAW,yBAAyB;AACpC,WAAW,+BAA+B;AAC1C,QAAQ;AACR;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,4DAA4D;AAC5D,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,+BAA+B;AAC1C,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,QAAQ;AACR;AACA,uBAAuB,uCAAuC;AAC9D;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,gEAAgE;AAChE,WAAW,yBAAyB;AACpC,WAAW,+BAA+B;AAC1C,QAAQ;AACR;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,yDAAyD,WAAW;AACpE;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;;AAEA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;;AAGA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD,aAAa;;AAE/D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,MAAM;AACN;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;;AAGL;AACA;AACA,KAAK;;;AAGL;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA,yDAAyD;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,oGAAoG,MAAM;AAC1G;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kCAAkC,sDAAsD;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,+CAA+C;AAC/C,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,WAAW,uCAAuC,sBAAsB,IAAI;AAC5E,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,+BAA+B;AAC1C,QAAQ;AACR;AACA,uBAAuB,mBAAmB;AAC1C,oBAAoB,yCAAyC;AAC7D,wBAAwB,mBAAmB;AAC3C,yBAAyB,mBAAmB;AAC5C,yBAAyB,mBAAmB;AAC5C,sBAAsB,mBAAmB;AACzC,qCAAqC,mBAAmB;AACxD,+BAA+B,mBAAmB;AAClD,qBAAqB,mBAAmB;AACxC,0BAA0B,mBAAmB;AAC7C,0BAA0B,mBAAmB;AAC7C,uBAAuB,mBAAmB;AAC1C,qBAAqB,mBAAmB;AACxC,2BAA2B,mBAAmB;AAC9C,sBAAsB,mBAAmB;AACzC,yBAAyB,mBAAmB;AAC5C,wBAAwB,oBAAoB;AAC5C,uBAAuB,4CAA4C;AACnE,sBAAsB,2CAA2C;AACjE,qBAAqB,2CAA2C;AAChE,+BAA+B,kDAAkD;AACjF;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,wDAAwD;AACxD,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,WAAW,uCAAuC,sBAAsB,IAAI;AAC5E,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,QAAQ;AACR;AACA,yBAAyB,oCAAoC;AAC7D,yBAAyB,0CAA0C;AACnE,oBAAoB,mBAAmB;AACvC,qBAAqB,mBAAmB;AACxC,4BAA4B,mBAAmB;AAC/C,uBAAuB,mBAAmB;AAC1C,oBAAoB,mBAAmB;AACvC,wBAAwB,mBAAmB;AAC3C,2BAA2B,mBAAmB;AAC9C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,qDAAqD,WAAW;AAChE;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,OAAO;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,wBAAwB,YAAY;AACpC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;;AAGL;AACA;AACA,KAAK;AACL,gCAAgC;;AAEhC;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,WAAW;AACX;AACA;AACA,kCAAkC,kBAAkB,sDAAsD;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,8CAA8C;AAC9C,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,WAAW,uCAAuC,sBAAsB,IAAI;AAC5E,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,+BAA+B;AAC1C,QAAQ;AACR;AACA,yBAAyB,mBAAmB;AAC5C,wBAAwB,mBAAmB;AAC3C,oBAAoB,mBAAmB;AACvC,oBAAoB,mBAAmB;AACvC,0BAA0B,mBAAmB;AAC7C,8BAA8B,mBAAmB;AACjD,wBAAwB,mBAAmB;AAC3C,sBAAsB,mBAAmB;AACzC,2BAA2B,mBAAmB;AAC9C,uBAAuB,mBAAmB;AAC1C,yBAAyB,mBAAmB;AAC5C,yBAAyB,mBAAmB;AAC5C,wBAAwB,mBAAmB;AAC3C,qBAAqB,oBAAoB;AACzC,wBAAwB,oBAAoB;AAC5C,uBAAuB,oBAAoB;AAC3C,uBAAuB,oBAAoB;AAC3C,sBAAsB,oBAAoB;AAC1C,uBAAuB,4CAA4C;AACnE,qBAAqB,0CAA0C;AAC/D,+BAA+B,iDAAiD;AAChF;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,uDAAuD;AACvD,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,WAAW,uCAAuC,sBAAsB,IAAI;AAC5E,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,QAAQ;AACR;AACA,yBAAyB,oCAAoC;AAC7D,yBAAyB,0CAA0C;AACnE,oBAAoB,mBAAmB;AACvC,qBAAqB,mBAAmB;AACxC,4BAA4B,mBAAmB;AAC/C,uBAAuB,mBAAmB;AAC1C,2BAA2B,mBAAmB;AAC9C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,oDAAoD,WAAW;AAC/D;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,mBAAmB,cAAc;AACjC;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,kBAAkB;;AAElB,KAAK;AACL;AACA;AACA,mBAAmB;AACnB;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK,EAAE;AACP;;AAEA;AACA;AACA,MAAM;AACN;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,mBAAmB;AAC5D;AACA;AACA;;AAEA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,qBAAqB,sDAAsD;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,iDAAiD;AACjD,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,WAAW,uCAAuC,sBAAsB,IAAI;AAC5E,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,+BAA+B;AAC1C,QAAQ;AACR;AACA,4BAA4B,mBAAmB;AAC/C,mBAAmB,mBAAmB;AACtC,mBAAmB,mBAAmB;AACtC,qBAAqB,mBAAmB;AACxC,8BAA8B,mBAAmB;AACjD,0BAA0B,mBAAmB;AAC7C,sBAAsB,mBAAmB;AACzC,2BAA2B,mBAAmB;AAC9C,uBAAuB,4CAA4C;AACnE,qBAAqB,6CAA6C;AAClE,+BAA+B,oDAAoD;AACnF;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,0DAA0D;AAC1D,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,WAAW,uCAAuC,sBAAsB,IAAI;AAC5E,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,QAAQ;AACR;AACA,yBAAyB,oCAAoC;AAC7D,yBAAyB,0CAA0C;AACnE,oBAAoB,mBAAmB;AACvC,qBAAqB,mBAAmB;AACxC,4BAA4B,mBAAmB;AAC/C,uBAAuB,mBAAmB;AAC1C,2BAA2B,mBAAmB;AAC9C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,uDAAuD,WAAW;AAClE;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,aAAa;AACxD,mBAAmB;AACnB;AACA;AACA,kCAAkC,oCAAoC,sDAAsD;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,iDAAiD;AACjD,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,WAAW,uCAAuC,sBAAsB,IAAI;AAC5E,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,WAAW,+BAA+B;AAC1C,QAAQ;AACR;AACA,4BAA4B,mBAAmB;AAC/C,0BAA0B,mBAAmB;AAC7C,uBAAuB,mBAAmB;AAC1C,sBAAsB,mBAAmB;AACzC,2BAA2B,mBAAmB;AAC9C,yBAAyB,mBAAmB;AAC5C,0BAA0B,yCAAyC;AACnE,uBAAuB,4CAA4C;AACnE,sBAAsB,2CAA2C;AACjE,qBAAqB,6CAA6C;AAClE,+BAA+B,oDAAoD;AACnF;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,0DAA0D;AAC1D,WAAW,yBAAyB;AACpC,WAAW,qBAAqB;AAChC,WAAW,sCAAsC,sBAAsB,IAAI;AAC3E,WAAW,uCAAuC,sBAAsB,IAAI;AAC5E,WAAW,yCAAyC,sBAAsB,IAAI;AAC9E,QAAQ;AACR;AACA,yBAAyB,oCAAoC;AAC7D,yBAAyB,0CAA0C;AACnE,oBAAoB,mBAAmB;AACvC,qBAAqB,mBAAmB;AACxC,4BAA4B,mBAAmB;AAC/C,uBAAuB,mBAAmB;AAC1C,0BAA0B,oCAAoC;AAC9D,2BAA2B,mBAAmB;AAC9C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,uDAAuD,WAAW;AAClE;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,+CAA+C,WAAW;AAC1D;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,MAAM;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,0BAA0B,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,MAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,0BAA0B,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,0BAA0B,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,QAAQ;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,8CAA8C;AAC7D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,QAAQ;AACvB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,qCAAqC;AACpD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,0BAA0B,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,0BAA0B,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,0BAA0B,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,kCAAkC,MAAM;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,MAAM;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,MAAM;AACtC,qCAAqC,MAAM;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,MAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,0BAA0B,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,MAAM;AACjC;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,0BAA0B,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,0BAA0B,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,MAAM;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,MAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,MAAM;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kHAAkH;;AAElH;AACA,yDAAyD;;AAEzD,6CAA6C;;AAE7C,wEAAwE;AACxE;;AAEA,sDAAsD;;AAEtD,8EAA8E;;AAE9E,0DAA0D;;AAE1D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gDAAgD,cAAc;;AAE9D,CAAC;;;;;;;;;;;;;AC929BD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport {ViewEncapsulation} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-agent',\r\n  templateUrl: './add-agent.component.html',\r\n  styleUrls: ['./add-agent.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n\r\n})\r\nexport class AddAgentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n\r\n <mat-sidenav-container class=\"example-container\"  >\r\n    <mat-sidenav mode=\"side\" opened> \r\n      <app-nav></app-nav>\r\n  \r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n      <app-username></app-username>\r\n          <mat-card>  \r\n            <mat-toolbar color=\"primary\">  \r\n              <div class=\"container w-100 row\"  >\r\n              <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">  \r\n               Register Agent\r\n             \r\n               </div>\r\n  \r\n               <div text align=\"right\"  class=\"col-6\">\r\n               \r\n \r\n               </div>\r\n               <br>\r\n            \r\n            \r\n  \r\n            </div>\r\n            </mat-toolbar>  \r\n          <br><br>  \r\n            <mat-card-content>  \r\n          \r\n            \r\n               <mat-card class=\"my-card\">\r\n                <mat-card-content>\r\n                        <form class=\"my-form\">\r\n                           <mat-form-field class=\"full-width\">\r\n                                  <mat-label>Name</mat-label>\r\n                                  <input  matInput  placeholder=\"Name\"  name=\"name\"  required>\r\n                               </mat-form-field>\r\n            \r\n                               <mat-form-field class=\"full-width\">\r\n                                  <mat-label>Surname</mat-label>\r\n                                  <input  matInput  placeholder=\"Surname\"  name=\"Surname\" required>\r\n                               </mat-form-field>\r\n            \r\n                               <mat-form-field class=\"full-width\">\r\n                                <mat-label>Phone Number</mat-label>\r\n                                <input  matInput  placeholder=\"Phone Number\"  name=\"Phone Number\" required>\r\n                             </mat-form-field>\r\n\r\n                             <mat-form-field class=\"full-width\">\r\n                                <mat-label>Email</mat-label>\r\n                                <input  matInput type=\"email\" placeholder=\"Email\"  name=\"Email\" required>\r\n                             </mat-form-field>\r\n                             <mat-form-field class=\"full-width\">\r\n                                <mat-label>Company</mat-label>\r\n                                <input  matInput  placeholder=\"Company\"  name=\"Company\" required>\r\n                             </mat-form-field>\r\n                        </form> \r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                  <button mat-raised-button color=\"primary\" data-toggle=\"modal\" data-target=\"#editEmployeeTypeModal\" >Cancel</button>\r\n                  <button mat-raised-button color=\"primary\"  routerLink ='/update-agent'>REGISTER</button>\r\n\r\n                </mat-card-actions>\r\n             </mat-card>\r\n            </mat-card-content>  \r\n          </mat-card>  \r\n \r\n \r\n                \r\n           \r\n          \r\n                </mat-sidenav-content>\r\n              </mat-sidenav-container>\r\n          \r\n          \r\n          \r\n              <br>\r\n              <br>\r\n              <br>\r\n              <br> <br> <br> <br> <br> <br>\r\n              <br> <br> <br> <br> <br> <br>\r\n              <br> <br> <br> <br> <br> <br>\r\n          \r\n              <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br>    \r\n              <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#validation\">\r\n                Launch demo modal\r\n              </button>\r\n          \r\n          \r\n          \r\n          \r\n          <!-- /////////////////////////////////////////Area Modals //////////////////////////-->\r\n          \r\n          <!-- Add Area modal -->\r\n         \r\n         <!-- Modal -->\r\n         <div class=\"modal fade\" id=\"addAreaModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header alert-danger \">\r\n                <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Error</h3>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"exampleFormControlInput1\">Passwords do not match</label>\r\n                </div>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-danger\">Ok</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Edit Area modal -->\r\n        \r\n        <!-- Modal -->\r\n        <div class=\"modal fade\" id=\"editEmployeeTypeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header alert-success \">\r\n                <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Successful</h3>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"exampleFormControlInput1\">Successfully registered Agent</label>\r\n                </div>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\">Ok</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        \r\n        <!-- Delete Area modal -->\r\n        \r\n        <!-- Modal -->\r\n        <div class=\"modal fade\" id=\"deleteEmployeeTypeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header alert-danger \">\r\n                <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Delete Employee Type ?</h3>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n               <h2>Are you sure you want to delete the Employee Type?</h2>\r\n              </div>\r\n              <div class=\"modal-footer \" >\r\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\r\n                <button type=\"button\" class=\"btn btn-success\">Confirm</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        \r\n        </div>\r\n  \r\n \r\n ","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-assign-agent',\r\n  templateUrl: './assign-agent.component.html',\r\n  styleUrls: ['./assign-agent.component.css']\r\n\r\n})\r\nexport class AssignAgentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container class=\"example-container\"  >\r\n    <mat-sidenav mode=\"side\" opened> \r\n      <app-nav></app-nav>\r\n  \r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n      <app-username></app-username>\r\n          <mat-card>  \r\n            <mat-toolbar color=\"primary\">  \r\n              <div class=\"container w-100 row\"  >\r\n              <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">  \r\n              Assign Agent\r\n             \r\n               </div>\r\n  \r\n               \r\n               <br>\r\n            \r\n            \r\n  \r\n            </div>\r\n            </mat-toolbar>  \r\n          <br><br>  \r\n            <mat-card-content>  \r\n              <div >\r\n                <mat-form-field class=\"w-100\">\r\n                  <mat-label>Search Property</mat-label>\r\n                  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search Keyword\">\r\n                  <mat-icon matSuffix>search</mat-icon>\r\n                </mat-form-field>\r\n  \r\n               </div>\r\n            <h3> Select a propety to assign the Agent to</h3>\r\n               <table class=\"mat-elevation-z8 table w-100\" >\r\n            <thead class=\"thead-dark\">\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>Province</th>\r\n                    <th>PropertyType</th>\r\n                    <th>Address</th>\r\n                    <th>Picture</th>\r\n                    <th><mat-icon class=\"icons\">assignment_ind</mat-icon></th>\r\n                 \r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                    <!-- <tr>\r\n                        <td>7</td>\r\n                        <td>Gauteng</td>\r\n                        <td>commune</td>  \r\n                        <td>457 Prospect</td>  \r\n                        <td> <img class = 'images' class=\"images\" src=\"./assets/p1.jpg\" style=\"width:100px;height:100px;\"/></td>  \r\n                        <td style=\"text-align: center;\" class=\"\">  \r\n                            <button type=\"button\" class=\"btn btn-primary\"  data-toggle=\"modal\" data-target=\"#addAreaModal\" >Select Property</button>  \r\n                          </td>  \r\n                    </tr> -->\r\n              \r\n             \r\n            </tbody>\r\n          </table>\r\n            </mat-card-content>  \r\n          </mat-card>  \r\n  \r\n  \r\n                \r\n           \r\n          \r\n                </mat-sidenav-content>\r\n              </mat-sidenav-container>\r\n          \r\n          \r\n          \r\n              <br>\r\n              <br>\r\n              <br>\r\n              <br> <br> <br> <br> <br> <br>\r\n              <br> <br> <br> <br> <br> <br>\r\n              <br> <br> <br> <br> <br> <br>\r\n          \r\n              <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br>    \r\n              <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#validation\">\r\n                Launch demo modal\r\n              </button>\r\n          \r\n          \r\n          \r\n          \r\n          <!-- /////////////////////////////////////////Area Modals //////////////////////////-->\r\n          \r\n          <!-- Add Area modal -->\r\n          \r\n                   <!-- Modal -->\r\n        <div class=\"modal fade\" id=\"addAreaModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header alert-danger \">\r\n                <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\"></h3>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"exampleFormControlInput1\">No search results found</label>\r\n\r\n                </div>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Ok</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n          \r\n          <!-- Edit Area modal -->\r\n          \r\n          <!-- Modal -->\r\n          <div class=\"modal fade\" id=\"editEmployeeTypeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog\" role=\"document\">\r\n              <div class=\"modal-content\">\r\n                <div class=\"modal-header alert-success \">\r\n                  <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Success</h3>\r\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlInput1\">You have successfully assigned the Agent</label>                  </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                  <button type=\"button\" class=\"btn btn-success\">Ok</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          \r\n          <!-- Delete Area modal -->\r\n          \r\n          <!-- Modal -->\r\n          <div class=\"modal fade\" id=\"deleteEmployeeTypeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog\" role=\"document\">\r\n              <div class=\"modal-content\">\r\n                <div class=\"modal-header alert-primary \">\r\n                  <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Assign Agent to property</h3>\r\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                 <h2>Are you sure you want to assign the Agent to this property?</h2>\r\n                </div>\r\n                <div class=\"modal-footer \" >\r\n                  <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\r\n                  <button type=\"button\" class=\"btn btn-success\"  data-toggle=\"modal\" data-target=\"#editEmployeeTypeModal\">Confirm</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>","import { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-search-agent',\r\n  templateUrl: './search-agent.component.html',\r\n  styleUrls: ['./search-agent.component.css']\r\n\r\n})\r\nexport class SearchAgentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n  }\r\n  \r\n}\r\n","<mat-sidenav-container class=\"example-container\"  >\r\n    <mat-sidenav mode=\"side\" opened> \r\n      <app-nav></app-nav>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n      <app-username></app-username>\r\n          <mat-card>  \r\n            <mat-toolbar color=\"primary\">  \r\n              <div class=\"container w-100 row\"  >\r\n              <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">  \r\n              Search Agents\r\n             \r\n               </div>\r\n               <div align=\"right\"  class=\"col-6\">\r\n                <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#addAreaModal\" style=\"vertical-align: middle; display: inline-flex; line-height: 24px;\" type=\"button\" >\r\n                   \r\n                  <i style=\" color: rgb(66, 252, 9);\" class=\"material-icons\">\r\n                    add\r\n                    </i>\r\n                    <span>  \r\n                     \r\n                      Add Agent</span>\r\n  \r\n                </button>\r\n\r\n               </div>\r\n               \r\n               <br>\r\n            \r\n            \r\n  \r\n            </div>\r\n            </mat-toolbar>  \r\n          <br><br>  \r\n            <mat-card-content>  \r\n              <div >\r\n                <mat-form-field class=\"w-100\">\r\n                  <mat-label>Search</mat-label>\r\n                  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search Keyword\">\r\n                  <mat-icon matSuffix>search</mat-icon>\r\n                </mat-form-field>\r\n  \r\n               </div>\r\n            \r\n               <table class=\"mat-elevation-z8 table w-100\" >\r\n            <thead class=\"thead-dark\">\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Surname</th>\r\n                    <th>Phone Number</th>\r\n                    <th>Email</th>\r\n                    <th>Company</th>\r\n                    <th><mat-icon class=\"icons\" style=\"text-align: center;\">assignment_ind</mat-icon></th>\r\n                    <th><mat-icon class=\"icons\" style=\"text-align: center;\">edit</mat-icon></th>\r\n                    <th><mat-icon class=\"icons\" style=\"text-align: center;\">delete</mat-icon></th>\r\n                 \r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                    <tr>\r\n                        <td>7</td>\r\n                        <td>Andile</td>\r\n                        <td>Maps</td>  \r\n                        <td>19494489494</td>  \r\n                        <td>best.leader@gmail.com</td>  \r\n                        <td>UP</td> \r\n                        <td style=\"text-align: center;\" class=\"\">  \r\n                          <button type=\"button\" class=\"btn btn-primary\"  routerLink = \"/assign-agent\" >Assign Agent</button>  \r\n                        </td>\r\n                        <td style=\"text-align: center;\" class=\"\">  \r\n                            <button type=\"button\" class=\"btn btn-primary\"  routerLink = \"/update-agent\" >Update Agent</button>  \r\n                          </td>  \r\n                        <td style=\"text-align: center;\" class=\"\">  \r\n                          <button type=\"button\" data-toggle=\"modal\" data-target=\"#deleteEmployeeTypeModal\" class=\"btn btn-danger\" matTooltip=\"Click Delete Button\"  >Delete</button>  \r\n                        </td> \r\n                        \r\n                    </tr>\r\n              \r\n             \r\n            </tbody>\r\n          </table>\r\n            </mat-card-content>  \r\n          </mat-card>  \r\n  \r\n  \r\n                \r\n           \r\n          \r\n                </mat-sidenav-content>\r\n              </mat-sidenav-container>\r\n          \r\n          \r\n          \r\n              <br>\r\n              <br>\r\n              <br>\r\n              <br> <br> <br> <br> <br> <br>\r\n              <br> <br> <br> <br> <br> <br>\r\n              <br> <br> <br> <br> <br> <br>\r\n          \r\n              <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br>    \r\n              <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#validation\">\r\n                Launch demo modal\r\n              </button>\r\n          \r\n          \r\n          \r\n          \r\n          <!-- /////////////////////////////////////////Area Modals //////////////////////////-->\r\n          \r\n          <!-- Add Area modal -->\r\n          \r\n            <!-- Modal -->\r\n        <div class=\"modal fade\" id=\"addAreaModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header alert-danger \">\r\n                <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\"></h3>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"exampleFormControlInput1\">No search results found</label>\r\n\r\n                </div>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Ok</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n          \r\n          <!-- Edit Area modal -->\r\n          \r\n          <!-- Modal -->\r\n          <div class=\"modal fade\" id=\"editEmployeeTypeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog\" role=\"document\">\r\n              <div class=\"modal-content\">\r\n                <div class=\"modal-header alert-primary \">\r\n                  <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Update Employee Type</h3>\r\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlInput1\">Employee Type Name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"\" value=\"EmployeeType1\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                  <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\r\n                  <button type=\"button\" class=\"btn btn-primary\">Update Employee Type</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          \r\n          <!-- Delete Area modal -->\r\n          \r\n          <!-- Modal -->\r\n          <div class=\"modal fade\" id=\"deleteEmployeeTypeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog\" role=\"document\">\r\n              <div class=\"modal-content\">\r\n                <div class=\"modal-header alert-danger \">\r\n                  <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Delete Agent?</h3>\r\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                 <h2>Are you sure you want to delete the Agent?</h2>\r\n                </div>\r\n                <div class=\"modal-footer \" >\r\n                  <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\r\n                  <button type=\"button\" class=\"btn btn-success\">Confirm</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>","import { Component, OnInit } from '@angular/core';\r\nimport {ViewEncapsulation} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-update-agent',\r\n  templateUrl: './update-agent.component.html',\r\n  styleUrls: ['./update-agent.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n\r\n})\r\nexport class UpdateAgentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n\r\n <mat-sidenav-container class=\"example-container\"  >\r\n    <mat-sidenav mode=\"side\" opened> \r\n      <app-nav></app-nav>\r\n  \r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n      <app-username></app-username>\r\n          <mat-card>  \r\n            <mat-toolbar color=\"primary\">  \r\n              <div class=\"container w-100 row\"  >\r\n              <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">  \r\n               Update Agent\r\n             \r\n               </div>\r\n  \r\n               <div text align=\"right\"  class=\"col-6\">\r\n               \r\n \r\n               </div>\r\n               <br>\r\n            \r\n            \r\n  \r\n            </div>\r\n            </mat-toolbar>  \r\n          <br><br>  \r\n            <mat-card-content>  \r\n          \r\n            \r\n               <mat-card class=\"my-card\">\r\n                <mat-card-content>\r\n                        <form class=\"my-form\">\r\n                           <mat-form-field class=\"full-width\">\r\n                                  <mat-label>Name</mat-label>\r\n                                  <input  matInput  placeholder=\"Name\"  name=\"name\"  required>\r\n                               </mat-form-field>\r\n            \r\n                               <mat-form-field class=\"full-width\">\r\n                                  <mat-label>Surname</mat-label>\r\n                                  <input  matInput  placeholder=\"Surname\"  name=\"Surname\" required>\r\n                               </mat-form-field>\r\n            \r\n                               <mat-form-field class=\"full-width\">\r\n                                <mat-label>Phone Number</mat-label>\r\n                                <input  matInput  placeholder=\"Phone Number\"  name=\"Phone Number\" required>\r\n                             </mat-form-field>\r\n\r\n                             <mat-form-field class=\"full-width\">\r\n                                <mat-label>Email</mat-label>\r\n                                <input  matInput type=\"email\" placeholder=\"Email\"  name=\"Email\" required>\r\n                             </mat-form-field>\r\n                             <mat-form-field class=\"full-width\">\r\n                                <mat-label>Company</mat-label>\r\n                                <input  matInput  placeholder=\"Company\"  name=\"Company\" required>\r\n                             </mat-form-field>\r\n                        </form> \r\n                </mat-card-content>\r\n                <mat-card-actions>                    \r\n                  <button mat-raised-button color=\"primary\" data-toggle=\"modal\" data-target=\"#editEmployeeTypeModal\" >Cancel</button>\r\n                    <button mat-raised-button color=\"primary\"  routerLink ='/search-agent'>Confirm</button>\r\n                </mat-card-actions>\r\n             </mat-card>\r\n            </mat-card-content>  \r\n          </mat-card>  \r\n \r\n \r\n                \r\n           \r\n          \r\n                </mat-sidenav-content>\r\n              </mat-sidenav-container>\r\n          \r\n          \r\n          \r\n              <br>\r\n              <br>\r\n              <br>\r\n              <br> <br> <br> <br> <br> <br>\r\n              <br> <br> <br> <br> <br> <br>\r\n              <br> <br> <br> <br> <br> <br>\r\n          \r\n              <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br>    \r\n              <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#validation\">\r\n                Launch demo modal\r\n              </button>\r\n          \r\n          \r\n          \r\n          \r\n          <!-- /////////////////////////////////////////Area Modals //////////////////////////-->\r\n          \r\n          <!-- Add Area modal -->\r\n          \r\n          <!-- Modal -->\r\n        <!-- Modal -->\r\n        <div class=\"modal fade\" id=\"editEmployeeTypeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header alert-success \">\r\n                <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Successful</h3>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"exampleFormControlInput1\">Successfully updated Agent</label>\r\n                </div>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\">Ok</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n          \r\n          <!-- Edit Area modal -->\r\n          \r\n          <!-- Modal -->\r\n          <div class=\"modal fade\" id=\"editEmployeeTypeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog\" role=\"document\">\r\n              <div class=\"modal-content\">\r\n                <div class=\"modal-header alert-primary \">\r\n                  <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Update Employee Type</h3>\r\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlInput1\">Employee Type Name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"\" value=\"EmployeeType1\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                  <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\r\n                  <button type=\"button\" class=\"btn btn-primary\">Update Employee Type</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          \r\n          <!-- Delete Area modal -->\r\n          \r\n          <!-- Modal -->\r\n          <div class=\"modal fade\" id=\"deleteEmployeeTypeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog\" role=\"document\">\r\n              <div class=\"modal-content\">\r\n                <div class=\"modal-header alert-danger \">\r\n                  <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Delete Agent?</h3>\r\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                 <h2>Are you sure you want to delete the Agent</h2>\r\n                </div>\r\n                <div class=\"modal-footer \" >\r\n                  <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\r\n                  <button type=\"button\" class=\"btn btn-success\">Confirm</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n  \r\n \r\n ","export class AddUser\n{\n    ID? : number;\n    Name? : string;\n    Surname? : string;\n    PhoneNo? : string;\n    Email? : string;\n    Username? : string;\n    Password? : string;\n    PassportNo? : string;\n    IdNo? : string;\n    Nationality? : string;\n    DOB? : Date;\n    IsStudent? : boolean;\n    Residental? :string;\n    Postal? : string;\n    Employer? : string;\n    Occupation? : string;\n    WorkAddress? : string;\n    WorkTel? : string;\n    GrossSalary? : string;\n\nconstructor(Name?,Surname?,PhoneNo?,Email?,Username?,Password?,PassportNo?,Nationality?,DOB?,IsStudent?,Residental?,Postal?,\n    Employer?,Occupation?,WorkAddress?,WorkTel?,GrossSalary?,IdNo?,ID?)\n{ this.ID = ID;\n this.Name = Name;\n this.Surname = Surname;\n this.PhoneNo = PhoneNo;\n this.Email = Email;\n this.Username = Username;\n this.Password = Password;\n this.PassportNo = PassportNo;\n this.IdNo = IdNo;\n\n this.Nationality = Nationality;\n this.DOB = DOB;\n this.IsStudent = IsStudent;\n this.Residental = Residental;\n this.Postal = Postal;\n this.Employer = Employer;\n this.Occupation = Occupation;\n this.WorkAddress = WorkAddress;\n this.WorkTel = WorkTel;\n this.GrossSalary = GrossSalary;\n}\n}","\nexport class Check\n{\n\n    Found? : boolean;\n\n\n\n    constructor(Found?){\n        this.Found = Found;\n\n    }\n}","export class Complaint\n{\n    \n    RentalID? : number;\n    ComplaintID? : number;\n    Details? : string;\n    Photo? : string;\n    ClientID? : number;\n    ComplaintStatus? : string;\n    Date? : Date;\n    Feedback? : string;\n\nconstructor(ClientID?,RentalID? ,ComplaintID? ,Details?,Photo?,Date?,ComplaintStatus?,Feedback?)\n{\n \n this.RentalID = RentalID;\n this.ComplaintID = ComplaintID;\n this.Details = Details;\n this.Photo = Photo;\n this.ClientID = ClientID;\n this.Date = Date;\n this.ComplaintStatus = ComplaintStatus;\n this.Feedback = Feedback;\n\n\n}\n\n}","import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\nexport class Deactivate\n{\n    UserID? : number;\n    Reason? : string;\n\n\n    constructor(UserID?,Reason?){\n        this.UserID = UserID;\n        this.Reason = Reason;\n    }\n}","export class DisplayUser\n{\n\n    Name? : string;\n    Surname? : string;\n    PhoneNo? : string;\n    Email? : string;\n    UserType? : string;\n    Username? : string;\n\nconstructor(Name?,Surname?,PhoneNo?,Email?,UserType?,Username?)\n{\n this.Name = name;\n this.Surname = Surname;\n this.PhoneNo = PhoneNo;\n this.Email = Email;\n this.UserType = UserType;\n this.Username = Username;\n}\n\n}","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {ViewEncapsulation} from '@angular/core';\nimport { Complaint } from 'src/app/Classes/Complaint';\n//import {Observable} from 'rxjs/observable';\nimport { HttpHeaders } from '@angular/common/http';\nimport {Router} from '@angular/router'\nimport {HttpClient} from '@angular/common/http';\nimport { FormBuilder, Validators } from '@angular/forms';  \nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ComplaintService } from 'src/app/Services/Complaint.service';\nimport { Injectable } from '@angular/core';\nimport { ComplaintRental } from 'src/app/Classes/ComplaintRental';\nimport {Observable} from 'rxjs/observable';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-add-complaint',\n  templateUrl: './add-complaint.component.html',\n  styleUrls: ['./add-complaint.component.css']\n})\nexport class AddComplaintComponent implements OnInit {\n\n  complaint  = new Complaint();\n  fileToUpload: File = null;\n  products : any = [];\n  image: any;\n  imageUrl : any;\n  complaints: any = []; \n  showImage = false;\n  reader = new FileReader();\n\n  rentals : Observable<ComplaintRental[]>\n  @ViewChild('content') content : any;\n\n  constructor(private modalService: NgbModal,private _Router : Router ,private formbulider: FormBuilder,private complaintservice: ComplaintService) { }\n\n\n\n  openWindowCustomClass() {\n    this.modalService.open(this.content,{ centered: true });\n  }\n\n\ncomplaintForm = new FormGroup({\n    Details : new FormControl(this.complaint.Details, Validators.required),\n    Photo : new FormControl(this.complaint.Photo,),\n    RentalID : new FormControl(this.complaint.RentalID, Validators.required),\n\n\n    \n  })\n\n  ID : number\n  clientID : number;\n  Username : string;\n  complaintID : number;\n\n  \n  ngOnInit(): void {\n    // window.sessionStorage.setItem(\"clientID\",\"6\");\n     //this.ID = parseInt(window.sessionStorage.getItem(\"UserID\"))\n    // this.complaint.ClientID = this.ID;\n     this.clientID = parseInt(window.sessionStorage.getItem(\"clientID\"))\n     this.Username = window.sessionStorage.getItem(\"username\");\n     this.complaintID = parseInt(window.sessionStorage.getItem(\"ComplaintID\"));\n     \n     this.GetRentals();\n  }\n\n\n  GetRentals()\n  {\n    this.rentals = this.complaintservice.getRentals(this.clientID);\n   \n  }\n\n  handleFileInput(file: FileList) {\n    \n    this.fileToUpload = file.item(0);\n    //Show image preview\n    var reader = new FileReader();\n    reader.onload = (event:any) => {\n      this.imageUrl = event.target.result;\n    }\n    reader.readAsDataURL(this.fileToUpload);\n  }\n\n  \n\n  OnSubmit(){\n    \n    this.complaint = this.complaintForm.value;\n    this.complaint.ClientID =  this.clientID;\n   // this.complaint.ClientID = this.complaintID\ndebugger;\n    if(this.fileToUpload!=null)\n    {\n      this.complaint.Photo = this.fileToUpload.name;\n      this.complaintservice.postFile(this.complaint,this.fileToUpload).subscribe(\n        data =>{\n          console.log('done');\n          \n        this.complaintForm.reset();\n        this.openWindowCustomClass();\n        });\n    }\n    else{\n   \n      this.fileToUpload=null;\n      this.complaintservice.postFileNoPhoto(this.complaint).subscribe(\n        data =>{\n          console.log('done');\n          \n        this.complaintForm.reset();\n        this.openWindowCustomClass();\n        });\n    }\n    console.log(this.fileToUpload);\n   \n      \n    \n\n      //  this.complaintForm.reset();  \n      //  this.imageUrl = \"\";\n\n       \n    }\n\n}\n\n","\n<app-is-logged-in></app-is-logged-in>\n<mat-sidenav-container class=\"example-container\"  >\n   <mat-sidenav mode=\"side\" opened> \n    <app-nav></app-nav>\n \n \n   </mat-sidenav>\n   <mat-sidenav-content>\n    <app-username></app-username>\n\n         <mat-card>  \n           <mat-toolbar color=\"primary\">  \n             <div class=\"container w-100 row\"  >\n             <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">  \n              Add  A Complaint\n            \n              </div>\n \n              <div text align=\"right\"  class=\"col-6\">\n              \n\n              </div>\n              <br>\n           \n           \n \n           </div>\n           </mat-toolbar>  \n         <br><br>  \n           <mat-card-content>  \n         \n           \n              <mat-card class=\"my-card\">\n               <mat-card-content>\n                       <form [formGroup]=\"complaintForm\" (ngSubmit)=\"OnSubmit()\">\n\n                         <div >\n                           <mat-form-field class=\"w-100\">\n                             <mat-label >Please select the agreement you want to lodge a complaint for</mat-label>\n                             <select matNativeControl placeholder=\"Select referance No\" required  formControlName =\"RentalID\">\n                               <option [value] ='rent.RENTALAGREEMENTID' *ngFor=\"let rent of rentals| async\" >Reference No: {{rent.REFERENCE_NO}}</option>\n                             </select>\n                             <mat-error *ngIf=\"complaintForm.controls['RentalID'].errors?.required && complaintForm.controls['RentalID'].touched\">This field  is required</mat-error>\n\n                           </mat-form-field>\n                         </div>\n\n                          <mat-form-field class=\"full-width\">\n                                 <mat-label>Description</mat-label>\n                                 <textarea   matInput formControlName =\"Details\" placeholder=\"Please enter description of complaint here\"  name=\"uname\"  required></textarea>\n                                 <mat-error *ngIf=\"complaintForm.controls['Details'].errors?.required && complaintForm.controls['Details'].touched\">This field  is required</mat-error>\n\n                                </mat-form-field>\n\n                              <br><br>\n                              <label>\n                                Complaint Image\n                                <br>\n                          \n                                <img src=\"{{imageUrl}}\" (change)=\"handleFileInput($event.target.files)\" style=\"width: 200; height: 200px\" >\n                              <input type=\"file\" formControlName=\"Photo\" id=\"productImage\" name=\"productImage\" #Image accept=\"image/png\" (change)=\"handleFileInput($event.target.files)\" class=\"form-control\" >\n                              </label> \n                              <br><br>\n                              <mat-card-actions>\n                               <button mat-raised-button color=\"primary\" routerLink =\"/search-complaint\"  >Cancel</button>\n                                  <button mat-raised-button color=\"primary\" [disabled]= \"!complaintForm.valid\"   type =\"submit\">Add Complaint</button>\n                              </mat-card-actions>\n                              <button id=\"openModalButton\" [hidden]=\"true\" data-toggle=\"modal\" data-target=\"#addcomplaint\">Open Modal</button>\n                              <!-- <input type=\"number\" [(ngModel)]=\"complaint.UserID\" formControlName=\"UserID\" [hidden]=\"true\"  > -->\n                       </form> \n               </mat-card-content>\n               <mat-card-actions>\n\n               </mat-card-actions>\n            </mat-card>\n           </mat-card-content>  \n         </mat-card>  \n         <div id=\"MyModal1\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\n          <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header\">\n                <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"basicModal.hide()\">\n                  <span aria-hidden=\"true\">×</span>\n                </button>\n                <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:green\">Add complaint Page</h4>\n              </div>\n              <div class=\"modal-body\">\n                <div class=\"modal-body\">\n                  <a href=\"https://motlatso-baps.github.io/HelpInturbidus/pages/626-complaint-management.html\" target=\"_blank\" mat-menu-item>\n                   \n                    <mat-icon class=\"icons\">help_outline</mat-icon>        \n                    Go to Help</a>\n                </div>\n              </div>\n              <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n              </div>\n            </div>\n          </div>\n        </div>\n               \n          \n         \n               </mat-sidenav-content>\n             </mat-sidenav-container>\n             <div id=\"MyModal\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\n              <div class=\"modal-dialog\" role=\"document\">\n                <div class=\"modal-content\">\n                  <div class=\"modal-header\">\n                    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"basicModal.hide()\">\n                      <span aria-hidden=\"true\">×</span>\n                    </button>\n                    <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:rgb(60, 191, 196)\">Add Complaint Page</h4>\n                  </div>\n                  <div class=\"modal-body\">\n                    <p>This Add Complaint Page.</p><br/>\n                    <p style=\"color:rgb(60, 191, 196); font-weight: bold\">Here you can select to:</p>\n                    <p>-Click SELECT RENTAL AGREEMENT to specify the rental agreement you to logde complaint to  </p>\n                    <p>-Click DESCRIPTION to provide complaint description  </p>\n                    <p>-Click CHOOSE FILE to upload complaint picture  </p>\n                    <p>-Click ADD COMPLAINT to add complaint   </p>\n                    <p>-Click CANCEL  to cancel complaint   </p>\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n         \n         \n         \n         \n         <!-- /////////////////////////////////////////Area Modals //////////////////////////-->\n         \n         <!-- Add Area modal -->\n         \n   \n         \n         \n         <!-- Delete Area modal -->\n         \n         <!-- Modal -->\n         <div class=\"modal fade\" id=\"addcomplaint\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n           <div class=\"modal-dialog\" role=\"document\">\n             <div class=\"modal-content\">\n               <div class=\"modal-header alert-success \">\n                 <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Successful</h3>\n                 <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                   <span aria-hidden=\"true\">&times;</span>\n                 </button>\n               </div>\n               <div class=\"modal-body\">\n                 <div class=\"form-group\">\n                   <label for=\"exampleFormControlInput1\">Successfully added a complaint</label>\n                 </div>\n               </div>\n               <div class=\"modal-footer\">\n                 <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\" routerLink =\"/search-complaint\">Ok</button>\n               </div>\n             </div>\n           </div>\n         </div>\n \n         <ng-template #content let-modal>\n          <div class=\"modal-header alert-success\">\n            <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Success</h3>\n            <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button> -->\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"form-group\">\n              <label for=\"exampleFormControlInput1\">Your complaint was successfully received.We will be in touch. </label>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\"modal.close()\" routerLink=\"/search-complaint\" >Ok</button>\n          </div>\n        </ng-template>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {ViewEncapsulation} from '@angular/core';\nimport { Complaint } from 'src/app/Classes/Complaint';\nimport {Observable} from 'rxjs/observable';\nimport { HttpHeaders } from '@angular/common/http';\nimport {Router} from '@angular/router'\nimport {HttpClient} from '@angular/common/http';\nimport { FormBuilder, Validators } from '@angular/forms';  \nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ComplaintService } from 'src/app/Services/Complaint.service';\nimport { Injectable } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n export class myFeedBack {\n  FEEDBACK : String;\n  COMPLAINTID:String;\n\n   }\n\n\n@Component({\n  selector: 'app-search-complaint',\n  templateUrl: './search-complaint.component.html',\n  styleUrls: ['./search-complaint.component.css']\n})\n\n\nexport class SearchComplaintComponent implements OnInit {\n  @ViewChild('content') content : any;\n  @ViewChild('content1') content1 : any;\n \n  constructor(private modalService: NgbModal,private _Router : Router ,private formbulider: FormBuilder,private complaintservice: ComplaintService) { }\n\n\n  dataSaved = false;\n  ProductIDUpdate = null;\n  message = null;\n   public products=[];\n   ProductForm: any; \n   allcomplaints: any;\n   complaints : Complaint[];\n   myComplaint : Complaint;\n   Username : string;\n   searchedKeyword: string;\n  myFeedBack =new myFeedBack();\n\n\n\n\n  ngOnInit(): void {\n    \n    this.loadAllComplaints();\n    this.Username = window.sessionStorage.getItem(\"username\");\n \n  }\n\n\n  //ts code\n  \n  loadAllComplaints() {  \n    this.complaintservice.getMyComplaint(Number(window.sessionStorage.getItem(\"clientID\"))).subscribe(data => {debugger;\n      console.log(data);\n\n      this.allcomplaints = data;\n    }); \n\n }\n\n\n deleteComplaint(ComplaintID: number, status : string) {\n  if (status == \"Unresolved\")\n  {\n  if (confirm(\"Are you sure you want to delete this complaint ?\")) {  \n  this.complaintservice.deleteComplaint(ComplaintID).subscribe(() => {\n    this.dataSaved = true;\n    this.message = 'Record Deleted Succefully';\n    this.loadAllComplaints();\n    this.openWindowCustomClass();\n\n    // document.getElementById(\"openModalButton\").click();\n  });\n}\n  }\n  else{\n    window.alert(\"You cannot delete complaints that have been assigned\")\n  }\n} \n\n\n// getUser(ID : number){\n//   this.userservice.getUser(ID).subscribe(\n//   (client : Client) => this.editUser(client),\n//   (err: any) => console.log(err)\n//   ),\n//   this.userservice.getUser(ID).subscribe(\n//   (client : Client) => this.client = client);\n \n// }\\\n\n\nSendFeedback(feedback){debugger;\nthis.myFeedBack.FEEDBACK=feedback;\nthis.myFeedBack.COMPLAINTID=window.sessionStorage.getItem(\"ComplaintID\");\nthis.complaintservice.SendFeedback(this.myFeedBack).subscribe(gg=>{this.loadAllComplaints();\n\n})\n  \n\n}\n\n\nAddFeedback(ComplaintID :number){\n\n\n  sessionStorage.setItem('ComplaintID',ComplaintID.toString());\nthis.openWindowCustomClass1();\n\n}\n\n editComplaint(ComplaintID : number, status : string)\n  {\n\n    if (status == \"Unresolved\")\n    {\n    sessionStorage.setItem('ComplaintID',ComplaintID.toString());\n    this._Router.navigate(['update-complaint']);\n    }\n    else{\n      window.alert(\"You cannot edit complaints that have been assigned\")\n    }\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n  }\n\n  openWindowCustomClass() {\n    this.modalService.open(this.content,{ centered: true });\n  }\n\n  openWindowCustomClass1() {\n    this.modalService.open(this.content1,{ centered: true });\n  }\n}\n","<mat-sidenav-container class=\"example-container\"  >\n  <mat-sidenav mode=\"side\" opened> \n<app-nav></app-nav>\n  </mat-sidenav>\n  <mat-sidenav-content>\n<app-username></app-username>\n        <mat-card>  \n          <mat-toolbar color=\"primary\">  \n            <div class=\"container w-100 row\"  >\n            <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">  \n            My Complaints\n           \n             </div>\n             <div align=\"right\"  class=\"col-6\">\n              <button class=\"btn btn-primary\" style=\"vertical-align: middle; display: inline-flex; line-height: 24px;\" type=\"button\" routerLink = '/add-complaint'>\n                 \n                <i style=\" color: rgb(66, 252, 9);\" class=\"material-icons\">\n                  add\n                  </i>\n                  <span>  \n                   \n                    Add Complaint</span>\n\n              </button>\n\n             </div>\n             \n             <br>\n          \n          \n\n          </div>\n          </mat-toolbar>  \n        <br><br>  \n          <mat-card-content *ngIf=\"allcomplaints\">  \n            <div >\n              <mat-form-field class=\"w-100\">\n                <mat-label>Search</mat-label>\n                <input matInput [(ngModel)]=\"searchedKeyword\" placeholder=\"Search Keyword\">\n                <mat-icon matSuffix>search</mat-icon>\n              </mat-form-field>\n\n             </div>\n          \n             <table class=\"mat-elevation-z8 table w-100\" >\n          <thead class=\"thead-dark\">\n              <tr>\n                  <th>ID</th>\n                  <th>Rental Agreement ID</th>\n                  <th>Date</th>\n                  <th>Details</th>\n                  <th>Status</th>\n                  <th>Photo</th>\n                  <th></th>\n                  <th></th>\n\n                  <!-- <th><mat-icon class=\"icons\">edit</mat-icon></th>\n                  <th><mat-icon class=\"icons\">delete</mat-icon></th>\n                -->\n              </tr>\n          </thead>\n          <tbody>\n                  <tr *ngFor =\"let com of allcomplaints  |  filter:searchedKeyword\">\n                      <td >{{com.ComplaintID}}</td>\n                      <td >{{com.RentalID}}</td>\n                      <td>{{com.Date |date: 'dd/MM/yyyy'}}</td>\n                      <td>{{com.Details}}</td>  \n                      <td>{{com.ComplaintStatus}}</td>  \n                      <td> <img id=\"image\" width=\"125\" height=\"125\" [src]=\"com.Photo\"/> </td>\n                      <td style=\"text-align: center;\" class=\"\">  \n                          <button type=\"button\" class=\"btn btn-primary\" *ngIf=\"com.ComplaintStatus=='Unresolved'\"  (click)=\"editComplaint(com.ComplaintID,com.ComplaintStatus)\" >Update Complaint</button>  \n                        </td>  \n                      <td style=\"text-align: center;\" class=\"\">  \n                        <button type=\"button\"  class=\"btn btn-danger\"  *ngIf=\"com.ComplaintStatus=='Unresolved'\"  (click)=\"deleteComplaint(com.ComplaintID,com.ComplaintStatus)\"  >Delete</button>  \n                        <button type=\"button\" col-span=\"2\" class=\"btn btn-success\" [hidden]=\"com.Feedback!=''\" *ngIf=\"com.ComplaintStatus!='Unresolved'\"  (click)=\"AddFeedback(com.ComplaintID)\"  >Add Feedback</button>  \n<span [hidden]=\"com.Feedback==''\">Feedback comment: {{com.Feedback}}</span>\n                      </td> \n                   \n                      \n                  </tr>\n            \n           \n          </tbody>\n        </table>\n\n        <!-- <button id=\"openModalButton\" [hidden]=\"true\" data-toggle=\"modal\" data-target=\"#sucdel\">Open Modal</button> -->\n          </mat-card-content>  \n          <div *ngIf=\"!allcomplaints\" class=\"alert alert-danger\">\n            You have no complaints!\n        </div>\n        </mat-card>  \n\n\n              \n         \n        \n              </mat-sidenav-content>\n            </mat-sidenav-container>\n        \n        \n        \n      \n        \n        \n        \n        <!-- /////////////////////////////////////////Area Modals //////////////////////////-->\n        \n        <!-- Add Area modal -->\n        \n        <div class=\"modal fade\" id=\"error\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n          <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header alert-danger \">\n                <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\"></h3>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div class=\"modal-body\">\n                <div class=\"form-group\">\n                  <label for=\"exampleFormControlInput1\">No search results found</label>\n\n                </div>\n              </div>\n              <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Ok</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Edit Area modal -->\n        \n        <div class=\"modal fade\" id=\"delete\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n          <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header alert-danger \">\n                <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Delete Complaint?</h3>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div class=\"modal-body\">\n               <h2>Are you sure you want to delete the Complaint?</h2>\n              </div>\n              <div class=\"modal-footer \" >\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\n                <button type=\"button\" class=\"btn btn-success\"data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#sucdel\">Confirm</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        \n        <!-- Delete Area modal -->\n        \n        <!-- Modal -->\n        <div class=\"modal fade\" id=\"sucdel\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n          <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header alert-success \">\n                <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Success</h3>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div class=\"modal-body\">\n               <h2>Successfully deleted Complaint</h2>\n              </div>\n              <div class=\"modal-footer \" >\n                <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-success\">Ok</button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n                <!-- Modal -->\n                <div class=\"modal fade\" id=\"feedback\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                  <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                      <div class=\"modal-header alert-primary \">\n                        <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Feedack</h3>\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                          <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                      </div>\n                      <div class=\"modal-body\">\n                        <strong><mat-label>Add feedback description:</mat-label></strong>\n                        <input  matInput  placeholder=\"NaFeedbackme\"  name=\"name\"  required>\n                      </div>\n                      <div class=\"modal-footer \" >\n                        <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\">Cancel</button>\n                        <button type=\"button\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#sucfeedback\" class=\"btn btn-primary\">Confrim</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"modal fade\" id=\"sucfeedback\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                  <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                      <div class=\"modal-header alert-success \">\n                        <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">success</h3>\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                          <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                      </div>\n                      <div class=\"modal-body\">\n                        <label>Successfully added Feedback</label>\n                      </div>\n                      <div class=\"modal-footer \" >\n                        <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-success\">OK</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <ng-template #content1 let-modal>\n                  <div class=\"modal-header alert-success\">\n                    <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Feedback</h3>\n                    <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\n                      <span aria-hidden=\"true\">&times;</span>\n                    </button> -->\n                  </div>\n                  <div class=\"modal-body\">\n                    <!-- <div class=\"form-group\">\n                      <label for=\"exampleFormControlInput1\">Feedack for complaint: </label>\n                    </div> -->\n                    <div class=\"form-group\">\n                      <label for=\"comment\">Feedback Comment:</label>\n                      <textarea class=\"form-control\" #feedback rows=\"5\" placeholder=\"Tell us about your experience \"  id=\"comment\"></textarea>\n                    </div>\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button type=\"button\"   class=\"btn btn-danger\" (click)=\"modal.close()\"  >Cancel</button>\n\n                    <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\"modal.close();SendFeedback(feedback.value)\" routerLink=\"/search-complaint\" >Send feedback</button>\n                  </div>\n                </ng-template>\n\n                <ng-template #content let-modal>\n                  <div class=\"modal-header alert-success\">\n                    <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Success</h3>\n                    <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\n                      <span aria-hidden=\"true\">&times;</span>\n                    </button> -->\n                  </div>\n                  <div class=\"modal-body\">\n                    <div class=\"form-group\">\n                      <label for=\"exampleFormControlInput1\">Your complaint was successfully deleted. </label>\n                    </div>\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\"modal.close()\" routerLink=\"/search-complaint\" >Ok</button>\n                  </div>\n                </ng-template>\n                <div id=\"MyModal\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\n                  <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                      <div class=\"modal-header\">\n                        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" data-dismiss=\"modal\" (click)=\"basicModal.hide()\">\n                          <span aria-hidden=\"true\">×</span>\n                        </button>\n                        <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:rgb(60, 191, 196)\">My Complaint Page</h4>\n                      </div>\n                      <div class=\"modal-body\">\n                        <p>This is the My Complaint Page.</p><br/>\n                        <p style=\"color:rgb(60, 191, 196); font-weight: bold\">Here you can select to:</p>\n                        <p>-Click ADD COMPLAINT to add complaint </p>\n                        <p>-Click UPDATE COMPLAINT to update complaint </p>\n                        <p>-Click DELETE to delete complaint</p>\n                        <p>-Type a keyword in the SEARCH input to search for a complaint </p>\n                  \n                      </div>\n                      <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div id=\"MyModal1\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\n                  <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                      <div class=\"modal-header\">\n                        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"basicModal.hide()\">\n                          <span aria-hidden=\"true\">×</span>\n                        </button>\n                        <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:green\">My Complaint</h4>\n                      </div>\n                      <div class=\"modal-body\">\n                        <div class=\"modal-body\">\n                          <a href=\"https://motlatso-baps.github.io/HelpInturbidus/pages/626-complaint-management.html\" target=\"_blank\" mat-menu-item>\n                           \n                            <mat-icon class=\"icons\">help_outline</mat-icon>        \n                            Go to Help</a>\n                        </div>\n                      </div>\n                      <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {ViewEncapsulation} from '@angular/core';\nimport { Complaint } from 'src/app/Classes/Complaint';\nimport {Observable} from 'rxjs/observable';\nimport { HttpHeaders } from '@angular/common/http';\nimport {HttpClient} from '@angular/common/http';\nimport { FormBuilder, Validators } from '@angular/forms';  \nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ComplaintService } from 'src/app/Services/Complaint.service';\nimport { Injectable } from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport { ComplaintRental } from 'src/app/Classes/ComplaintRental';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-update-complaint',\n  templateUrl: './update-complaint.component.html',\n  styleUrls: ['./update-complaint.component.css']\n})\nexport class UpdateComplaintComponent implements OnInit {\n\n  complaint  = new Complaint();\n  fileToUpload: File = null;\n  products : any = [];\n  image: any;\n  imageUrl : any;\n  complaints: any = []; \n  showImage = false;\n  reader = new FileReader();\n  Username : string;\n  complaintID : number;\n  clientID : number;\n  rentals : Observable<ComplaintRental[]>\n  @ViewChild('content') content : any;\n\n  constructor(private modalService: NgbModal,private route : ActivatedRoute, private _Router : Router ,private formbulider: FormBuilder,private complaintservice: ComplaintService) { }\n\n  ngOnInit(): void {\n\n\n    this.Username = window.sessionStorage.getItem(\"username\");\n    this.complaintID = parseInt(window.sessionStorage.getItem(\"ComplaintID\"));\n    this.clientID = parseInt(window.sessionStorage.getItem(\"clientID\"));\n\n    this.GetRentals();\n    this.getComplaint(this.complaintID);\n  }\n  openWindowCustomClass() {\n    this.modalService.open(this.content,{ centered: true });\n  }\n  complaintForm = new FormGroup({\n    Details : new FormControl(this.complaint.Details, Validators.required),\n    Photo : new FormControl(this.complaint.Photo, Validators.required),\n    RentalID : new FormControl(this.complaint.RentalID, Validators.required),\n\n\n    \n  })\n\n  getComplaint(ID : number){\n    this.complaintservice.getComplaintById(ID).subscribe(\n    (com : Complaint) => this.editComplaint(com),\n    (err: any) => console.log(err)\n    ),\n    this.complaintservice.getComplaintById(ID).subscribe(\n    (com : Complaint) => this.assignProduct(com));\n   \n    this.imageUrl = this.complaint.Photo;\n  }\n\n\n  editComplaint(complaint : Complaint){\n    this.complaintForm.patchValue({\n      Details : complaint.Details,\n      //Photo: complaint.Photo,\n      RentalID: complaint.RentalID,\n\n    \n    })\n    \n  }\n\n\n  assignProduct(com : Complaint){\n   \n    this.complaint.Details = com.Details,\n    this.complaint.Photo = com.Photo,\n    this.complaint.ComplaintID = com.ComplaintID;\n    this.complaint.RentalID = com.RentalID;\n    console.log(this.complaint)\n    this.LoadFile\n    }\n\n    GetRentals()\n    {\n      this.rentals = this.complaintservice.getRentals(this.clientID);\n    }\n  \n  \n    LoadFile(file: FileList) {\n      \n      this.fileToUpload = file.item(0);\n    }\n\n    handleFileInput(file: FileList) {\n    \n      this.fileToUpload = file.item(0);\n      //Show image preview\n      var reader = new FileReader();\n      reader.onload = (event:any) => {\n        this.complaint.Photo = event.target.result;\n      }\n      reader.readAsDataURL(this.fileToUpload);\n    }\n\n    OnSubmit(){\n      this.complaint = this.complaintForm.value;\n      console.log(this.complaintForm.value)\n      console.log( this.complaint)\n      this.complaint.ComplaintID = this.complaintID;\n      this.complaint.ClientID = this.clientID;\n      if ( this.fileToUpload == undefined)\n      {\n        this.complaint.Photo = this.complaint.Photo;\n        this.complaintservice.UpdateFileOFOldImage(this.complaint,this.fileToUpload).subscribe(\n          data =>{\n            console.log('done');\n            //Image.value = null;\n            this.complaintForm.reset();\n            // this._Router.navigate(['search-complaint']);\n\n            this.openWindowCustomClass();\n            // document.getElementById(\"openModalButton\").click();\n          });\n      \n        \n      \n          // window.alert(\"Successfully updated details\");\n          //this._Router.navigate(['search-complaint'])\n          //Image.value = null;\n       }\n      \n      else{\n        this.complaint = this.complaintForm.value;\n        this.complaint.ComplaintID = this.complaintID;\n        this.complaint.ClientID = this.complaint.ClientID;\n        this.complaintservice.UpdateFile(this.complaint,this.fileToUpload).subscribe(\n          data =>{\n            console.log('done');\n            //Image.value = null;\n            this.complaintForm.reset();\n            // this._Router.navigate(['search-complaint']);\n\n            this.openWindowCustomClass();\n            // document.getElementById(\"openModalButton\").click();\n          });\n          \n          // window.alert(\"Successfully updated details\");\n          //this._Router.navigate(['search-complaint']);\n        \n        }\n      }\n\n}\n","\n\n <mat-sidenav-container class=\"example-container\"  >\n    <mat-sidenav mode=\"side\" opened>\n<app-nav></app-nav>\n    </mat-sidenav>\n    <mat-sidenav-content>\n      <app-username></app-username>\n          <mat-card>  \n            <mat-toolbar color=\"primary\">  \n              <div class=\"container w-100 row\"  >\n              <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">  \n               Update Complaint\n             \n               </div>\n  \n               <div text align=\"right\"  class=\"col-6\">\n               \n \n               </div>\n               <br>\n            \n            \n  \n            </div>\n            </mat-toolbar>  \n          <br><br>  \n            <mat-card-content>  \n          \n            \n               <mat-card class=\"my-card\">\n                <mat-card-content>\n                  <form [formGroup]=\"complaintForm\" (ngSubmit)=\"OnSubmit()\">\n\n                    <div >\n                      <mat-form-field class=\"w-100\">\n                        <mat-label >~Please select updated complaint </mat-label>\n                        <select matNativeControl placeholder=\"Select referance No\" required  formControlName =\"RentalID\">\n                          <option [value] ='rent.RENTALAGREEMENTID' *ngFor=\"let rent of rentals| async\" [selected]=\"complaint.RentalID\">\n                            Referance No: {{rent.REFERENCE_NO}}\n                          </option>\n                        </select>\n                        <mat-error *ngIf=\"complaintForm.controls['RentalID'].errors?.required && complaintForm.controls['RentalID'].touched\">This field  is required</mat-error>\n\n                      </mat-form-field>\n                    </div>\n\n\n                    <mat-form-field class=\"full-width\">\n                           <mat-label>Description</mat-label>\n                           <textarea   matInput formControlName =\"Details\" placeholder=\"Please enter description of complaint here\"  name=\"uname\"  required></textarea>\n                           <mat-error *ngIf=\"complaintForm.controls['Details'].errors?.required && complaintForm.controls['Details'].touched\">This field  is required</mat-error>\n\n                          </mat-form-field>\n\n                        <br><br>\n                        <label>\n                          Complaint Image\n                          <br>\n                    \n                          <img [src]=\"complaint.Photo\" (change)=\"handleFileInput($event.target.files)\" style=\"width: 200; height: 200px\" >\n                        <input type=\"file\" formControlName=\"Photo\" id=\"productImage\" name=\"productImage\" #Image accept=\"image/png/jpg\" (change)=\"handleFileInput($event.target.files)\" class=\"form-control\" >\n                        </label> \n                        <br><br>\n                        <mat-card-actions>\n                         <button mat-raised-button color=\"primary\"  routerLink = \"/search-complaint\" >Cancel</button>\n                            <button mat-raised-button color=\"primary\"   type =\"submit\">Update Complaint</button>\n                        </mat-card-actions>\n                        <button id=\"openModalButton\" [hidden]=\"true\" data-toggle=\"modal\" data-target=\"#updatecomplaint\">Open Modal</button>\n                        <!-- <input type=\"number\" [(ngModel)]=\"complaint.ClientID\" formControlName=\"UserID\" [hidden]=\"true\"  >\n                        <input type=\"number\" [(ngModel)]=\"complaint.ComplaintID\" formControlName=\"ComplaintID\" [hidden]=\"true\"  > -->\n                 </form> \n                </mat-card-content>\n             </mat-card>\n            </mat-card-content>  \n          </mat-card>  \n \n \n                \n           \n          \n                </mat-sidenav-content>\n              </mat-sidenav-container>\n          \n          \n          \n              \n          <!-- /////////////////////////////////////////Area Modals //////////////////////////-->\n          \n          <!-- Add Area modal -->\n          \n          <div class=\"modal fade\" id=\"updatecomplaint\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\" role=\"document\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header alert-success \">\n                  <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Successful</h3>\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div class=\"modal-body\">\n                  <div class=\"form-group\">\n                    <label for=\"exampleFormControlInput1\">Successfully updated complaint</label>\n                  </div>\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\" routerLink =\"/search-complaint\">Ok</button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- Edit Area modal -->\n          \n\n          \n          \n          <!-- Delete Area modal -->\n          \n          <!-- Modal -->\n          <div class=\"modal fade\" id=\"deleteEmployeeTypeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\" role=\"document\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header alert-danger \">\n                  <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Delete Employee Type ?</h3>\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div class=\"modal-body\">\n                 <h2>Are you sure you want to delete the Employee Type?</h2>\n                </div>\n                <div class=\"modal-footer \" >\n                  <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\n                  <button type=\"button\" class=\"btn btn-success\">Confirm</button>\n                </div>\n              </div>\n            </div>\n          </div>\n  \n \n          <ng-template #content let-modal>\n            <div class=\"modal-header alert-success\">\n              <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Success</h3>\n              <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button> -->\n            </div>\n            <div class=\"modal-body\">\n              <div class=\"form-group\">\n                <label for=\"exampleFormControlInput1\">Your complaint was successfully updated.We will be in touch soon. </label>\n              </div>\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\"modal.close()\" routerLink=\"/search-complaint\" >Ok</button>\n            </div>\n          </ng-template>","\r\n    export const Localhost = \"http://localhost:30135/api/\";\r\n    // export const OnlineLink = \"http://www.370.somee.com/\";\r\n\r\n     //export const OnlineLink = \"http://localhost:30135/\";\r\n     //export const OnlineLink = \"http://localhost:30135/\"\r\n     export const OnlineLink = \"https://inf370api.azurewebsites.net/\"\r\n//\"https://inf370api.azurewebsites.net/\";\r\n//  export const OnlineLink = \"http://inf370api-001-site1.itempurl.com/\";\r\n","import {Injectable} from '@angular/core'\nimport {HttpClient} from '@angular/common/http';\nimport { from, Observable } from 'rxjs';\nimport { DisplayUser } from '../Classes/DisplayUser';\nimport { AddUser } from '../Classes/AddUser';\n//import {Observable} from 'rxjs/observable';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Complaint } from '../Classes/Complaint';\nimport { ComplaintRental } from '../Classes/ComplaintRental';\nimport * as myGlobal  from '../Global';\n\n\n\n@Injectable({providedIn : 'root'})\nexport class ComplaintService{\n  url : string = myGlobal.OnlineLink + \"api/Complaint/\"\n\n  formData : Complaint;\n  httpclient: any;\n    constructor(private http : HttpClient){}\n\ngetAllComplaint(): Observable<Complaint[]> {  \n    return this.http.get<Complaint[]>(this.url + 'getAllComplaints');  \n  }  \n\n  //service code \n  getMyComplaint(ID:number): Observable<Complaint[]> {  debugger;\n    return this.http.get<Complaint[]>(this.url + 'getMyComplaint/'+ID);  \n  }  \n  \n  getRentals(ClientID: number): Observable<ComplaintRental[]> {  debugger;\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n    return this.http.get<ComplaintRental[]>(this.url + 'GetRentalAgreements/' + ClientID,httpOptions);  \n  } \n\n  GetUnassignedComplaints(): Observable<Complaint[]> {  \n    return this.http.get<Complaint[]>(this.url + 'GetUnassignedComplaints');  \n  }  \n\n  // Assign(Emp : AndyEmployee,){\n  //   this.http.post(this.url + 'Assign',Emp\n  //   ).subscribe(ResponseData => {\n  //     console.log(ResponseData);[\n     \n  //     ]\n  //   });\n  // }\n\n\n\n  // SendFeedback(ID: number): Observable<Complaint> {  \n  //   const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n  //     return this.http.post<Complaint>(this.url + 'GetComplaintById/' + ID,httpOptions);  \n  //   }\n  \n\n\n    SendFeedback(Emp : any,){\n      return this.http.post(this.url + 'AddFeedback',Emp);\n     }\n\n\ngetComplaint(ID: number): Observable<Complaint> {  \n  const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n    return this.http.post<Complaint>(this.url + 'GetComplaintById/' + ID,httpOptions);  \n  }\n  \n  \n  deleteComplaint(ComplaintID: number): Observable<Complaint> {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n    return this.http.post<Complaint>(this.url + 'DeleteComplaint/' + ComplaintID, httpOptions);\n  }\n\n\n  \n  getComplaintById(ComplaintID: number): Observable<Complaint> {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n    return this.http.get<Complaint>(this.url + 'GetComplaintById/' + ComplaintID,httpOptions);\n  }\n\n  \n\n//   AddComplaint(com : Complaint){\n//     this.http.post(this.url + 'AddComplaint',com\n//     ).subscribe(ResponseData => {\n//       console.log(ResponseData);[\n     \n//       ]\n//     });\n\n\n// }\n \n  public postFile(com : Complaint, fileToUpload: File) {\n    const httpOptions = { headers: new HttpHeaders({ \"Access-Control-Allow-Origin\" :'*' }) }\n    const endpoint = this.url + 'AddComplaint';\n    const formData: FormData = new FormData();\n    formData.append('ClientID', com.ClientID.toString());\n    formData.append('Details', com.Details)\n    formData.append('RentalID', com.RentalID.toString())\n    formData.append('Image', fileToUpload, fileToUpload.name);\n   return this.http.post(endpoint, formData, httpOptions);\n  }\n\n  public postFileNoPhoto(com : Complaint) {\n    const httpOptions = { headers: new HttpHeaders({ \"Access-Control-Allow-Origin\" :'*' }) }\n    const endpoint = this.url + 'AddComplaint';\n    const formData: FormData = new FormData();\n    formData.append('ClientID', com.ClientID.toString());\n    formData.append('Details', com.Details)\n    formData.append('RentalID', com.RentalID.toString())\n   // formData.append('Image', fileToUpload, fileToUpload.name);\n   return this.http.post(endpoint, formData, httpOptions);\n  }\n\n\n  UpdateComplaint\n  public UpdateFile(com : Complaint, fileToUpload: File) {\n    const httpOptions = { headers: new HttpHeaders({ \"Access-Control-Allow-Origin\" :'*' }) }\n    const endpoint = this.url + 'UpdateComplaint';\n    const formData: FormData = new FormData();\n    formData.append('ComplaintID', com.ComplaintID.toString())\n    formData.append('ClientID', com.ClientID.toString())\n    formData.append('Details', com.Details)\n    formData.append('RentalID', com.RentalID.toString())\n    formData.append('Image', fileToUpload, fileToUpload.name);\n   return this.http.post(endpoint, formData, httpOptions);\n  }\n\n   public UpdateFileOFOldImage(com : Complaint, fileToUpload: File) {\n    const httpOptions = { headers: new HttpHeaders({ \"Access-Control-Allow-Origin\" :'*' }) }\n    const endpoint = this.url + 'UpdateComplaint';\n    const formData: FormData = new FormData();\n    formData.append('ComplaintID', com.ComplaintID.toString())\n    formData.append('ClientID', com.ClientID.toString())\n    formData.append('Details', com.Details)\n    formData.append('RentalID', com.RentalID.toString())\n    formData.append('Image', fileToUpload);\n   return this.http.post(endpoint, formData, httpOptions);\n  }\n\n\n\n\n\n\n}\n","import {Injectable} from '@angular/core'\nimport {HttpClient} from '@angular/common/http';\nimport { from } from 'rxjs';\nimport { DisplayUser } from '../Classes/DisplayUser';\nimport { AddUser } from '../Classes/AddUser';\nimport {Observable} from 'rxjs/observable';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Client } from '../Classes/Client';\nimport { Deactivate } from 'src/app/Classes/Deactivate';\nimport { Check } from 'src/app/Classes/Check';\nimport * as myGlobal  from '../Global';\n\n\n@Injectable({providedIn : 'root'})\nexport class UserService{\n  url : string = myGlobal.OnlineLink+ \"api/User/\"\n\n\n  httpclient: any;\n    constructor(private http : HttpClient){}\n\ngetAllUser(): Observable<DisplayUser[]> {  \n    return this.http.get<DisplayUser[]>(this.url + 'GetAllUsers');  \n  }  \n\ngetUser(ID: number): Observable<Client> {  \n  const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n    return this.http.get<Client>(this.url + 'GetUserByID/' + ID,httpOptions);  \n  } \n\n  CheckUsername(username: string): Observable<Check> {  \n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n      return this.http.get<Check>(this.url + 'doesUserExist/' + username,httpOptions);  \n    } \n \n    public doesUserExist(usr:string){\n      return this.http.get(this.url+'User/doesUserExist/'+usr);\n    }\n//   AddUserPost(myUser : AddUser){\n//     this.http.post(this.url + 'AddUser',myUser\n//     ).subscribe(ResponseData => {\n//       console.log(ResponseData);\n     \n      \n//     });\n\n\n\n// }\n\nAddUserPost(EmployeeType: AddUser): Observable<AddUser> {  debugger;\n  const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \n  return this.http.post<AddUser>(this.url + 'AddUser',  \n  EmployeeType, httpOptions);  \n}  \n\n\nDeactivate(myUser : Deactivate){\n  this.http.post(this.url + 'Deactivate',myUser\n  ).subscribe(ResponseData => {\n    console.log(ResponseData);[\n   \n    ]\n  });\n\n\n}\n\n// UpdateUserPost(myUser : AddUser){\n//   this.http.post(this.url + 'UpdateUser',myUser\n//   ).subscribe(ResponseData => {\n//     console.log(ResponseData);[\n   \n//     ]\n//   });\n// }\n\n\nUpdateUserPost(myUser: AddUser): Observable<AddUser> {  \n  const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \n  return this.http.post<AddUser>(this.url + 'UpdateUser',  \n  myUser, httpOptions);  \n  }  \n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as myGlobal from '../Global';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n    headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        \"Access-Control-Allow-Origin\": '*'\n    })\n};\nexport class APIService {\n    constructor(httpclient) {\n        this.httpclient = httpclient;\n        this.Apiurl = myGlobal.OnlineLink + 'api/';\n    }\n    UserAuthentication(user, pass) {\n        let credentials = 'username=' + user + '&password=' + pass + '&grant_type=password';\n        var reqHeader = new HttpHeaders({ 'Content-Type': 'application/x-www-urlencoded', 'No-Auth': 'True' });\n        return this.httpclient.post(this.Apiurl + 'token', encodeURI(credentials), { headers: reqHeader });\n    }\n    LoginClient(user) {\n        return this.httpclient.post(this.Apiurl + 'Login/ClientLogin', user, httpOptions);\n    }\n    logout() { sessionStorage.clear(); }\n    SetLogoutTime(time) {\n        return this.httpclient.put(this.Apiurl + 'api/LogoutTime/ChangeLogoutTime', time, httpOptions);\n    }\n    GetLogOutTime() {\n        return this.httpclient.get(this.Apiurl + 'LogoutTime/GetLogoutTime');\n    }\n}\nAPIService.ɵfac = function APIService_Factory(t) { return new (t || APIService)(i0.ɵɵinject(i1.HttpClient)); };\nAPIService.ɵprov = i0.ɵɵdefineInjectable({ token: APIService, factory: APIService.ɵfac, providedIn: 'root' });\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(APIService, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: i1.HttpClient }]; }, null); })();\n//# sourceMappingURL=api.service.js.map","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\nimport { Users } from 'src/app/models/users';\nimport { Observable } from 'rxjs';\nimport * as myGlobal  from '../Global';\nimport { Times } from './Times';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json',\n    \"Access-Control-Allow-Origin\": '*'\n  })\n};\n\n\n@Injectable({ providedIn: 'root' })\nexport class APIService {\n  Apiurl = myGlobal.OnlineLink + 'api/';  \n\n  constructor(private httpclient: HttpClient) { }  \n  \n\n    UserAuthentication(user: string,pass: string):Observable<any>{    \n      let credentials='username=' +user  + '&password=' +pass +'&grant_type=password';     \n      var reqHeader = new HttpHeaders({'Content-Type': 'application/x-www-urlencoded','No-Auth':'True' });    \n     return this.httpclient.post<any>(this.Apiurl+'token',encodeURI(credentials),{headers:reqHeader});    \n   }    \n\n   public LoginClient(user : Users) {\n    return this.httpclient.post<Users>(this.Apiurl+'Login/ClientLogin',user, httpOptions);\n  }\n  public logout(){sessionStorage.clear();}\n\n  public SetLogoutTime(time : Times){\n    return this.httpclient.put(this.Apiurl+'api/LogoutTime/ChangeLogoutTime', time, httpOptions)\n  }\n\n  public GetLogOutTime() { \n    return this.httpclient.get(this.Apiurl + 'LogoutTime/GetLogoutTime')\n\n}\n}\n","// // errors-handler.ts\n// import { ErrorHandler, Injectable} from '@angular/core';\n// @Injectable()\n// export class ErrorsHandler implements ErrorHandler {\n//   handleError(error: Error) {\n//      // Do whatever you like with the error (send it to the server?)\n//      // And log it to the console\n//      console.error('It happens: ', error);\n//   }\n// }\n\n\nimport { ErrorHandler, Injectable } from '@angular/core';\n \n@Injectable()\nexport class GlobalErrorHandler implements ErrorHandler {\n \n    constructor() { }\n \n    handleError(error: Error) {\n        const err = {\n            message: \"Something went wrong!\",\n            // stack: error.stack ? error.stack : ''\n        };\n \n        // Log  the error\n        console.log(error);\n \n        // Optionally send it to your back-end API\n        // Notify the user\n    }\n}","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport {ViewEncapsulation} from '@angular/core';\nimport { AddUser } from 'src/app/Classes/AddUser';\nimport {Observable} from 'rxjs/observable';\nimport { HttpHeaders } from '@angular/common/http';\nimport {Router} from '@angular/router'\nimport {HttpClient} from '@angular/common/http';\nimport { FormBuilder, Validators } from '@angular/forms';  \nimport { FormGroup, FormControl } from '@angular/forms';\nimport { UserService } from 'src/app/Services/User.service';\nimport { Injectable } from '@angular/core';\nimport { formatWithOptions } from 'util';\nimport { DisplayUser } from 'src/app/Classes/DisplayUser';\nimport { Check } from 'src/app/Classes/Check';\nimport { Users } from 'src/app/models/users';\nimport { NgbActiveModal, NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css'],\n  providers: [NgbModalConfig, NgbModal]\n})\n\n\n\nexport class AddUserComponent implements OnInit {\n  // @ViewChild('content', {read: TemplateRef}) modalExample: TemplateRef<any>;\n  @ViewChild('content') content : any;\n  myUsers : DisplayUser[];\n  allUsers : Observable<DisplayUser[]>;\n  searchUser = new DisplayUser(); \n\n  user  = new AddUser();\n  userClientForm: any; \n  found = new Check();\n  send = new Check()\n  isStudent: boolean=false;\n  usrEx: boolean;\n  showNotSA: boolean =true;\n  showSA: boolean =true;\n  show: boolean;\n  saveInProgress: boolean=false;\n  date: string;\n  ageL: string;\n  \n  constructor(private modalService: NgbModal,private route:Router,private _Router : Router ,private formbulider: FormBuilder,private userservice:UserService) { }\n\n\n\n\n\n  userForm = new FormGroup({\n    Name : new FormControl(this.user.Name,[Validators.required, Validators.pattern(\"[A-Za-z]*\")],),\n    Username : new FormControl(this.user.Username,[Validators.required,Validators.pattern(\"^[A-Za-z0-9ñÑáéíóúÁÉÍÓÚ]+$\")]), \n    Password : new FormControl(this.user.Password,[Validators.required]),\n    Surname : new FormControl(this.user.Surname, [Validators.required, Validators.pattern(\"[A-Za-z]*\")]),\n    PhoneNo : new FormControl(this.user.PhoneNo, [Validators.required, Validators.pattern(\"[0-9]{10}\"),Validators.maxLength(10),Validators.minLength(10)]),\n    Email : new FormControl(this.user.Email, [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")],), \n    PassportNo : new FormControl(this.user.PassportNo, [ Validators.pattern(\"^[A-Za-z0-9ñÑáéíóúÁÉÍÓÚ]+$\")]),\n    IdNo : new FormControl(this.user.IdNo, [Validators.pattern(\"[0-9]*\"),Validators.maxLength(13),Validators.minLength(1)]),\n    Nationality : new FormControl(this.user.Nationality, Validators.required),\n    DOB : new FormControl(this.user.DOB, Validators.required),\n    IsStudent : new FormControl(this.user.IsStudent, Validators.required),\n    Residental :new FormControl(this.user.Residental, Validators.required),\n    Postal : new FormControl(this.user.Postal, Validators.required),\n    Employer : new FormControl(this.user.Employer, [Validators.required, Validators.pattern(\"[A-Za-z ]*\")]),\n    Occupation : new FormControl(this.user.Occupation, [Validators.required, Validators.pattern(\"[A-Za-z ]*\")]),\n    WorkAddress : new FormControl(this.user.WorkAddress, Validators.required),\n    WorkTel : new FormControl(this.user.WorkTel, [Validators.required, Validators.pattern(\"[0-9]*\"),Validators.maxLength(10),Validators.minLength(10)]),\n    GrossSalary : new FormControl(this.user.GrossSalary, [Validators.required, Validators.pattern(\"[0-9]*\")]),\n    \n  })\n  ngOnInit(): void \n  {  const today = new Date();\n    var pipe = new DatePipe('en-ZA'); // Use your own locale\n    this.date =pipe.transform(today,'yyyy-MM-dd');\n    var d = new Date(today);\n   this.ageL=pipe.transform(d.setFullYear(d.getFullYear() - 17),'yyyy-MM-dd')\ndebugger;\n\n\nif(sessionStorage.getItem('loggedInStatus')=='true')\n{ \n\n          this._Router.navigate(['/']);\n\n}\n    // this.userClientForm = this.formbulider.group({\n    //   Name : ['', [Validators.required]],\n    //   Surname : ['', [Validators.required]],\n    //   PhoneNo : ['', [Validators.required]],\n    //   Email : ['', [Validators.required]],\n    //   Username : ['', [Validators.required]],\n    //   Password : ['', [Validators.required]],\n    //   PassportNo : ['', [Validators.required]],\n    //   Nationality : ['', [Validators.required]],\n    //   DOB : ['', [Validators.required]],\n    //   IsStudent : ['', [Validators.required]],\n    //   Residental :['', [Validators.required]],\n    //   Postal : new FormControl('' ,Validators.required),\n    //   Employer : ['', [Validators.required]],\n    //   Occupation : ['', [Validators.required]],\n    //   WorkAddress : ['', [Validators.required]],\n    //   WorkTel : ['', [Validators.required]],\n    //   GrossSalary : ['', [Validators.required]],\n      \n    // })\n  }\n\n\n\n\n  loadAllUsers() {  \n    this.allUsers = this.userservice.getAllUser(); \n  }\n\n    openWindowCustomClass() {\n    this.modalService.open(this.content,{ centered: true });\n  }\n\n\n  OnSubmit(){\n    this.usrEx = false;\n    this.user = this.userForm.value;\n\n    \n  \n    this.userservice.CheckUsername(this.user.Name).toPromise().then(r => {\n      console.log(r);debugger;\n      if(r==\"true\")\n      {\n\n        this.usrEx = true;\n      }else{\n        this.addStudent();\n      }\n      \n    })  \n  }\n\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    // this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  isEnabled  : boolean = true;\n\n  onNationalityChange(value){\n    if(value==\"South African\")\n    {\n      this.showNotSA=true;\nthis.showSA=false;\nthis.userForm.controls['PassportNo'].setValue(null);\n    }\nelse\n{this.showSA=true;\n  this.showNotSA=false;\n  this.userForm.controls['IdNo'].setValue(null);  \n\n}\n  }\n\n  check(value){\nif(value==null)\n{\nthis.show=true;\n}\nelse{\n  this.show=false;\n}\n\n\n  }\n\n\n  onCountryChange(value){ debugger;\n\n if(value==\"true\"){\n\nthis.isStudent=true;\n\n }\n  \n  else{\n    this.isStudent=false;\n  }\n  }\n\n\n  addStudent(){this.saveInProgress=true;\n    this.user = this.userForm.value;\n    debugger;\n\n  this.userservice.AddUserPost(this.user).subscribe(dats=>{\n    this.saveInProgress=false;\n\n    this.openWindowCustomClass();\n  })\n \n\n\n//document.getElementById(\"openModalButton\").click();\n\n\n\n\n    // const addStudentClient = this.userForm.value;\n    // this.AddStudent(addStudentClient);\n    // this.userForm.reset();\n\n\n\n  }\n\n  // AddStudent(addStudentClient:AddUser){\n\n\n\n  // }\n\n  \n  AddStudent(name) {  \n    this.usrEx = false;\n    this.user = this.userForm.value;\n  \n    this.userservice.CheckUsername(name).toPromise().then(r => {\n      console.log(r);debugger;\n      if(r==\"true\")\n      {\n\n        this.usrEx = true;\n      }else{\n        this.addStudent();\n      }\n      \n    })  \n} \n\n\n\n\n\n\n\n\n}\n\n\n\n//user.Name,user.Surname,user.PhoneNo,user.Email,user.Username,\n  //                     user.Password,user.PassportNo,user.Nationality,user.DOB,user.IsStudent,user.Residental,user.Postal,\n  //                     user.Employer,user.Occupation,user.WorkAddress,user.WorkTel,user.GrossSalary\n\n\n//   this.userClientForm = this.formbulider.group({\n//     Name : ['', [Validators.required]],\n//     Surname : ['', [Validators.required]],\n//     PhoneNo : ['', [Validators.required]],\n//     Email : ['', [Validators.required]],\n//     Username : ['', [Validators.required]],\n//     Password : ['', [Validators.required]],\n//     PassportNo : ['', [Validators.required]],\n//     Nationality : ['', [Validators.required]],\n//     DOB : ['', [Validators.required]],\n//     IsStudent : ['', [Validators.required]],\n//     Residental :['', [Validators.required]],\n//     Postal : new FormControl('' ,Validators.required),\n//     Employer : ['', [Validators.required]],\n//     Occupation : ['', [Validators.required]],\n//     WorkAddress : ['', [Validators.required]],\n//     WorkTel : ['', [Validators.required]],\n//     GrossSalary : ['', [Validators.required]],\n    \n//   })\n// }","\n\n <mat-sidenav-container class=\"example-container\"  >\n   <mat-sidenav mode=\"side\" opened> \n    <img class = 'images' class=\"images\" src=\"./assets/Logo.png\" style=\"width:200px;height:100px;\"/>\n      <div class=\"sidenav\">\n                  \n\n  <a routerLink=\"/login\"> \n            <mat-icon class=\"icons\">home</mat-icon>\n         Login\n       </a>\n \n       <!-- <a href=\"#about\">\n         <mat-icon class=\"icons\">info</mat-icon>\n         About</a> -->\n\n         <a routerLink=\"/\">\n         <mat-icon class=\"icons\">location_city</mat-icon>\n \n         Browse Properties</a>\n \n \n \n </div>\n \n \n \n \n   </mat-sidenav>\n   <mat-sidenav-content>\n         <mat-card>  \n           <mat-toolbar color=\"primary\">  \n             <div class=\"container w-100 row\"  >\n             <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">  \n              Register\n            \n              </div>\n \n              <div text align=\"right\"  class=\"col-6\">\n              \n\n              </div>\n              <br>\n           \n           \n \n           </div>\n           </mat-toolbar>  \n         <br><br>  \n           <mat-card-content>  \n         \n           \n              <mat-card class=\"my-card\">\n                <form [formGroup]=\"userForm\" (ngSubmit)=\"OnSubmit()\">\n               <mat-card-content>\n               \n                        <div >\n                          <mat-form-field class=\"w-100\">\n                            <mat-label>Username</mat-label>\n                            <input matInput placeholder=\"Username\" #Username type=\"text\" formControlName =\"Username\"  >\n                            <mat-error *ngIf=\"userForm.controls['Username'].errors?.required && userForm.controls['Username'].touched\">Username is required</mat-error>\n                            <mat-error *ngIf=\"userForm.controls['Username'].errors?.pattern && userForm.controls['Username'].touched \">Username is not valid. Special characters or spaces are not allowed!</mat-error>\n                          </mat-form-field>\n                       </div>\n                       <br>\n                       <div >\n                        <mat-form-field class=\"w-100\">  \n                            <mat-label>Password</mat-label>\n                            <input matInput type=\"password\" #Password placeholder=\"Password\" formControlName =\"Password\" >\n                            <mat-error *ngIf=\"userForm.controls['Password'].errors?.required && userForm.controls['Password'].touched\">Password is required</mat-error>\n                            <!-- <mat-error *ngIf=\"userForm.controls['Password'].errors?.pattern && userForm.controls['Password'].touched\">Password is not valid. Spaces are not allowed!</mat-error> -->\n         \n                          </mat-form-field>\n\n                       </div>\n                       <br>\n                       <div>\n                          <mat-form-field class=\"w-100\">\n                              <mat-label>Name</mat-label>\n                              <input matInput placeholder=\"Name\" #Name formControlName =\"Name\">\n                              <mat-error *ngIf=\"userForm.controls['Name'].errors?.required && userForm.controls['Name'].touched \">Name is required</mat-error>\n                              <mat-error *ngIf=\"userForm.controls['Name'].errors?.pattern && userForm.controls['Name'].touched \">Name is not valid. Special characters, numbers or spaces are not allowed!</mat-error>\n  \n                            </mat-form-field>\n                        \n            \n                         </div>\n                         <br>\n                         <div >\n                          <mat-form-field class=\"w-100\">\n                              <mat-label>Surname</mat-label>\n                              <input matInput placeholder=\"Surname\" #Surname formControlName =\"Surname\">\n                              <mat-error *ngIf=\"userForm.controls['Surname'].errors?.required \">Surname is required</mat-error>\n                              <mat-error *ngIf=\"userForm.controls['Surname'].errors?.pattern \">Surname is not valid. Special characters , numbers or spaces are not allowed!</mat-error>\n  \n                            </mat-form-field>\n                         </div>\n                         <br>\n                         <div >\n                          <mat-form-field class=\"w-100\">\n                              <mat-label>Email</mat-label>\n                              <input matInput type=\"email\" placeholder=\"Email\" #Email formControlName =\"Email\" >\n                              <mat-error *ngIf=\"userForm.controls['Email'].errors?.required \">Email is required</mat-error>\n                              <mat-error *ngIf=\"userForm.controls['Email'].errors?.pattern \">Email is not valid!</mat-error>\n  \n                            </mat-form-field>\n                         </div>\n                         <br>\n                         <div >\n                          <mat-form-field class=\"w-100\">\n                              <mat-label>Phone Number</mat-label>\n                              <input matInput placeholder=\"Phone Number\" maxlength=\"10\" #PhoneNo formControlName =\"PhoneNo\">\n                              <mat-error *ngIf=\"userForm.controls['PhoneNo'].errors?.required \">Phone Number is required</mat-error>\n                              <mat-error *ngIf=\"userForm.controls['PhoneNo'].errors?.pattern \">Phone Number is not valid! 10 digits are required and Special characters are not allowed</mat-error>\n                            </mat-form-field>\n                         </div>\n                         <br>\n                         <div >\n                          <mat-form-field class=\"w-100\">\n                            <mat-label >Nationality</mat-label>\n                            <select matNativeControl required  #Nationality formControlName =\"Nationality\" (change)= \"onNationalityChange(Nationality.value)\">\n                              <option value=\"South African\">South African</option>\n                              <option value=\"Non-South African\">Non-South African</option>\n                            </select>\n                            <mat-error *ngIf=\"userForm.controls['Nationality'].errors?.required \">Nationality is required</mat-error>\n                            <mat-error *ngIf=\"userForm.controls['Nationality'].errors?.pattern \">Nationality is not valid! </mat-error>\n\n                          </mat-form-field>\n                        </div>\n                        <br>\n                         <div >\n                          <mat-form-field class=\"w-100\" [hidden]=\"showNotSA\">\n                              <mat-label>Passport Number</mat-label>\n                              <input matInput placeholder=\"Passport Number\" #PassportNo  formControlName =\"PassportNo\">\n                              <mat-error *ngIf=\"userForm.controls['PassportNo'].errors?.required \">Passport Number is required</mat-error>\n                              <mat-error *ngIf=\"userForm.controls['PassportNo'].errors?.pattern \">Passport Number is not valid! Special characters, letters and spaces are not allowed!</mat-error>\n\n                            </mat-form-field>\n                          </div>\n                          <br>\n                          <div >\n                            <mat-form-field class=\"w-100\" [hidden]=\"showSA\" >\n                                <mat-label>ID Number </mat-label>\n                                <input matInput placeholder=\"ID Number\" #IdNo maxlength=\"13\" minlength=\"13\" formControlName =\"IdNo\">\n                                <mat-error *ngIf=\" IdNo.length==0 && userForm.controls['IdNo'].pristine \" >ID Number is required </mat-error>\n                                <mat-error *ngIf=\"userForm.controls['IdNo'].errors?.minlength && userForm.controls['IdNo'].dirty\" >ID Number is not valid! 13 digits are required </mat-error>\n                                                                                                                                                                                                                                                                                                              \n                                <mat-error *ngIf=\"userForm.controls['IdNo'].errors?.pattern  && userForm.controls['IdNo'].dirty  \">ID Number is not valid! Special characters, letters and spaces are not allowed!</mat-error>\n    \n                              </mat-form-field>\n                            </div>\n                            <br>\n                          <div>\n                      <mat-form-field class=\"w-100\">\n                      <mat-label>Date Of Birth</mat-label>\n                      <input matInput [matDatepicker]=\"picker\" #DOB [max]=\"ageL\"  formControlName =\"DOB\" readonly>\n                      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                      <mat-datepicker #picker></mat-datepicker>\n                      <mat-error *ngIf=\"userForm.controls['DOB'].errors?.required \">Date of Birth is required</mat-error>\n\n                      </mat-form-field>\n                          </div> \n                            <div>\n                              <mat-form-field class=\"w-100\">\n                                  <mat-label >Are You a Student?</mat-label>\n                                  <select matNativeControl required  #IsStudent formControlName =\"IsStudent\"  (change)= \"onCountryChange(IsStudent.value)\">\n                                    <option value=\"true\">Yes</option>\n                                    <option value=\"false\">No</option>\n                                  </select>\n                                  <mat-error *ngIf=\"userForm.controls['IsStudent'].errors?.required \">This field is required</mat-error>\n\n                                </mat-form-field>\n                            </div>\n                            <br>\n                            <div >\n                              <mat-form-field class=\"w-100\">\n                                  <mat-label>Residential Address</mat-label>\n                                  <input matInput placeholder=\"Residential Address\" #Residental placeholder=\"1158 Burnett St, Hatfield, Pretoria, 0028\"  formControlName =\"Residental\">\n                                  <mat-error *ngIf=\"userForm.controls['Residental'].errors?.required \">Residential Address is required</mat-error>\n\n                                </mat-form-field>\n                \n                             </div>\n                             <br>\n                             <div >\n                              <mat-form-field class=\"w-100\">\n                                  <mat-label>Postal Address</mat-label>\n                                  <input matInput placeholder=\"Postal Address\" #Postal formControlName =\"Postal\">\n                                  <mat-error *ngIf=\"userForm.controls['Postal'].errors?.required \">Postal Address is required</mat-error>\n\n                                </mat-form-field>\n                \n                             </div>\n                             <br>\n                             <div *ngIf=\"!isStudent\">\n                              <mat-form-field class=\"w-100\">\n                                  <mat-label>Name of Employer</mat-label>\n                                  <input matInput placeholder=\"Name of Employer\" #Employer  formControlName =\"Employer\">\n                                  <mat-error *ngIf=\"userForm.controls['Employer'].errors?.required \">Employer detail is required</mat-error>\n                                  <mat-error *ngIf=\"userForm.controls['Employer'].errors?.pattern \">Employer detail is not valid! Special characters are not allowed</mat-error>\n\n                                </mat-form-field>\n                \n                             </div>\n                             <br>\n                             <div *ngIf=\"!isStudent\">\n                              <mat-form-field class=\"w-100\">\n                                  <mat-label>Occupation</mat-label>\n                                  <input matInput placeholder=\"Occupation\" #Occupation  formControlName =\"Occupation\">\n                                  <mat-error *ngIf=\"userForm.controls['Occupation'].errors?.required \">Occupation detail is required</mat-error>\n                                  <mat-error *ngIf=\"userForm.controls['Occupation'].errors?.pattern \">Occupation is not valid! Special characters are not allowed</mat-error>\n\n                                </mat-form-field>\n                \n                             </div>\n                             <br>\n                             <div *ngIf=\"!isStudent\">\n                              <mat-form-field class=\"w-100\">\n                                  <mat-label>Work Address</mat-label>\n                                  <input matInput placeholder=\"Work Address\" #WorkAddress  formControlName =\"WorkAddress\">\n                                  <mat-error *ngIf=\"userForm.controls['WorkAddress'].errors?.required \">Work Address is required</mat-error>\n                                  <mat-error *ngIf=\"userForm.controls['WorkAddress'].errors?.pattern \">Work Address is not valid! Special characters are not allowed</mat-error>\n\n                                </mat-form-field>\n                \n                             </div>\n                             <br>\n                             <div *ngIf=\"!isStudent\" >\n                              <mat-form-field class=\"w-100\">\n                                  <mat-label>Work Tel.No</mat-label>\n                                  <input matInput placeholder=\"Work Tel.No\"  #WorkTel maxlength=\"10\"  formControlName =\"WorkTel\">\n                                  <mat-error *ngIf=\"userForm.controls['WorkTel'].errors?.required \">Work Tel.No is required</mat-error>\n                                  <mat-error *ngIf=\"userForm.controls['WorkTel'].errors?.pattern \">Work Tel.No is not valid! 10 digits are required and Special characters are not allowed</mat-error>\n\n                                </mat-form-field>\n                              </div>\n                              <br>\n                              <div *ngIf=\"!isStudent\">\n                                  <mat-form-field class=\"w-100\">\n                                      <mat-label>Gross Salary</mat-label>\n                                      <input matInput placeholder=\"Gross Salary\"   #GrossSalary  formControlName =\"GrossSalary\">\n                                      <mat-error *ngIf=\"userForm.controls['GrossSalary'].errors?.required \">GrossSalary is required</mat-error>\n                                      <mat-error *ngIf=\"userForm.controls['GrossSalary'].errors?.pattern \">GrossSalary is not valid! Spaces, letters and Special characters are not allowed!</mat-error>\n\n                                    </mat-form-field>\n                                  </div>\n                                  <div>\n                                \n                                  \n                         </div>\n                         <!-- <button type=\"button\" class=\"btn btn-outline-primary mb-2 mr-2\" (click)=\"openWindowCustomClass(content)\">Modal with window custom class</button> -->\n\n                         <div>\n                          <div *ngIf=\"saveInProgress\">\n                            <div class=\"loader\"><span></span></div><br>\n                            <!-- <p>Registering...</p> -->\n                          </div>\n                          <mat-card-actions *ngIf=\"!saveInProgress\">\n                            <div *ngIf=\"usrEx\" class=\"alert alert-danger\">\n                              The username already exists!\n                          </div>\n                            <button mat-raised-button color=\"primary\" type=\"button\" routerLink=\"/login\" >Cancel</button>\n                               <button mat-raised-button color=\"primary\" *ngIf=\"!isStudent\" [disabled]='(!userForm.valid )' type =\"submit\">REGISTER</button>\n                               <button mat-raised-button color=\"primary\" *ngIf=\"isStudent\" [disabled]='Username.value==\"\" || Password.value==\"\"|| Name.value==\"\"|| Surname.value==\"\"|| Email.value==\"\"|| PhoneNo.value==\"\"|| Nationality.value==\"\"|| DOB.value==\"\" || IsStudent.value==\"\"||Residental.value==\"\"||Postal.value==\"\" || ( PassportNo.value==\"\" && ((userForm.controls[\"IdNo\"].errors?.minlength || IdNo.value==\"\")  || (userForm.controls[\"IdNo\"].errors?.pattern || IdNo.value==\"\") ))' type =\"button\" \n                               (click)=\"AddStudent(Username.value)\">REGISTER </button>\n                              </mat-card-actions>\n                              <!-- (click)=\"addStudent(Username.value,Password.value,Name.value,Surname.value,Email.value,PhoneNo.value,Nationality.value,PassportNo.value,DOB.value,IsStudent.value,Residental.value,Postal.value)\" -->\n\n                         </div>  \n                     \n                      \n\n\n\n\n                         <button id=\"openModalButton\" [hidden]=\"true\" data-toggle=\"modal\" data-target=\"#adduser\">Open Modal</button>\n                     \n               </mat-card-content>\n              </form>\n            </mat-card>\n           </mat-card-content>  \n         </mat-card>  \n\n\n               \n\n               </mat-sidenav-content>\n             </mat-sidenav-container>\n         \n         \n         \n         \n         <!-- /////////////////////////////////////////Area Modals //////////////////////////-->\n         \n         <!-- Add Area modal -->\n         \n  \n         \n         <!-- Modal -->\n         <div class=\"modal fade\" id=\"adduser\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n           <div class=\"modal-dialog\" role=\"document\">\n             <div class=\"modal-content\">\n               <div class=\"modal-header alert-success \">\n                 <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Successful</h3>\n                 <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                   <span aria-hidden=\"true\">&times;</span>\n                 </button>\n               </div>\n               <div class=\"modal-body\">\n                 <div class=\"form-group\">\n                   <label for=\"exampleFormControlInput1\">You have been successfully registered.Go ahead and login!</label>\n                 </div>\n               </div>\n               <div class=\"modal-footer\">\n                 <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\" routerLink=\"/login\">Ok</button>\n               </div>\n             </div>\n           </div>\n         </div>\n\n\n\n        <ng-template #content let-modal>\n          <div class=\"modal-header alert-success\">\n            <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Successfully Registered</h3>\n            <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button> -->\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"form-group\">\n              <label for=\"exampleFormControlInput1\">You have been successfully registered.Go ahead and login!</label>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\"modal.close()\" routerLink=\"/login\" >Ok</button>\n          </div>\n        </ng-template>\n         \n         \n         <!-- Delete Area modal -->\n\n \n\n","import { Component, OnInit } from '@angular/core';\nimport {ViewEncapsulation} from '@angular/core';\nimport { DisplayUser } from 'src/app/Classes/DisplayUser';\nimport {Observable} from 'rxjs/observable';\nimport { HttpHeaders } from '@angular/common/http';\nimport {Router} from '@angular/router'\nimport {HttpClient} from '@angular/common/http';\nimport { FormBuilder, Validators } from '@angular/forms';  \nimport { FormGroup, FormControl } from '@angular/forms';\nimport { UserService } from 'src/app/Services/User.service';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\n\n\ninterface User {\n  value: string;\n  viewValue: string;\n}\n\n\nexport class TableBasicExample {\n  displayedColumns: string[] = [ 'Name', 'Surname','Phone Number','Email','Username'];\n}\n\n@Component({\n  selector: 'app-search-user',\n  templateUrl: './search-user.component.html',\n  styleUrls: ['./search-user.component.css'],\n  encapsulation: ViewEncapsulation.None\n\n})\n\n\n\n  // export class SelectOverviewExample {\n  //   users: User[] = [\n  //     {value: '0', viewValue: 'ID'},\n  //     {value: '1', viewValue: 'Username'},\n  //     {value: '2', viewValue: 'Type'}\n  //   ];\n  // }\nexport class SearchUserComponent implements OnInit {\n\n  searchedKeyword: string;\n\n  constructor(private _Router : Router ,private formbulider: FormBuilder,private userservice:UserService) {  }\n\n  ngOnInit(): void {\n    this.loadAllUsers();\n  }\n\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    //this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n \nallUsers : Observable<DisplayUser[]>;\nUsers : DisplayUser[];\n\nloadAllUsers() {  \n  this.allUsers = this.userservice.getAllUser(); \n\n\n}\n  \n\n}\n","<mat-sidenav-container class=\"example-container\"  >\n  <mat-sidenav mode=\"side\" opened> \n    <img class=\"images\" src=\"./assets/Logo.png\" style=\"width:200px;height:100px;\"/>\n\n    <app-nav></app-nav>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <app-username></app-username>\n        <mat-card>  \n          <mat-toolbar color=\"primary\">  \n            <div class=\"container w-100 row\"  >\n            <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">  \n            Search Users\n           \n             </div>\n\n             \n             <br>\n          \n          \n\n          </div>\n          </mat-toolbar>  \n        <br><br>  \n          <mat-card-content>  \n            \n            <div >\n              <mat-form-field class=\"w-100\">\n                <mat-label>Search</mat-label>\n                 <input matInput  placeholder=\"Search Keyword\">  \n                <mat-icon matSuffix>search</mat-icon>\n              </mat-form-field>\n            \n             </div>\n          \n             <table class=\"mat-elevation-z8 table w-100\" >\n          <thead class=\"thead-dark\">\n              <tr>\n                  <th>Name</th>\n                  <th>Surname</th>\n                  <th>Phone Number</th>\n                  <th>Email</th>\n                  <th>Usertype</th>\n                  <th>Username</th>\n                  <th style=\"text-align: center;\"><mat-icon class=\"icons\" >info</mat-icon></th>\n               \n              </tr>\n          </thead>\n          <tbody>\n                  <tr *ngFor =\"let user of allUsers | async | filter:searchedKeyword\">\n                    <td>{{user.Name}}</td>\n                    <td>{{user.Surname}}</td>\n                    <td>{{user.PhoneNo}}</td>\n                    <td>{{user.Email}}</td>\n                    <td>{{user.UserType}}</td>\n                    <td>{{user.Username}}</td>\n\n                </tr>\n             \n           \n          </tbody>\n        </table>\n    \n          </mat-card-content>  \n        </mat-card>  \n\n\n        <br>\n        <br>\n        <br>\n        <br> <br> <br> <br> <br> <br>  \n        <!-- <button type=\"button\" data-toggle=\"modal\" data-target=\"#editEmployeeTypeModal\" class=\"btn btn-primary\" matTooltip=\"Click Delete Button\"  >View</button>   -->\n\n         \n        \n              </mat-sidenav-content>\n            </mat-sidenav-container>\n        \n\n        \n            <br>\n            <br>\n            <br>\n            <br> <br> <br> <br> <br> <br>\n            <br> <br> <br> <br> <br> <br>\n            <br> <br> <br> <br> <br> <br>\n        \n            <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br>    \n        \n        \n        \n        \n        <!-- /////////////////////////////////////////Area Modals //////////////////////////-->\n        \n        <!-- Add Area modal -->\n        \n        <!-- Modal -->\n        <div class=\"modal fade\" id=\"addAreaModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n          <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header alert-primary \">\n                <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\"></h3>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div class=\"modal-body\">\n                <div class=\"form-group\">\n                  <label for=\"exampleFormControlInput1\">No search results found</label>\n                  <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"\">\n                </div>\n              </div>\n              <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Ok</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Edit Area modal -->\n        \n        <!-- Modal -->\n        <div class=\"modal fade\" id=\"editEmployeeTypeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n          <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header alert-primary \">\n                <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Are your sure you want to deactivate?</h3>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div class=\"modal-body\">\n                <div class=\"form-group\">\n                  <label for=\"exampleFormControlInput1\">Please give a reason for why you want to deactivate</label>\n                  <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"\" value=\"EmployeeType1\">\n                </div>\n              </div>\n              <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">Cancel</button>\n                <button type=\"button\" class=\"btn btn-danger\">Deactivate Account</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        \n        <!-- Delete Area modal -->\n        \n        <!-- Modal -->\n        <div class=\"modal fade\" id=\"deleteEmployeeTypeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n          <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header alert-danger \">\n                <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Search Results</h3>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div class=\"modal-body\">\n               <h2>No search results found</h2>\n              </div>\n              <div class=\"modal-footer \" >\n                <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-danger\">Ok</button>\n              </div>\n            </div>\n          </div>\n        </div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {ViewEncapsulation} from '@angular/core';\nimport { AddUser } from 'src/app/Classes/AddUser';\nimport {Observable} from 'rxjs/observable';\nimport { HttpHeaders } from '@angular/common/http';\nimport {Router} from '@angular/router'\nimport {HttpClient} from '@angular/common/http';\nimport { FormBuilder, Validators } from '@angular/forms';  \nimport { FormGroup, FormControl } from '@angular/forms';\nimport { UserService } from 'src/app/Services/User.service';\nimport { Injectable } from '@angular/core';\nimport { DisplayUser } from 'src/app/Classes/DisplayUser';\nimport { Client } from 'src/app/Classes/Client';\nimport { NgbActiveModal, NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.css']\n})\nexport class UpdateUserComponent implements OnInit {\n  @ViewChild('content') content : any;\n  isStudent: boolean;\n  usrEx: boolean;\n  showNotSA: boolean =true;\n  showSA: boolean =true;\n\n  constructor(private modalService: NgbModal,private _Router : Router ,private formbulider: FormBuilder,private userservice:UserService) { }\n  selection : number = 1;\n  options = [\n    {id : 1, text: \"Yes\", value : true},\n    {id : 2, text: \"No\", value : false},\n  ];\n\n  client  = new AddUser();\n  userForm = new FormGroup({\n    // Name : new FormControl(this.client.Name,[Validators.required, Validators.pattern(\"[A-Za-z ]*\")]),\n    // Surname : new FormControl(this.client.Surname, [Validators.required, Validators.pattern(\"[A-Za-z ]*\")]),\n    // PhoneNo : new FormControl(this.client.PhoneNo, [Validators.required, Validators.pattern(\"[0-9 ]{10}\")]),\n    // Email : new FormControl(this.client.Email, [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]),\n    // PassportNo : new FormControl(this.client.PassportNo, [ Validators.pattern(\"[0-9 ]*\")]),\n    // IdNo : new FormControl(this.client.PassportNo, [ Validators.pattern(\"[0-9 ]*\")]),\n    // Nationality : new FormControl(this.client.Nationality, Validators.required),\n    // DOB : new FormControl(this.client.DOB, Validators.required),\n    // IsStudent : new FormControl(this.client.IsStudent, Validators.required),\n    // Residental :new FormControl(this.client.Residental, Validators.required),\n    // Postal : new FormControl(this.client.Postal, Validators.required),\n    // Employer : new FormControl(this.client.Employer, Validators.required),\n    // Occupation : new FormControl(this.client.Occupation, [Validators.required, Validators.pattern(\"[A-Za-z ]*\")]),\n    // WorkAddress : new FormControl(this.client.WorkAddress, Validators.required),\n    // WorkTel : new FormControl(this.client.WorkTel, [Validators.required, Validators.pattern(\"[0-9 ]*\")]),\n    // GrossSalary : new FormControl(this.client.GrossSalary, [Validators.required, Validators.pattern(\"[0-9 ]*\")]),\n    // ID : new FormControl(this.client.ID, [Validators.required, Validators.pattern(\"[0-9 ]*\")]),\n    Name : new FormControl(this.client.Name,[Validators.required, Validators.pattern(\"[A-Za-z]*\")],),\n    // Username : new FormControl(this.client.Username,[Validators.required,Validators.pattern(\"^[A-Za-z0-9ñÑáéíóúÁÉÍÓÚ]+$\")]), \n    // Password : new FormControl(this.client.Password,[Validators.required,Validators.pattern(\"[^ ]+\")]),\n     Surname : new FormControl(this.client.Surname, [Validators.required, Validators.pattern(\"[A-Za-z]*\")]),\n    PhoneNo : new FormControl(this.client.PhoneNo, [Validators.required, Validators.pattern(\"[0-9]{10}\"),Validators.maxLength(10),Validators.minLength(10)]),\n    Email : new FormControl(this.client.Email, [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")],), \n    PassportNo : new FormControl(this.client.PassportNo, [ Validators.pattern(\"^[A-Za-z0-9ñÑáéíóúÁÉÍÓÚ]+$\")]),\n    IdNo : new FormControl(this.client.IdNo, [Validators.pattern(\"[0-9]*\"),Validators.maxLength(13),Validators.minLength(1)]),\n    Nationality : new FormControl(this.client.Nationality, Validators.required),\n    DOB : new FormControl(this.client.DOB, Validators.required),\n    IsStudent : new FormControl(this.client.IsStudent, Validators.required),\n    Residental :new FormControl(this.client.Residental, Validators.required),\n    Postal : new FormControl(this.client.Postal, Validators.required),\n    Employer : new FormControl(this.client.Employer, [Validators.required, Validators.pattern(\"[A-Za-z ]*\")]),\n    Occupation : new FormControl(this.client.Occupation, [Validators.required, Validators.pattern(\"[A-Za-z ]*\")]),\n    WorkAddress : new FormControl(this.client.WorkAddress, Validators.required),\n    WorkTel : new FormControl(this.client.WorkTel, [Validators.required, Validators.pattern(\"[0-9]*\"),Validators.maxLength(10),Validators.minLength(10)]),\n    GrossSalary : new FormControl(this.client.GrossSalary, [Validators.required, Validators.pattern(\"[0-9]*\")]),\n\n  })\n\n  CurrentUser = \"\";\n   ID : number;\n  ngOnInit(): void {\n   \n     this.ID = parseInt(window.sessionStorage.getItem(\"userID\"))\n    \n    this.getUser(this.ID);\n\n   \nthis.CurrentUser = window.sessionStorage.getItem('username');\n\n\n  }\n\n  \n  onNationalityChange(value){\n    if(value==\"South African\")\n    {\n      this.showNotSA=true;\nthis.showSA=false;\nthis.userForm.controls['PassportNo'].setValue(null);\n    }\nelse\n{\n  this.showSA=true;\n  this.showNotSA=false;\n  this.userForm.controls['IdNo'].setValue(null);  \n}\n  }\n  onCountryChange(value){ debugger;\n\n if(value==\"true\"){\n\nthis.isStudent=true;\n\n }\n  \n  else{\n    this.isStudent=false;\n  }\n  }\n  getUser(ID : number){\n    this.userservice.getUser(ID).subscribe(\n    (client : Client) => this.editUser(client),\n    (err: any) => console.log(err)\n    ),\n    this.userservice.getUser(ID).subscribe(\n    (client : Client) => this.client = client);\n   \n  }\n\n  editUser(client : Client){debugger;\n\n    if(client.Nationality==\"South African\")\n    {\n      this.showSA=false;\n    \n    }\n    else{\n    \n      this.showNotSA=false;\n    }\n\n    if (client.IsStudent == true)\n    {\n      this.selection = 2\n      this.isStudent=true;\n      Boolean \n    }\n    else{\n      this.selection = 1\n      this.isStudent=false;\n\n    }\n \n    this.userForm.patchValue({\n\n      Name : client.Name,\n      Surname : client.Surname,\n      PhoneNo : client.PhoneNo,\n      Email : client.Email,\n      PassportNo : client.PassportNo,\n      IdNo : client.IdNo,\n      Nationality : client.Nationality,\n      DOB : client.DOB,\n      ID:client.UserID,\n      //IsStudent : this.selection,\n      IsStudent : client.IsStudent,\n      Residental :client.Residental,\n      Postal : client.Postal,\n      Employer : client.Employer,\n      Occupation : client.Occupation,\n      WorkAddress : client.WorkAddress,\n      WorkTel : client.WorkTel,\n      GrossSalary : client.GrossSalary\n      \n    \n    }) \n\n\n}\n\n// OnSubmit(){\n//   this.client = this.userForm.value;\n\n//   this.client.ID = this.ID;\n//   this.userservice.UpdateUserPost(this.client)\n//   document.getElementById(\"openModalButton\").click();\n//   this._Router.navigate(['view-user'])\n\n// }\n\n\nOnSubmit(){\n  this.usrEx = false;\n  \n\n  \n\n \n      this.addStudent();\n    \n    \n  \n}\n\n\napplyFilter(event: Event) {\n  const filterValue = (event.target as HTMLInputElement).value;\n  // this.dataSource.filter = filterValue.trim().toLowerCase();\n}\n\nisEnabled  : boolean = true;\n\n\nopenWindowCustomClass() {\n  this.modalService.open(this.content,{ centered: true });\n}\n\naddStudent(){\n\n \n  this.client = this.userForm.value;\n  this.client.ID = this.ID;\n  debugger;\nthis.userservice.UpdateUserPost(this.client).subscribe(dats=>{\n  sessionStorage.setItem('clientName',this.client.Name);\n  sessionStorage.setItem('clientSurname',this.client.Surname);\n  this._Router.navigate(['view-user']);\n  this.openWindowCustomClass();\n})\n\n\n\n\n//document.getElementById(\"openModalButton\").click();\n\n\n\n\n  // const addStudentClient = this.userForm.value;\n  // this.AddStudent(addStudentClient);\n  // this.userForm.reset();\n\n\n\n}\n\n// AddStudent(addStudentClient:AddUser){\n\n\n\n// }\n\n\nAddStudent() {  \n  this.usrEx = false;\n  \n  \n\n      this.addStudent();\n    \n    \n    \n} \n\n\n\n\n\n\n\n}\n\n","<app-is-logged-in></app-is-logged-in>\n<mat-sidenav-container class=\"example-container\"  >\n  <mat-sidenav mode=\"side\" opened> \n    <app-nav></app-nav>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <app-username></app-username>\n        <mat-card>  \n          <mat-toolbar color=\"primary\">  \n            <div class=\"container w-100 row\"  >\n            <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">  \n             Update Details\n           \n             </div>\n\n             <div text align=\"right\"  class=\"col-6\">\n             \n\n             </div>\n             <br>\n          \n          \n\n          </div>\n          </mat-toolbar>  \n        <br><br>  \n          <mat-card-content>  \n        \n          \n             <mat-card class=\"my-card\">\n              <mat-card-content>\n                <form [formGroup]=\"userForm\" (ngSubmit)=\"OnSubmit()\">\n                  <mat-card-content>\n                    <!-- <div > -->\n                      <!-- <mat-form-field class=\"w-100\">\n                        <mat-label>Username</mat-label>\n                        <input matInput placeholder=\"Username\" #Username type=\"text\" formControlName =\"Username\" >\n                      </mat-form-field> -->\n                      <!-- <mat-error *ngIf=\"Username.hasError('text') && !Username.hasError('required')\">\n                        Please enter a valid email address\n                      </mat-error>\n                      <mat-error *ngIf=\"Username.hasError('required')\">\n                        Username is <strong>required</strong>\n                      </mat-error> -->\n                  \n                   <!-- </div>\n                   <div >\n                    <mat-form-field class=\"w-100\">  \n                        <mat-label>Password</mat-label>\n                        <input matInput type=\"password\" #Password placeholder=\"Password\" formControlName =\"Password\" >\n                      </mat-form-field>\n                   </div> -->\n                   <div>\n                      <mat-form-field class=\"w-100\">\n                          <mat-label>Name</mat-label>\n                          <input matInput placeholder=\"Name\" #Name formControlName =\"Name\">\n                          <mat-error *ngIf=\"userForm.controls['Name'].errors?.required && userForm.controls['Name'].touched \">Name is required</mat-error>\n                          <mat-error *ngIf=\"userForm.controls['Name'].errors?.pattern && userForm.controls['Name'].touched \">Name is not valid. Special characters, numbers or spaces are not allowed!</mat-error>\n\n                        </mat-form-field>\n        \n                     </div>\n                     <div >\n                      <mat-form-field class=\"w-100\">\n                          <mat-label>Surname</mat-label>\n                          <input matInput placeholder=\"Surname\" #Surname formControlName =\"Surname\">\n                          <mat-error *ngIf=\"userForm.controls['Surname'].errors?.required \">Surname is required</mat-error>\n                          <mat-error *ngIf=\"userForm.controls['Surname'].errors?.pattern \">Surname is not valid. Special characters , numbers or spaces are not allowed!</mat-error>\n\n                        </mat-form-field>\n                     </div>\n                     <div >\n                      <mat-form-field class=\"w-100\">\n                          <mat-label>Email</mat-label>\n                          <input matInput type=\"email\" placeholder=\"Email\" #Email formControlName =\"Email\">\n                          <mat-error *ngIf=\"userForm.controls['Email'].errors?.required \">Email is required</mat-error>\n                          <mat-error *ngIf=\"userForm.controls['Email'].errors?.pattern \">Email is not valid!</mat-error>\n\n                        </mat-form-field>\n                     </div>\n                     <div >\n                      <mat-form-field class=\"w-100\">\n                          <mat-label>Phone Number</mat-label>\n                          <input matInput placeholder=\"Phone Number\" maxlength=\"10\" #PhoneNo formControlName =\"PhoneNo\">\n                          <mat-error *ngIf=\"userForm.controls['PhoneNo'].errors?.required \">Phone Number is required</mat-error>\n                          <mat-error *ngIf=\"userForm.controls['PhoneNo'].errors?.pattern \">Phone Number is not valid! 10 digits are required and Special characters are not allowed</mat-error>\n                       \n                        </mat-form-field>\n                     </div>\n                     <div >\n                      <mat-form-field class=\"w-100\">\n                        <mat-label >Nationality</mat-label>\n                        <select matNativeControl required  #Nationality formControlName =\"Nationality\" (change)= \"onNationalityChange(Nationality.value)\">\n                          <option value=\"South African\">South African</option>\n                          <option value=\"Non-South African\">Non-South African</option>\n                        </select>\n                        <mat-error *ngIf=\"userForm.controls['Nationality'].errors?.required \">Nationality is required</mat-error>\n                        <mat-error *ngIf=\"userForm.controls['Nationality'].errors?.pattern \">Nationality is not valid! </mat-error>\n\n                      </mat-form-field>\n                    </div>\n\n                     <div >\n                      <mat-form-field class=\"w-100\" [hidden]=\"showNotSA\">\n                          <mat-label>Passport No</mat-label>\n                          <input matInput placeholder=\"Passport Number\" #PassportNo  formControlName =\"PassportNo\">\n                          <mat-error *ngIf=\"userForm.controls['PassportNo'].errors?.required \">Passport Number is required</mat-error>\n                          <mat-error *ngIf=\"userForm.controls['PassportNo'].errors?.pattern \">Passport Number is not valid! Special characters, letters and spaces are not allowed!</mat-error>\n\n                        </mat-form-field>\n                      </div>\n                      <div >\n                        <mat-form-field class=\"w-100\" [hidden]=\"showSA\" >\n                            <mat-label>ID Number </mat-label>\n                            <input matInput placeholder=\"ID Number\"   #IdNo maxlength=\"13\" minlength=\"13\" formControlName =\"IdNo\">\n                            <mat-error *ngIf=\" IdNo.length==0 && userForm.controls['IdNo'].pristine \" >ID Number is required </mat-error>\n                            <mat-error *ngIf=\"userForm.controls['IdNo'].errors?.minlength && userForm.controls['IdNo'].dirty\" >ID Number is not valid! 13 digits are required </mat-error>\n                                                                                                                                                                                                                                                                                                          \n                            <mat-error *ngIf=\"userForm.controls['IdNo'].errors?.pattern  && userForm.controls['IdNo'].dirty  \">ID Number is not valid! Special characters, letters and spaces are not allowed!</mat-error>\n\n                          </mat-form-field>\n                        </div>\n                    \n                      <div>\n                  <mat-form-field class=\"w-100\">\n                  <mat-label>Date Of Birth</mat-label>\n                  <input matInput [matDatepicker]=\"picker\" #DOB  formControlName =\"DOB\" readonly>\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                  <mat-datepicker #picker></mat-datepicker>\n                  <mat-error *ngIf=\"userForm.controls['DOB'].errors?.required \">Date of Birth is required</mat-error>\n\n                  </mat-form-field>\n                      </div> \n                        <div>\n                          <mat-form-field class=\"w-100\">\n                              <mat-label >Are You a Student?</mat-label>\n                              <select matNativeControl required  #IsStudent formControlName =\"IsStudent\"  (change)= \"onCountryChange(IsStudent.value)\">\n                                <option value=\"true\">Yes</option>\n                                <option value=\"false\">No</option>\n                              </select>\n                              <mat-error *ngIf=\"userForm.controls['IsStudent'].errors?.required \">This field is required</mat-error>\n\n                            </mat-form-field>\n                        </div>\n                        <div >\n                          <mat-form-field class=\"w-100\">\n                              <mat-label>Residential Address</mat-label>\n                              <input matInput placeholder=\"Residential Address\" #Residental placeholder=\"1158 Burnett St, Hatfield, Pretoria, 0028\"  formControlName =\"Residental\">\n                              <mat-error *ngIf=\"userForm.controls['Residental'].errors?.required \">Residential Address is required</mat-error>\n\n                            </mat-form-field>\n            \n                         </div>\n                         <div >\n                          <mat-form-field class=\"w-100\">\n                              <mat-label>Postal Address</mat-label>\n                              <input matInput placeholder=\"Postal Address\" #Postal formControlName =\"Postal\">\n                              <mat-error *ngIf=\"userForm.controls['Postal'].errors?.required \">Postal Address is required</mat-error>\n\n                            </mat-form-field>\n            \n                         </div>\n                        \n                         <div *ngIf=\"!isStudent\">\n                          <mat-form-field class=\"w-100\">\n                              <mat-label>Name of Employer</mat-label>\n                              <input matInput placeholder=\"Name of Employer\" #Employer  formControlName =\"Employer\">\n                              <mat-error *ngIf=\"userForm.controls['Employer'].errors?.required \">Employer detail is required</mat-error>\n                              <mat-error *ngIf=\"userForm.controls['Employer'].errors?.pattern \">Employer detail is not valid! Special characters are not allowed</mat-error>\n\n                            </mat-form-field>\n            \n                         </div>\n                         <div *ngIf=\"!isStudent\">\n                          <mat-form-field class=\"w-100\">\n                              <mat-label>Occupation</mat-label>\n                              <input matInput placeholder=\"Occupation\" #Occupation  formControlName =\"Occupation\">\n                              <mat-error *ngIf=\"userForm.controls['Occupation'].errors?.required \">Occupation detail is required</mat-error>\n                              <mat-error *ngIf=\"userForm.controls['Occupation'].errors?.pattern \">Occupation is not valid! Special characters are not allowed</mat-error>\n\n                            </mat-form-field>\n            \n                         </div>\n                         <div *ngIf=\"!isStudent\">\n                          <mat-form-field class=\"w-100\">\n                              <mat-label>Work Address</mat-label>\n                              <input matInput placeholder=\"Work Address\" #WorkAddress  formControlName =\"WorkAddress\">\n                              <mat-error *ngIf=\"userForm.controls['WorkAddress'].errors?.required \">Work Address is required</mat-error>\n\n                            </mat-form-field>\n            \n                         </div>\n                         <div *ngIf=\"!isStudent\" >\n                          <mat-form-field class=\"w-100\">\n                              <mat-label>Work Tel.No</mat-label>\n                              <input matInput placeholder=\"Work Tel.No\" maxlength=\"10\"  #WorkTel  formControlName =\"WorkTel\">\n                              <mat-error *ngIf=\"userForm.controls['WorkTel'].errors?.required \">Work Tel.No is required</mat-error>\n                              <mat-error *ngIf=\"userForm.controls['WorkTel'].errors?.pattern \">Work Tel.No is not valid! 10 digits are required and Special characters are not allowed</mat-error>\n\n                            </mat-form-field>\n                          </div>\n                          <div *ngIf=\"!isStudent\">\n                              <mat-form-field class=\"w-100\">\n                                  <mat-label>Gross Salary</mat-label>\n                                  <input matInput placeholder=\"Gross Salary\"   #GrossSalary  formControlName =\"GrossSalary\">\n                                  <mat-error *ngIf=\"userForm.controls['GrossSalary'].errors?.required \">GrossSalary is required</mat-error>\n                                  <mat-error *ngIf=\"userForm.controls['GrossSalary'].errors?.pattern \">GrossSalary is not valid! Spaces, letters and Special characters are not allowed!</mat-error>\n\n                                </mat-form-field>\n                              </div>\n                              <div>\n                            \n                              \n                     </div>\n                     <div>\n                      <mat-card-actions>\n                        <div *ngIf=\"usrEx\" class=\"alert alert-danger\">\n                          The username already exists!\n                      </div>\n                        <button mat-raised-button color=\"primary\" type=\"button\" routerLink=\"/login\" >Cancel</button>\n                           <button mat-raised-button color=\"primary\" *ngIf=\"!isStudent\" [disabled]='(!userForm.valid || ( PassportNo.value==\"\" && ((userForm.controls[\"IdNo\"].errors?.minlength || IdNo.value==\"\")  || (userForm.controls[\"IdNo\"].errors?.pattern || IdNo.value==\"\") )))' type =\"submit\">Update Details</button>\n                           <button mat-raised-button color=\"primary\" *ngIf=\"isStudent\" [disabled]=' Name.value==\"\"|| Surname.value==\"\"|| Email.value==\"\"|| PhoneNo.value==\"\"|| Nationality.value==\"\"|| DOB.value==\"\" || IsStudent.value==\"\"||Residental.value==\"\"||Postal.value==\"\" || ( PassportNo.value==\"\" && ((userForm.controls[\"IdNo\"].errors?.minlength || IdNo.value==\"\")  || (userForm.controls[\"IdNo\"].errors?.pattern || IdNo.value==\"\") ))' type =\"button\" \n                           (click)=\"AddStudent()\">Update Details </button>\n                          </mat-card-actions>\n                          <!-- (click)=\"addStudent(Username.value,Password.value,Name.value,Surname.value,Email.value,PhoneNo.value,Nationality.value,PassportNo.value,DOB.value,IsStudent.value,Residental.value,Postal.value)\" -->\n                      \n                     </div>  \n                     <button id=\"openModalButton\" [hidden]=\"true\" data-toggle=\"modal\" data-target=\"#adduser\">Open Modal</button>\n   \n                  </mat-card-content>\n                 </form> \n                 <button id=\"openModalButton\" [hidden]=\"true\" data-toggle=\"modal\" data-target=\"#update\">Open Modal</button>\n              </mat-card-content>\n           </mat-card>\n          </mat-card-content>  \n        </mat-card>  \n\n\n              \n         \n        \n              </mat-sidenav-content>\n            </mat-sidenav-container>\n        \n        \n        \n \n\n            <ng-template #content let-modal>\n              <div class=\"modal-header alert-success\">\n                <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Details Successfully Updated </h3>\n                <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button> -->\n              </div>\n              <div class=\"modal-body\">\n                <div class=\"form-group\">\n                  <label for=\"exampleFormControlInput1\">Your details have been successfully updated.</label>\n                </div>\n              </div>\n              <div class=\"modal-footer\">\n                <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\"modal.close()\"  >Ok</button>\n              </div>\n            </ng-template>\n        \n        \n        \n        \n        <!-- /////////////////////////////////////////Area Modals //////////////////////////-->\n        \n        <!-- Add Area modal -->\n        \n        <!-- Modal -->\n        \n        <!-- Edit Area modal -->\n        \n        <!-- Modal -->\n        <div class=\"modal fade\" id=\"update\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n          <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header alert-success \">\n                <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Successful</h3>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div class=\"modal-body\">\n                <div class=\"form-group\">\n                  <label for=\"exampleFormControlInput1\">Successfully updated details</label>\n                </div>\n              </div>\n              <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\">Ok</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div id=\"MyModal\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\n          <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header\">\n                <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" data-dismiss=\"modal\" (click)=\"basicModal.hide()\">\n                  <span aria-hidden=\"true\">×</span>\n                </button>\n                <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:rgb(60, 191, 196)\">Update Details Page</h4>\n              </div>\n              <div class=\"modal-body\">\n                <p>This is Update Details Page.</p><br/>\n                <p style=\"color:rgb(60, 191, 196); font-weight: bold\">Here you can select to:</p>\n                <p>-Click UPDATE DETAILS  to update details  </p>\n                <p>-Click CANCEL  to cancel the procces to update details  </p>\n             \n              </div>\n              <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div id=\"MyModal\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\n          <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header\">\n                <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"basicModal.hide()\">\n                  <span aria-hidden=\"true\">×</span>\n                </button>\n                <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:green\">Update user  Page</h4>\n              </div>\n              <div class=\"modal-body\">\n                <div class=\"modal-body\">\n                  <a href=\"https://motlatso-baps.github.io/HelpInturbidus/pages/6268request-to-terminate-rentals-agreement.html\" mat-menu-item>\n                   \n                    <mat-icon class=\"icons\">help_outline</mat-icon>        \n                    Go to Help</a>\n                </div>\n              </div>\n              <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n","import { Component, OnInit } from '@angular/core';\nimport {ViewEncapsulation} from '@angular/core';\nimport { AddUser } from 'src/app/Classes/AddUser';\nimport {Observable} from 'rxjs/observable';\nimport { HttpHeaders } from '@angular/common/http';\nimport {Router} from '@angular/router'\nimport {HttpClient} from '@angular/common/http';\nimport { FormBuilder, Validators } from '@angular/forms';  \nimport { FormGroup, FormControl } from '@angular/forms';\nimport { UserService } from 'src/app/Services/User.service';\nimport { Injectable } from '@angular/core';\nimport { DisplayUser } from 'src/app/Classes/DisplayUser';\nimport { Client } from 'src/app/Classes/Client';\nimport { Deactivate } from 'src/app/Classes/Deactivate';\n\n@Component({\n  selector: 'app-view-user',\n  templateUrl: './view-user.component.html',\n  styleUrls: ['./view-user.component.css']\n})\nexport class ViewUserComponent implements OnInit {\n  isStudent: boolean;\n  verified: any;\n\n  constructor(private _Router : Router ,private formbulider: FormBuilder,private userservice:UserService) { }\n\n  CurrentUser = \"\";\n  ID : number;\n  myClient  = new AddUser();\n  showModalBox: boolean = false;\n  dataSaved = false;    \n  message = null;  \n  AddshowModalBox: boolean = false;\n  deactivate = new Deactivate()\n\n ngOnInit(): void {\n   //window.sessionStorage.setItem(\"UserID\",\"2\");\n   this.ID = parseInt(sessionStorage.getItem(\"userID\"))\n   this.getUser(this.ID);\n\n  this.verified=Boolean(window.sessionStorage.getItem('verified'));\nthis.CurrentUser = window.sessionStorage.getItem('username');\n }\n\n  \n  getUser(ID : number){\n    this.userservice.getUser(ID).subscribe(\n    (client : Client) => this.editUser(client),\n    (err: any) => console.log(err)\n    ),\n\n    this.userservice.getUser(ID).subscribe(client=>{ \n      this.myClient = client\n      this.getdata(this.myClient);})\n    // (client : Client) => this.myClient = client);\n   \n  }\n\n  editUser(client : Client){\n\n    this.myClient.Name = client.Name,\n    this.myClient.Surname = client.Surname,\n    this.myClient.PhoneNo = client.PhoneNo,\n    this.myClient.Email = client.Email,\n    this.myClient.PassportNo = client.PassportNo,\n    this.myClient.Nationality = client.Nationality,\n    this.myClient.DOB = client.DOB,\n    this.myClient.IsStudent = client.IsStudent,\n    this.myClient.Residental =client.Residental,\n    this.myClient.Postal = client.Postal,\n    this.myClient.Employer = client.Employer,\n    this.myClient.Occupation = client.Occupation,\n    this.myClient.WorkAddress = client.WorkAddress,\n    this.myClient.WorkTel = client.WorkTel,\n    this.myClient.GrossSalary = client.GrossSalary\n\n\n}\n\ngetdata(datas){\n   debugger;\n  if(datas.IsStudent==false)\n{\n\nthis.isStudent=false;\n}\nelse{\nthis.isStudent=true;\n\n}\n\n}\n\npublic Addopen() {\n  if(0){\n    // Dont open the modal\n    this.AddshowModalBox = false;\n  } else {\n     // Open the modal\n     this.AddshowModalBox = true;\n  }\n\n}\n\n\npublic open() {\n  if(0){\n    // Dont open the modal\n    this.showModalBox = false;\n  } else {\n     // Open the modal\n     this.showModalBox = true;\n  }\n\n}\n\ndeactivateForm = new FormGroup({\n  Reason : new FormControl('',[Validators.required])\n})\n\nOpen(){\n  document.getElementById(\"openModalButton\").click();\n}\n\nDeactivate()\n{\n\n  this.deactivate.Reason = this.deactivateForm.value.Reason;\n  this.deactivate.UserID = this.ID;\n\nthis.userservice.Deactivate(this.deactivate);\n}\n\n}\n","<app-is-logged-in></app-is-logged-in>\n\n<mat-sidenav-container class=\"example-container\"  >\n    <mat-sidenav mode=\"side\" opened> \n      <app-nav></app-nav>\n    </mat-sidenav>\n    <mat-sidenav-content>\n <app-username></app-username>\n          <mat-card>  \n            <mat-toolbar color=\"primary\">  \n              <div class=\"container w-100 row\"  >\n              <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">  \n               My Account Details\n             \n               </div>\n  \n               <div text align=\"right\"  class=\"col-6\">\n               \n  \n               </div>\n               <br>\n            \n            \n  \n            </div>\n            </mat-toolbar>  \n          <br><br>  \n            <mat-card-content>  \n          \n            \n               <mat-card class=\"my-card\">\n                <h2 style=\"text-align:center\">USER PROFILE</h2>\n\n                    <div class=\"card\">\n                    <h1>{{myClient.Name + ' ' + myClient.Surname}}</h1>\n                    <br> \n                    <label>Name: {{myClient.Name}}</label>\n                    <label>Surname: {{myClient.Surname}}</label>\n                    <label>Phone Number: {{myClient.PhoneNo}}</label>\n                    <label>Email: {{myClient.Email}}</label>\n                    <label *ngIf=\"myClient.PassportNo\">Passport Number: {{myClient.PassportNo}}</label>\n                    <label *ngIf=\"myClient.IdNo\">ID Number: {{myClient.IdNo}}</label>\n                    <label>Nationality: {{myClient.Nationality}}</label>\n                    <label>Date of birth: {{myClient.DOB | date: 'dd/MM/yyyy'}}</label>\n                    <label>Residental Address: {{myClient.Residental}}</label>\n                    <label>Postal Address: {{myClient.Postal}}</label>\n                    <label *ngIf=\"!isStudent\">Employer: {{myClient.Employer}}</label>\n                    <label *ngIf=\"!isStudent\">Occupation: {{myClient.Occupation}}</label>\n                    <label *ngIf=\"!isStudent\">WorkAddress: {{myClient.WorkAddress}}</label>\n                    <label *ngIf=\"!isStudent\">WorkTel: {{myClient.WorkTel}}</label>\n                    <label *ngIf=\"!isStudent\">GrossSalary: R{{myClient.GrossSalary}}</label>\n                    <p><button routerLink = '/update-user' >Update Details</button></p>\n                    <p><button routerLink = '/verify' [hidden]=\"verified\" >Verify Account</button></p>\n                    <p><button (click)=\"Addopen()\"  hidden type=\"button\" data-toggle=\"modal\" data-target=\"#addAreaModal\">Deactivate Account</button></p>\n                    </div>\n                    <button id=\"openModalButton\" [hidden]=\"true\" data-toggle=\"modal\" data-target=\"#update\">Open Modal</button>\n             </mat-card>\n            </mat-card-content>  \n          </mat-card>   \n  \n  \n                \n           \n          \n                </mat-sidenav-content>\n              </mat-sidenav-container>\n          \n\n          \n          \n       \n              <div class=\"modal fade\" id=\"openModalButton\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\" role=\"document\">\n                  <div class=\"modal-content\">\n                    <div class=\"modal-header alert-success \">\n                      <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Successful</h3>\n                      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                      </button>\n                    </div>\n                    <div class=\"modal-body\">\n                      <div class=\"form-group\">\n                        <label for=\"exampleFormControlInput1\">Successfully updated details</label>\n                      </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                      <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\">Ok</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n    \n         <div class=\"modal fade\" *ngIf=\"AddshowModalBox\" id=\"addAreaModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\" role=\"document\">\n                <div class=\"modal-content\">\n                  <form [formGroup]=\"deactivateForm\" (ngSubmit)=\"Deactivate()\"> \n                  <div class=\"modal-header alert-primary \">\n                    <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Deactivate Account</h3>\n                    <button type=\"button\" #closebutton class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                      <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                  </div>\n                  <div class=\"modal-body\">\n                    <div class=\"form-group\">\n                      <label for=\"exampleFormControlInput1\">Reason for deactivating</label>\n                      <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" #Reason placeholder=\"\"  reuired formControlName=\"Reason\" >\n    \n                    </div>\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!deactivateForm.valid\" >Deactivate </button>\n                  </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n            <div id=\"MyModal\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\n              <div class=\"modal-dialog\" role=\"document\">\n                <div class=\"modal-content\">\n                  <div class=\"modal-header\">\n                    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"basicModal.hide()\" data-dismiss=\"modal\">\n                      <span aria-hidden=\"true\">×</span>\n                    </button>\n                    <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:rgb(60, 191, 196)\">My Account Details Page</h4>\n                  </div>\n                  <div class=\"modal-body\">\n                    <p>This My Account Details Page.</p><br/>\n                    <p style=\"color:rgb(60, 191, 196); font-weight: bold\">Here you can select to:</p>\n                    <p>-Click UPDATE DETAILS to navigate to update details page </p>\n                    \n                 \n                  </div>\n                  <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n      \n            <div id=\"MyModal1\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\n              <div class=\"modal-dialog\" role=\"document\">\n                <div class=\"modal-content\">\n                  <div class=\"modal-header\">\n                    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"basicModal.hide()\">\n                      <span aria-hidden=\"true\">×</span>\n                    </button>\n                    <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:green\">View user Page</h4>\n                  </div>\n                  <div class=\"modal-body\">\n                    <div class=\"modal-body\">\n                      <a href=\"https://motlatso-baps.github.io/HelpInturbidus/pages/6251-manage-account.html\" target=\"_blank\" mat-menu-item>\n                       \n                        <mat-icon class=\"icons\">help_outline</mat-icon>        \n                        Go to Help</a>\n                    </div>\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n      \n    ","export class AcceptRentalAgree {\n    CLIENTID:string;\n    PROPERTYID:string;\n    RENTALAPPLICATIONID:string;\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MakePaymentService } from '../make-payment.service';\nimport { BookingService } from '../booking.service';\nimport { FormBuilder } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { AcceptRentalAgree } from 'src/app/accept-rental-agree';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n@Component({\n  selector: 'app-accept-rental-agreement',\n  templateUrl: './accept-rental-agreement.component.html',\n  styleUrls: ['./accept-rental-agreement.component.css']\n})\nexport class AcceptRentalAgreementComponent implements OnInit {\n  @ViewChild('content') content : any;\n  @ViewChild('content1') content1 : any;\n  @ViewChild('content2') content2 : any;\n  allAgreements:any;\n  Checked:boolean;\n  acceptRentalAgree= new AcceptRentalAgree();\n  RENTALAPPLICATIONId: number;\n  searching: boolean;\n  constructor(private modalService: NgbModal,private httpService: HttpClient,private bookingService:BookingService ) { }\n\n  ngOnInit(): void {\n    this.GetAllAgreements();\n    \n  }\n  GetAllAgreements(){\n    // this.RENTALAPPLICATIONId=sessionStorage.getItem('RENTALAPPLICATIONID')\n     this.bookingService.getAgreements(sessionStorage.getItem('RENTALAPPLICATIONID')).toPromise().then(data => {//ClientID\n       this.allAgreements = data; debugger;\n      console.log(data);\n       debugger;\n    });\n}\nSubmit(ph){debugger;\n  this.searching=true;\n  if (this.Checked==true){\n    \n    this.acceptRentalAgree.PROPERTYID=ph;\n    this.acceptRentalAgree.CLIENTID=sessionStorage.getItem('clientID');\n    this.acceptRentalAgree.RENTALAPPLICATIONID=sessionStorage.getItem('RENTALAPPLICATIONID');\n    this.bookingService.addRentalAgreement(this.acceptRentalAgree).subscribe(ss=>{\n      this.searching=false;\n      debugger;\nthis.accept();\n\n    });\n\n  }\n  else{\n\n    this.bookingService.Reject(Number(sessionStorage.getItem('RENTALAPPLICATIONID'))).subscribe(ss=>{\n      this.searching=false;\n    this.reject();\n\n\n    });\n  }\n}\nChangeToTrue(){\n  this.Checked=true;\n}\n\nChangeToFalse(){\n  this.Checked=false;\n}\n\n\n//Call reject modal\nreject() {\n  this.modalService.open(this.content1,{ centered: true });\n} \n//Call accept modal\naccept() {\n  this.modalService.open(this.content,{ centered: true });\n} \n//Call payment modal\npayment() {\n  \n  this.modalService.open(this.content2,{ centered: true });\n\n} \n\n  }","<app-is-logged-in></app-is-logged-in>\n<mat-sidenav-container class=\"example-container\"  >\n    <mat-sidenav mode=\"side\" opened> \n      <app-nav></app-nav>\n    </mat-sidenav>\n    <mat-sidenav-content>\n   <app-username></app-username>\n          <mat-card>  \n            <mat-toolbar color=\"primary\">  \n              <div class=\"container w-100 row\" >\n              <div style=\"color:white; text-align: left;  \" class=\"col-6\">Accept Rental Agreement\n             \n               </div>\n  \n               <div   class=\"col-6\">\n                \n               </div>\n               <br>\n            </div>\n            </mat-toolbar>  \n          <br><br>  \n          <div *ngFor=\"let item of allAgreements\">\n            <mat-card-content>  \n                \n                 \n                 \n                  <h3>This Agreement is made by and between:</h3>\n                  <p>Name  of lessee:{{item.Name}} {{item.Surname}}</p>\n                  <p>Name of lessor:Panashe Chitumba</p>\n                  The Landlord hereby agrees to lease the property located in:{{item.PropertyAddress}}:South Africa\n                  The lease period shall be for term of 1 year and may be renewed/extended\n                  thereafter, on the agreed amount of R {{item.RentalAmount}} to be paid monthly, and the amount of\n                  R {{item.RentalAmount}} to be paid upon the execution of this Agreement.\n                 <h3>Term and Conditions</h3>\n                 <h4> 1. Use of Propery</h4>\n                  The Property leased shall only be used for residential purposes.\n                 <h4> 2. Utilities</h4>\n                  The Tenant agrees to pay for the utilities and other services used in the property on the continuity of the\n                  lease of the Property.\n                  <h4>3. Furnishings</h4>\n                  The leased premises contains the following property furnishings: 8 cubic feet Refrigerator, gas stove,\n                  microwave oven, dishwasher, fully automatic washing machine, telephone. Damages and repairs shall be\n                  borne by the tenant.\n                  <h4>4. Acknowledgment</h4>\n                  The parties hereby acknowledge and understand the terms herein set forth in this Agreement.\n                  <br><br>\n                  <p> Clicking <b>Accept</b> serves as a signature</p>\n                 \n                  <input type=\"hidden\" value=\"{{item.PropertyID}}\">\n                 \n                \n                \n             <div>\n\n                <mat-checkbox (change)=\"ChangeToTrue()\" value=\"Accept\"  [disabled]=\"Do_not_Accept.checked\" #Accept>Accept</mat-checkbox>\n\n                <mat-checkbox (change)=\"ChangeToFalse()\" value=\"Do_not_Accept\" [disabled]=\"Accept.checked\" #Do_not_Accept>Do not Accept</mat-checkbox>\n             </div>\n\n             <div>\n              \n\n                <button (click)=\"Submit(item.PropertyID)\"  [disabled]=\"!Accept.checked && !Do_not_Accept.checked\" mat-raised-button color=\"primary\" >Submit</button>\n               </div>\n              \n            </mat-card-content>  \n\n         \n          </div>\n          </mat-card>  \n  \n                </mat-sidenav-content>\n              </mat-sidenav-container>\n          \n              <div id=\"MyModal\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\" role=\"document\">\n                  <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"basicModal.hide()\">\n                        <span aria-hidden=\"true\">×</span>\n                      </button>\n                      <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:green\">accept rental agreement</h4>\n                    </div>\n                    <div class=\"modal-body\">\n                      <div class=\"modal-body\">\n                        <a href=\"https://motlatso-baps.github.io/HelpInturbidus/index.html?page=6261rental-management.html\" target=\"_blank\" mat-menu-item>\n                         \n                          <mat-icon class=\"icons\">help_outline</mat-icon>        \n                          Go to Help</a>\n                      </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                      <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal1\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n                        \n                           \n               \n              <!-- data-toggle=\"modal\" data-target=\"#editEmployeeTypeModal\" -->\n           <!-- Modal -->\n        <div class=\"modal fade\" id=\"editEmployeeTypeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n          <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header  alert-info\">\n                <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Payment</h3>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div class=\"modal-body\">\n               <p>Do you want to pay now or later? </p>\n             \n              <div class=\"modal-footer\">\n                <button  mat-raised-button color=\"primary\" data-dismiss=\"modal\">Pay Now</button>\n                &nbsp;\n                <button  mat-raised-button color=\"primary\" data-dismiss=\"modal\">Pay Later</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n          \n\n\n\n\n        <!-- If Accepted -->\n        <ng-template #content let-modal>\n          <div class=\"modal-header alert-success\">\n            <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Successfully Accepeted Rental Agreement</h3>\n            <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button> -->\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"form-group\">\n              <label for=\"exampleFormControlInput1\">You have successfully accepted the rental agreement.</label>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\"payment(); modal.close()\"   >Ok</button>\n          </div>\n        </ng-template>\n          \n                \n\n\n\n\n\n        <!-- If rejected -->\n\n        <ng-template #content1 let-modal>\n          <div class=\"modal-header alert-success\">\n            <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Successfully Rejected Rental Agreement</h3>\n            <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button> -->\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"form-group\">\n              <label for=\"exampleFormControlInput1\">You have successfully rejected the rental agreement.Have a good day</label>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\"modal.close()\" routerLink=\"/ApprovedApplicationComponent\" >Ok</button>\n          </div>\n        </ng-template>\n          \n        <!-- Payment Modal -->\n         \n        <ng-template #content2 let-modal>\n          <div class=\"modal-header alert-success\">\n            <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Payment</h3>\n            <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button> -->\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"form-group\">\n              <label for=\"exampleFormControlInput1\">Would you like to pay the deposit now or later?</label>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button  type=\"button\"  ngbAutofocus mat-raised-button color=\"primary\" (click)=\"modal.close()\"  data-dismiss=\"modal\" routerLink=\"/Payment\">Pay Now</button>\n            &nbsp;\n            <button type=\"button\" mat-raised-button color=\"primary\" data-dismiss=\"modal\" (click)=\"modal.close()\" routerLink=\"/ApprovedApplicationComponent\">Pay Later</button>          </div>\n        </ng-template>        \n          \n        <div id=\"MyModal\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\n          <div class=\"modal-dialog\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" data-dismiss=\"modal\" (click)=\"basicModal.hide()\">\n                <span aria-hidden=\"true\">×</span>\n              </button>\n              <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:rgb(60, 191, 196)\">Accept Rental Agreement Page</h4>\n            </div>\n            <div class=\"modal-body\">\n              <p>This is the Accept Rental Agreement Page.</p><br/>\n              <p style=\"color:rgb(60, 191, 196); font-weight: bold\">Here you can select to:</p>\n              <p>-Click ACCEPT to accept rental agreement </p>\n              <p>-Click DO NOT ACCEPT to cancel  rental agreement </p>\n              <p>-Click SUBMIT  to send the selected response</p>\n            \n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n            </div>\n          </div>\n          </div>\n          </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>account works!</p>\n","import { Component, OnInit } from '@angular/core';\r\nimport {ViewEncapsulation} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-agent',\r\n  templateUrl: './agent.component.html',\r\n  styleUrls: ['./agent.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AgentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>agent works!</p>\r\n","import { Injectable } from '@angular/core';\r\nimport { City } from 'src/classes/city';\r\nimport { Area } from 'src/classes/area';\r\nimport { Province } from 'src/classes/province';\r\nimport { EmployeeType } from 'src/classes/employee-type';\r\nimport * as myGlobal  from './Global';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient,HttpHeaders,HttpParams } from '@angular/common/http';\r\nimport { BrowseProperty } from './browse-property';\r\nimport { SearchPropety } from './search-propety';\r\nimport { VerifyOTP } from './verify-otp';\r\nimport { Newpass } from './newpass';\r\nimport { Otp } from './otp';\r\nimport { Payment } from './payment';\r\nimport { Client } from './Classes/Client';\r\n\r\nconst httpOptions ={\r\n  headers:new HttpHeaders({\"Access-Control-Allow-Origin\":'*'})\r\n\r\n}\r\n \r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  ApiUrl= myGlobal.OnlineLink;\r\nmyError:any;\r\n  // ApiUrl='http://localhost:30135/';  \r\n  PropertyID:number=0;\r\n  hasApplied:boolean;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllEmployeeType(): Observable<EmployeeType[]> {  \r\n    return this.http.get<EmployeeType[]>(this.ApiUrl + 'api/Employee/GetEmployeeTypes');  \r\n  }  \r\n\r\n\r\ngetEmployeeTypeById(EmployeeTypeID: string): Observable<EmployeeType> {  \r\n  return this.http.get<EmployeeType>(this.ApiUrl + 'api/Employee/GetEmployeeTypeDetailsById/' + EmployeeTypeID);  \r\n}  \r\n\r\n\r\ncreateEmployeeType(EmployeeType: EmployeeType): Observable<EmployeeType> {  \r\n  const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \r\n  return this.http.post<EmployeeType>(this.ApiUrl + 'api/Employee/InsertEmployeeTypeDetails/',  \r\n  EmployeeType, httpOptions);  \r\n}  \r\n\r\n\r\nupdateEmployeeType(EmployeeType: EmployeeType): Observable<EmployeeType> {  \r\n  debugger;\r\n                   \r\n  const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \r\n  return this.http.put<EmployeeType>(this.ApiUrl + 'api/Employee/UpdateEmployeeTypeDetails/',  \r\n  EmployeeType, httpOptions);  \r\n}  \r\n\r\n\r\n\r\ndeleteEmployeeTypeById(EmployeeTypeID: string): Observable<number> {  \r\n  const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \r\n  return this.http.delete<number>(this.ApiUrl + 'api/Employee/DeleteEmployeeTypeDetails?id=' +EmployeeTypeID,  \r\nhttpOptions);  \r\n}  \r\n\r\n//City||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\r\ngetAllCity(): Observable<City[]> {  \r\n  return this.http.get<City[]>(this.ApiUrl + 'api/Location/GetCities');  \r\n}  \r\n\r\n\r\ngetCityById(CityID: string): Observable<City> {  \r\nreturn this.http.get<City>(this.ApiUrl + 'api/Location/GetCityDetailsById/' + CityID);  \r\n}  \r\n\r\n\r\n\r\n\r\ncreateCity(City: City): Observable<City> {  \r\nconst httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \r\nreturn this.http.post<City>(this.ApiUrl + 'api/Location/InsertCityDetails/',  \r\nCity, httpOptions);  \r\n}  \r\n\r\n\r\nupdateCity(City: City): Observable<City> {  \r\nconst httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \r\nreturn this.http.put<City>(this.ApiUrl + 'api/Location/UpdateCityDetails/',  \r\nCity, httpOptions);  \r\n}  \r\n\r\n\r\n\r\ndeleteCityById(CityID: string): Observable<number> {  \r\nconst httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \r\nreturn this.http.delete<number>(this.ApiUrl + 'api/Location/DeleteCityDetails?id=' +CityID,  \r\nhttpOptions);  \r\n}  \r\n\r\n//Area||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\r\ngetAllArea(): Observable<Area[]> {  \r\n  return this.http.get<Area[]>(this.ApiUrl + 'api/Location/GetAreas');  \r\n}  \r\n\r\n\r\ngetAreaById(AreaID: string): Observable<Area> {  \r\nreturn this.http.get<Area>(this.ApiUrl + 'api/Location/GetAreaDetailsById/' + AreaID);  \r\n}  \r\n\r\n\r\ncreateArea(Area: Area): Observable<Area> {  \r\n  debugger;\r\nconst httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \r\nreturn this.http.post<Area>(this.ApiUrl + 'api/Location/InsertAreaDetails/',  \r\nArea, httpOptions);  \r\n}  \r\n\r\n\r\nupdateArea(Area: Area): Observable<Area> {  \r\nconst httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \r\nreturn this.http.put<Area>(this.ApiUrl + 'api/Location/UpdateAreaDetails/',  \r\nArea, httpOptions);  \r\n}  \r\n\r\n\r\n\r\ndeleteAreaById(AreaID: string): Observable<number> {  \r\nconst httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \r\nreturn this.http.delete<number>(this.ApiUrl + 'api/Location/DeleteAreaDetails?id=' +AreaID,  \r\nhttpOptions);  \r\n}  \r\n\r\n\r\n// //Province||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\r\ngetAllProvince(): Observable<Province[]> {  \r\n  return this.http.get<Province[]>(this.ApiUrl + 'api/Location/GetProvinces');  \r\n}  \r\n\r\n\r\ngetProvinceById(ProvinceID: string): Observable<Province> {  \r\nreturn this.http.get<Province>(this.ApiUrl + 'api/Location/GetProvinceDetailsById/' + ProvinceID);  \r\n}  \r\n\r\n\r\ncreateProvince(Province: Province): Observable<Province> {  \r\nconst httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \r\nreturn this.http.post<Province>(this.ApiUrl + 'api/Location/InsertProvinceDetails/',  \r\nProvince, httpOptions);  \r\n}  \r\n\r\n\r\nupdateProvince(Province: Province): Observable<Province> {  \r\nconst httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \r\nreturn this.http.put<Province>(this.ApiUrl + 'api/Location/UpdateProvinceDetails/',  \r\nProvince, httpOptions);  \r\n}  \r\n\r\n\r\n\r\ndeleteProvinceById(ProvinceID: string): Observable<number> {  \r\nconst httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \r\nreturn this.http.delete<number>(this.ApiUrl + 'api/Location/DeleteProvinceDetails?id=' +ProvinceID,  \r\nhttpOptions);  \r\n}  \r\n\r\n\r\n//Browse property page|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\r\n\r\n// getPropertyByProvince(Province : string){\r\n\r\n//   return this.http.get(this.ApiUrl+'api/Rental/getPropertyByProvince/'+Province);\r\n\r\n// }\r\n\r\ngetPropertyByProvince(browse: SearchPropety): Observable<SearchPropety> {  debugger;\r\n  const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \r\n  return this.http.post<SearchPropety>(this.ApiUrl +'Api/Test/getPropertyByProvince',  \r\n  browse, httpOptions);  \r\n  \r\n}  \r\n\r\n\r\n// getPropertyByArea(Area : string){\r\n\r\n//   return this.http.get(this.ApiUrl+'api/Rental/getPropertyByArea/'+Area);\r\n\r\n// }\r\ngetPropertyByArea(browse: SearchPropety): Observable<SearchPropety> {  debugger;\r\n  const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \r\n  return this.http.post<SearchPropety>(this.ApiUrl + 'Api/Test/getPropertyByArea',  \r\n  browse, httpOptions);  \r\n  \r\n}  \r\n\r\n\r\ngetPropertyByReference(Reference : string){\r\n\r\n  return this.http.get(this.ApiUrl+'api/Rental/getPropertyByReference/'+Reference);\r\n\r\n}\r\n\r\ngetPropertyByReference1(Reference : string){\r\n\r\n  return this.http.get(this.ApiUrl+'api/Rental/getPropertyByReference1/'+Reference);\r\n\r\n}\r\n\r\n// AddPayment(Pay: Payment): Observable<Payment> {  debugger;\r\n//   const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \r\n//   return this.http.post<Payment>(this.ApiUrl + 'Api/MakePayment/AddPayment',  \r\n//   Pay, httpOptions);  \r\n// }  \r\n\r\nAddPayment(ID: number): Observable<any> {  \r\n  const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \r\n  return this.http.post<any>(this.ApiUrl + 'Api/MakePayment/AddPayment/' + ID,   httpOptions);  \r\n}  \r\n\r\n\r\n// deleteComplaint(ComplaintID: number): Observable<Complaint> {\r\n//   const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n//   return this.http.post<Complaint>(this.url + 'DeleteComplaint/' + ComplaintID, httpOptions);\r\n// }\r\n\r\n// getPropertyByCity(City : string){\r\n\r\n//   return this.http.get(this.ApiUrl+'api/Rental/getPropertyByCity/'+City);\r\n\r\n// }\r\n\r\ngetPropertyByCity(browse: SearchPropety): Observable<SearchPropety> {  debugger;\r\n  const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \r\n  return this.http.post<SearchPropety>(this.ApiUrl + 'Api/Test/getPropertyByCity',  \r\n  browse, httpOptions);  \r\n  \r\n}  \r\n  \r\n  //resend OTP via email\r\n  public resendOTP(resendInfo:Otp) {\r\n    return this.http.post(this.ApiUrl+'api/Login/ResendOTP',resendInfo, httpOptions);\r\n  }\r\n\r\n  //request password reset\r\n  public requestPasswordReset(usrn:string) {\r\n    return this.http.post(this.ApiUrl+'api/Login/RequestPasswordReset/'+usrn,usrn, httpOptions);\r\n  }\r\n\r\n  //check enterer OTP for password reset\r\n  public verifyResetOTP(dataX:VerifyOTP) {\r\n    return this.http.post(this.ApiUrl+'api/Login/VerifyResetOTP',dataX, httpOptions);\r\n  }\r\n\r\n  //set new pass\r\n  public setNewPass(pss:Newpass) {\r\n    return this.http.post(this.ApiUrl+'api/Login/SetNewPass',pss, httpOptions);\r\n  }\r\n\r\n  //verify account with OTP\r\n  public verifyWithOTP(otpObj:Otp) {\r\n    return this.http.post(this.ApiUrl+'api/User/VerifyWithOTP',otpObj, httpOptions);\r\n  }\r\n\r\n\r\n  AddCount(PropertyID:number)\r\n  {\r\n    return this.http.get(this.ApiUrl + 'api/Property/AddCount/' + PropertyID);  \r\n\r\n  }\r\n\r\n  checkOTP(ID: number): Observable<Client> {  \r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n      return this.http.get<Client>(this.ApiUrl + 'api/User/check/' + ID,httpOptions);  \r\n    } \r\n  \r\n  // public verifyWithOTP(otpObj:Otp) {\r\n  //     return this.http.post(this.ApiUrl+'api/User/VerifyWithOTP',otpObj, httpOptions);\r\n  //   }\r\n  \r\n  public ResendOTP(otpObj:Otp) {\r\n    return this.http.post(this.ApiUrl+'api/User/ResendOTP',otpObj, httpOptions);\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddUserComponent } from './User/add-user/add-user.component';\r\nimport { UpdateUserComponent } from './User/update-user/update-user.component';\r\nimport { AgentComponent } from './agent/agent.component';\r\nimport { AddAgentComponent } from './Agent/add-agent/add-agent.component';\r\nimport { UpdateAgentComponent } from './Agent/update-agent/update-agent.component';\r\nimport { AssignAgentComponent } from './Agent/assign-agent/assign-agent.component';\r\nimport { SearchUserComponent } from './User/search-user/search-user.component';\r\nimport { SearchAgentComponent } from './Agent/search-agent/search-agent.component';\r\nimport { AddComplaintComponent } from './Complaint/add-complaint/add-complaint.component';\r\n// import { AssignComplaintComponent } from './Complaint/assign-complaint/assign-complaint.component';\r\nimport { SearchComplaintComponent } from './Complaint/search-complaint/search-complaint.component';\r\n// import { AddFeedbackComponent } from './Complaint/add-feedback/add-feedback.component';\r\nimport { LocationComponent } from './location/location.component';\r\nimport { EmployeeTypeComponent } from './employee-type/employee-type.component';\r\nimport { BrowsepropertiesComponent } from './browseproperties/browseproperties.component';\r\nimport { MakePropertyViewingBookingComponent } from './make-property-viewing-booking/make-property-viewing-booking.component';\r\nimport { ViewPropertyComponent } from './view-property/view-property.component';\r\nimport { MakePaymentComponent } from './make-payment/make-payment.component';\r\nimport { AcceptRentalAgreementComponent } from './accept-rental-agreement/accept-rental-agreement.component';\r\nimport { ApprovedApplicationComponent } from './approved-application/approved-application.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ApplyForRentalAgreementComponent } from './apply-for-rental-agreement/apply-for-rental-agreement.component';\r\nimport { RequestToExtendRentalAgreementComponent } from './request-to-extend-rental-agreement/request-to-extend-rental-agreement.component';\r\nimport { RequestToTerminateRentalAgreementComponent } from './request-to-terminate-rental-agreement/request-to-terminate-rental-agreement.component';\r\nimport { RequestMaintenanceJobComponent } from './request-maintenance-job/request-maintenance-job.component';\r\nimport { ViewBookingComponent } from './view-booking/view-booking.component';\r\nimport { ViewUserComponent } from './User/view-user/view-user.component';\r\nimport { UpdateBookingComponent } from './update-booking/update-booking.component';\r\nimport { UpdateComplaintComponent } from './Complaint/update-complaint/update-complaint.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\nimport { NotifyComponent } from './notify/notify.component';\r\nimport { PaymentSuccesfulComponent } from './payment-succesful/payment-succesful.component';\r\nimport { PaymentCancelledComponent } from './payment-cancelled/payment-cancelled.component';\r\nimport { ErrorPageComponent } from './error-page/error-page.component';\r\nimport { VerifyComponent } from './verify/verify.component';\r\nimport { ViewPaymentsComponent } from './view-payments/view-payments.component';\r\nimport { ViewrequestedjobsComponent } from './viewrequestedjobs/viewrequestedjobs.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: BrowsepropertiesComponent},\r\n  { path: 'register', component: AddUserComponent },\r\n  { path: 'update-user', component: UpdateUserComponent },\r\n  { path: 'search-user', component: SearchUserComponent },\r\n  { path: 'view-user', component: ViewUserComponent },\r\n  { path: 'update-agent', component: UpdateAgentComponent },\r\n  { path: 'add-agent', component: AddAgentComponent },\r\n  { path: 'assign-agent', component: AssignAgentComponent },\r\n  { path: 'search-agent', component: SearchAgentComponent },\r\n  { path: 'add-complaint', component: AddComplaintComponent },\r\n  // { path: 'assign-complaint', component: AssignComplaintComponent },\r\n  { path: 'search-complaint', component: SearchComplaintComponent },\r\n  { path: 'update-complaint', component: UpdateComplaintComponent },\r\n  \r\n  // { path: 'add-feedback', component: AddFeedbackComponent },\r\n  { path: 'location', component: LocationComponent },\r\n  { path: 'employeeType', component: EmployeeTypeComponent },\r\n  { path: 'browse', component: BrowsepropertiesComponent },\r\n  { path: 'booking', component: MakePropertyViewingBookingComponent },\r\n  { path: 'PropertyDetails', component: ViewPropertyComponent },\r\n  { path: 'Payment', component: MakePaymentComponent },\r\n  { path: 'AcceptRental', component: AcceptRentalAgreementComponent },\r\n  { path: 'ApprovedApplicationComponent', component: ApprovedApplicationComponent },\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'apply', component: ApplyForRentalAgreementComponent},\r\n  {path: 'RequestToExtendRentalAgreement', component: RequestToExtendRentalAgreementComponent},\r\n  {path: 'RequestToTerminateRentalAgreement', component: RequestToTerminateRentalAgreementComponent},\r\n  { path: 'AcceptRental', component: AcceptRentalAgreementComponent },\r\n  { path: 'ApprovedApplication', component: ApprovedApplicationComponent },\r\n  { path: 'MakeBooking', component: MakePropertyViewingBookingComponent },\r\n  { path: 'RequestMaintenanceJob', component: RequestMaintenanceJobComponent },\r\n  { path: 'UpdateBooking', component: UpdateBookingComponent },\r\n  { path: 'Reset', component: ResetPasswordComponent },\r\n  { path: 'cancel', component: PaymentCancelledComponent },\r\n  { path: 'success', component: PaymentSuccesfulComponent },\r\n  \r\n  { path: 'notify', component: NotifyComponent },\r\n  { path: 'verify', component: VerifyComponent },\r\n  { path: 'Viewrequestedjobs', component: ViewrequestedjobsComponent },\r\n  { path: 'ViewPayments', component: ViewPaymentsComponent },\r\n  \r\n  \r\n  //{ path: 'MonthlyInvoiceReport', component: MonthlyinvoiceReportComponent },\r\n  //{ path: 'MakePayment', component: MakePaymentComponent },\r\n  //{ path: 'ViewFeedback', component: ViewFeedbackComponent },\r\n\r\n  // { path: 'ExpenseReport', component: ExpenseReportComponent },\r\n  // { path: 'MonthlyIncomeReport', component: MonthlyIncomeReportComponent },\r\n  // { path: 'CancelBooking', component: CancelBookingComponent },\r\n  // { path: 'SearchBooking', component: SearchBookingComponent },\r\n\r\n  //{ path: 'RequestMaintenaceJob', component: RequestMaintenanceJobComponent },\r\n\r\n  { path: 'ViewBooking', component: ViewBookingComponent },\r\n  //{ path: 'OverduePaymentReport', component: OverduePaymentReportComponent },\r\n  { path: 'error', component: ErrorPageComponent },\r\n\r\n  \r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AutologoutService } from './autologout.service';\r\n//import {material} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'INF370Project';\r\n  href: any;\r\n\r\n  constructor(  private autoLogout: AutologoutService,\r\n    public http: HttpClient\r\n  ) {}\r\n  // throw new Error('Required'); \r\n  ngOnInit() {\r\n\r\n}\r\n \r\n}\r\n\r\n\r\n","\r\n<!-- <button (click)=\"makeHttpCall()\">Make Http Call</button> -->\r\n\r\n<router-outlet></router-outlet>\r\n<app-my-loader ></app-my-loader>","import { MbscModule } from '@mobiscroll/angular';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport { AddUserComponent } from './User/add-user/add-user.component';\r\nimport { UpdateUserComponent } from './User/update-user/update-user.component';\r\nimport { AgentComponent } from './agent/agent.component';\r\nimport { AddAgentComponent } from './Agent/add-agent/add-agent.component';\r\nimport { UpdateAgentComponent } from './Agent/update-agent/update-agent.component';\r\nimport { AssignAgentComponent } from './Agent/assign-agent/assign-agent.component';\r\nimport { SearchUserComponent } from './User/search-user/search-user.component';\r\nimport { SearchAgentComponent } from './Agent/search-agent/search-agent.component';\r\nimport { AddComplaintComponent } from './Complaint/add-complaint/add-complaint.component';\r\n// import { AssignComplaintComponent } from './Complaint/assign-complaint/assign-complaint.component';\r\nimport { SearchComplaintComponent } from './Complaint/search-complaint/search-complaint.component';\r\n// import { AddFeedbackComponent } from './Complaint/add-feedback/add-feedback.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { FormsModule }   from '@angular/forms';\r\nimport { HttpClientJsonpModule, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { LocationComponent } from './location/location.component';\r\nimport { EmployeeTypeComponent } from './employee-type/employee-type.component';\r\nimport { BrowsepropertiesComponent } from './browseproperties/browseproperties.component';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { MakePropertyViewingBookingComponent } from './make-property-viewing-booking/make-property-viewing-booking.component';\r\nimport { ViewPropertyComponent } from './view-property/view-property.component';\r\nimport { MakePaymentComponent } from './make-payment/make-payment.component';\r\nimport { AcceptRentalAgreementComponent } from './accept-rental-agreement/accept-rental-agreement.component';\r\nimport { ApprovedApplicationComponent } from './approved-application/approved-application.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { AccountComponent } from './account/account.component';\r\nimport { ApplyForRentalAgreementComponent } from './apply-for-rental-agreement/apply-for-rental-agreement.component';\r\nimport { RequestMaintenanceJobComponent } from './request-maintenance-job/request-maintenance-job.component';\r\nimport { ViewFeedbackComponent } from './view-feedback/view-feedback.component';\r\nimport { ViewBookingComponent } from './view-booking/view-booking.component';\r\nimport { SuccessComponent } from './success/success.component';\r\nimport { FailComponent } from './fail/fail.component';\r\n\r\nimport { RequestToExtendRentalAgreementComponent } from './request-to-extend-rental-agreement/request-to-extend-rental-agreement.component';\r\nimport { RequestToTerminateRentalAgreementComponent } from './request-to-terminate-rental-agreement/request-to-terminate-rental-agreement.component';\r\nimport { ViewUserComponent } from './User/view-user/view-user.component';\r\nimport { UsernameComponent } from './username/username.component';\r\nimport { IsLoggedInComponent } from './is-logged-in/is-logged-in.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbActiveModal, NgbModal, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UpdateBookingComponent } from './update-booking/update-booking.component';\r\nimport { UpdateComplaintComponent } from './Complaint/update-complaint/update-complaint.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\nimport { NgImageSliderModule } from 'ng-image-slider';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { NotifyComponent } from './notify/notify.component';\r\nimport { PaymentSuccesfulComponent } from './payment-succesful/payment-succesful.component';\r\nimport { PaymentCancelledComponent } from './payment-cancelled/payment-cancelled.component';\r\nimport { MyLoaderComponent } from './components/my-loader/my-loader.component';\r\nimport { LoaderInterceptor } from './interceptors/loader-interceptor.service';\r\nimport { LoaderService } from './services/loader.service';\r\nimport { ErrorHandlerService } from './interceptors/error-handler.service';\r\nimport { GlobalErrorHandler } from './Services/loader';\r\nimport { ErrorPageComponent } from './error-page/error-page.component';\r\nimport { VerifyComponent } from './verify/verify.component';\r\nimport { ViewPaymentsComponent } from './view-payments/view-payments.component';\r\nimport { ViewrequestedjobsComponent } from './viewrequestedjobs/viewrequestedjobs.component';\r\n\r\n// import { ErrorsHandler } from './Services/loader';\r\n\r\n@NgModule({ \r\n  declarations: [\r\n    AppComponent,\r\n    AddUserComponent,\r\n    UpdateUserComponent,\r\n    AgentComponent,\r\n    AddAgentComponent,\r\n    UpdateAgentComponent,\r\n    AssignAgentComponent,\r\n    SearchUserComponent,\r\n    SearchAgentComponent,\r\n    AddComplaintComponent,\r\n    SearchComplaintComponent,\r\n    UpdateComplaintComponent,\r\n    LocationComponent,\r\n    EmployeeTypeComponent,\r\n    BrowsepropertiesComponent,\r\n    MakePropertyViewingBookingComponent,\r\n    ViewPropertyComponent,\r\n    MakePaymentComponent,\r\n    ApprovedApplicationComponent,\r\n    AcceptRentalAgreementComponent,\r\n    LoginComponent,\r\n    NavComponent,\r\n    AccountComponent,\r\n    ApplyForRentalAgreementComponent,\r\n    RequestMaintenanceJobComponent,\r\n    ViewPropertyComponent,\r\n   \r\n    PaymentSuccesfulComponent,\r\n    PaymentCancelledComponent,\r\n    ApprovedApplicationComponent,\r\n    ViewFeedbackComponent,\r\n    ViewBookingComponent,\r\n    SuccessComponent,\r\n    FailComponent,\r\n    ViewBookingComponent,\r\n    RequestToExtendRentalAgreementComponent,\r\n    RequestToTerminateRentalAgreementComponent,\r\n    ViewUserComponent,\r\n    UsernameComponent,\r\n    IsLoggedInComponent,\r\n    UpdateBookingComponent,\r\n    UpdateComplaintComponent,\r\n    ResetPasswordComponent,\r\n    NotifyComponent,\r\n    MyLoaderComponent,\r\n    ErrorPageComponent  ,VerifyComponent,ViewPaymentsComponent  ,\r\n    ViewrequestedjobsComponent\r\n    \r\n  ],\r\n  imports: [ \r\n    MbscModule,  \r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    Ng2SearchPipeModule,\r\n    CommonModule,\r\n    NgbModule,\r\n    NgImageSliderModule,\r\n    MDBBootstrapModule.forRoot(),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientJsonpModule\r\n\r\n    \r\n  ],\r\n  providers: [ LoaderService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true },   \r\n     {\r\n      provide: ErrorHandler,\r\n      useClass: GlobalErrorHandler}\r\n   ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Application } from '../application';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MyServiceService } from '../my-service.service';\r\nimport { TerminateRService } from '../terminate-r.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport {ApiService} from '../api.service';\r\nimport * as myGlobal  from '../Global';\r\n//import { Date } from 'src/classes/Date';\r\n\r\n//import {NgbModal, ModalDismissReasons} \r\n///import { Date } from 'src/classes/Date';\r\n\r\n@Component({\r\n  selector: 'app-apply-for-rental-agreement',\r\n  templateUrl: './apply-for-rental-agreement.component.html',\r\n  styleUrls: ['./apply-for-rental-agreement.component.css'],\r\n  providers: [DatePipe]\r\n})\r\n\r\nexport class ApplyForRentalAgreementComponent implements OnInit {\r\n\r\n  @ViewChild('modal') modal: any;\r\n  dataSaved = false;\r\n  applicationForm: any;\r\n  allApplications: Observable<Application[]>;\r\n  applicationIdUpdate = null;\r\n  massage = null;\r\n  @ViewChild('resumeInput', { static: false }) resumeInput;\r\n  @ViewChild('logoInput', { static: false }) logoInput;\r\n  @ViewChild('Bursary', { static: false }) Bursary;\r\n  selectedFile: File = null;\r\n  imageUrl: string;\r\n  fileToUpload: File = null;\r\n  saveFileForm: any;\r\n  lstFileDetails: any;\r\n  propertyID: number;\r\n  APPLICATIONDATE=new Date() ;\r\n  clientID: string;\r\n  isStudent: boolean;\r\n  minDate:string;\r\n  showModalBox: boolean;\r\n  noID: boolean=true;\r\n  noPayslip: boolean=true;\r\n  noBursary: boolean=true;\r\n  @ViewChild('content') content : any;\r\n  @ViewChild('content1') content1 : any;\r\n  @ViewChild('content2') content2 : any;\r\n\r\n\r\n  searching: boolean;\r\n  allProperty: any;\r\n  \r\n  constructor(private ApiService:ApiService,private modalService: NgbModal,private httpService: HttpClient ,private formbulider: FormBuilder, private applicationService:MyServiceService,private service:TerminateRService,private router:Router) { }\r\n  CLIENTs: string[];\r\n  ngOnInit() {\r\n    this.loadPropertyDetails();\r\n    this.propertyID=this.applicationService.PropertyID;\r\n    //this.APPLICATIONDATE= Date.now().toString();\r\n    // this.minDate.toLocaleDateString();\r\n    \r\n\r\n    var pipe = new DatePipe('en-ZA'); // Use your own locale\r\n\r\n\r\n    const today = new Date()\r\n    const days = new Date(today)\r\n    var format=days.setDate(days.getDate() + 10)\r\n    \r\n    this.clientID=sessionStorage.getItem('clientID');\r\n    debugger;\r\n    this.httpService.get( myGlobal.OnlineLink+ 'Api/Apply/Apply/'+this.clientID).subscribe(\r\n      (data:any) => {debugger;\r\n        if(data[0]==null)\r\n        {\r\n\r\n\r\n        }\r\n      \r\n     \r\n        this.getdata(data);\r\n       this.CLIENTs = data as unknown as string[];\r\n       console.log(data);\r\n      }, (error: HttpErrorResponse) => {debugger;\r\n        console.log(error.error[\"Message\"]); \r\n        \r\n      }\r\n    );\r\n    this.saveFileForm = this.formbulider.group({\r\n      PREFERREDDATE: ['', [Validators.required]],\r\n      // PAYSLIP: ['', [Validators.required]],\r\n      // BURSARYLETTER: ['', [Validators.required]]\r\n    });\r\n    this.applicationForm = this.formbulider.group({\r\n      APPLICATIONDATE: ['', [Validators.required]],\r\n      PROPERTYID: ['', [Validators.required]],\r\n      CLIENTID: ['', [Validators.required]],\r\n    });\r\n    this.loadAllApplications();\r\n  }\r\n\r\n  loadPropertyDetails(){\r\n\r\n    this.ApiService.getPropertyByReference1(sessionStorage.getItem('PropertyID')).toPromise().then(data => {\r\n      debugger;\r\n      console.log(data);\r\n      this.allProperty = data; \r\n      var pipe = new DatePipe('en-ZA'); // Use your own locale\r\n      const today = new Date()\r\n      const days = new Date(today)\r\n      var datemin=pipe.transform(this.allProperty.AVAILABLEDATE,'yyyy-MM-dd')\r\n      var datetod=pipe.transform(today,'yyyy-MM-dd')\r\n\r\n      if(datemin>datetod)\r\n      {debugger;\r\n\r\n      \r\n\r\n      }\r\nelse{\r\n  var format=days.setDate(days.getDate() + 1)\r\n\r\n  this.minDate =pipe.transform(format,'yyyy-MM-dd');\r\n\r\n\r\n}\r\n      \r\n      debugger;});\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  loadAllApplications() {\r\n    this.allApplications = this.applicationService.getAllApplication();\r\n  }\r\n  getdata(datas){\r\n    \r\n    if(datas[0].isStudent==false)\r\n{debugger\r\n\r\n  this.isStudent=false;\r\n}\r\nelse{\r\n  this.isStudent=true;\r\n\r\n}\r\n\r\n  }\r\n\r\n\r\n  onFormSubmit() {\r\n   \r\n    this.dataSaved = false;\r\n    const application = this.applicationForm.value;\r\n    this.CreateApplication(application);\r\n    this.applicationForm.reset();\r\n  }\r\n  loadApplicationToEdit(applicationId: string) {\r\n    this.applicationService.getApplicationById(applicationId).subscribe(application=> {\r\n      this.massage = null;\r\n      this.dataSaved = false;\r\n      this.applicationIdUpdate = application.RENTALAPPLICATIONID;\r\n      this.applicationForm.controls['APPLICATIONDATE'].setValue(application.APPLICATIONDATE);\r\n\r\n\r\n    });\r\n\r\n  }\r\n  CreateApplication(application: Application) {\r\n    if (this.applicationIdUpdate == null) {\r\n      this.applicationService.createApplication(application).subscribe(\r\n        () => { \r\n          this.dataSaved = true;\r\n          this.massage = 'Record saved Successfully';\r\n          this.loadAllApplications();\r\n          this.applicationIdUpdate = null;\r\n          this.applicationForm.reset();\r\n        }\r\n      );\r\n    } else {\r\n      application.RENTALAPPLICATIONID = this.applicationIdUpdate;\r\n      this.applicationService.updateApplication(application).subscribe(() => {\r\n        this.dataSaved = true;\r\n        this.massage = 'Record Updated Successfully';\r\n        this.loadAllApplications();\r\n        this.applicationIdUpdate = null;\r\n        this.applicationForm.reset();\r\n      });\r\n    }\r\n  }\r\n\r\n  resetForm() {\r\n    this.applicationForm.reset();\r\n    this.massage = null;\r\n    this.dataSaved = false;\r\n  }\r\n  onExpSubmit() {\r\n    this.searching=true;\r\n    debugger;\r\n    // if (this.saveFileForm.invalid) {\r\n    //   return;\r\n    // }\r\n\r\n\r\n    let formData = new FormData();\r\n    if(this.resumeInput.nativeElement.files[0]==null){\r\n \r\n    }\r\n    else{\r\n      formData.append('IDENTITYDOCUMENT', this.resumeInput.nativeElement.files[0]);\r\n    }\r\n\r\n    if(this.logoInput.nativeElement.files[0]==null){\r\n      \r\n\r\n    }\r\n    else{\r\n      formData.append('PAYSLIP', this.logoInput.nativeElement.files[0]);\r\n    }\r\n    if(this.Bursary.nativeElement.files[0]==null){ debugger;\r\n      \r\n    }\r\n      else{\r\n        formData.append('BURSARYLETTER', this.Bursary.nativeElement.files[0]); \r\n       \r\n      }\r\n\r\n\r\n    \r\n    if(this.clientID){ \r\n      formData.append('CLIENTID', this.clientID);\r\n    }\r\n    if(Number(sessionStorage.getItem('PropertyID'))){\r\n      formData.append('PROPERTYID',sessionStorage.getItem('PropertyID'));\r\n    }\r\n    \r\n    formData.append('PREFERREDDATE',this.saveFileForm.value.PREFERREDDATE.toUTCString( ));\r\n    ;\r\n    \r\n    \r\n    \r\n   \r\ndebugger;\r\n\r\n//this.modal.show();\r\n    this.service.AddFileDetails(formData).subscribe(result => {\r\nif(result==\"false\")\r\n{\r\n\r\n  this.exists();\r\n\r\n}\r\nelse if(result==\"active\")\r\n{\r\n\r\n  this.existsAgreement();\r\n\r\n}\r\nelse{\r\n\r\n  this.accept();\r\n\r\n}\r\n      this.searching=false;\r\n    // this.router.navigateByUrl('/');\r\n    });\r\n\r\n  }\r\n\r\n  existsAgreement(){\r\n\r\n    this.modalService.open(this.content2,{ centered: true });\r\n\r\n\r\n  }\r\n  exists(){\r\n\r\n    this.modalService.open(this.content1,{ centered: true });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  bursary(){\r\n\r\n    if(this.Bursary.nativeElement.value==null)\r\n    {\r\n  this.noBursary=true;\r\n  \r\n    }\r\n    else{\r\n\r\n      if(this.Bursary.nativeElement.files[0].size>2097152)\r\n      {\r\n  \r\n        alert(\"Upload files smaller than 2mb\")\r\n        this.Bursary.nativeElement.value=null;\r\n      }\r\n      else{\r\n        this.noBursary=false;\r\n       \r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n  accept() {\r\n    this.modalService.open(this.content,{ centered: true });\r\n  } \r\n\r\n\r\n\r\n  payslip(){\r\n\r\n    \r\n\r\n    if(this.logoInput.nativeElement.value==null)\r\n    {\r\n  this.noPayslip=true;\r\n  \r\n    }\r\n    else{\r\n      if(this.logoInput.nativeElement.files[0].size>2097152)\r\n      {\r\n  \r\n        alert(\"Upload files smaller than 2mb\")\r\n        this.logoInput.nativeElement.value=null;\r\n      }\r\n      else{\r\n        this.noPayslip=false;\r\n       \r\n      }\r\n    }\r\n  \r\n  }\r\n\r\nid(){\r\ndebugger;\r\n  if(this.resumeInput.nativeElement.value==null)\r\n  {\r\nthis.noID=true;\r\n\r\n  }\r\n  else{\r\n    if(this.resumeInput.nativeElement.files[0].size>2097152)\r\n    {\r\n\r\n      alert(\"Upload files smaller than 2mb\")\r\n      this.resumeInput.nativeElement.value=null;\r\n    }\r\n    else{\r\n      this.noID=false;\r\n     \r\n    }\r\n    \r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n  public open() {\r\n\r\n       // Open the modal\r\n       this.showModalBox = true;\r\n  \r\n\r\n  }\r\n  \r\n}\r\n\r\n","<app-is-logged-in></app-is-logged-in>\r\n<mat-sidenav-container class=\"example-container\"  >\r\n    <mat-sidenav mode=\"side\" opened>\r\n      <app-nav></app-nav>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n      <app-username></app-username>\r\n          <mat-card>  \r\n            <mat-toolbar color=\"primary\">  \r\n              <div class=\"container w-100 row\" >\r\n              <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">Apply For Rental Agreement\r\n             \r\n               </div>\r\n  \r\n               <div align=\"right\"  class=\"col-6\">\r\n                \r\n               </div>\r\n               <br>\r\n      </div>\r\n            </mat-toolbar>  \r\n          <br><br>  \r\n            <mat-card-content *ngFor=\"let emp of CLIENTs\">  \r\n              <form [formGroup]=\"saveFileForm\" (ngSubmit)=\"onExpSubmit()\">\r\n              <!-- <div >\r\n                <mat-form-field class=\"w-100\">\r\n                    <mat-label>Name</mat-label>\r\n                    <input matInput placeholder=\"Name\" value=\"{{emp.Name}}\" disabled>\r\n                  </mat-form-field>\r\n  \r\n               </div>\r\n               <div >\r\n                <mat-form-field class=\"w-100\">\r\n                    <mat-label>Surname</mat-label>\r\n                    <input matInput placeholder=\"surname\" value=\"{{emp.Surname}}\" disabled>\r\n                  </mat-form-field>\r\n               </div>\r\n               <div >\r\n                <mat-form-field class=\"w-100\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input matInput placeholder=\"Email\" value=\"{{emp.Email}}\" disabled >\r\n                  </mat-form-field>\r\n               </div>\r\n               <div >\r\n                <mat-form-field class=\"w-100\">\r\n                    <mat-label>Phone Number</mat-label>\r\n                    <input matInput placeholder=\"Phone Number\" value=\"{{emp.PhoneNumber}}\" disabled>\r\n                  </mat-form-field>\r\n               </div>\r\n             \r\n               <div >\r\n                <mat-form-field class=\"w-100\">\r\n                    <mat-label>ID/Passport No</mat-label>\r\n                    <input matInput placeholder=\"ID/Passport No\" value=\"{{emp.IDPassport}}\" disabled>\r\n                  </mat-form-field>\r\n                  <mat-form-field class=\"w-100\">\r\n                    <mat-label >Nationality</mat-label>\r\n                    <select matNativeControl required disabled>\r\n                      <option value=\"\">{{emp.Nationality}}</option>\r\n                      \r\n                    </select>\r\n                  </mat-form-field>\r\n                <div>\r\n            <mat-form-field>\r\n            <mat-label>Date of Birth</mat-label>\r\n            <input matInput placeholder=\"Residential Address\" value=\"{{emp.DateofBirth}}\" disabled>\r\n            </mat-form-field>\r\n                </div>\r\n                  <div>\r\n                    <mat-form-field class=\"w-100\">\r\n                        <mat-label >Are You a Student?</mat-label>\r\n                        <select matNativeControl required disabled>\r\n                          <option value=\"\" ng-model=\"all\">{{emp.isStudent}}</option>\r\n                          \r\n                        </select>\r\n                      </mat-form-field>\r\n                  </div>\r\n                  <div >\r\n                    <mat-form-field class=\"w-100\">\r\n                        <mat-label>Residential Address</mat-label>\r\n                        <input disabled matInput placeholder=\"Residential Address\" value=\"{{emp.ResidentialAddress}}\">\r\n                      </mat-form-field>\r\n      \r\n                   </div>\r\n                   <div >\r\n                    <mat-form-field class=\"w-100\">\r\n                        <mat-label>Postal Address</mat-label>\r\n                        <input disabled matInput placeholder=\"Postal Address\" value=\"{{emp.PostalAddress}}\">\r\n                      </mat-form-field>\r\n      \r\n                   </div>\r\n                   <div  *ngIf=\"!isStudent\">\r\n                    <mat-form-field class=\"w-100\" >\r\n                        <mat-label>Name of Employer</mat-label>\r\n                        <input disabled matInput placeholder=\"Name of Employer\" value=\"{{emp.NameOFEmployer}}\">\r\n                      </mat-form-field>\r\n      \r\n                   </div>\r\n                   <div *ngIf=\"!isStudent\" >\r\n                    <mat-form-field class=\"w-100\">\r\n                        <mat-label>Occupation</mat-label>\r\n                        <input disabled matInput placeholder=\"Occupation\" value=\"{{emp.Occupation}}\">\r\n                      </mat-form-field>\r\n      \r\n                   </div>\r\n                   <div *ngIf=\"!isStudent\">\r\n                    <mat-form-field class=\"w-100\">\r\n                        <mat-label>Work Address</mat-label>\r\n                        <input disabled matInput placeholder=\"Work Address\" value=\"{{emp.WorkAddress}}\">\r\n                      </mat-form-field>\r\n      \r\n                   </div>\r\n                   <div *ngIf=\"!isStudent\">\r\n                    <mat-form-field class=\"w-100\">\r\n                        <mat-label>Work Tel.No</mat-label>\r\n                        <input disabled matInput placeholder=\"Work Tel.No\" value=\"{{emp.WorkTel}}\">\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div *ngIf=\"!isStudent\" >\r\n                        <mat-form-field class=\"w-100\">\r\n                            <mat-label>Gross Salary</mat-label>\r\n                            <input disabled matInput placeholder=\"Gross Salary\" value=\"{{emp.GrossSalary}}\">\r\n                          </mat-form-field>\r\n                        </div>\r\n -->        <div>\r\n  <!-- <mat-label>Rental application for property at <b>{{allProperty.ADDRESS}}</b></mat-label><br><br>\r\n  <mat-label>This property is available from <b>{{allProperty.AVAILABLEDATE |date:'dd MMMM yyyy'}}</b></mat-label>\r\n   -->\r\n  <table class=\"table table-striped text-center \" style=\"table-layout: fixed;width: 100%;\">\r\n    <tbody>\r\n      <tr >\r\n        <td class=\"text-center\" colspan=\"4\">Property Reference No : {{allProperty.PROPERTYID}}</td>\r\n      </tr>\r\n    <tr >\r\n      <td style=\"text-align:right;\">Property Address:</td><td>{{allProperty.ADDRESS}}</td>\r\n     <td style=\"text-align:right;\">Available from :</td><td>{{allProperty.AVAILABLEDATE |date:'dd MMMM yyyy'}}</td>\r\n    </tr> \r\n    <tr >\r\n   <td></td>   <td></td>\r\n   <td></td>\r\n   <td></td>\r\n\r\n    </tr> \r\n   </tbody>\r\n   </table>\r\n</div>\r\n\r\n                        <div>\r\n                \r\n                          <mat-form-field class=\"w-100\">\r\n                              <mat-label>Preferred Rental Start Date</mat-label>\r\n                              <input #PREFERREDDATE formControlName=\"PREFERREDDATE\" matInput [matDatepicker]=\"picker\" [min]=\"minDate\" readonly> \r\n                              <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                              <mat-datepicker #picker></mat-datepicker>\r\n                              <mat-hint></mat-hint>\r\n                              </mat-form-field>\r\n                              <mat-error>  \r\n                                <span *ngIf=\"!applicationForm.get('APPLICATIONDATE').value && applicationForm.get('APPLICATIONDATE').touched\"></span>  \r\n                              </mat-error> \r\n                      </div>\r\n<br>\r\n                        <div>\r\n                  <label>Upload ID *</label>\r\n                <h5>Maximum File Upload Size:2MB</h5>\r\n           \r\n                 \r\n                    <div class=\"file-field\">\r\n                      <div class=\"btn btn-primary btn-sm \">\r\n                     \r\n                        <input type=\"file\"  id=\"identity\"  (change)=\"id()\"   #resumeInput accept=\".doc,.docx,.pdf\">\r\n                      </div>\r\n                 \r\n                    </div>\r\n                    <br>\r\n                  <!-- <input type=\"file\" #resumeInput /> -->\r\n                      </div>\r\n                      <div [hidden]=\"isStudent\">\r\n                        <label>Upload Payslip *</label>\r\n                        <h5 disabled>Maximum File Upload Size:2MB</h5>\r\n                        <div class=\"file-field\">\r\n                          <div class=\"btn btn-primary btn-sm \">\r\n                         \r\n                            <input type=\"file\" (change)=\"payslip()\" #logoInput accept=\".doc,.docx,.pdf\">\r\n                          </div>\r\n                     \r\n                        </div>\r\n                       <br>\r\n                        <!-- <div class=\"custom-file\">\r\n                          <input type=\"file\" class=\"custom-file-input\" #logoInput id=\"customFile\">\r\n                          <label class=\"custom-file-label\" for=\"customFile\">Choose file</label>\r\n                        </div>\r\n                         -->\r\n                      <!-- <input  type=\"file\" #logoInput/> -->\r\n                      </div>\r\n                      <div [hidden]=\"!isStudent\">\r\n                        <label>Upload Proof of Funds * (parent's payslip or letter from bursar)</label>\r\n                        <h5 disabled>Maximum File Upload Size:2MB</h5>\r\n                         \r\n                    <div class=\"file-field\">\r\n                      <div class=\"btn btn-primary btn-sm \">\r\n                     \r\n                        <input type=\"file\" (change)=\"bursary()\" #Bursary accept=\".doc,.docx,.pdf\">\r\n                      </div>\r\n                 \r\n                    </div>\r\n                  \r\n               \r\n                      </div>\r\n      \r\n               <!-- </div> -->\r\n               <div>\r\n                 <br>\r\n                <button [hidden]=\"isStudent\" type=\"submit\" mat-raised-button color=\"primary\"  [disabled]='PREFERREDDATE.value==\"\"|| noID==true ||noPayslip==true'>Apply For Rental Agreement</button>\r\n                <button [hidden]=\"!isStudent\" type=\"submit\" mat-raised-button color=\"primary\"  [disabled]='PREFERREDDATE.value==\"\"|| noID==true ||noBursary==true'>Apply For Rental Agreement</button>\r\n\r\n                &nbsp;\r\n                <button type=\"button\" routerLink=\"/\" mat-raised-button color=\"warn\">Cancel</button>\r\n\r\n               </div>\r\n              </form>  \r\n            </mat-card-content>  \r\n            <div class=\"loader text-center\" *ngIf=\"searching\">\r\n              <div class=\"loader-inner\">\r\n            \r\n                  <!-- Animated Spinner -->\r\n                  <div class=\"lds-roller mb-3\">\r\n                      <div></div>\r\n                      <div></div>\r\n                      <div></div>\r\n                      <div></div>\r\n                      <div></div>\r\n                      <div></div>\r\n                      <div></div>\r\n                      <div></div>\r\n                  </div>\r\n                  \r\n                  <!-- Spinner Description Text [For Demo Purpose]-->\r\n                  <h4 class=\"text-uppercase font-weight-bold\">Sending Rental Application</h4>\r\n            \r\n              </div>\r\n            </div>\r\n          </mat-card>  \r\n  \r\n                </mat-sidenav-content>\r\n              </mat-sidenav-container>\r\n              <div id=\"MyModal\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\r\n                <div class=\"modal-dialog\" role=\"document\">\r\n                  <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" data-dismiss=\"modal\" (click)=\"basicModal.hide()\">\r\n                        <span aria-hidden=\"true\">×</span>\r\n                      </button>\r\n                      <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:rgb(60, 191, 196)\">Rental Application Form Page</h4>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                      <p>Rental Application Form.</p><br/>\r\n                      <p style=\"color:rgb(60, 191, 196); font-weight: bold\">Here you can select to:</p>\r\n                      <p>-Click RENTAL PREFFERED START DATE to choose the rental start date  </p>\r\n                      <p>-Click CHOOSE FILE to upload ID DOCUMENT</p>\r\n                      <p>-Click CHOOSE FILE to upload PROOF OF FUNDS </p>\r\n                     \r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                      <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div id=\"MyModal\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\r\n                <div class=\"modal-dialog\" role=\"document\">\r\n                  <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"basicModal.hide()\">\r\n                        <span aria-hidden=\"true\">×</span>\r\n                      </button>\r\n                      <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:green\">Apply for rental agreement Page</h4>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                      <div class=\"modal-body\">\r\n                        <a href=\"https://motlatso-baps.github.io/HelpInturbidus/pages/6264-apply-for-rental-agreement.html\" mat-menu-item>\r\n                         \r\n                          <mat-icon class=\"icons\">help_outline</mat-icon>        \r\n                          Go to Help</a>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                      <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n        \r\n    \r\n     \r\n        <script>\r\n          var uploadField = document.getElementById(\"identity\");\r\n\r\nuploadField.onchange = function() {\r\n    if(this.files[0].size > 2097152){\r\n       alert(\"File is too big! Upload a document smaller than 2mb\");\r\n       this.value = \"\";\r\n    };\r\n};\r\n          </script>\r\n          \r\n         \r\n          <!-- <div class=\"custom-file mb-3\">\r\n            <input type=\"file\" class=\"custom-file-input\" id=\"customFile\" name=\"filename\">\r\n            <label class=\"custom-file-label\" for=\"customFile\">Choose file</label>\r\n          </div>\r\n\r\n          <div class=\"input-group\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\" id=\"inputGroupFileAddon01\">Upload</span>\r\n            </div>\r\n            <div class=\"custom-file\">\r\n              <input type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile01\"\r\n                aria-describedby=\"inputGroupFileAddon01\">\r\n              <label class=\"custom-file-label\" for=\"inputGroupFile01\">Choose file</label>\r\n            </div>\r\n          </div>\r\n          <form class=\"md-form\">\r\n          <div class=\"input-group mb-3\">\r\n\r\n            <div class=\"custom-file\">\r\n              <input type=\"file\" class=\"custom-file-input\" multiple formControlName=\"importFile\" id=\"importFile\">\r\n                            <label class=\"custom-file-label\" #labelImport for=\"importFile\"><i class=\"fas fa-search\"></i> Choose file</label>\r\n            </div>\r\n          </div>\r\n        </form> -->\r\n\r\n\r\n        <!-- <div id=\"mModal\" class=\"modal d-block\"  #modal  tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h3 id=\"myModalLabel\">Modal header</h3>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>One fine body…</p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button class=\"btn\" data-dismiss=\"modal\" aria-hidden=\"true\">Close</button>\r\n                <button class=\"btn btn-primary\">Save changes</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> -->\r\n\r\n        <div class=\"modal fade\" #modal  id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header alert-success \">\r\n                <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Success</h3>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n               <h2>Successfully applied for rental agreement.  </h2>\r\n               <h2>We will be in touch</h2>\r\n              </div>\r\n              <div class=\"modal-footer \" >\r\n                <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\">Okay</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <ng-template #content let-modal>\r\n          <div class=\"modal-header alert-success\">\r\n            <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Successfully Applied</h3>\r\n            <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button> -->\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleFormControlInput1\">Your application was successfully received.We will be in touch</label>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\"modal.close()\" routerLink=\"/\" >Ok</button>\r\n          </div>\r\n        </ng-template>\r\n\r\n        <ng-template #content1 let-modal>\r\n          <div class=\"modal-header alert-danger\">\r\n            <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Rental Application Exists</h3>\r\n            <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button> -->\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleFormControlInput1\">You have already applied for this property,you will be notified when your application is reviewed.</label>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\"modal.close()\" routerLink=\"/\" >Ok</button>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template #content2 let-modal>\r\n          <div class=\"modal-header alert-danger\">\r\n            <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Rental Agreement Exists</h3>\r\n            <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button> -->\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleFormControlInput1\">You have an active rental agreement for this property.Please contact us on 0123456789 if you would like to extend your agreement.</label>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\"modal.close()\" routerLink=\"/\" >Ok</button>\r\n          </div>\r\n        </ng-template>\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { Booking } from '../booking';\nimport { HttpClient } from '@angular/common/http';\nimport { BookingService } from '../booking.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-approved-application',\n  templateUrl: './approved-application.component.html',\n  styleUrls: ['./approved-application.component.css']\n})\nexport class ApprovedApplicationComponent implements OnInit {\n  allApprovedRentalApplications:any;\n  booking = new Booking();\n  noBoookings: boolean;\n  constructor(private route:Router, private httpService: HttpClient,private bookingService:BookingService) { }  \n  RENTALAPPLICATIONs: string[];  \n  CLIENTs: string[]; \n  PROPERTies: string[];\n  SLOTs: string[];\n  ngOnInit() { \n    this.GetApprovedApplications();\n    // this.httpService.get('http://localhost:30135/Api/AcceptRentalAgreement/ApprovedApplication/').subscribe(  \n    //   data => { this.allApprovedRentalApplications =data;\n    //    this.RENTALAPPLICATIONs = data as string [];  \n    //    this.CLIENTs = data as string []\n    // //    this.PROPERTies = data as string []\n    //   }  \n    // );  \n  }  \n  OnSubmit(RENTALAPPLICATIONID){\n    sessionStorage.setItem('RENTALAPPLICATIONID',RENTALAPPLICATIONID.toString());\n\n    // this.bookingService.RENTALAPPLICATIONID=RENTALAPPLICATIONID;\n    this.route.navigateByUrl('/AcceptRental');\n  \n  }\n  GetApprovedApplications(){\n    this.bookingService.getAgreement(sessionStorage.getItem('clientID')).toPromise().then(data => {\n      this.allApprovedRentalApplications = data; \n      console.log(data);\n\n      this.SLOTs = data as string []\n      if(this.SLOTs.length==0){\n         \n       this.noBoookings=true;\n      }\n      else{\n       this.noBoookings=false;\n      }\n     \n    });\n  }\n  \n}  ","<mat-sidenav-container class=\"example-container\"  >\n    <mat-sidenav mode=\"side\" opened> \n      <app-nav></app-nav>\n  \n  \n    </mat-sidenav>\n    <mat-sidenav-content>\n     <app-username></app-username>\n          <mat-card>  \n            <mat-toolbar color=\"primary\">  \n              <div class=\"container w-100 row\" >\n              <div style=\"color:white; text-align: left;  \" class=\"col-6\">Approved Rental Applications\n             \n               </div>\n  \n               <div   class=\"col-6\">\n                \n               </div>\n               <br>\n            </div>\n            </mat-toolbar>  \n          <br><br>  \n            <mat-card-content *ngIf=\"noBoookings\"> \n                <div>\n                 \n               \n                    <table class=\"mat-elevation-z8 table w-100\" >\n                        <thead class=\"thead-dark\">\n                            <tr>\n              \n                              <th>Application Number</th>\n                              <th>Application Date</th>\n                              <th>Property Reference</th>\n                                <th>Action</th>\n                                \n                                    \n                            </tr>\n                        </thead>\n                        <tbody>\n                                  <tr *ngFor=\"let item of allApprovedRentalApplications\">\n                                    <td>{{item.ApplicationNum}}</td> \n                                    <td>{{item.ApplicationDate |date: 'dd/MM/yyyy'}}</td> \n                                    <td>{{item.PropertyReference}}</td> \n                         <td> <button mat-raised-button color=\"primary\" (click)=\"OnSubmit(item.ApplicationNum)\">Accept Rental Agreement</button></td>\n                                    \n                                </tr>\n                    \n                         \n                        </tbody>\n                      </table> \n                 \n                </div>\n                \n             <div>\n              \n             </div>\n\n             <div>\n               </div>\n              \n            </mat-card-content>  \n            <div *ngIf=\"!noBoookings\" class=\"alert alert-danger\">\n              You currently don't have any approved applications.\n          </div> \n          </mat-card>  \n  \n                </mat-sidenav-content>\n              </mat-sidenav-container>\n                               \n                              <!--HTML for HELP MODAL. Load help message from database-->\n<div id=\"MyModal\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" data-dismiss=\"modal\" (click)=\"basicModal.hide()\">\n          <span aria-hidden=\"true\">×</span>\n        </button>\n        <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:rgb(60, 191, 196)\">Approved Rental Application Page</h4>\n      </div>\n      <div class=\"modal-body\">\n        <p>This Approved Rental Application Page.</p><br/>\n        <p style=\"color:rgb(60, 191, 196); font-weight: bold\">Here you can select to:</p>\n        <p>-Click ACCEPT RENTAL AGREEMENT to navigate to Accept Rental Agreement Page  </p>\n  \n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n      </div>\n    </div>\n  </div>\n</div>\n<!--End of help modal-->      \n<div id=\"MyModal1\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"basicModal.hide()\">\n          <span aria-hidden=\"true\">×</span>\n        </button>\n        <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:green\">Accept Rental Agreement Page</h4>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"modal-body\">\n          <a href=\"https://motlatso-baps.github.io/HelpInturbidus/pages/6265-accept-rental-agreement.html\" target=\"_blank\" mat-menu-item>\n           \n            <mat-icon class=\"icons\">help_outline</mat-icon>        \n            Go to Help</a>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n          \n\n          \n                \n              \n          \n          \n          \n         ","\nimport { Router } from '@angular/router';\nimport { Injectable, NgZone } from '@angular/core';\nimport * as store from 'store-js';\nimport { ApiService } from './api.service';\nimport { APIService } from './Services/api.service.js';\n\n\nconst CHECK_INTERVALL = 15000 // in ms\nconst STORE_KEY = 'lastAction';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AutologoutService {\n\n  MINUTES_UNITL_AUTO_LOGOUT : any;\n\n  errorDisplayed = false;\n  intVar = 0\n  constructor(\n    private api: APIService,\n    private router: Router,\n    private ngZone: NgZone\n  ) {\n    this.api.GetLogOutTime().subscribe( data => {\n      this.MINUTES_UNITL_AUTO_LOGOUT = data[\"Time\"]\n    })\n    this.check();\n    this.initListener();\n    this.initInterval();\n  }\n\n  get lastAction() {\n    return parseInt(store.get(STORE_KEY));\n  }\n  set lastAction(value) {\n    store.set(STORE_KEY, value);\n  }\n\n  initListener() {\n    this.ngZone.runOutsideAngular(() => {\n      document.body.addEventListener('click', () => this.reset());\n      document.body.addEventListener('keypress', () => this.reset());\n      document.body.addEventListener('mousemove', () => this.reset());\n    });\n  }\n\n  initInterval() {\n    this.ngZone.runOutsideAngular(() => {\n      setInterval(() => {\n        this.check();\n      }, CHECK_INTERVALL);\n    })\n  }\n\n  reset() {\n    this.lastAction = Date.now();\n  }\n\n  check() { \n    const now = Date.now();\n    const timeleft = this.lastAction + this.MINUTES_UNITL_AUTO_LOGOUT * 60 * 1000;\n    const diff = timeleft - now;\n    const isTimeout = diff < 0;\n    this.ngZone.run(() => {\n      if (isTimeout && sessionStorage.getItem('clientID')) {\n        console.log(`You were logged out immediately after  ${this.MINUTES_UNITL_AUTO_LOGOUT} minute(s)`);\n        sessionStorage.clear();\n        this.router.navigate(['/login']);\n       // window.alert(`You were logged out immediately after  ${this.MINUTES_UNITL_AUTO_LOGOUT} minute(s)`);\n\n      } \n    });\n  }\n  \n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Booking } from './booking';\nimport {  HttpParams } from '@angular/common/http';\nimport { AcceptRentalAgree } from './accept-rental-agree';\nimport { Reporting } from './reporting';\nimport { map } from 'rxjs/operators';\nimport * as myGlobal  from './Global';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    \"Access-Control-Allow-Origin\": '*'\n  })\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookingService {\n  //ApiUrl='http://localhost:30135/'; \n  ApiUrl= myGlobal.OnlineLink;; \n  \n  // ApiUrl='http://localhost:30135/'; \n  RENTALAPPLICATIONID:number=0; \n  PropertyID:number=0;\n  PreviousEMPLOYEEDATETIMESLOTID:number=0;\n  constructor(public http: HttpClient) { }\n  // public addBooking(prod : Booking) {\n  //   const endpoint = this.ApiUrl+'/AddBooking';\n  //   const formData: FormData = new FormData();\n  //   formData.append('EmployeeDateSlotID', prod.EMPLOYEEDATETIMESLOTID);\n  //   formData.append('ClientID', prod.CLIENTID)\n\n    \n  //  return this.http.post(endpoint, formData, httpOptions);\n  // }\n  addBooking(Booking: Booking): Observable<Booking> {  \n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \n    return this.http.post<Booking>(this.ApiUrl + 'Api/AddBooking/AddBooking',  \n    Booking, httpOptions);  \n  }  \n\n  // addBooking(Booking: Booking): Observable<Booking> {  \n  //   const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \n  //   return this.http.post<Booking>(this.ApiUrl+'Api/AddBooking/AddBooking/',  \n  //   Booking, httpOptions);  \n  // }  \n\n\n  getAgreement(ClientID:string){ debugger;\n    return this.http.get(this.ApiUrl+'Api/AcceptRentalAgreement/ApprovedApplication/'+ClientID); \n  }\n  getAgreements(RentalApplicationID:string){ debugger;\n    return this.http.get(this.ApiUrl+'Api/AcceptRentalAgreement/GetRentalAgreementdetails/'+RentalApplicationID); \n  }\n  addRentalAgreement(acceptRentalAgree: AcceptRentalAgree): Observable<AcceptRentalAgree> {  \n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \n    return this.http.post<AcceptRentalAgree>(this.ApiUrl+'Api/AcceptRentalAgreement/AddRentalAgreement/',  \n    acceptRentalAgree, httpOptions);  \n  } \n  \n  Reject(ID:number){ debugger;\n    return this.http.get(this.ApiUrl+'Api/AcceptRentalAgreement/Reject/'+ID); \n  }\n  // getAgreement(ClientID:string){ debugger;\n  //   return this.http.get(this.ApiUrl+'Api/AcceptRentalAgreement/ApprovedApplication/'+ClientID); \n  // }\n  // getAgreements(RentalApplicationID:string){ debugger;\n  //   return this.http.get(this.ApiUrl+'Api/AcceptRentalAgreement/GetRentalAgreementdetails/'+RentalApplicationID); \n  // }\n  // addRentalAgreement(acceptRentalAgree: AcceptRentalAgree): Observable<AcceptRentalAgree> {  \n  //   const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \n  //   return this.http.post<AcceptRentalAgree>(this.ApiUrl+'Api/AcceptRentalAgreement/AddRentalAgreement/',  \n  //   acceptRentalAgree, httpOptions);  \n  // } \n  \n  \n  DeleteBooking(Booking: Booking): Observable<Booking> {  debugger;\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \n    return this.http.post<Booking>(this.ApiUrl+'Api/AddBooking/DeleteBooking/',  \n    Booking, httpOptions);  \n  }  \n\n  updateBooking(Booking: Booking): Observable<Booking>{\n\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \n    return this.http.post<Booking>(this.ApiUrl+'Api/AddBooking/UpdateBooking/',  \n    Booking, httpOptions);  \n  }\n\n\n  getDateData(date: Reporting): Observable<Reporting> {  \n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \n    return this.http.post<Reporting>(this.ApiUrl+'Api/MonthlyIncomeReport/getData/',  \n    date, httpOptions);  \n  }  \n\n\n\n\n  \n\ngetReportData(date:Reporting):Observable<Reporting>{    \n  return this.http.get<Reporting>(this.ApiUrl+'Api/MonthlyIncomeReport/getData/'+date).pipe(map(result=>result))\n  ;    \n}  \n\n\n}","export class Booking {\n  \n    BOOKINGID:number;\n    EMPLOYEEDATETIMESLOTID:number;\n    CLIENTID:number;\n    PROPERTYID:number;\n    newEMPLOYEEDATETIMESLOTID:number;\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { BrowseProperty } from '../browse-property';\r\nimport { Observable } from 'rxjs';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport {ApiService} from '../api.service';\r\nimport { Route, Router } from '@angular/router';\r\nimport { SearchPropety } from '../search-propety';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DatePipe } from '@angular/common';\r\nimport * as myGlobal  from 'src/app/Global';\r\n\r\n\r\n@Component({\r\n  selector: 'app-browseproperties',\r\n  templateUrl: './browseproperties.component.html',\r\n  styleUrls: ['./browseproperties.component.css']\r\n})\r\nexport class BrowsepropertiesComponent implements OnInit {\r\n  dataSaved = false;  \r\n  searchForm: any; \r\n  // updateEmployeeTypeForm: any; \r\n  // updateEmployeeType:any;\r\n  allProperty:any;  \r\n  product:BrowseProperty[];\r\n  propertyUpdate = null;  \r\n  message = null;  \r\n  showModalBox: boolean = false;\r\n  AddshowModalBox: boolean = false;\r\n  searchedKeyword: string;\r\n\r\n  searchText : string\r\n  SearchBy : any ;\r\n  isLoggedIn = false;\r\n  notLoggedIn = true;\r\n  nodata= false;\r\n  names:any;\r\n  hasApplied:boolean;\r\n  isNotNumber:boolean;\r\n  Property: any;\r\n\r\n  browse= new SearchPropety();\r\n  hideinput: boolean;\r\n  noProperty: boolean;\r\n  searching: boolean;\r\n  selectedOption: string;\r\n  selectedOption1: string;\r\n  selectedOptionMax: string;\r\n  allData: any;\r\n  selectedOptionBed: string;\r\n  Types: any;\r\n  date: string;\r\n  myError:any;\r\n  allCity: any;\r\n  allArea: any;\r\n  searchProvinceText:any;\r\n  searchAreaText: any;\r\n  displayArea: boolean =false;\r\n  selectedArea: string;\r\n  disabledArea: boolean;\r\n  constructor(private httpService: HttpClient,private router: Router,private formbuilderUpdate:FormBuilder,private ApiService:ApiService,private route:Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.GetProvinces();\r\n    this.getTypes();\r\n    const today = new Date();\r\n    var pipe = new DatePipe('en-ZA'); // Use your own locale\r\n    this.date =pipe.transform(today,'yyyy-MM-dd');debugger;\r\n    //Boolean(JSON.parse(\"false\"));\r\n    this.hasApplied=Boolean(JSON.parse(sessionStorage.getItem('hasApplied')));\r\n\r\n    if(sessionStorage.getItem('loggedInStatus')=='true')\r\n    { this.names=sessionStorage.getItem('clientName') +\" \"+ sessionStorage.getItem('clientSurname') ;\r\n      this.isLoggedIn=false;\r\n\r\n    }\r\n    else{\r\n\r\n      this.isLoggedIn=true;\r\n    }\r\n    \r\n    this.selectedOption = '0';\r\n    this.selectedOptionMax = '0';\r\n\r\n    this.selectedOption1 = \"\";\r\n    this.selectedOptionBed = \"0\";\r\n\r\n    this.selectedArea = \"\";\r\n    this.searchForm = this.formbuilderUpdate.group({  \r\n  \r\n  \r\n      SearchBy: ['', [Validators.required]], \r\n      searchText: ['', [Validators.required]], \r\n      searchText1: ['', [Validators.required]], \r\n      searchProvince: ['', [Validators.required]],     \r\n      searchCity: [''],\r\n      SearchByRentMin: [''],\r\n      SearchByRentMax: [''],\r\n      Bedrooms: [''],\r\n      searchArea: [''],\r\n      SearchByType: [''],  \r\n    });\r\n  }\r\n  @ViewChild('SearchByRentMin') SearchByRentMin : any;\r\n  @ViewChild('SearchByRentMax') SearchByRentMax : any;\r\n  @ViewChild('SearchBy') SearchBy1 : any;\r\n  @ViewChild('searchP') searchP : any;\r\n  @ViewChild('searchA') searchA : any;\r\n\r\n\r\n\r\n  validateAmount1(value,value2){debugger;\r\n\r\nif(value>value2 && value2!=\"0\"){\r\n  this.searchForm.controls['SearchByRentMax'].setValue(\"0\");\r\n  this.SearchByRentMax.value=\"0\";\r\n\r\n\r\n\r\n}\r\nelse if(value==value2 && value2!=\"0\"){\r\n  this.searchForm.controls['SearchByRentMax'].setValue(\"0\");\r\n  this.SearchByRentMax.value=\"0\";\r\n\r\n}\r\n\r\n\r\n  }\r\n  validateAmount2(value,value2){debugger;\r\n\r\n    if(value>value2 && value2!=\"0\"){\r\n      this.searchForm.controls['SearchByRentMin'].setValue(\"0\");\r\n      this.SearchByRentMin.value=\"0\";\r\n    \r\n    \r\n    \r\n    }\r\n    else if(value==value2 && value2!=\"0\"){\r\n      this.searchForm.controls['SearchByRentMin'].setValue(\"0\");\r\n      this.SearchByRentMin.value=\"0\";\r\n    \r\n    }\r\n    \r\n    \r\n      }\r\n    \r\n\r\ngetData(){\r\n\r\nthis.allData=\"\";\r\n\r\n}\r\n\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    // this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n   onFormSubmit()\r\n  \r\n  {   debugger;\r\n    this.allProperty=null;\r\n    this.Property = null;\r\n\r\n    this.nodata = false;\r\n    this.isNotNumber = false;\r\n    const search =this.searchForm.value;\r\n    this.browse.minamount=this.searchForm.value.SearchByRentMin;\r\n    this.browse.maxamount=this.searchForm.value.SearchByRentMax;\r\n    // this.browse.searchvalue=this.searchForm.value.searchText;\r\n    this.browse.type=this.searchForm.value.SearchByType;\r\n    this.browse.minbed=this.searchForm.value.Bedrooms;\r\n  if(this.searchForm.value.SearchBy==\"Province\")\r\n    {\r\n   \r\n\r\n    \r\n\r\n  \r\n    if(this.searchForm.value.searchCity==\"\" &&this.searchForm.value.searchArea==\"\")\r\n  {debugger;\r\n    this.searching=true;\r\n    this.browse.searchvalue=this.searchForm.value.searchProvince;\r\n     this.ApiService.getPropertyByProvince(this.browse).subscribe(data => {debugger;\r\n      this.searching=false;\r\n      console.log(data);\r\n      console.log(JSON.stringify(data));\r\n     \r\n      this.getdata(data);\r\n      \r\n    },(error: Error)=>{debugger;\r\n      console.log(error[\"error\"].Message);\r\n      this.myError=error[\"error\"].Message;\r\n\r\n    }\r\n    \r\n    \r\n    );\r\n    \r\n  }\r\n  else if(this.searchForm.value.searchArea!=\"\")\r\n  {this.searching=true;\r\n    this.browse.searchvalue=this.searchForm.value.searchArea;\r\n     this.ApiService.getPropertyByArea(this.browse).toPromise().then(data => {\r\n      \r\n      this.searching=false;\r\n\r\n      console.log(data);\r\n      this.getdata(data);\r\n    });\r\n\r\n  }\r\n  else if(this.searchForm.value.searchCity!=\"\")\r\n  {this.searching=true;\r\n    this.browse.searchvalue=this.searchForm.value.searchCity;\r\n     this.ApiService.getPropertyByCity(this.browse).toPromise().then(data => {\r\n      this.searching=false;\r\n\r\n      this.getdata(data);\r\n    });\r\n\r\n  }\r\n}\r\nelse if(this.searchForm.value.SearchBy==\"Reference\"){\r\n \r\n    if(isNaN(search.searchText1)==false)\r\n    {this.searching=true;\r\n       this.ApiService.getPropertyByReference(search.searchText1).toPromise().then(data => {\r\n        this.searching=false;\r\n\r\n        console.log(data);\r\n        console.log(JSON.stringify(data));\r\n        this.getReferencedata(data);\r\n      });\r\n\r\n    }\r\n    else {\r\nthis.isNotNumber=true;\r\n\r\n    }\r\n  \r\n\r\n  }}\r\n  \r\n  logout(){\r\n\r\n    sessionStorage.clear();\r\n    this.ngOnInit()\r\n  }\r\n\r\n  \r\n\r\n  viewProperty(PropertyID:any)\r\n  {  debugger;\r\n    sessionStorage.setItem('PropertyID',PropertyID);\r\n    this.route.navigateByUrl('/PropertyDetails');\r\n\r\nthis.ApiService.AddCount(PropertyID).subscribe(yu=>{\r\n\r\n  \r\n})\r\n\r\n\r\n  \r\n \r\n\r\n  }\r\n\r\n  getReferencedata(datas){\r\n    debugger;\r\n    if(datas.isValid==\"false\")\r\n    { \r\n     \r\n       this.nodata = true;\r\n    \r\n    }\r\n    \r\n    else if(datas!=null)\r\n    {\r\n       this.Property = datas;\r\n     \r\n      \r\n    }\r\n\r\n  }\r\n\r\n  getTypes(){\r\n\r\n    \r\n      this.httpService.get(myGlobal.OnlineLink +  'Api/Test/GetTypes').subscribe( hh=>{debugger;\r\n    \r\n    this.Types=hh;\r\n    \r\n      })\r\n    \r\n    \r\n    \r\n\r\n\r\n  }\r\n\r\n\r\n  getdata(datas){\r\n debugger;\r\nif(datas[0].isValid==\"false\")\r\n{ \r\n  \r\n   this.nodata = true;\r\n\r\n\r\n}\r\n\r\nelse if(datas!=null)\r\n{\r\n   this.allProperty = datas;\r\n \r\n  \r\n}\r\n\r\n  }\r\n\r\n  getCity(value){debugger;\r\nthis.displayArea=false;\r\n// this.allCity=null;\r\nthis.searchForm.controls['searchCity'].setValue(\"\");\r\nthis.searchForm.controls['searchArea'].setValue(\"\");\r\n    this.httpService.get(myGlobal.OnlineLink + 'Api/Test/GetCities/'+value).subscribe( hh=>{debugger;\r\n  \r\n  this.allCity=hh;\r\n  \r\n    });\r\n  \r\n  \r\n  }\r\n\r\n  getArea(value){debugger;\r\n \r\n    if(value!=\"\"){\r\n\r\n\r\n    this.httpService.get( myGlobal.OnlineLink + 'Api/Test/GetAreas/'+value).subscribe( hh=>{debugger;\r\n    this.displayArea=true;\r\n  this.allArea=hh;\r\n\r\n  if(this.allArea.length==1)\r\n  {\r\nthis.disabledArea=true;\r\n\r\n\r\n  }\r\n  else{\r\n\r\n    this.disabledArea=false;\r\n\r\n\r\n  }\r\n  \r\n    });\r\n  \r\n  }\r\n  }\r\n\r\n\r\n\r\n  GetProvinces(){\r\n  \r\n\r\n  this.httpService.get( myGlobal.OnlineLink + 'Api/Test/GetProvinces').subscribe( hh=>{debugger;\r\n\r\nthis.allData=hh;\r\n\r\n  });\r\n\r\n\r\n}\r\n\r\n  hideInput(searchBy){debugger;\r\n    \r\n   \r\n        if(searchBy==\"Reference\")\r\n    \r\n    {this.allProperty=null;\r\n      this.hideinput=true;\r\n     \r\n    }\r\n    else{this.Property=null;\r\n      this.hideinput=false;\r\n    }\r\n//     if(searchBy==\"Reference\")\r\n    \r\n//     {\r\n//       this.hideinput=true;\r\n     \r\n//     }\r\n// else{\r\n//   this.allData=null;\r\n// if(searchBy==\"City\")\r\n// {this.searchForm.controls['searchText'].setValue(\"\");\r\n\r\n//   this.httpService.get('http://localhost:30135/Api/Test/GetCities').subscribe( hh=>{debugger;\r\n\r\n// this.allData=hh;\r\n\r\n//   })\r\n\r\n\r\n// }\r\n// else if(searchBy==\"Province\")\r\n// {this.searchForm.controls['searchText'].setValue(\"\");\r\n\r\n//   this.httpService.get('http://localhost:30135/Api/Test/GetProvinces').subscribe( hh=>{debugger;\r\n\r\n// this.allData=hh;\r\n\r\n//   })\r\n\r\n\r\n// }\r\n// else if(searchBy==\"Area\")\r\n// {this.searchForm.controls['searchText'].setValue(\"\");\r\n//   this.httpService.get('http://localhost:30135/Api/Test/GetAreas').subscribe( hh=>{debugger;\r\n\r\n// this.allData=hh;\r\n\r\n\r\n//   })\r\n\r\n\r\n// }\r\n\r\n\r\n\r\n//   this.SearchBy1.value=searchBy;\r\n\r\n//   this.hideinput=false;\r\n// }\r\n\r\n\r\n//   }\r\n  \r\n}\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<mat-sidenav-container class=\"example-container\"  >\r\n  <mat-sidenav mode=\"side\" opened  *ngIf=\"!isLoggedIn\"> \r\n    <app-nav></app-nav>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n\r\n \r\n<nav class=\"navbar navbar-expand-lg py-3 navbar-dark shadow-sm navbar-inverse navbar-fixed-top\" style=\"  background-color: #111;  \">\r\n  <div class=\"container\">\r\n    <a  class=\"navbar-brand\" >\r\n      <!-- Logo Image -->\r\n      <img src=\"assets/Logo (2).png\"   class=\"d-inline-block align-middle mr-2\">\r\n      <!-- Logo Text -->\r\n      <span class=\"text-uppercase font-weight-bold\">Inturbidus</span>\r\n    </a>\r\n\r\n    <button type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" class=\"navbar-toggler\"><span class=\"navbar-toggler-icon\"></span></button>\r\n\r\n    <div id=\"navbarSupportedContent\" class=\"collapse navbar-collapse\">\r\n      <ul class=\"navbar-nav ml-auto\">\r\n\r\n        <li class=\"nav-item \" style=\" font-size: 20px; color: gray; \"><a routerLink=\"/login\"  *ngIf=\"isLoggedIn\" class=\"nav-link\">Login <span class=\"sr-only\">(current)</span></a></li>\r\n         <li class=\"nav-item\" style=\" font-size: 20px; color: gray; \"><a *ngIf=\"!isLoggedIn \"  routerLink=\"/view-user\" class=\"nav-link\">{{names}}<mat-icon class=\"icons\">account_circle</mat-icon></a></li>\r\n        \r\n        <li class=\"nav-item\" style=\" font-size: 20px; color: gray; \"><a routerLink=\"/register\"  *ngIf=\"isLoggedIn\" class=\"nav-link\">Register</a></li>\r\n      <li class=\"nav-item\" style=\" font-size: 20px; color: gray; \"><a (click)=\"logout();\"  *ngIf=\"!isLoggedIn \" [hidden]=\"!isLoggedIn\" class=\"nav-link\">Logout</a></li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n        <mat-card>  \r\n\r\n          <mat-toolbar color=\"primary\">  \r\n            <div class=\"container w-100 row\">\r\n              <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">  \r\n                Browse Properties To Rent\r\n               \r\n                </div>\r\n\r\n\r\n\r\n\r\n            \r\n            \r\n\r\n           \r\n             <br>\r\n          \r\n          \r\n\r\n          </div>\r\n          </mat-toolbar>  \r\n        <br><br>  \r\n          <mat-card-content>  \r\n            <form [formGroup]=\"searchForm\" (ngSubmit)=\"onFormSubmit()\"> \r\n            <div >\r\n              \r\n              <div class=\"row\"> \r\n              <div class=\"col-12\">\r\n                <div class=\"row \" >         \r\n   <div class=\"col-md-4 \">\r\n                <mat-form-field class=\"col-md-12 w-100 \" >\r\n                  <mat-label>Search by</mat-label>\r\n                  <mat-select matInput #SearchBy formControlName=\"SearchBy\" (selectionChange)=\"hideInput(SearchBy.value)\">\r\n                    <mat-option #SearchBy  value=\"Province\"> Location</mat-option>              \r\n                    <mat-option #SearchBy  value=\"Reference\">Property Reference No.</mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"searchForm.controls['SearchBy'].errors?.required \">This field is required</mat-error>\r\n\r\n                </mat-form-field>\r\n              </div>\r\n          \r\n              <div class=\"col-md-6\"  [hidden]=\"!hideinput\"  >\r\n                <mat-form-field class=\" col-md w-100\" >\r\n                  <mat-label>Search for Property reference no.</mat-label>\r\n                  <input #searchText1 formControlName=\"searchText1\" matInput  placeholder=\"Search for Property reference no.\">\r\n                  <mat-error *ngIf=\"searchForm.controls['searchText1'].errors?.required \">This field is required</mat-error>\r\n                  <!-- <mat-error *ngIf=\"searchForm.controls['searchText'].errors?.pattern \">This field is not valid! Special characters are not allowed excluding \"-\"</mat-error> -->\r\n            \r\n                  \r\n                </mat-form-field>\r\n              </div>\r\n            \r\n              <div class=\"col-md-2 w-100\">\r\n                    \r\n               \r\n                <div class=\"w-100\">\r\n            \r\n                <button mat-raised-button color=\"primary\" type=\"submit\" [hidden]=\"!hideinput\" [disabled]='searchText1.value==\"\" '>Search</button>\r\n              </div>\r\n              </div>\r\n            \r\n            </div>   \r\n                <div class=\"row \" [hidden]=\"hideinput||SearchBy.empty\"  > \r\n                  <div class=\"col-3  \">\r\n                    <mat-form-field class=\"col-md w-100\"  >\r\n                      <mat-label >Select Province</mat-label>\r\n                     \r\n    \r\n                      <mat-select #searchProvince  formControlName=\"searchProvince\"  (selectionChange)=\"getCity(searchProvince.value)\" >\r\n                        <mat-option  matInput *ngFor=\"let select of allData \" value=\"{{select.ID}}\"  >{{select.Name}} <input hidden #searchP  value=\"{{select.Name}}\" ></mat-option>\r\n       \r\n              \r\n                      </mat-select>\r\n                      <mat-error *ngIf=\"searchForm.controls['searchProvince'].errors?.required \">This field is required</mat-error>\r\n    \r\n                    </mat-form-field>\r\n\r\n\r\n                  </div>\r\n                  <div class=\"col-3\" [hidden]=\"allCity==null\" >\r\n                    <mat-form-field class=\"col-md w-100\">\r\n                      <mat-label >Select a city </mat-label>\r\n                     \r\n    \r\n                      <mat-select #searchCity  formControlName=\"searchCity\" (selectionChange)=\"getArea(searchCity.value)\"  [(ngModel)]=\"selectedArea\"  >\r\n                        <mat-option  matInput *ngFor=\"let select of allCity \" value=\"{{select.ID}}\"  >{{select.Name}} <input hidden #searchA  value=\"{{select.Name}}\" ></mat-option>\r\n                      </mat-select>\r\n                      <mat-error *ngIf=\"searchForm.controls['searchCity'].errors?.required \">This field is required</mat-error>\r\n    \r\n                    </mat-form-field>\r\n\r\n\r\n                  </div>\r\n                  <div class=\"col-3 \" [hidden]=\"!displayArea\" >\r\n                    <mat-form-field class=\"col-md w-100\">\r\n                      <mat-label >Select an area</mat-label>\r\n                     \r\n    \r\n                      <mat-select #searchCity  formControlName=\"searchArea\" [disabled]=\"disabledArea\"  >\r\n                        <mat-option  matInput *ngFor=\"let select of allArea \" value=\"{{select.ID}}\"  >{{select.Name}} </mat-option>\r\n                      </mat-select>\r\n                      <mat-error *ngIf=\"searchForm.controls['searchArea'].errors?.required \">This field is required</mat-error>\r\n    \r\n                    </mat-form-field>\r\n\r\n\r\n                  </div>\r\n           \r\n            \r\n              <div class=\"col-md-3 w-100\">\r\n        \r\n                <div class=\"w-100\">\r\n                <button mat-raised-button color=\"primary\" type=\"submit\" [hidden]=\"hideinput\" [disabled]='searchProvince.empty'>Search</button>\r\n              </div>\r\n                <div class=\"w-100\">\r\n\r\n                <button mat-raised-button color=\"primary\" type=\"submit\" [hidden]=\"!hideinput\" [disabled]='searchText1.value==\"\" '>Search</button>\r\n              </div>\r\n              </div>\r\n              </div>\r\n<!-- <div class=\"row\" [hidden]=\"!hideinput\">\r\n\r\n\r\n\r\n  <div class=\"col-md-6\" >\r\n    <mat-form-field class=\" col-md w-100\" >\r\n      <mat-label>Search for Property reference no.</mat-label>\r\n      <input #searchText1 formControlName=\"searchText1\" matInput  placeholder=\"Search for Property reference no.\">\r\n      <mat-error *ngIf=\"searchForm.controls['searchText1'].errors?.required \">This field is required</mat-error>\r\n\r\n      \r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div class=\"col-md-3 w-100\">\r\n        \r\n    <div class=\"w-100\">\r\n    <button mat-raised-button color=\"primary\" type=\"submit\" [hidden]=\"hideinput\" [disabled]='searchProvince.empty'>Search</button>\r\n  </div>\r\n    <div class=\"w-100\">\r\n\r\n    <button mat-raised-button color=\"primary\" type=\"submit\" [hidden]=\"!hideinput\" [disabled]='searchText1.value==\"\" '>Search</button>\r\n  </div>\r\n  </div>\r\n\r\n</div> -->\r\n\r\n\r\n\r\n\r\n\r\n              <br>\r\n        \r\n              <!-- <p class=\"col-md-8\" >Filters</p> -->\r\n<div class=\"col-md-12\" [hidden]=\"hideinput\">\r\n              <hr ></div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                <mat-form-field [hidden]=\"hideinput\" class=\"col-md-3\">\r\n                  <mat-label>Min Rental Amount</mat-label>\r\n                  <mat-select matInput #SearchByRentMin formControlName=\"SearchByRentMin\"  [(ngModel)]=\"selectedOption\"   (selectionChange)=\"validateAmount1(SearchByRentMin.value,SearchByRentMax.value)\" >\r\n                    <mat-option  value=\"0\" > Any</mat-option>\r\n                    <mat-option  value=\"1000\">R1000</mat-option>\r\n                    <mat-option   value=\"2000\">R2000</mat-option>\r\n                    <mat-option value=\"3000\">R3000</mat-option>\r\n                    <mat-option value=\"4000\">R4000</mat-option>\r\n                    <mat-option value=\"5000\">R5000</mat-option>\r\n                    <mat-option value=\"6000\">R6000</mat-option>\r\n                    <mat-option   value=\"7000\">R7000</mat-option>\r\n                  </mat-select>\r\n                  <!-- <mat-error *ngIf=\"searchForm.controls['SearchByRentMin'].errors?.required \">This field is required</mat-error> -->\r\n\r\n                </mat-form-field>\r\n\r\n                <mat-form-field [hidden]=\"hideinput\" class=\"col-md-3\">\r\n                  <mat-label>Max Rental Amount</mat-label>\r\n                  <mat-select matInput #SearchByRentMax formControlName=\"SearchByRentMax\"  [(ngModel)]=\"selectedOptionMax\"  (selectionChange)=\"validateAmount2(SearchByRentMin.value,SearchByRentMax.value)\">\r\n                    <mat-option  value=\"0\"> Any</mat-option>\r\n                    <mat-option  value=\"1000\"> R1000</mat-option>\r\n                    <mat-option   value=\"2000\">R2000</mat-option>\r\n                    <mat-option value=\"3000\">R3000</mat-option>\r\n                    <mat-option value=\"4000\">R4000</mat-option>\r\n                    <mat-option value=\"5000\">R5000</mat-option>\r\n                    <mat-option value=\"6000\">R6000</mat-option>\r\n                    <mat-option   value=\"7000\">R7000</mat-option>\r\n                  </mat-select>\r\n                  <!-- <mat-error *ngIf=\"searchForm.controls['SearchByRentMax'].errors?.required \">This field is required</mat-error> -->\r\n\r\n                </mat-form-field>\r\n\r\n                <mat-form-field [hidden]=\"hideinput\" class=\"col-md-3\">\r\n                  <mat-label>Property Type</mat-label>\r\n<!-- \r\n                  <mat-select #searchText  formControlName=\"searchText\"  >\r\n                    <mat-option  matInput *ngFor=\"let select of allData \" value=\"{{select.ID}}\"  >{{select.Name}}</mat-option>\r\n    \r\n          \r\n                  </mat-select> -->\r\n                  <mat-select matInput #SearchByType formControlName=\"SearchByType\"  [(ngModel)]=\"selectedOption1\">\r\n                    <mat-option  matInput *ngFor=\"let select of Types \" value=\"{{select.ID}}\"  >{{select.Name}}</mat-option>\r\n\r\n                  \r\n                    <!-- <mat-option #SearchByType value=\"\">Any</mat-option>\r\n                    <mat-option #SearchByType value=\"Apartment\">Apartment</mat-option>\r\n                    <mat-option #SearchByType value=\"Commune\">Commune</mat-option>\r\n                    <mat-option #SearchByType value=\"House\">House</mat-option> -->\r\n                    <!-- <mat-option #SearchByType value=\"Garden\">Garden</mat-option> -->\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"searchForm.controls['SearchByType'].errors?.required \">This field is required</mat-error>\r\n  \r\n                </mat-form-field>\r\n                <mat-form-field [hidden]=\"hideinput\" class=\"col-md-3\">\r\n                  <mat-label>Bedrooms</mat-label>\r\n                  <mat-select matInput #SearchByType formControlName=\"Bedrooms\"  [(ngModel)]=\"selectedOptionBed\">\r\n                    <mat-option #SearchByType value=\"0\">Any</mat-option>\r\n                    <mat-option #SearchByType value=\"1\">1+</mat-option>\r\n                    <mat-option #SearchByType value=\"2\">2+</mat-option>\r\n                    <mat-option #SearchByType value=\"3\">3+</mat-option>\r\n                    <mat-option #SearchByType value=\"4\">4+</mat-option>\r\n                    <mat-option #SearchByType value=\"5\">5+</mat-option>\r\n                    <!-- <mat-option #SearchByType value=\"Garden\">Garden</mat-option> -->\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"searchForm.controls['SearchByType'].errors?.required \">This field is required</mat-error>\r\n  \r\n                </mat-form-field>\r\n              </div>\r\n           \r\n              </div>\r\n<!-- \r\n              <div class=\"col w-100\">\r\n        \r\n                <div class=\"w-100\">\r\n                <button mat-raised-button color=\"primary\" type=\"submit\" [hidden]=\"hideinput\" [disabled]='searchProvince.empty'>Search</button>\r\n              </div>\r\n            \r\n              </div> -->\r\n           \r\n              \r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              </div>\r\n\r\n\r\n\r\n          \r\n             </div>\r\n             </form>\r\n             <!-- <div class=\"control-group span6 container row\">\r\n\r\n              <div class=\"col-md-4\">\r\n                <mat-form-field>\r\n                  <mat-label>Property Type</mat-label>\r\n                  <mat-select>\r\n                    <mat-option value=\"Apartment/Flat\">Apartment/Flat</mat-option>\r\n                    <mat-option value=\"Commune\">Commune</mat-option>\r\n                    <mat-option value=\"Townhouse\">Townhouse</mat-option>\r\n                    <mat-option value=\"Garden\">Garden</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4\">\r\n                <mat-form-field>\r\n                  <mat-label>Rental Amount</mat-label>\r\n                  <mat-select>\r\n                    <mat-option value=\"R 2000\">R 2000</mat-option>\r\n                    <mat-option value=\"R 3000\">R 3000</mat-option>\r\n                    <mat-option value=\"R 4000\">R 4000</mat-option>\r\n                    <mat-option value=\"R 5000\">R 5000</mat-option>\r\n                    <mat-option value=\"R 6000\">R 6000</mat-option>\r\n                    <mat-option value=\"R 7000\">R 7000</mat-option>\r\n                    <mat-option value=\"R 8000\">R 8000</mat-option>\r\n                    <mat-option value=\"R 9000\">R 9000</mat-option>\r\n                    <mat-option value=\"R 10000\">R 10000</mat-option>\r\n                    <mat-option value=\"R 11000\">R 11000</mat-option>\r\n                    <mat-option value=\"R 12000\">R 12000</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-4\">\r\n                <mat-form-field>\r\n                  <mat-label>Bedrooms</mat-label>\r\n                  <mat-select>\r\n                    <mat-option value=\"1+\">1+</mat-option>\r\n                    <mat-option value=\"2+\">2+</mat-option>\r\n                    <mat-option value=\"3+\">3+</mat-option>\r\n                    <mat-option value=\"4+\">4+</mat-option>\r\n                    <mat-option value=\"5+\">5+</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n             </div> -->\r\n             <br><br>\r\n             <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n            \r\n                <div id=\"mdb-lightbox-ui\"></div>\r\n            \r\n\r\n                 \r\n                  \r\n                \r\n            \r\n              </div>\r\n            </div>\r\n        \r\n          \r\n          <!-- <div *ngIf=\"!nodata \"   class=\"mat-elevation-z8  w-100\">\r\n            <figure class=\"col-md-4\"  *ngFor=\"let area of allProperty \">\r\n            \r\n                  <div class=\"container1\">\r\n\r\n                  <img src=\"{{area.PHOTO}}\" class=\"img-thumbnail\" height=\"500\" width=\"500\">    \r\n                  <div class=\"bottom-left\"><button type=\"button\"   readonly class=\"btn btn-primary rounded-0 but\">Available Now</button>\r\n                  </div>\r\n                </div>\r\n                <h3 style=\"color:blue\" class=\"text-left my-3\">R {{area.AMOUNT}} <br> A {{area.NUMBED}}  bedroom  {{area.PROPERTYTYPEID}} located in {{area.AREAID}} <br> Property Reference No: {{area.PROPERTYID}} <br> {{area.ADDRESS}}\r\n          \r\n                </h3>\r\n                <button type=\"button\" class=\"btn btn-info\" data-toggle=\"modal\" data-target=\"#exampleModal\" (click)=\"viewProperty(area.PROPERTYID);\" matTooltip=\"View Property Details\" >View Property</button>  \r\n            \r\n            </figure>\r\n\r\n          </div>   -->\r\n\r\n\r\n          <div class=\"card\" *ngFor=\"let area of allProperty \"  style=\"width: 18rem; margin:0 5px 5px; display:inline-block;\">\r\n            <img class=\"card-img-top\" src=\"{{area.PHOTO}}\" style=\"width:100%; height:200px;\" alt=\"Card image cap\">\r\n            <span  *ngIf=\"date<(area.AVAILABLEDATE |date:'yyyy-MM-dd')\"  class=\"badge badge-success money\">Available From {{area.AVAILABLEDATE |date:'dd MMMM yyyy'}}</span>\r\n            <span *ngIf=\"date>(area.AVAILABLEDATE |date:'yyyy-MM-dd')\" class=\"badge badge-success money\">Available Now </span>\r\n\r\n            <div class=\"card-body\" style=\"padding-bottom:5px; padding-top:10px;\"> \r\n              <table class=\"table table-striped text-center \" style=\"table-layout: fixed;width: 100%;\">\r\n               <tbody>\r\n                <tr >\r\n                  <td class=\"text-center\" colspan=\"4\"><b>Rental Amount: R {{area.AMOUNT}} per month</b></td>\r\n                </tr>\r\n                <tr>\r\n                  <td style=\"text-align:left;\"  colspan=\"4\">A {{area.NUMBED}}  bedroom  {{area.PROPERTYTYPEID}} located in <b>{{area.AREAID}}</b></td>\r\n                </tr>\r\n                <!-- <tr>\r\n                  <td style=\"text-align:left;\"  colspan=\"4\">{{area.ADDRESS}} </td>\r\n                </tr> -->\r\n                 <tr>\r\n                  <td style=\"text-align:left;\"  colspan=\"4\">Property Reference No: <b>{{area.PROPERTYID}}</b></td>\r\n                </tr>\r\n              </tbody>\r\n              </table>\r\n\r\n              \r\n              <p class=\"card-text\" style=\"text-align:right;\">                <button type=\"button\" class=\"btn btn-info\" data-toggle=\"modal\" data-target=\"#exampleModal\" (click)=\"viewProperty(area.PROPERTYID);\" matTooltip=\"View Property Details\" >View Property</button>  \r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"card\" *ngIf=\"!nodata &&Property\"  style=\"width: 18rem; margin:0 5px 5px; display:inline-block;\">\r\n            <img class=\"card-img-top\" src=\"{{Property.PHOTO}}\" style=\"width:100%; height:200px;\" alt=\"Card image cap\">\r\n            <span *ngIf=\"date<(Property.AVAILABLEDATE |date:'yyyy-MM-dd')\" class=\"badge badge-success money\">Available From {{Property.AVAILABLEDATE |date:'dd MMMM yyyy'}} </span>\r\n            <span *ngIf=\"date>(Property.AVAILABLEDATE |date:'yyyy-MM-dd')\" class=\"badge badge-success money\">Available Now </span>\r\n            <div class=\"card-body\" style=\"padding-bottom:5px; padding-top:10px;\"> \r\n              <table class=\"table table-striped text-center \" style=\"table-layout: fixed;width: 100%;\">\r\n               <tbody>\r\n                <tr >\r\n                  <td class=\"text-center\" colspan=\"4\"><b>Rental Amount: R {{Property.AMOUNT}} per month</b></td>\r\n                </tr>\r\n                <tr>\r\n                  <td style=\"text-align:left;\"  colspan=\"4\">A {{Property.NUMBED}}  bedroom  {{Property.PROPERTYTYPEID}} located in <b>{{Property.AREAID}}</b></td>\r\n                </tr>\r\n                <!-- <tr>\r\n                  <td style=\"text-align:left;\"  colspan=\"4\">{{Property.ADDRESS}} </td>\r\n                </tr> -->\r\n                 <tr>\r\n                  <td style=\"text-align:left;\"  colspan=\"4\">Property Reference No: <b>{{Property.PROPERTYID}}</b></td>\r\n                </tr>\r\n              </tbody>\r\n              </table>\r\n\r\n              \r\n              <p class=\"card-text\" style=\"text-align:right;\">                <button type=\"button\" class=\"btn btn-info\" data-toggle=\"modal\" data-target=\"#exampleModal\" (click)=\"viewProperty(Property.PROPERTYID);\" matTooltip=\"View Property Details\" >View Property</button>  \r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <!-- <div *ngIf=\"!nodata &&Property\" class=\"mat-elevation-z8 table w-100\">\r\n            <figure class=\"col-md-4\" >\r\n              \r\n              <img src=\"{{Property.PHOTO}}\" class=\"img-thumbnail\" height=\"500\" width=\"500\">    \r\n              <div class=\"bottom-left\"><button type=\"button\" class=\"btn btn-primary rounded-0\">Primary</button>\r\n              </div>\r\n              \r\n                <h3 style=\"color:blue\" class=\"text-left my-3\">R {{Property.AMOUNT}} <br><br> A {{Property.NUMBED}}  bedroom  {{Property.PROPERTYTYPEID}} located in {{Property.AREAID}} <br> Property Reference No: {{Property.PROPERTYID}} <br> \r\n          <i class=\"fa fa-shower\"></i>  \r\n                  <i class='fas fa-car'></i>\r\n                </h3>\r\n                <button type=\"button\" class=\"btn btn-info\" data-toggle=\"modal\" data-target=\"#exampleModal\" (click)=\"viewProperty(Property.PROPERTYID);\" matTooltip=\"Click Edit Button\" >View Property</button>  \r\n             \r\n            </figure>\r\n\r\n          </div>   -->\r\n            \r\n           \r\n        \r\n        <div *ngIf=\"nodata\" class=\"alert alert-danger\">\r\n          No properties were found!\r\n        </div>\r\n        <div *ngIf=\"isNotNumber\" class=\"alert alert-danger\">\r\n          Please input a number!\r\n        </div>\r\n          </mat-card-content>  \r\n        </mat-card>  \r\n\r\n\r\n\r\n         \r\n        \r\n              </mat-sidenav-content>\r\n            </mat-sidenav-container>\r\n\r\n\r\n         <ng-template #content let-modal>\r\n              <div class=\"modal-header alert-success\">\r\n                <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Error</h3>\r\n                <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button> -->\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"exampleFormControlInput1\">{{myError}}</label>\r\n                </div>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\"modal.close()\" routerLink=\"/\"   >Ok</button>\r\n              </div>\r\n            </ng-template>\r\n              \r\n        \r\n            <!-- <div class=\"row\">\r\n              <div class=\"col-4\">\r\n               <img  src=\"assets/logo.jpg\"  alt=\"\" class=\"d-inline-block align-middle mr-2\">\r\n \r\n \r\n              </div>\r\n              <div class=\"col-8\">\r\n               <nav class=\"navbar  navbar-dark \"  style=\"  background-color: #111;  \">\r\n         \r\n                 <div class=\"container-fluid\">\r\n                   <div class=\"navbar-header\">\r\n                     <a class=\"navbar-brand\" href=\"#\"></a>\r\n                    \r\n                    \r\n                   </div>\r\n              \r\n                    <div align=\"right\"  class=\"col-12\"  style=\"color:white;\">\r\n                      \r\n                     <i class=\"fa fa-user icon\" routerLink=\"login\"> Login</i>\r\n       \r\n                     <i class=\"fa fa-sign-in\" routerLink=\"register\">Register</i> \r\n       \r\n                    </div>\r\n                   <ul class=\"nav navbar-nav navbar-right nav-item nav-link\">\r\n                     <a><li style=\" font-size: 20px; color: gray; \"><img class = 'images'   src=\"assets/logo.jpg\"  align=\"left\"/></li></a>\r\n                   </ul>\r\n                 </div>\r\n               </nav>\r\n              </div>\r\n              </div> -->\r\n\r\n                              <!--HTML for HELP MODAL. Load help message from database-->\r\n<div id=\"MyModal\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" data-dismiss=\"modal\"  (click)=\"basicModal.hide()\">\r\n          <span aria-hidden=\"true\">×</span>\r\n        </button>\r\n        <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:rgb(60, 191, 196)\">Browse Properties Page</h4>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <p>This is the Browse Properties Page.</p><br/>\r\n        <p style=\"color:rgb(60, 191, 196); font-weight: bold;\">Here you can select to:</p>\r\n        <p>-Click SEARCH BY to search by Location or Property Reference </p>\r\n        <p>-Click SELECT PROPERTY TYPE  to choose Property Type</p>\r\n        <p>-Click VIEW PROPERTY  to view Property Details</p>\r\n        <p>-SELECT the filters to filter the properties</p>\r\n        <p>-Click SEARCH  to search for Properties</p>\r\n\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!--End of help modal-->\r\n<div id=\"MyModal1\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n \r\n        <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:green\">Browse properties</h4>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"modal-body\">\r\n          <a href=\"https://motlatso-baps.github.io/HelpInturbidus/pages/621-home-page.html\" target=\"_blank\" mat-menu-item>\r\n           \r\n            <mat-icon class=\"icons\">help_outline</mat-icon>        \r\n            Go to Help</a>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","// my-loader.component.ts\nimport { Component, OnInit } from '@angular/core';\nimport { LoaderService } from '../../services/loader.service';\n\n@Component({\n  selector: 'app-my-loader',\n  templateUrl: './my-loader.component.html',\n  styleUrls: ['./my-loader.component.css']\n})\nexport class MyLoaderComponent implements OnInit {\n\n  loading: boolean;\n\n  constructor(private loaderService: LoaderService) {\n    debugger\n    this.loaderService.isLoading.subscribe((v) => {\n      console.log(v);\n      this.loading = v;\n    });\n\n  }\n  ngOnInit() {\n  }\n\n}\n","<!-- my-loader.component.html -->\n<!-- <div class=\"progress-loader\" [hidden]=\"!loading\">\n    <div class=\"loading-spinner\">\n        <img src=\"assets/Eclipse-1s-200px.svg\">\n        <span class=\"loading-message\">Please wait...</span>\n    </div>\n</div> -->\n<!-- <mat-spinner diameter=\"80\" color=\"accent\"></mat-spinner> -->\n\n\n\n             <!-- Loading Spinner Wrapper-->\n             <div class=\"loader text-center\" [hidden]=\"!loading\">\n                <div class=\"loader-inner\">\n              \n                    <!-- Animated Spinner -->\n                    <div class=\"lds-roller mb-3\">\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                    </div>\n                    \n                    <!-- Spinner Description Text [For Demo Purpose]-->\n                    <h4 class=\"text-uppercase font-weight-bold\">Please wait...</h4>\n              \n                </div>\n              </div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { EmployeeType } from 'src/classes/employee-type';\nimport { Observable } from 'rxjs';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport {ApiService} from '../api.service';\n\n@Component({\n  selector: 'app-employee-type',  \n  templateUrl: './employee-type.component.html',\n  styleUrls: ['./employee-type.component.css']\n})\nexport class EmployeeTypeComponent implements OnInit {\n    //Area\n    @ViewChild('closebutton') closebutton;\n    @ViewChild('addAreaclosebutton') addTypeclosebutton;\n  dataSaved = false;  \n  employeeTypeForm: any; \n  updateEmployeeTypeForm: any; \n  updateEmployeeType:any;\n  allEmployeeType: Observable<EmployeeType[]>;  \n  product:EmployeeType[];\n  employeeTypeUpdate = null;  \n  message = null;  \n  showModalBox: boolean = false;\n  AddshowModalBox: boolean = false;\n  searchedKeyword: string;\n  constructor(private formbuilder: FormBuilder,private formbuilderUpdate: FormBuilder,private ApiService:ApiService) { }\n\n  ngOnInit(): void {\n    this.updateEmployeeTypeForm = this.formbuilder.group({  \n  \n  \n      EMPLOYEETYPEDESCRIPTION: ['', [Validators.required]],  \n      EMPLOYEETYPEID: ['', [Validators.required]],  \n    });\n    this.employeeTypeForm = this.formbuilderUpdate.group({  \n  \n  \n      EMPLOYEETYPEDESCRIPTION: ['', [Validators.required]],  \n    });\nthis.loadAllEmployeeTypes();\n  }\n\n  \n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    // this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  loadAllEmployeeTypes() {  \n    this.allEmployeeType = this.ApiService.getAllEmployeeType();  \n    debugger;\n  }  \n\n    \n  onFormSubmitEmployeeType() {  \n    this.dataSaved = false;  \n    const EmployeeType = this.employeeTypeForm.value;  \n    this.CreateEmployeeType(EmployeeType);  \n    this.employeeTypeForm.reset();  \n  }  \n\n  onFormSubmitUpdateEmployeeType() {  \n    this.dataSaved = false;  \n    const EmployeeType = this.updateEmployeeTypeForm.value;  \n    this.UpdateEmployeeType(EmployeeType);  \n    this.updateEmployeeTypeForm.reset();  \n    \n  }  \n\n\n  loadEmployeeTypeToEdit(EmployeeTypeId: string) {  \n  \n    this.ApiService.getEmployeeTypeById(EmployeeTypeId).subscribe(employeeType=> {  \n      console.log(employeeType);\n      this.message = null;  \n      this.dataSaved = false;  \n      this.updateEmployeeTypeForm.controls['EMPLOYEETYPEDESCRIPTION'].setValue(employeeType.EMPLOYEETYPEDESCRIPTION);        \n\n      this.updateEmployeeTypeForm.controls['EMPLOYEETYPEID'].setValue(employeeType.EMPLOYEETYPEID); \n            \n  \n      \n    });  \n  \n  }  \n\n  public Addopen() {\n    if(0){\n      // Dont open the modal\n      this.AddshowModalBox = false;\n    } else {\n       // Open the modal\n       this.AddshowModalBox = true;\n    }\n\n  }\n\n \n  public open() {\n    if(0){\n      // Dont open the modal\n      this.showModalBox = false;\n    } else {\n       // Open the modal\n       this.showModalBox = true;\n    }\n\n  }\n\n  UpdateEmployeeType(employeeType: EmployeeType){\ndebugger;\n    this.ApiService.updateEmployeeType(employeeType).subscribe(() => {  \n      this.closebutton.nativeElement.click(); \n      this.dataSaved = true;  \n      this.message = 'Record Updated Successfully';  \n      this.loadAllEmployeeTypes();  \n      this.employeeTypeUpdate = null;  \n      this.updateEmployeeTypeForm.reset(); }\n    );\n\n  }\n\n\n  CreateEmployeeType(employeeType: EmployeeType) {  \n  \n      this.ApiService.createEmployeeType(employeeType).subscribe(  \n        () => {  this.addTypeclosebutton.nativeElement.click(); \n          this.dataSaved = true;  \n          this.message = 'Record saved Successfully';  \n          this.loadAllEmployeeTypes();  \n          this.employeeTypeUpdate = null;  \n          this.employeeTypeForm.reset();  \n        }  \n      );  \n  } \n\n\n\n  deleteEmployeeType(employeeTypeId: string) {  \n    if (confirm(\"Are you sure you want to delete this ?\")) {   \n    this.ApiService.deleteEmployeeTypeById(employeeTypeId).subscribe(() => {  \n      this.dataSaved = true;  \n      this.message = 'Record Deleted Succefully';  \n      this.loadAllEmployeeTypes();\n      this.employeeTypeUpdate = null;  \n      this.employeeTypeForm.reset();  \n  \n    });  \n  } }\n\n  // resetFormUserType() {  \n  //   this.userTypeForm.reset();  \n  //   this.messageUserType= null;  \n  //   this.userTypeForm = false;  \n  // } \n\n\n\n}\n","<mat-sidenav-container class=\"example-container\" style=\"  overflow-y: hidden;\" >\n    <mat-sidenav mode=\"side\" opened  style=\"height:100vh;\n     overflow-y: hidden;\"> \n <app-nav></app-nav>\n  \n    </mat-sidenav>\n    <mat-sidenav-content>\n      <app-username></app-username>\n          <mat-card>  \n            <mat-toolbar color=\"primary\">  \n              <div class=\"container w-100 row\"   >\n              <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">  \n               Manage Employee Type \n              \n               </div>\n  \n               <div align=\"right\"  class=\"col-6\">\n                <button class=\"btn btn-primary\" (click)=\"Addopen()\" style=\"vertical-align: middle; display: inline-flex; line-height: 24px;\" type=\"button\" data-toggle=\"modal\" data-target=\"#addAreaModal\">\n                   \n                  <i style=\" color: rgb(66, 252, 9);\" class=\"material-icons\">\n                    add\n                    </i>\n                    <span>  \n                     \n                      Add Employee Type</span>\n  \n                </button>\n\n               </div>\n               <br>\n            \n            \n  \n            </div>\n            </mat-toolbar>  \n          <br><br>  \n            <mat-card-content>  \n              <div >\n                <mat-form-field class=\"w-100\">\n                  <mat-label>Search</mat-label>\n                  <input matInput  [(ngModel)]=\"searchedKeyword\" placeholder=\"Search Keyword\">\n                  <mat-icon matSuffix>search</mat-icon>\n                </mat-form-field>\n                <!--  (keyup)=\"filterExpenses()\" -->\n               </div>\n            \n               <table class=\"mat-elevation-z8 table w-100\" >\n            <thead class=\"thead-dark\">\n                <tr>\n                    <th>ID</th>\n                    <th>Name</th>\n                 \n             \n    \n                    <th style=\"text-align: center;\"> <span class=\"material-icons\">\n                      edit\n                      </span> </th>\n                      <th style=\"text-align: center;\"> <span class=\"material-icons\">\n                        delete\n                        </span> </th>\n                 \n                </tr>\n            </thead>\n            <tbody>\n       \n            <tr *ngFor=\"let Type of allEmployeeType | async | filter:searchedKeyword\">  \n              <td class=\"tbl2\">{{Type.EMPLOYEETYPEID}}</td>  \n              <td class=\"tbl2\">{{Type.EMPLOYEETYPEDESCRIPTION}}</td>  \n           \n\n              <td class=\"tbl2\">  \n                <button type=\"button\" class=\"btn btn-info\" data-toggle=\"modal\" data-target=\"#exampleModal\"  matTooltip=\"Click Edit Button\" (click)=\"loadEmployeeTypeToEdit(Type.EMPLOYEETYPEID); open()\">Update</button>  \n              </td>  \n\n              <td class=\"tbl2\">  \n                <button type=\"button\" class=\"btn btn-danger\"matTooltip=\"Click Delete Button\" (click)=\"deleteEmployeeType(Type.EMPLOYEETYPEID)\">Delete</button>  \n              </td>  \n            </tr>\n          \n               \n              \n             \n            </tbody>\n          </table>\n            </mat-card-content>  \n          </mat-card>  \n\n\n                \n           \n          \n                </mat-sidenav-content>\n              </mat-sidenav-container>\n          \n\n          \n          \n          \n          <!-- /////////////////////////////////////////EmployeeType Modals //////////////////////////-->\n          \n          <!-- Add EmployeeType modal -->\n          \n          <!-- Modal -->\n          <div class=\"modal fade\" *ngIf=\"AddshowModalBox\" id=\"addAreaModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\" role=\"document\">\n              <div class=\"modal-content\">\n                <form [formGroup]=\"employeeTypeForm\" (ngSubmit)=\"onFormSubmitEmployeeType()\"> \n                <div class=\"modal-header alert-primary \">\n                  <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Add New Employee Type</h3>\n                  <button type=\"button\" #addTypeclosebutton class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                 \n                <div class=\"modal-body\">\n                  <div class=\"form-group\">\n                    <label for=\"exampleFormControlInput1\">Employee Type Name</label>\n                    <input type=\"text\" class=\"form-control\" #employeeTypeName id=\"exampleFormControlInput1\" formControlName=\"EMPLOYEETYPEDESCRIPTION\"  placeholder=\"\">\n                  </div>\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\n                  <button type=\"submit\" class=\"btn btn-success\"  [disabled]='employeeTypeName.value==\"\"'  >Add New Employee Type</button>\n                </div>\n              </form>\n              </div>\n            </div>\n          </div>\n          \n          <!-- Edit Area modal -->\n          \n          <!-- Modal -->\n          <div class=\"modal fade\" *ngIf=\"showModalBox\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\" >\n            <div class=\"modal-dialog\" role=\"document\">\n              <div class=\"modal-content\">\n                <form [formGroup]=\"updateEmployeeTypeForm\" (ngSubmit)=\"onFormSubmitUpdateEmployeeType()\"> \n                <div class=\"modal-header alert-primary \">\n                  <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Update Employee Type</h3>\n                  <button type=\"button\" #closebutton class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div class=\"modal-body\">\n                  <div class=\"form-group\">\n                    <label for=\"exampleFormControlInput1\">Employee Type Name</label>\n                    <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" #EMPLOYEETYPEDESCRIPTION placeholder=\"\" formControlName=\"EMPLOYEETYPEDESCRIPTION\" >\n                    <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\"  placeholder=\"\" formControlName=\"EMPLOYEETYPEID\"  hidden>\n\n                  </div>\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\n                  <button type=\"submit\" class=\"btn btn-primary\" [disabled]='EMPLOYEETYPEDESCRIPTION.value==\"\"' >Update Area </button>\n                </div>\n                </form>\n              </div>\n            </div>\n          </div>\n          \n          \n          <!-- Delete Area modal -->\n          \n          <!-- Modal -->\n          <div class=\"modal fade\" id=\"deleteEmployeeTypeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\" role=\"document\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header alert-danger \">\n                  <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Delete Employee Type ?</h3>\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div class=\"modal-body\">\n                 <h2>Are you sure you want to delete the Employee Type?</h2>\n                </div>\n                <div class=\"modal-footer \" >\n                  <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\n                  <button type=\"button\" class=\"btn btn-success\">Confirm</button>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n                 <!-- Delete Area modal -->\n          \n          <!-- Modal -->\n          <div class=\"modal fade\" id=\"success\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\" role=\"document\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header alert-success \">\n                  <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Success</h3>\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div class=\"modal-body\">\n                 <h2>Successfully deleted City!</h2>\n                </div>\n                <div class=\"modal-footer \" >\n                  <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\">Okay</button>\n                </div>\n              </div>\n            </div>\n          </div>","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.css']\n})\nexport class ErrorPageComponent implements AfterViewInit {\n  myError: any;\n\n  constructor(private _Router : Router,private modalService: NgbModal,private api:ApiService) { }\n\n  ngAfterViewInit(): void {\n    this.Error();\n    this.myError=this.api.myError;\n  }\n  @ViewChild('content') content : ElementRef;\n\n\n  Error(){debugger;\n\n    this.modalService.open(this.content,{ centered: true });\n  \n  \n  }\n\n\n}\n","<ng-template #content let-modal>\n    <div class=\"modal-header alert-danger\">\n      <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Error</h3>\n      <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button> -->\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"form-group\">\n        <label for=\"exampleFormControlInput1\">Oops! Sorry! Something went wrong.Please contact support@iqsolutions.com so we can try to fix it.</label>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\"modal.close()\" routerLink=\"/\"   >Return Home</button>\n    </div>\n  </ng-template>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fail',\n  templateUrl: './fail.component.html',\n  styleUrls: ['./fail.component.css']\n})\nexport class FailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>fail works!</p>\n","// loader-interceptor.service.ts\nimport { Injectable } from '@angular/core';\nimport {\n  HttpResponse,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LoaderService } from '../services/loader.service';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n  private requests: HttpRequest<any>[] = [];\n\n  constructor(private loaderService: LoaderService,private api:ApiService,private _Router : Router) { }\n\n  removeRequest(req: HttpRequest<any>) {\n    const i = this.requests.indexOf(req);\n    if (i >= 0) {\n      this.requests.splice(i, 1);\n    }\n    this.loaderService.isLoading.next(this.requests.length > 0);\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    this.requests.push(req);\n\n    console.log(\"No of requests--->\" + this.requests.length);\n\n    this.loaderService.isLoading.next(true);\n    return Observable.create(observer => {\n      const subscription = next.handle(req)\n        .subscribe(\n          event => {\n            if (event instanceof HttpResponse) {\n              this.removeRequest(req);\n              observer.next(event);\n            }\n          },\n          err => {debugger;\nthis.api.myError=err[\"error\"].Message;\nthis._Router.navigate(['error'])\n            // alert('error ' + err[\"error\"].Message);\n            this.removeRequest(req);\n            observer.error(err);\n          },\n          () => {\n            this.removeRequest(req);\n            observer.complete();\n          });\n      // remove request from queue when cancelled\n      return () => {\n        this.removeRequest(req);\n        subscription.unsubscribe();\n      };\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {ApiService} from '../api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-is-logged-in',\n  templateUrl: './is-logged-in.component.html',\n  styleUrls: ['./is-logged-in.component.css']\n})\nexport class IsLoggedInComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    if (sessionStorage.getItem('clientID') == null) {\n      this.router.navigate(['/login']);\n    }\n  }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { City } from 'src/classes/city';\nimport { Area } from 'src/classes/area';\nimport { Province } from 'src/classes/province';\nimport { Observable } from 'rxjs';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport {ApiService} from '../api.service';\n\n\n@Component({\n  selector: 'app-location',\n  templateUrl: './location.component.html',\n  styleUrls: ['./location.component.css']\n})\nexport class LocationComponent implements OnInit {\n  //Area\n  @ViewChild('closebutton') closebutton;\n  @ViewChild('addAreaclosebutton') addAreaclosebutton;\n\n  //City\n   @ViewChild('UpdateCityclosebutton') UpdateCityclosebutton;\n   @ViewChild('addCityclosebutton') addCityclosebutton;\n\n  //Province\n  @ViewChild('UpdateProvinceclosebutton') UpdateProvinceclosebutton;\n  @ViewChild('addProvinceclosebutton') addProvinceclosebutton;\n  \n\n  //City\n  dataSaved = false;  \n  cityForm: any; \n  updateCityForm: any; \n  updateCity:any;\n  allCity: Observable<City[]>;  \n  //product:City[];\n  cityUpdate = null;  \n  message = null;  \n  cityShowModalBox: boolean = false;\n  AddshowModalBox: boolean = false;\n\n   //Area\n   AreadataSaved = false;  \n   areaForm: any; \n   updateAreaForm: any; \n   updateArea:any;\n   allArea: Observable<Area[]>;  \n   //product:Area[];\n   areaUpdate = null;  \n   AreaMessage = null;  \n   areaShowModalBox: boolean = false;\n\n      //Province\n   ProvincedataSaved = false;  \n   provinceForm: any; \n   updateProvinceForm: any; \n   updateProvince:any;\n   allProvince: Observable<Province[]>;  \n   //product:Area[];\n   provinceUpdate = null;  \n   ProvinceMessage = null;  \n   provinceShowModalBox: boolean = false;\n   searchedKeyword1: string;\n   searchedKeyword2: string;\n   searchedKeyword3: string;\n\n  constructor(private formbuilder: FormBuilder,private formbuilderUpdate: FormBuilder,private ApiService:ApiService) { }\n\n  ngOnInit(): void {\n    //area\n    this.updateAreaForm = this.formbuilder.group({  \n  \n  \n      AREANAME: ['', [Validators.required]],  \n      CITYID: ['', [Validators.required]],  \n      AREAID: ['', [Validators.required]],\n    });\n    this.areaForm = this.formbuilderUpdate.group({  \n  \n  \n      AREANAME: ['', [Validators.required]],  \n      CITYID: ['', [Validators.required]],  \n    });  \n    //city\n    this.updateCityForm = this.formbuilder.group({  \n  \n      CITYID:['', [Validators.required]],  \n      CITYNAME: ['', [Validators.required]],  \n      PROVINCEID: ['', [Validators.required]],  \n    });\n    this.cityForm = this.formbuilderUpdate.group({  \n  \n  \n      PROVINCEID: ['', [Validators.required]],  \n      CITYNAME: ['', [Validators.required]],  \n    }); \n    //Province\n    this.updateProvinceForm = this.formbuilder.group({  \n  \n  \n      PROVINCEID: ['', [Validators.required]],  \n      PROVINCENAME: ['', [Validators.required]],  \n    });\n    this.provinceForm = this.formbuilderUpdate.group({  \n  \n  \n      PROVINCENAME: ['', [Validators.required]],  \n    });\n\n    this.loadAllCities();\n    this.loadAllProvinces();\n    this.loadAllAreas();\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    // this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n//City|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\n  loadAllCities() {  \n    this.allCity = this.ApiService.getAllCity();  \n    \n  }  \n\n    \n  onFormSubmitCity() {  \n    this.dataSaved = false;  \n    const City = this.cityForm.value;  \n    this.CreateCity(City);  \n    this.cityForm.reset();  \n  }  \n\n  onFormSubmitUpdateCity() {  \n    this.dataSaved = false;  \n    const City = this.updateCityForm.value;  \n    this.UpdateCity(City);  \n    this.updateCityForm.reset();  \n    \n  }  \n\n\n  loadCityToEdit(CityId: string) {  \n  \n    this.ApiService.getCityById(CityId).subscribe(City=> {  \n      \n      this.message = null;  \n      this.dataSaved = false;  \n      this.updateCityForm.controls['CITYID'].setValue(City.CITYID);        \n      this.updateCityForm.controls['CITYNAME'].setValue(City.CITYNAME); \n      this.updateCityForm.controls['PROVINCEID'].setValue(City.PROVINCEID);       \n  \n      \n    });  \n  \n  }  \n\n  public Addopen() {\n    if(0){\n      // Dont open the modal\n      this.AddshowModalBox = false;\n    } else {\n       // Open the modal\n       this.AddshowModalBox = true;\n    }\n\n  }\n\n \n  public CityOpen() {\n    if(0){\n      // Dont open the modal\n      this.cityShowModalBox = false;\n    } else {\n       // Open the modal\n       this.cityShowModalBox = true;\n    }\n\n  }\n\n  UpdateCity(city: City){\ndebugger;\n    this.ApiService.updateCity(city).subscribe(() => {  \n      this.UpdateCityclosebutton.nativeElement.click(); \n      this.dataSaved = true;  \n      this.message = 'Record Updated Successfully';  \n      this.loadAllCities();  \n      this.cityUpdate = null;  \n      this.updateCityForm.reset(); }\n    );\n\n  }\n\n\n  CreateCity(city: City) {  \n  debugger;\n      this.ApiService.createCity(city).subscribe(  \n        () => {  \n          this.addCityclosebutton.nativeElement.click(); \n          this.dataSaved = true;  \n          this.message = 'Record saved Successfully';  \n          this.loadAllCities();  \n          this.cityUpdate = null;  \n          this.cityForm.reset();  \n        }  \n      );  \n  } \n\n\n\n  deleteCity(cityId: string) {  \n    if (confirm(\"Are you sure you want to delete this ?\")) {   \n    this.ApiService.deleteCityById(cityId).subscribe(() => {  \n\n      this.dataSaved = true;  \n      this.message = 'Record Deleted Succefully';  \n      this.loadAllCities();\n      this.cityUpdate = null;  \n      this.cityForm.reset();  \n  \n    });  \n  } }\n\n  //Area|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\n  loadAllAreas() {  \n    this.allArea = this.ApiService.getAllArea();  \n    \n  }  \n\n    \n  onFormSubmitArea() {  \n    this.dataSaved = false;  \n    const Area = this.areaForm.value;  \n    this.CreateArea(Area);  \n    this.areaForm.reset();  \n  }  \n\n  onFormSubmitUpdateArea() {  \n    this.dataSaved = false;  \n    const Area = this.updateAreaForm.value;  \n    this.UpdateArea(Area);  \n    this.updateAreaForm.reset();  \n    \n  }  \n\n\n  loadAreaToEdit(AreaId: string) {  \n  \n    this.ApiService.getAreaById(AreaId).subscribe(Area=> {  \n      console.log(Area);\n      \n      this.AreaMessage = null;  \n      this.AreadataSaved = false;  \n      this.updateAreaForm.controls['AREAID'].setValue(Area.AREAID);        \n      this.updateAreaForm.controls['CITYID'].setValue(Area.CITYID); \n      this.updateAreaForm.controls['AREANAME'].setValue(Area.AREANAME);       \n      debugger;\n      \n    });  \n  \n  }  \n\n \n\n \n  public AreaOpen() {\n    if(0){\n      // Dont open the modal\n      this.areaShowModalBox = false;\n    } else {\n       // Open the modal\n       this.areaShowModalBox = true;\n    }\n\n  }\n\n  UpdateArea(area: Area){\ndebugger;\n    this.ApiService.updateArea(area).subscribe(() => { \n      this.closebutton.nativeElement.click(); \n      this.dataSaved = true;  \n      this.AreaMessage = 'Record Updated Successfully';  \n      this.loadAllAreas();  \n      \n      this.areaUpdate = null; \n\n      this.updateAreaForm.reset();\n      \n      \n     }\n    );\n\n  }\n\n\n  CreateArea(area: Area) {  \n  debugger;\n      this.ApiService.createArea(area).subscribe(  \n        () => {  \n          this.addAreaclosebutton.nativeElement.click(); \n          this.AreadataSaved = true;  \n          this.AreaMessage = 'Record saved Successfully';  \n          this.loadAllAreas();  \n          this.areaUpdate = null;  \n          this.areaForm.reset();  \n        }  \n      );  \n  } \n\n\n\n  deleteArea(areaId: string) {  \n    if (confirm(\"Are you sure you want to delete this ?\")) {   \n    this.ApiService.deleteAreaById(areaId).subscribe(() => {  \n      this.dataSaved = true;  \n      this.message = 'Record Deleted Succefully';  \n      this.loadAllAreas();\n      this.areaUpdate = null;  \n      this.areaForm.reset();  \n  \n    });  \n  } }\n\n //Province|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\n loadAllProvinces() {  \n  this.allProvince = this.ApiService.getAllProvince();  \n  \n}  \n\n  \nonFormSubmitProvince() {  \n  this.ProvincedataSaved = false;  \n  const Province = this.provinceForm.value;  \n  this.CreateProvince(Province);  \n  this.provinceForm.reset();  \n}  \n\nonFormSubmitUpdateProvince() {  \n  this.ProvincedataSaved = false;  \n  const Province = this.updateProvinceForm.value;  \n  this.UpdateProvince(Province);  \n  this.updateProvinceForm.reset();  \n  \n}  \n\n\nloadProvinceToEdit(ProvinceId: string) {  \n\n  this.ApiService.getProvinceById(ProvinceId).subscribe(Province=> {  \n    \n    this.ProvinceMessage = null;  \n    this.ProvincedataSaved = false;  \n    this.updateProvinceForm.controls['PROVINCEID'].setValue(Province.PROVINCEID);        \n    this.updateProvinceForm.controls['PROVINCENAME'].setValue(Province.PROVINCENAME); \n         \n\n    \n  });  \n\n}  \n\n\n\n\npublic ProvinceOpen() {\n  if(0){\n    // Dont open the modal\n    this.provinceShowModalBox = false;\n  } else {\n     // Open the modal\n     this.provinceShowModalBox = true;\n  }\n\n}\n\nUpdateProvince(Province: Province){\ndebugger;\n  this.ApiService.updateProvince(Province).subscribe(() => { \n    this.UpdateProvinceclosebutton.nativeElement.click();  \n    this.ProvincedataSaved = true;  \n    this.ProvinceMessage = 'Record Updated Successfully';  \n    this.loadAllProvinces();  \n    this.provinceUpdate = null;  \n    this.updateProvinceForm.reset(); }\n  );\n\n}\n\n\nCreateProvince(Province: Province) {  \n\n    this.ApiService.createProvince(Province).subscribe(  \n      () => {  \n        this.addProvinceclosebutton.nativeElement.click(); \n\n        this.ProvincedataSaved = true;  \n        this.ProvinceMessage = 'Record saved Successfully';  \n        this.loadAllProvinces();  \n        this.provinceUpdate = null;  \n        this.provinceForm.reset();  \n      }  \n    );  \n} \n\n\n\ndeleteProvince(provinceId: string) {  \n  if (confirm(\"Are you sure you want to delete this ?\")) {   \n  this.ApiService.deleteProvinceById(provinceId).subscribe(() => {  \n    this.ProvincedataSaved = true;  \n    this.ProvinceMessage = 'Record Deleted Succefully';  \n    this.loadAllProvinces();\n    this.provinceUpdate = null;  \n    this.provinceForm.reset();  \n\n  });  \n} }\n\n\n\n\n}\n","\n\n    <mat-sidenav-container class=\"example-container\"  >\n      <mat-sidenav mode=\"side\" opened> \n        <app-nav></app-nav>\n    \n    \n      </mat-sidenav>\n      <mat-sidenav-content>\n\n\n\n        <app-username></app-username>\n\n        <ul class=\"nav nav-pills\" style=\"width: 100%;  \" id=\"pills-tab\" role=\"tablist\">\n          <li class=\"nav-item border rounded\" style=\"width: 33.33%;\">\n            <a class=\"nav-link active\" id=\"pills-home-tab\" data-toggle=\"pill\" href=\"#pills-home\" role=\"tab\" aria-controls=\"pills-home\" aria-selected=\"true\">Areas</a>\n          </li>\n          <li class=\"nav-item border rounded\" style=\"width: 33.3%;\">\n            <a class=\"nav-link\" id=\"pills-profile-tab\" data-toggle=\"pill\" href=\"#pills-profile\" role=\"tab\" aria-controls=\"pills-profile\" aria-selected=\"false\">Cities</a>\n          </li>\n          <li class=\"nav-item border rounded\" style=\"width: 33.3%;\">\n            <a class=\"nav-link\" id=\"pills-contact-tab\" data-toggle=\"pill\" href=\"#pills-contact\" role=\"tab\" aria-controls=\"pills-contact\" aria-selected=\"false\">Provinces</a>\n          </li>\n        </ul>\n        <br>\n    \n        <div class=\"tab-content\" id=\"pills-tabContent\">\n          <div class=\"tab-pane fade show active\" id=\"pills-home\" role=\"tabpanel\" aria-labelledby=\"pills-home-tab\">\n            <mat-card>  \n              <mat-toolbar color=\"primary\">  \n                <div class=\"container w-100 row\" >\n                <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">  \n                 Manage Areas \n               \n                 </div>\n    \n                 <div align=\"right\"  class=\"col-6\">\n                  <button class=\"btn btn-primary\" style=\"vertical-align: middle; display: inline-flex; line-height: 24px;\" type=\"button\" data-toggle=\"modal\" data-target=\"#addAreaModal\">\n                     \n                    <i style=\" color: rgb(66, 252, 9);\" class=\"material-icons\">\n                      add\n                      </i>\n                      <span>  \n                       \n                        Add Area</span>\n    \n                  </button>\n\n                 </div>\n                 <br>\n              \n              \n    \n              </div>\n              </mat-toolbar>  \n            <br><br>  \n              <mat-card-content>  \n                <div >\n                  <mat-form-field class=\"w-100\">\n                    <mat-label>Search</mat-label>\n                    <input matInput [(ngModel)]=\"searchedKeyword1\" placeholder=\"Search Keyword\">\n                    <mat-icon matSuffix>search</mat-icon>\n                  </mat-form-field>\n\n                 </div>\n              \n                 <table class=\"mat-elevation-z8 table w-100\" >\n              <thead class=\"thead-dark\">\n                  <tr>\n                      <th>ID</th>\n                      <th>Name</th>\n                      <th>City</th>\n               \n      \n                      <th style=\"text-align: center;\"> <span class=\"material-icons\">\n                        edit\n                        </span> </th>\n                        <th style=\"text-align: center;\"> <span class=\"material-icons\">\n                          delete\n                          </span> </th>\n                   \n                  </tr>\n              </thead>\n              <tbody>\n\n                <tr *ngFor=\"let area of allArea | async| filter:searchedKeyword1\">  \n                  <td class=\"tbl2\">{{area.AREAID}}</td>  \n                  <td class=\"tbl2\">{{area.AREANAME}}</td>  \n                  <td class=\"tbl2\">{{area.CITYID}}</td>  \n\n    \n                  <td class=\"tbl2\">  \n                    <button type=\"button\" class=\"btn btn-info\" data-toggle=\"modal\" data-target=\"#editAreaModal\"  matTooltip=\"Click Edit Button\" (click)=\"loadAreaToEdit(area.AREAID);\">Update</button>  \n                  </td>  \n    \n                  <td class=\"tbl2\">  \n                    <button type=\"button\" class=\"btn btn-danger\"matTooltip=\"Click Delete Button\" (click)=\"deleteArea(area.AREAID)\">Delete</button>  \n                  </td>  \n                </tr>\n                 \n                \n               \n              </tbody>\n            </table>\n              </mat-card-content>  \n            </mat-card>  \n    \n          </div>\n          <div class=\"tab-pane fade\" id=\"pills-profile\" role=\"tabpanel\" aria-labelledby=\"pills-profile-tab\">\n            <mat-card  >  \n              <mat-toolbar color=\"primary\">  \n                <div class=\"container w-100 row\" >\n                  <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">  \n                   Manage Cities \n                 \n                   </div>\n      \n                   <div align=\"right\"  class=\"col-6\">\n                    <button class=\"btn btn-primary\" style=\"vertical-align: middle; display: inline-flex; line-height: 24px;\" type=\"button\" data-toggle=\"modal\" data-target=\"#addCityModal\">\n                     \n                      <i style=\" color: rgb(66, 252, 9);\" class=\"material-icons\">\n                        add\n                        </i>\n                        <span>  \n                         \n                          Add City</span>\n    \n                    </button>\n                   </div>\n      \n                </div>\n              </mat-toolbar>  \n            <br><br>  \n              <mat-card-content>  \n                <div >\n                  <mat-form-field class=\"w-100\">\n                    <mat-label>Search</mat-label>\n                    <input matInput [(ngModel)]=\"searchedKeyword2\" placeholder=\"Search Keyword\">\n                    <mat-icon matSuffix>search</mat-icon>\n                  </mat-form-field>\n\n                 </div>\n              \n                 <table class=\"mat-elevation-z8 table w-100\" >\n              <thead class=\"thead-dark\">\n                  <tr>\n                    <th>ID</th>\n                      <th>Name</th>\n                      <th>ProvinceID</th>\n                      <th style=\"text-align: center;\"> <span class=\"material-icons\">\n                        edit\n                        </span> </th>\n                        <th style=\"text-align: center;\"> <span class=\"material-icons\">\n                          delete\n                          </span> </th>\n                   \n                  </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let city of allCity | async | filter:searchedKeyword2\">  \n                  <td class=\"tbl2\">{{city.CITYID}}</td>  \n                  <td class=\"tbl2\">{{city.CITYNAME}}</td>  \n                  <td class=\"tbl2\">{{city.PROVINCEID}}</td>  \n\n    \n                  <td class=\"tbl2\">  \n                    <button type=\"button\" class=\"btn btn-info\" data-toggle=\"modal\" data-target=\"#editCityModal\"  matTooltip=\"Click Edit Button\" (click)=\"loadCityToEdit(city.CITYID); CityOpen()\">Update</button>  \n                  </td>  \n    \n                  <td class=\"tbl2\">  \n                    <button type=\"button\" class=\"btn btn-danger\"matTooltip=\"Click Delete Button\" (click)=\"deleteCity(city.CITYID)\">Delete</button>  \n                  </td>  \n                </tr>\n                 \n            \n                 \n                \n               \n              </tbody>\n            </table>\n              </mat-card-content>  \n            </mat-card>  \n    \n          </div>\n          <div class=\"tab-pane fade\" id=\"pills-contact\" role=\"tabpanel\" aria-labelledby=\"pills-contact-tab\">\n            <mat-card  >  \n              <mat-toolbar color=\"primary\">  \n                <div class=\"container w-100 row\" >\n                  <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">  \n                   Manage Provinces \n                 \n                   </div>\n      \n                   <div align=\"right\" class=\"col-6\">\n                    <button class=\"btn btn-primary\" style=\"vertical-align: middle; display: inline-flex; line-height: 24px;\" type=\"button\" data-toggle=\"modal\" data-target=\"#addProvinceModal\">\n                     \n                      <i style=\" color: rgb(66, 252, 9);\" class=\"material-icons\">\n                        add\n                        </i>\n                        <span>  \n                         \n                          Add Province</span>\n    \n                    </button>\n                 \n    \n            \n                   </div>\n      \n                </div>   \n              </mat-toolbar>  \n            <br><br>  \n              <mat-card-content>  \n                <div >\n                  <mat-form-field class=\"w-100\">\n                    <mat-label>Search</mat-label>\n                    <input matInput [(ngModel)]=\"searchedKeyword3\" placeholder=\"Search Keyword\">\n                    <mat-icon matSuffix>search</mat-icon>\n                  </mat-form-field>\n\n                 </div>\n              \n                 <table class=\"mat-elevation-z8 table w-100\" >\n              <thead class=\"thead-dark\">\n                  <tr>\n                      <th>ID</th>\n                      <th>Name</th>\n                      \n      \n                      <th style=\"text-align: center;\"> <span class=\"material-icons\">\n                        edit\n                        </span> </th>\n                        <th style=\"text-align: center;\"> <span class=\"material-icons\">\n                          delete\n                          </span> </th>\n                   \n                  </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let province of allProvince | async| filter:searchedKeyword3\">  \n                  <td class=\"tbl2\">{{province.PROVINCEID}}</td>  \n                  <td class=\"tbl2\">{{province.PROVINCENAME}}</td>  \n                  \n\n    \n                  <td class=\"tbl2\">  \n                    <button type=\"button\" class=\"btn btn-info\" data-toggle=\"modal\" data-target=\"#editProvinceModal\"  matTooltip=\"Click Edit Button\" (click)=\"loadProvinceToEdit(province.PROVINCEID); ProvinceOpen()\">Update</button>  \n                  </td>  \n    \n                  <td class=\"tbl2\">  \n                    <button type=\"button\" class=\"btn btn-danger\"matTooltip=\"Click Delete Button\" (click)=\"deleteProvince(province.PROVINCEID)\">Delete</button>  \n                  </td>  \n                </tr>\n                 \n            \n                 \n                \n               \n              </tbody>\n            </table>\n              </mat-card-content>  \n            </mat-card>  \n          </div>\n        </div>\n    \n \n\n      </mat-sidenav-content>\n    </mat-sidenav-container>\n\n\n\n \n\n\n\n\n<!-- /////////////////////////////////////////Area Modals //////////////////////////-->\n\n<!-- Add Area modal -->\n\n<!-- Modal -->\n\n<div class=\"modal fade\" id=\"addAreaModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <form [formGroup]=\"areaForm\" (ngSubmit)=\"onFormSubmitArea()\"> \n      <div class=\"modal-header alert-primary \">\n        <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Add New Area</h3>\n        <button type=\"button\" #addAreaclosebutton class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlInput1\">Area Name</label>\n          <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"\" #AREANAME formControlName=\"AREANAME\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlInput1\">City </label>\n          <select class=\"form-control\" formControlName=\"CITYID\" #CITYID >\n            <option *ngFor=\"let selectCity of allCity | async\" value=\"{{selectCity.CITYID}}\" [ngValue]=\"selectCity\" selected>{{selectCity.CITYNAME}}</option>\n            </select>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\n        <button type=\"submit\" class=\"btn btn-success\" [disabled]='AREANAME.value==\"\" || CITYID.value==\"\"'>Add New Area</button>\n      </div>\n    </form>\n    </div>\n  </div>\n</div>\n\n<!-- Edit Area modal -->\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"editAreaModal\" #editAreaModal tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <form [formGroup]=\"updateAreaForm\" (ngSubmit)=\"onFormSubmitUpdateArea()\"> \n      <div class=\"modal-header alert-primary \">\n        <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Update Area</h3>\n        <button type=\"button\"  #closebutton class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlInput1\">Area Name</label>\n          <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" #AREANAME  formControlName=\"AREANAME\">\n          <input type=\"text\" class=\"form-control\"  placeholder=\"\" formControlName=\"AREAID\" hidden>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlInput1\">City </label>\n          <select class=\"form-control\" formControlName=\"CITYID\" >\n            <option *ngFor=\"let selectCity of allCity | async\" value=\"{{selectCity.CITYID}}\">{{selectCity.CITYNAME}}</option>\n            </select>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" >Cancel</button>\n        <button type=\"submit\"  class=\"btn btn-primary\" [disabled]='!updateAreaForm.valid' >Update Area</button>\n      </div>\n      </form>\n    </div>\n  </div>\n</div>\n\n\n<!-- Delete Area modal -->\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"deleteAreaModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header alert-danger \">\n        <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Delete Area ?</h3>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n       <h2>Are you sure you want to delete the Area ?</h2>\n      </div>\n      <div class=\"modal-footer \" >\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-success\">Confirm</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- /////////////////////////////////////////City Modals //////////////////////////-->\n\n<!-- Add City modal -->\n<!-- Modal -->\n<div class=\"modal fade\" id=\"addCityModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <form [formGroup]=\"cityForm\" (ngSubmit)=\"onFormSubmitCity()\"> \n      <div class=\"modal-header alert-primary \">\n        <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\">Add New City</h3>\n        <button type=\"button\" #addCityclosebutton class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlInput1\">City Name</label>\n          <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"\" #CITYNAME formControlName=\"CITYNAME\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlInput1\">Province </label>\n          <select class=\"form-control\" formControlName=\"PROVINCEID\" #PROVINCEID >\n            <option *ngFor=\"let selectProvince of allProvince | async\" value=\"{{selectProvince.PROVINCEID}}\" selected>{{selectProvince.PROVINCENAME}}</option>\n            </select>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\n        <button type=\"submit\" class=\"btn btn-success\" [disabled]='CITYNAME.value==\"\" || PROVINCEID.value==\"\"'>Add New City</button>\n      </div>\n      </form>\n    </div>\n  </div>\n</div>\n\n\n<!-- Edit City modal -->\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"editCityModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <form [formGroup]=\"updateCityForm\" (ngSubmit)=\"onFormSubmitUpdateCity()\"> \n      <div class=\"modal-header alert-primary \">\n        <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Update City</h3>\n        <button type=\"button\" #UpdateCityclosebutton class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlInput1\">City Name</label>\n          <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" #CITYNAME  formControlName=\"CITYNAME\">\n          <input type=\"text\" class=\"form-control\"  placeholder=\"\" formControlName=\"CITYID\" hidden>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlInput1\">Province </label>\n          <select class=\"form-control\" formControlName=\"PROVINCEID\" >\n            <option *ngFor=\"let selectCity of allProvince | async\" value=\"{{selectCity.PROVINCEID}}\">{{selectCity.PROVINCENAME}}</option>\n            </select>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\n        <button type=\"submit\" class=\"btn btn-primary\"  [disabled]=\"!updateCityForm.valid\">Update City</button>\n      </div>\n      </form>\n    </div>\n  </div>\n</div>\n\n<!-- Delete City modal -->\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"deleteCityModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header alert-danger \">\n        <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Delete City ?</h3>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n       <h2>Are you sure you want to delete the City ?</h2>\n      </div>\n      <div class=\"modal-footer \" >\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-success\">Confirm</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- /////////////////////////////////////////Province Modals //////////////////////////-->\n\n<!-- Add Province modal -->\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"addProvinceModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <form [formGroup]=\"provinceForm\" (ngSubmit)=\"onFormSubmitProvince()\"> \n      <div class=\"modal-header alert-primary \">\n        <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\">Add New Province</h3>\n        <button type=\"button\" #addProvinceclosebutton class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlInput1\">Province Name</label>\n          <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"\"  #PROVINCENAME formControlName=\"PROVINCENAME\">\n        </div>\n      \n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!provinceForm.valid\">Add Province</button>\n      </div>\n      </form>\n    </div>\n  </div>\n</div>\n\n<!-- Edit Province modal -->\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"editProvinceModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <form [formGroup]=\"updateProvinceForm\" (ngSubmit)=\"onFormSubmitUpdateProvince()\"> \n      <div class=\"modal-header alert-primary \">\n        <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Update Province</h3>\n        <button type=\"button\" #UpdateProvinceclosebutton class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlInput1\">Province Name</label>\n          <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"\"  #PROVINCENAME formControlName=\"PROVINCENAME\">\n        </div>\n       \n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!updateProvinceForm\">Update Province</button>\n      </div>\n      </form>\n    </div>\n  </div>\n</div>\n\n<!-- Delete Province modal -->\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"deleteProvinceModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header alert-danger \">\n        <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Delete Province ?</h3>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n       <h2>Are you sure you want to delete the Province ?</h2>\n      </div>\n      <div class=\"modal-footer \" >\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-success\">Confirm</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<!-- Validation modal -->\n<!-- Modal -->\n<div class=\"modal fade\" id=\"validation\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header alert-danger \">\n        <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Validation Error</h3>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n       <h2>The entered details are not in the correct format or not all the fields were not completed. </h2>\n       <!-- <h2>The entered details are not in the correct format or not all the fields were not completed. </h2> -->\n\n      </div>\n      <div class=\"modal-footer \" >\n        <!-- <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button> -->\n        <button type=\"button\" class=\"btn btn-info\">Correct Errors</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';  \n//import { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';  \nimport { FormBuilder, Validators } from '@angular/forms';\nimport {APIService} from \"src/app/Services/api.service\";\nimport { Router} from '@angular/router';\nimport { Location } from '@angular/common';\n\n @Component({  \n  selector: 'app-login',  \n  templateUrl: './login.component.html',  \n  styleUrls: ['./login.component.css']  \n})  \n\nexport class LoginComponent implements OnInit {  \n   \n  successmsg: any;  \n  errmsg: any;  \n  loginForm:any;\n   succLogin: boolean;\n   emptyPSR: boolean;\n   emptyUSR: boolean;\n   invPass: boolean;\n   saveInProgress: boolean=false;\n   href: string;\n  //userObj = new User;\n  constructor( private _Router : Router,private location: Location,private formbuilder: FormBuilder,private apiservice : APIService, private router:Router) { }  \n  ngOnInit() {  \n   \n    // if(window.sessionStorage.getItem('userToken')!=null){    \n    //   this.router.navigate(['/Add-property']);    \n    // }    \ndebugger;\n    if(Boolean(sessionStorage.getItem('loggedInStatus'))==true)\n    { \n    \n              this._Router.navigate(['/']);\n    \n    }\n    else{\n\n\n\n    }\n    //Login form\n    this.loginForm = this.formbuilder.group({   \n      USERNAME: ['', [Validators.required]],  \n      PASSWORD: ['', [Validators.required]],  \n    });\n\n  }     \n \n  \nOnGetToken(){    \n  const user=this.loginForm.controls['USERNAME'].value;    \n  const pass=this.loginForm.controls['PASSWORD'].value;    \n this.apiservice.UserAuthentication(user,pass).subscribe((data:any)=>{    \n window.sessionStorage.setItem('userToken',data.access_token);    \n this.router.navigate(['/Add-property']);    \n });    \n } \n \n clientLogin()\n {\n   this.succLogin=false;\n   this.emptyPSR=false;\n   this.emptyUSR=false;\n   this.invPass = false;\n   if(this.loginForm.controls['USERNAME'].value==\"\" && this.loginForm.controls['PASSWORD'].value==\"\")\n   {\n     this.emptyPSR=true;\n     this.emptyUSR=true;\n     return;\n   }\n   if(this.loginForm.controls['USERNAME'].value==\"\")\n   {\n     this.emptyUSR=true;\n     return;\n   }\n   if(this.loginForm.controls['PASSWORD'].value==\"\")\n   {\n     this.emptyPSR=true;\n     return;\n   }\n   const login = this.loginForm.value; \n   this.saveInProgress=true;\n  //  this.userObj.UserName = this.logUsernameVar;\n  //  this.userObj.UserPassword = this.logPasswordVar;\n   console.log(JSON.stringify(login));\ndebugger;\n   this.apiservice.LoginClient(login).subscribe(r=> {\n    \n    \n     console.log(JSON.stringify(r));\n     this.getUserData(r);\n   })  \n\n\n  \n  }\n\n\n  getUserData(data) { \n    if(data.Message==\"Invalid User!\")\n    {\n      this.succLogin = true;\n      this.saveInProgress=false;\n    }else if(data.Message==\"Invalid Password!\"){\n      this.invPass = true;\n      this.saveInProgress=false;\n    }else{\n   \n\n     \n      sessionStorage.setItem('clientCell',data.ClientCellNumber);\n      sessionStorage.setItem('clientEmail',data.ClientEmail);\n      sessionStorage.setItem('clientID',data.ClientID);\n      sessionStorage.setItem('clientName',data.ClientName);\n      sessionStorage.setItem('clientSurname',data.ClientSurname);\n      sessionStorage.setItem('userID',data.UserID);\n      sessionStorage.setItem('username',data.username);\n      sessionStorage.setItem('hasApplied',data.hasApplied);\n      sessionStorage.setItem('DOB',data.DOB);\n      sessionStorage.setItem('verified',data.verified);\ndebugger;\n      \n      sessionStorage.setItem('loggedInStatus','true');\n      this.succLogin = false;\n      this.emptyPSR = false;\n      this.emptyUSR = false;\n      this.invPass = false;\n      //get client address data\n   \n      this.router.navigate(['/']);\n\n      \n\n    }\n\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n}  ","\n  <!-- /////////////////////////////////////////////////////////////////////////////////////////////////////////// -->\n<!--This HTML is for the login screen-->\n<div class=\"container \" style=\"align-content: center; padding:80px;\">\n  <div>\n    <div>\n      <mat-icon style=\"font-size:48px;\"  data-toggle=\"modal\" data-target=\"#MyModal\">help_outline</mat-icon>\n    </div>\n  <form class=\"text-center border border-light p-5\" [formGroup]=\"loginForm\" style=\"background-color:#c8f0ea\" (ngSubmit)=\"clientLogin()\">\n      <p class=\"h4 mb-4\">Login</p> \n      <input type=\"email\" id=\"defaultLoginFormUsername\" #USERNAME formControlName=\"USERNAME\" class=\"form-control mb-4\" placeholder=\"Username\" > \n      <input type=\"password\" id=\"defaultLoginFormPassword\" #PASSWORD formControlName=\"PASSWORD\" class=\"form-control mb-4\" placeholder=\"Password\">  \n      <div class=\"d-flex justify-content-around\">\n        <!-- <div>\n          <mdb-checkbox [default]=\"true\">Remember me</mdb-checkbox>\n        </div> -->\n        <div *ngIf=\"!saveInProgress\">\n            <!--change the routerlink to recover password when implemented and remove this comment-->\n          <a routerLink=\"/Reset\">Forgot password?</a>\n        </div>\n      </div>\n      <div *ngIf=\"saveInProgress\">\n        <div class=\"loader\"><span></span></div><br>\n        <p>Logging in...</p>\n      </div>\n    \n      <button *ngIf=\"!saveInProgress\" mdbBtn  block=\"true\" class=\"my-4\" class=\"btn btn-outline-info btn-rounded btn-block my-4 waves-effect z-depth-0\" type=\"submit\" >Login</button>\n      <!-- [disabled]=\"PASSWORD.value=='' || USERNAME.value==''\" -->\n      <p *ngIf=\"!saveInProgress\">Not a client?\n        <a routerLink=\"/register\">Register</a>\n      </p>\n      <div *ngIf=\"succLogin\" class=\"alert alert-danger\">\n        This user does not exist!\n      </div>\n  \n      <div *ngIf=\"invPass\" class=\"alert alert-danger\">\n        Incorrect Password!\n      </div>\n  \n      <div *ngIf=\"emptyUSR\" class=\"alert alert-danger\">\n        Please enter a username!\n      </div>\n  \n      <div *ngIf=\"emptyPSR\" class=\"alert alert-danger\">\n        Please enter a password!\n      </div>\n  \n  \n    </form>\n  </div>\n  </div>\n    <!--End of login HTML-->\n\n    <div id=\"MyModal\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\"  data-dismiss=\"modal\" (click)=\"basicModal.hide()\">\n              <span aria-hidden=\"true\">×</span>\n            </button>\n            <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:rgb(60, 191, 196)\">Login Page</h4>\n          </div>\n          <div class=\"modal-body\">\n            <p>This is the Login Page.</p><br/>\n            <p style=\"color:rgb(60, 191, 196); font-weight: bold\">Here you can select to:</p>\n            <p>-Click LOGIN to login </p>\n            <p>-Click REGISTER to register </p>\n            <p>-Click FORGOT PASSWORD to reset your password</p>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n          </div>\n        </div>\n      </div>\n    </div>","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Terminate } from './terminate';\nimport { Observable } from 'rxjs';\nimport * as myGlobal  from './Global';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json',\n    \"Access-Control-Allow-Origin\": '*'\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class MakePaymentService {\n   //apiURL=\"http://localhost:30135/\";\n   apiURL= myGlobal.OnlineLink;; \n \n  // apiURL=\"http://localhost:30135/\";\n  constructor(private http : HttpClient) { }\n  //get MD5 string for PayFast\n  public getMD5(obj:any){\n    return this.http.post(this.apiURL+'api/MakePayment/getMD5Hash',obj,httpOptions);\n  }\n\n  getRentalAgreement(ClientID:string){ debugger;\n    return this.http.get(this.apiURL+'api/MakePayment/GetProperties/'+ClientID);\n  }\n  getAmount(ReferenceNo:string){debugger;\n    return this.http.get(this.apiURL+'api/MakePayment/GetAmountDue/'+ReferenceNo);\n  }\n  getRentalAgreement1(ClientID:string){ debugger;\n    return this.http.get(this.apiURL+'api/Terminate/GetProperties/'+ClientID);\n  }\n  getAmount1(ReferenceNo:string){debugger;\n    return this.http.get(this.apiURL+'api/Terminate/GetAmountDue/'+ReferenceNo);\n  }\n  sendTermination(Terminate: Terminate): Observable<Terminate> {   debugger;\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \n    return this.http.post<Terminate>(this.apiURL+'Api/Terminate/SendTerminateEmail',  \n    Terminate, httpOptions);  \n  }  \n\n  //////////////////////////////////////////////////////////////////////////////////////////////\ngetRentalAgreement2(ClientID:string){ debugger;\n  return this.http.get(this.apiURL+'api/Extend/GetProperties/'+ClientID);\n}\ngetDate(ClientID:string){debugger;\n  return this.http.get(this.apiURL+'api/Extend/GetAmountDue/'+ClientID);\n}\nsendExtension(Terminate: Terminate): Observable<Terminate> {   debugger;\n  const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \n  return this.http.post<Terminate>(this.apiURL+'Api/Extend/SendExtendEmail',  \n  Terminate, httpOptions);  \n}  \n//////////////////////////////////////////////////////////////////////////////////////\ngetRentalAgreement3(ClientID:string){ debugger;\n  return this.http.get(this.apiURL+'api/RequestMaintenance/GetProperties/'+ClientID);\n}\ngetAmount3(ReferenceNo:string){debugger;\n  return this.http.get(this.apiURL+'api/RequestMaintenance/GetAmountDue/'+ReferenceNo);\n}\nsendMaintenance(Terminate: Terminate): Observable<Terminate> {   debugger;\n  const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \n  return this.http.post<Terminate>(this.apiURL+'Api/RequestMaintenance/SendMaintenanceEmail',  \n  Terminate, httpOptions);  \n}  \nGetAllPaymentsByID(ID : number){\n  const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) }; \n  return this.http.post(this.apiURL + 'Api/MakePayment/ViewPayments/' + ID,httpOptions) \n\n}\n\n\n}","import { Component, OnInit } from '@angular/core';\r\nimport { MakePaymentService } from '../make-payment.service';\r\n\r\nimport { Hash } from 'src/classes/hash';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-make-payment',\r\n  templateUrl: './make-payment.component.html',\r\n  styleUrls: ['./make-payment.component.css']\r\n})\r\nexport class MakePaymentComponent implements OnInit {\r\n  MD5string :string = '';\r\n  payable=false;\r\n  obj:Hash= new Hash();\r\n  totalAmount = 0;\r\n  allRentals:any; \r\n  searchForm: any; \r\n  AmountDue:any;\r\n  selected:any;\r\n  hasApplied: boolean;\r\n  names: string;\r\n  emails: string;\r\n  Status: any;\r\n  DepositDueDate: any;\r\n  constructor(private httpService: HttpClient,private apiService:MakePaymentService,private formbuilderUpdate:FormBuilder ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.emails=sessionStorage.getItem('clientEmail') ;\r\n\r\n    this.names=sessionStorage.getItem('clientName') +\" \"+ sessionStorage.getItem('clientSurname');\r\n    this.hasApplied=Boolean(JSON.parse(sessionStorage.getItem('hasApplied')));\r\n\r\n\r\n    this.GetAllRentalAgreements();\r\n    this.searchForm = this.formbuilderUpdate.group({  \r\n  \r\n  \r\n      SearchBy: ['', [Validators.required]], \r\n      searchText: ['', [Validators.required]],   \r\n    });\r\n  \r\n  }\r\n  //Generate MD5 \r\n    async genMD5()\r\n  {\r\n    https://inturbidus.azurewebsites.net/\r\n    this.MD5string = \"merchant_id=16502529$merchant_key=1arycyqidt4hp$return_url=https%3A%2F%2Finturbidus.azurewebsites.net%2Fnotify$cancel_url=https%3A%2F%2Finturbidus.azurewebsites.net%2Fcancel$amount=\"+this.totalAmount+\"$item_name=NattrendOrder\";\r\n    //alert(this.MD5string);\r\n    this.obj.hashString = this.MD5string;\r\n    await this.apiService.getMD5(this.obj).toPromise().then( x =>{\r\n      this.payable=true;\r\n      this.MD5string = x.toString();\r\n      //alert(this.MD5string);\r\n    });\r\n  }\r\n  GetAllRentalAgreements(){\r\n    this.apiService.getRentalAgreement(sessionStorage.getItem('clientID')).toPromise().then(data => {//ClientID\r\n      this.allRentals = data; debugger;\r\n      console.log(data);\r\n      \r\n    });\r\n  }\r\n\r\nsetID(value,amount,status)\r\n{\r\n  window.sessionStorage.setItem(\"ReferenceNO.\",value);\r\n  window.sessionStorage.setItem(\"AmountDue\",amount);\r\n  window.sessionStorage.setItem(\"Type\",status);\r\n\r\n  // if(Rental._checked==true)\r\n  // window.sessionStorage.setItem(\"Type\",\"2\");\r\n  // else{\r\n  //   window.sessionStorage.setItem(\"Type\",\"1\");\r\n\r\n\r\n\r\n  // }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  GetAmount(ReferenceNo:string){\r\n    this.apiService.getAmount(ReferenceNo).toPromise().then(data => {//ClientID\r\n      this.AmountDue = data[\"AMOUNTDUE\"];\r\n      this.Status = data[\"RENTALSTATUSID\"];\r\n      this.DepositDueDate=data[\"DepositDueDate\"];\r\n\r\n\r\n\r\n      console.log(data);\r\n      this.payable=true;\r\n    \r\n    });\r\n  }\r\n  public onOptionsSelected(event) { \r\n    const value = event.target.value;\r\n    this.selected = value;\r\n    console.log(value);\r\n }\r\n  }\r\n\r\n","<app-is-logged-in></app-is-logged-in>\r\n\r\n<mat-sidenav-container class=\"example-container\"  >\r\n    <mat-sidenav mode=\"side\" opened> \r\n      <app-nav></app-nav>\r\n  \r\n  \r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n      <app-username></app-username>\r\n          <mat-card>  \r\n            <mat-toolbar color=\"primary\">  \r\n              <div class=\"container w-100 row\" >\r\n              <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">Make Payment\r\n             \r\n               </div>\r\n  \r\n               <div align=\"right\"  class=\"col-6\">\r\n                \r\n               </div>\r\n               <br>\r\n            \r\n            \r\n  \r\n            </div>\r\n            </mat-toolbar>  \r\n          <br><br> \r\n          \r\n            <mat-card-content  *ngIf=\"hasApplied\">  \r\n              <ng-container>\r\n <form #form action=\"https://sandbox.payfast.co.za/eng/process\" method=\"POST\"> \r\n              <div>\r\n                <mat-form-field class=\"w-100\">\r\n                  <mat-label>Please select the rental agreement you want to make payment for</mat-label>\r\n                  <mat-select #ReferenceNo  (selectionChange)=\"GetAmount(ReferenceNo.value);\" >\r\n                    <mat-option  matInput *ngFor=\"let selectCity of allRentals \" value=\"{{selectCity.ReferenceNo}}\"  selected>{{selectCity.PropertyAddress }} || {{selectCity.ReferenceNo }}\r\n\r\n\r\n                    </mat-option>\r\n                    \r\n\r\n                  </mat-select>\r\n\r\n                </mat-form-field>\r\n              </div>\r\n            <br>\r\n\r\n              <div>\r\n                <input type=\"hidden\" name=\"merchant_id\" value=\"10000100\">\r\n                <input type=\"hidden\" name=\"merchant_key\" value=\"46f0cd694581a\">\r\n                <!-- <input type=\"hidden\" name=\"return_url\" value=\"http://localhost:30135/notify\">\r\n                <input type=\"hidden\" name=\"cancel_url\" value=\"http://localhost:30135/cancel\"> -->\r\n                <input type=\"hidden\" name=\"return_url\" value=\"https://inturbidus.azurewebsites.net/notify\">\r\n                <input type=\"hidden\" name=\"cancel_url\" value=\"https://inturbidus.azurewebsites.net/cancel\">\r\n\r\n                <input type=\"hidden\" name=\"amount\" value=\"{{AmountDue1.value}}\">\r\n                <!-- <input type=\"hidden\" name=\"item_name\" value=\"{{names}} {{ReferenceNo.value}}\"> -->\r\n                <input *ngIf=\"status.value==1\" type=\"hidden\" name=\"item_name\" value=\"{{names}} {{ReferenceNo.value}} -- Deposit Payment\">\r\n                <input *ngIf=\"status.value==5\"  type=\"hidden\" name=\"item_name\" value=\"{{names}} {{ReferenceNo.value}} -- Rental Payment\">\r\n                <!-- <input type=\"hidden\" name=\"email_confirmation\" value=\"1\">\r\n                <input type=\"hidden\" name=\"confirmation_address\" value=\"{{email}}\"> -->\r\n                <input type=\"hidden\" name=\"signature\" value=\"{{MD5string}}\"> \r\n            \r\n                <div   *ngIf=\"AmountDue==0\" class=\"alert alert-danger\">There is no amount due for this rental agreement.</div>\r\n               </div>\r\n  \r\n               <div [hidden]=\"AmountDue==0\">\r\n                <div  *ngIf=\"status.value==5\"  class=\"alert alert-info\"><h3>Payment due for Rental</h3>\r\n                  <mat-label   *ngIf='ReferenceNo.value'>Amount Due: R{{AmountDue}}</mat-label>   </div>\r\n\r\n                <div  *ngIf=\"status.value==1\"    class=\"alert alert-info\"><h3>Payment due for Deposit</h3> \r\n                  <mat-label   *ngIf='ReferenceNo.value'>Amount Due: R{{AmountDue}}</mat-label>\r\n                </div>\r\n\r\n                                 \r\n                    <input #AmountDue1 type=\"hidden\"  value=\"{{AmountDue}}\">\r\n                    <input #status type=\"hidden\"  value=\"{{Status}}\">\r\n\r\n               </div>\r\n                  \r\n  \r\n                <div >\r\n                <button  [hidden]=\"AmountDue==0\" *ngIf=\"payable\" type=\"submit\" class=\"btn aqua-gradient\" (click)=\"form.submit();setID(ReferenceNo.value,AmountDue1.value,status.value);\" mat-raised-button color=\"primary\" data-toggle=\"modal\" data-target=\"#editEmployeeTypeModal\">Procced to Pay</button>\r\n               </div> \r\n              </form> \r\n              </ng-container>\r\n            </mat-card-content>  \r\n            <div *ngIf=\"!hasApplied\" class=\"alert alert-danger\">\r\n              You currently don't have any rental agreements.\r\n          </div> \r\n          </mat-card>  \r\n  \r\n                </mat-sidenav-content>\r\n              </mat-sidenav-container>\r\n          \r\n          \r\n          \r\n                \r\n                <!-- Modal -->\r\n        <div class=\"modal fade\" id=\"addAreaModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header alert-primary \">\r\n                <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Add New Booking</h3>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"exampleFormControlInput1\">Employee Type Name</label>\r\n                  <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"\">\r\n                </div>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\r\n                <button type=\"button\" class=\"btn btn-success\">Add New Booking</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div id=\"MyModal\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" data-dismiss=\"modal\" (click)=\"basicModal.hide()\">\r\n                  <span aria-hidden=\"true\">×</span>\r\n                </button>\r\n                <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:rgb(60, 191, 196)\">Make Payment Page</h4>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <p>Make Payment Page.</p><br/>\r\n                <p style=\"color:rgb(60, 191, 196); font-weight: bold\">Here you can select to:</p>\r\n                <p>-Click SELECT RENTAL AGREEMENT DROPDOWN to choose rental agreement </p>\r\n                <p>-Click RENTAL to make rental payment </p>\r\n                <p>-Click DEPOSIT to make deposit payment </p>\r\n                <p>-Click PROCCED to procced with payment </p>\r\n             \r\n             \r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"MyModal1\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"basicModal.hide()\">\r\n                  <span aria-hidden=\"true\">×</span>\r\n                </button>\r\n                <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:green\">Make payement Page</h4>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <div class=\"modal-body\">\r\n                  <a href=\"https://motlatso-baps.github.io/HelpInturbidus/index.html?page=6267-make-payment.html\"target=\"_blank\" mat-menu-item>\r\n                   \r\n                    <mat-icon class=\"icons\">help_outline</mat-icon>        \r\n                   Go to Help</a>\r\n                </div>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n          \r\n        <!-- <form #form action=\"https://sandbox.payfast.co.za/eng/process\" method=\"POST\"> -->","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { HttpClientModule,HttpClient } from '@angular/common/http';\nimport { Booking } from '../booking';\nimport { Observable } from 'rxjs';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport * as myGlobal  from '../Global';\n\nimport { BookingService } from '../booking.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-make-property-viewing-booking',\n  templateUrl: './make-property-viewing-booking.component.html',\n  styleUrls: ['./make-property-viewing-booking.component.css'],\n \n})\n\nexport class MakePropertyViewingBookingComponent implements OnInit {\n  @ViewChild('content') content : any;\n  @ViewChild('content1') content1 : any;\n\n  allBookings:any;\n  booking = new Booking();\n  noBoookings: boolean;\n  searching: boolean;\n  constructor(private modalService: NgbModal,private httpService: HttpClient,private bookingService:BookingService) { }  \n  EMPLOYEEs: string[];  \n  DATEs: string[]; \n  SLOTs: string[];\n  ngOnInit() {  \n    this.loadSlots()\n  }  \n  OnSubmit(EMPLOYEEDATETIMESLOTID:number){ debugger;\n    this.searching=true;\n    this.booking.EMPLOYEEDATETIMESLOTID=EMPLOYEEDATETIMESLOTID;\n    this.booking.CLIENTID=Number(sessionStorage.getItem('clientID')); \n    this.booking.PROPERTYID=Number(sessionStorage.getItem('PropertyID')); \n    this.bookingService.addBooking(this.booking).subscribe(data=>{\ndebugger;\n      if(Boolean(data)==false)\n      {\n\n\n        this.myBookingExist()\n      }\n      else{\n        this.myBooking();\n\n      }\n     \n      this.loadSlots();\n      this.searching=false;\n\n    });\n  \n    \n  }\n\n  myBooking(){\n    this.modalService.open(this.content,{ centered: true });\n\n  }\n\n  \n  myBookingExist(){\n    this.modalService.open(this.content1,{ centered: true });\n\n  }\n\n  loadSlots()\n  { this.httpService.get(myGlobal.OnlineLink + 'Api/GetAvailableSlots/Slots/'+sessionStorage.getItem('PropertyID')).subscribe(  \n    data => { this.allBookings =data; debugger;\n     this.EMPLOYEEs = data as string [];  \n     this.DATEs = data as string []\n   this.SLOTs = data as string []\n   if(this.EMPLOYEEs.length==0){\n      \n    this.noBoookings=true;\n   }\n   else{\n    this.noBoookings=false;\n   }\n    }  \n  ); }\n  \n}  ","<app-is-logged-in></app-is-logged-in>\n\n<mat-sidenav-container class=\"example-container\"  >\n  <mat-sidenav mode=\"side\" opened> \n    <app-nav></app-nav>\n\n\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <app-username></app-username>\n        <mat-card>  \n          <mat-toolbar color=\"primary\">  \n            <div class=\"container w-100 row\">\n            <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">  \n             Make Booking\n           \n             </div>\n\n             <div align=\"right\"  class=\"col-6\">\n              \n              <button class=\"btn btn-primary\"  routerLink=\"/PropertyDetails\" style=\"vertical-align: middle; display: inline-flex; line-height: 24px;\" type=\"button\" >\n                   \n                <i style=\" color: rgb(66, 252, 9);\" class=\"material-icons\">\n                    keyboard_backspace\n                  </i>\n                  <span>  \n                    \n                    Go Back To View Property</span>\n\n              </button>\n              \n                \n                \n                \n\n              \n\n             </div>\n             <br>\n          \n          \n\n          </div>\n          </mat-toolbar>  \n        <br><br>  \n          <mat-card-content *ngIf=\"!noBoookings\" >  \n           \n          <mat-label>Pick a slot for the property viewing</mat-label>\n              <table class=\"mat-elevation-z8 table w-100\" >\n          <thead class=\"thead-dark\">\n              <tr>\n\n                <th>Employee Name</th>\n                <th>Employee Surname</th>\n                <th>Employee Contact</th>\n                  <th>Date</th>\n                  <th>Start Date</th>\n                  <th>End Date</th>\n                  \n                  <th>Action</th>\n                      \n              </tr>\n          </thead>\n          <tbody>\n                    <tr *ngFor=\"let item of allBookings\" >\n                      <td hidden>{{item.EmployeeDateTimeSLotID}}</td> \n                      <td>{{item.Name}}</td> \n                      <td>{{item.Surname}}</td> \n                      <td>{{item.PhoneNumber}}</td>\n                      <td>{{item.Date}}</td> \n                      <td>{{item.Startime}}</td>  \n                      <td>{{item.Endtime}}</td> \n                        \n                    <td> <button mat-raised-button color=\"primary\" (click)=\"OnSubmit(item.EmployeeDateTimeSLotID)\">Book</button></td>\n                      \n                  </tr>\n      \n           \n          </tbody>\n        </table> \n          </mat-card-content> \n          <div *ngIf=\" noBoookings\" class=\"alert alert-danger\">\n            There are no available booking slots.Please contact us on 0123456789/info@inturbidus.com for alternative arrangments!\n        </div> \n        </mat-card>  \n\n   \n         \n        \n              </mat-sidenav-content>\n            </mat-sidenav-container>\n        \n        \n            \n            <div id=\"MyModal1\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\n              <div class=\"modal-dialog\" role=\"document\">\n                <div class=\"modal-content\">\n                  <div class=\"modal-header\">\n                    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"basicModal.hide()\">\n                      <span aria-hidden=\"true\">×</span>\n                    </button>\n                    <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:green\">View property Page</h4>\n                  </div>\n                  <div class=\"modal-body\">\n                    <div class=\"modal-body\">\n                      <a href=\"https://motlatso-baps.github.io/HelpInturbidus/pages/6263make-viewing-booking.html\" target=\"_blank\" mat-menu-item>\n                       \n                        <mat-icon class=\"icons\">help_outline</mat-icon>        \n                       Go to Help</a>\n                    </div>\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n             <!-- /////////////////////////////////////////Area Modals //////////////////////////-->\n        \n        <!-- Add Area modal -->\n        \n        <!-- Modal -->\n        <div class=\"modal fade\" id=\"addAreaModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n          <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header alert-primary \">\n                <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Add New Booking</h3>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div class=\"modal-body\">\n                <div class=\"form-group\">\n                  <label for=\"exampleFormControlInput1\">Employee Type Name</label>\n                  <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"\">\n                </div>\n              </div>\n              <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\n                <button type=\"button\" class=\"btn btn-success\">Add New Booking</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Edit Area modal -->\n        \n        <!-- Modal -->\n        <div class=\"modal fade\" id=\"editEmployeeTypeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n          <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header  alert-info \">\n                <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Booking Confirmation</h3>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div class=\"modal-body\">\n               <p>Are you sure you want to make the booking?</p>\n             \n              <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">Yes</button>\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">No</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        \n        <!--Booking modal -->\n        <ng-template #content let-modal>\n          <div class=\"modal-header alert-success\">\n            <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Successfully Booked</h3>\n            <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button> -->\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"form-group\">\n              <label for=\"exampleFormControlInput1\">Your booking was successfully made.You may view your booking details in Booking Management!</label>\n              <label for=\"exampleFormControlInput1\">Have a good day!</label>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\"modal.close()\" routerLink=\"/\" >Ok</button>\n          </div>\n        </ng-template>\n        \n            \n        <!--Booking modal -->\n        <ng-template #content1 let-modal>\n          <div class=\"modal-header alert-danger\">\n            <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Error with booking</h3>\n            <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button> -->\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"form-group\">\n              <label for=\"exampleFormControlInput1\">You have already made a booking for this property .You may view your booking details in Booking Management!</label>\n              <label for=\"exampleFormControlInput1\">Have a good day!</label>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\"modal.close()\" routerLink=\"/\" >Ok</button>\n          </div>\n        </ng-template>\n        <div id=\"MyModal\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\n          <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header\">\n                <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" data-dismiss=\"modal\" (click)=\"basicModal.hide()\">\n                  <span aria-hidden=\"true\">×</span>\n                </button>\n                <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:rgb(60, 191, 196)\">Make Booking Page</h4>\n              </div>\n              <div class=\"modal-body\">\n                <p>This is the Make Booking Page.</p><br/>\n                <p style=\"color:rgb(60, 191, 196); font-weight: bold\">Here you can select to:</p>\n                <p>-Click BOOK to MAKE BOOKING Page </p>\n                <p>-Click GO  BACK TO VIEW PROPERTY to navigate to VIEW PROPERTY Page</p>\n                <p>-Click BOOKING MANAGEMENT to navigate to MY BOOKING Page</p>\n                \n        \n                \n              </div>\n              <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n              </div>\n            </div>\n          </div>\n        </div> ","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Application } from './application';\r\nimport * as myGlobal  from './Global';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MyServiceService {\r\n    //url = 'http://localhost:30135/Api/Apply';\r\n    url = myGlobal.OnlineLink + \"Api/Apply\";\r\n  \r\n  // url = 'http://localhost:30135/Api/Apply';\r\n  PropertyID:number=0;  \r\n  constructor(private http: HttpClient) { }  \r\n  getAllApplication(): Observable<Application[]> {  \r\n    return this.http.get<Application[]>(this.url + '/AllApplicationDetails');  \r\n  }  \r\n  getApplicationById(applicationId: string): Observable<Application> {  \r\n    return this.http.get<Application>(this.url + '/GetApplicationDetailsById/' + applicationId);  \r\n  }  \r\n  createApplication(application: Application): Observable<Application> {  \r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \r\n    return this.http.post<Application>(this.url + '/InsertApplicationDetails/',  \r\n    application, httpOptions);  \r\n  } \r\n  \r\nupdateApplication(application: Application): Observable<Application> {  \r\n  const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \r\n  return this.http.put<Application>(this.url + '/UpdateApplicationDetails/',  \r\n  application, httpOptions);  \r\n}  \r\ndeleteApplicationById(applicationid: string): Observable<number> {  \r\n  const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \r\n  return this.http.delete<number>(this.url + '/DeleteApplicationDetails?id=' +applicationid,  \r\nhttpOptions);  \r\n}\r\npublic downloadFile(docFile: string): Observable < Blob > {  \r\n  return this.http.get(this.url + '/GetFile?docFile=' + docFile, {  \r\n      responseType: 'blob'  \r\n  });  \r\n}  \r\npublic downloadImage(image: string): Observable < Blob > {  \r\n  return this.http.get(this.url + '/GetImage?image=' + image, {  \r\n      responseType: 'blob'  \r\n  });  \r\n}  \r\npublic getFiles(): Observable < any[] > {  \r\n  return this.http.get < any[] > (this.url + '/GetFileDetails');  \r\n}  \r\nAddFileDetails(data: FormData): Observable < string > {  \r\n  let headers = new HttpHeaders();  \r\n  headers.append('Content-Type', 'application/json');  \r\n  const httpOptions = {  \r\n      headers: headers  \r\n  };  \r\n  return this.http.post < string > (this.url + '/UploadDocuments', data, httpOptions);  \r\n}  \r\n}  \r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor(private _Router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n\n  logout(){\n    sessionStorage.clear();\n    this._Router.navigate(['/login']);\n\n\n  }\n  \n}\n","<img class = 'images'  src=\"assets/logo.jpg\" routerLink ='/' style=\"width:200px;height:100px;\"/> \n     <div class=\"sidenav\" >\n      <a href=\"https://mamphakee.wixsite.com/mysite\"  target=\"_blank\">\n        <mat-icon class=\"icons\">info</mat-icon>\n        About us</a>\n\n      <a routerLink=\"/view-user\" >\n        <mat-icon class=\"icons\">supervised_user_circle</mat-icon>\n        Manage My Account</a>\n\n\n        <a href=\"#item-1\" data-toggle=\"collapse\" >\n          <mat-icon class=\"icons\">airline_seat_individual_suite</mat-icon>\n          Rental Management</a>\n        \n        <div class=\"collapse\" id=\"item-1\">\n \n          <a  routerLink=\"/\" data-toggle=\"collapse\">\n            <mat-icon class=\"icons\">chevron_right</mat-icon> Browse Properties \n          </a>\n          <a   routerLink=\"/ApprovedApplicationComponent\" data-toggle=\"collapse\">\n            <mat-icon class=\"icons\">chevron_right</mat-icon> Accept Rental agreement \n            \n            </a>\n            \n            <a routerLink=\"/Payment\"   data-toggle=\"collapse\">\n              <mat-icon class=\"icons\">chevron_right</mat-icon>  Make payment\n              </a>\n              <a routerLink=\"/ViewPayments\"   data-toggle=\"collapse\">\n                <mat-icon class=\"icons\">chevron_right</mat-icon>  View payments\n                </a>\n              <a  routerLink=\"/RequestToTerminateRentalAgreement\"  data-toggle=\"collapse\">\n                <mat-icon class=\"icons\">chevron_right</mat-icon>  Request to terminate rental agreement\n\n                </a>\n                <a routerLink=\"/RequestToExtendRentalAgreement\"  data-toggle=\"collapse\">\n                  <mat-icon class=\"icons\">chevron_right</mat-icon> Request to extend rental agreement\n                  </a>\n                  <a routerLink=\"/RequestMaintenanceJob\" data-toggle=\"collapse\">\n                    <mat-icon class=\"icons\">chevron_right</mat-icon> Request repair job\n                    </a>\n           \n                                                                                  \n          </div>\n\n\n      <a routerLink=\"/search-complaint\">\n        <mat-icon class=\"icons\">record_voice_over</mat-icon>        \n        Complaint Management</a>\n\n\n     \n \n      <a routerLink=\"/ViewBooking\" data-toggle=\"collapse\" >\n        <mat-icon class=\"icons\">calendar_today</mat-icon>\n        Booking Management</a>\n        \n        <!-- <div class=\"collapse\" id=\"item-2\">\n \n          <a routerLink=\"/ViewBooking\"  data-toggle=\"collapse\">\n            <mat-icon class=\"icons\">chevron_right</mat-icon> View my bookings \n          </a>\n                                                                 \n          </div> -->\n\n      <a (click)=\"logout()\">\n        <mat-icon class=\"icons\">exit_to_app</mat-icon>\n        Logout</a>\n\n        <a data-toggle=\"modal\" data-target=\"#MyModal\">\n          <mat-icon class=\"icons\">info</mat-icon>        \n          Hint</a>\n          <a data-toggle=\"modal\" data-target=\"#MyModal1\">\n            <mat-icon class=\"icons\">help_outline</mat-icon>        \n            Help</a>\n\n</div>\n\n\n\n","export class Newpass {\r\n    pssw:string;\r\n    usrn:string;\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport { Payment } from '../payment';\nimport { PropertyService } from '../Services/property.service';\n\n@Component({\n  selector: 'app-notify',\n  templateUrl: './notify.component.html',\n  styleUrls: ['./notify.component.css']\n})\nexport class NotifyComponent implements OnInit {\n\n  constructor(private halo:ApiService,private httpService: HttpClient, private _Router : Router,) { }\n\n  ngOnInit(): void {\n    this.pay();\n    debugger;\n  }\n  // \n  Payment = new Payment();\n\npay(){\n\n// this.Payment.PAYMENTTYPEID=Number(window.sessionStorage.getItem(\"Type\"));\n// // this.Payment.PAYMENTTYPEID=\n// this.Payment.PAYMENT_AMOUNT=window.sessionStorage.getItem(\"AmountDue\");\n// this.Payment.PAYMENT_REFERENCE_NO=window.sessionStorage.getItem(\"ReferenceNO.\");\n  // this.httpService.get('http://localhost:30135/Api/MakePayment/AddPayment/' +this.clientID).subscribe(\n  //   data => {})\n\n  // this.httpService.get('https://api.payfast.co.za').subscribe(  \n  //   data => { debugger;})\n\n// this.halo.AddPayment(this.Payment).subscribe(LL=>{\n// debugger;\n\n// window.sessionStorage.removeItem(\"AmountDue\");\n// window.sessionStorage.removeItem(\"Type\");\n// window.sessionStorage.removeItem(\"ReferenceNO.\");\n// window.sessionStorage.setItem(\"Paid\",\"true\");\n// this._Router.navigate(['success']);\n\n\n// });\nvar refNum = Number(window.sessionStorage.getItem(\"ReferenceNO.\"));\nthis.halo.AddPayment(refNum).subscribe(LL=>{\n \n  \n  window.sessionStorage.removeItem(\"AmountDue\");\n  window.sessionStorage.removeItem(\"Type\");\n  window.sessionStorage.removeItem(\"ReferenceNO\");\n  window.sessionStorage.setItem(\"Paid\",\"true\");\n  this._Router.navigate(['success']);\n  \n  \n  });\n\n}\n\n\n}\n","export class Otp {\r\n    addr:string;\r\n    cID:number;\r\n}\r\n","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-payment-cancelled',\r\n  templateUrl: './payment-cancelled.component.html',\r\n  styleUrls: ['./payment-cancelled.component.css']\r\n})\r\nexport class PaymentCancelledComponent implements AfterViewInit {\r\n  @ViewChild('content') content : ElementRef;\r\n\r\n  constructor( private _Router : Router,private modalService: NgbModal) { }\r\n\r\n  ngAfterViewInit(): void {\r\n\r\n    this.success();\r\n  }\r\n\r\n  success(){\r\n    this.modalService.open(this.content,{ centered: true });\r\n  }\r\n\r\n}\r\n","<app-is-logged-in></app-is-logged-in>\r\n<ng-template #content let-modal>\r\n  <div class=\"modal-header alert-danger\">\r\n    <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Cancelled</h3>\r\n    <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button> -->\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"form-group\">\r\n      <label for=\"exampleFormControlInput1\">Payment cancelled!</label>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer alert-danger\">\r\n    <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\"modal.close();\" routerLink=\"/view-user\"   >Return Home</button>\r\n  </div>\r\n</ng-template>\r\n\r\n\r\n <!-- Modal -->\r\n <div class=\"modal fade\" id=\"editEmployeeTypeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header  alert-danger \">\r\n          <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Error Notifiation</h3>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n         <p>The payment was unsuccessful!Please try again</p>\r\n       \r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-payment-succesful',\r\n  templateUrl: './payment-succesful.component.html',\r\n  styleUrls: ['./payment-succesful.component.css']\r\n})\r\nexport class PaymentSuccesfulComponent implements AfterViewInit {\r\n  @ViewChild('content') content : ElementRef;\r\n  @ViewChild('content1') content1 : ElementRef;\r\n  constructor( private _Router : Router,private modalService: NgbModal) { }\r\n\r\n  ngAfterViewInit() {debugger;\r\nif(Boolean(sessionStorage.getItem('Paid'))==true)\r\n{\r\nthis.success();\r\n\r\n}\r\nelse{\r\n\r\nthis.Error();\r\n\r\n}\r\n\r\n  }\r\n\r\n\r\n  clear(){\r\n    sessionStorage.removeItem('Paid');\r\n    this._Router.navigate(['ViewPayments']);\r\n    \r\n  }\r\n  \r\nsuccess(){\r\n  this.modalService.open(this.content,{ centered: true });\r\n}\r\n\r\nError(){debugger;\r\n\r\n  this.modalService.open(this.content1,{ centered: true });\r\n\r\n\r\n}\r\n\r\n\r\n}\r\n","<app-is-logged-in></app-is-logged-in>\r\n\r\n<mat-sidenav-container class=\"example-container\"  >\r\n    <mat-sidenav mode=\"side\" opened> \r\n\r\n  \r\n  \r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>   \r\n        <!-- If Accepted -->\r\n        <ng-template #content let-modal>\r\n            <div class=\"modal-header alert-success\">\r\n              <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Success</h3>\r\n         \r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleFormControlInput1\">Payment Successful! An email confirmation has been sent.Have a good day.</label>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\"modal.close(); clear();\"   >Ok</button>\r\n            </div>\r\n          </ng-template>\r\n\r\n          <ng-template #content1 let-modal>\r\n            <div class=\"modal-header alert-danger\">\r\n              <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Error</h3>\r\n              <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button> -->\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleFormControlInput1\">Action not authorised!</label>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer alert-danger\">\r\n              <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\"modal.close(); clear(); \"   >Ok</button>\r\n            </div>\r\n          </ng-template>","export class Payment {\n  PAYMENT_REFERENCE_NO: string;\n  PAYMENTTYPEID: number;\n  PAYMENT_AMOUNT: number;\n\n\n\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Observable } from 'rxjs';\r\nimport { MakePaymentService } from '../make-payment.service';\r\nimport { Terminate } from '../terminate';\r\nimport { TerminatedAgree } from '../terminated-agree';\r\n\r\n@Component({\r\n  selector: 'app-request-maintenance-job',\r\n  templateUrl: './request-maintenance-job.component.html',\r\n  styleUrls: ['./request-maintenance-job.component.css']\r\n})\r\nexport class RequestMaintenanceJobComponent implements OnInit {\r\n  dataSaved = false;  \r\n  maintenanceForm: any;  \r\n  allTerminated: Observable<TerminatedAgree[]>;  \r\n  terminatedIdUpdate = null;  \r\n  massage = null;  \r\n  url=\"http://formspree.io/nhlanhlakhosa69@gmail.com\";\r\n  totalAmount = 0;\r\n  allRentals:any; \r\n  searchForm: any; \r\n  AmountDue:any;\r\n  selected:any;\r\n  Terminate = new Terminate();\r\n  @ViewChild('content') content : any;\r\n  constructor(private modalService: NgbModal ,private apiService:MakePaymentService,private formbuilderUpdate:FormBuilder) { }  \r\n  \r\n  ngOnInit()  :void {this.GetAllRentalAgreements3();\r\n    this.maintenanceForm = this.formbuilderUpdate.group({  \r\n  \r\n  \r\n      RentalAgreementID: ['', [Validators.required]], \r\n      MaintenanceReason: ['', [Validators.required]],   \r\n      \r\n\r\n    });\r\n  }\r\n    GetAllRentalAgreements3(){\r\n      this.apiService.getRentalAgreement3(sessionStorage.getItem('clientID')).toPromise().then(data => {//ClientID\r\n        this.allRentals = data; debugger;\r\n        console.log(data);\r\n        debugger;\r\n      });\r\n    }\r\n    GetAmount(ReferenceNo:string){debugger;\r\n      this.apiService.getAmount3(ReferenceNo).toPromise().then(data => {//ClientID\r\n        this.AmountDue = data.toString(); debugger;\r\n        \r\n      });\r\n    }\r\n    public onOptionsSelected(event) {debugger;\r\n      const value = event.target.value;\r\n      this.selected = value;\r\n      console.log(value);\r\n   }\r\n\r\n   openWindowCustomClass() {\r\n    this.modalService.open(this.content,{ centered: true });\r\n  }\r\n\r\n\r\n   OnSubmit(){\r\nthis.Terminate=this.maintenanceForm.value; debugger;\r\nthis.apiService.sendMaintenance(this.Terminate).subscribe(data=>{\r\n this.openWindowCustomClass();\r\n  //this.myBooking();\r\n  \r\n});\r\n\r\n\r\n   }\r\n    }\r\n  \r\n","<mat-sidenav-container class=\"example-container\"  >\r\n    <mat-sidenav mode=\"side\" opened> \r\n      <app-nav></app-nav>\r\n  \r\n  \r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n      <app-username></app-username>\r\n          <mat-card>  \r\n            <mat-toolbar color=\"primary\">  \r\n              <div class=\"container w-100 row\" >\r\n              <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">Repair Job Request\r\n             \r\n               </div>\r\n  \r\n\r\n               <br>\r\n            \r\n               <div align=\"right\"  class=\"col-6\">\r\n                <button class=\"btn btn-primary\" style=\"vertical-align: middle; display: inline-flex; line-height: 24px;\" type=\"button\" routerLink = '/Viewrequestedjobs'>\r\n                   \r\n                    <span>  \r\n                     \r\n                      View Repair Requests</span>\r\n  \r\n                </button>\r\n  \r\n               </div>\r\n  \r\n            </div>\r\n            </mat-toolbar>  \r\n          <br><br>  \r\n            <mat-card-content *ngIf=\"allRentals\">\r\n              <form  [formGroup]=\"maintenanceForm\" (ngSubmit)=\"OnSubmit()\"> \r\n                <div>\r\n                  <mat-form-field class=\"w-100\">\r\n                    <mat-label>Choose the property you want to request a repair for. </mat-label>\r\n                    <mat-select #ReferenceNo  formControlName=\"RentalAgreementID\" >\r\n                      <mat-option  matInput *ngFor=\"let selectCity of allRentals \" value=\"{{selectCity.RentalAgreementID}}\"  selected>Property ReferenceNo: {{selectCity.PropertyID }} || Property Address: {{selectCity.PropertyAddress }} || Agreement ReferenceNo: {{selectCity.RefferenceNo }}  </mat-option>\r\n                      \r\n            \r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"maintenanceForm.controls['RentalAgreementID'].errors?.required && maintenanceForm.controls['RentalAgreementID'].touched \"   >This field is required</mat-error>\r\n                    <mat-hint>Click the dropdown icon to select an agreement</mat-hint>\r\n\r\n                  </mat-form-field>\r\n                </div>\r\n                \r\n            <br>  \r\n            <mat-form-field appearance=\"fill\"  class=\"w-100\">\r\n              <mat-label>Repair Details</mat-label>\r\n            <textarea  matInput  class=\"form-control\" rows=\"5\" placeholder=\"Provide details of what needs to be repaired.....\" formControlName=\"MaintenanceReason\"  ></textarea>\r\n            <mat-error *ngIf=\"maintenanceForm.controls['MaintenanceReason'].errors?.required && maintenanceForm.controls['MaintenanceReason'].touched \">This field is required</mat-error>\r\n            <mat-hint>Please input the repair details </mat-hint>\r\n          </mat-form-field>\r\n                        <!-- <div>\r\n                            <textarea formControlName=\"MaintenanceReason\"  name=\"What needs to be repaired\" class=\"form-control\" rows=\"5\" placeholder=\"Provide details of what needs to be repaired.....\"  ng-model=\"CommentText\"></textarea>  \r\n                        </div>\r\n                -->\r\n               <div>\r\n                \r\n                <button id=\"my-form-button\" type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"maintenanceForm.invalid\" >Send Request</button>\r\n               </div>\r\n               \r\n              </form>\r\n            </mat-card-content>  \r\n            <div *ngIf=\"!allRentals\" class=\"alert alert-danger\">\r\n              You have no rental agreements to request a repair job for!\r\n          </div>\r\n          </mat-card>  \r\n  \r\n                </mat-sidenav-content>\r\n              </mat-sidenav-container>\r\n          \r\n                    \r\n              <div id=\"MyModal\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\r\n                <div class=\"modal-dialog\" role=\"document\">\r\n                  <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" data-dismiss=\"modal\" (click)=\"basicModal.hide()\">\r\n                        <span aria-hidden=\"true\">×</span>\r\n                      </button>\r\n                      <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:rgb(60, 191, 196)\">Repair  Request Page</h4>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                      <p>Repair Request Page</p><br/>\r\n                      <p style=\"color:rgb(60, 191, 196); font-weight: bold\">Here you can select to:</p>\r\n                      <p>-Click DROPDOWN ICON to select rental agreement  </p>\r\n                      <p>-Click COMMENT INPUT to provide information of what needs to be repaired</p>\r\n                     \r\n                      <p>-Click SEND REQUEST to send the repair request</p>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                      <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n          \r\n              <div id=\"MyModal1\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\r\n                <div class=\"modal-dialog\" role=\"document\">\r\n                  <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"basicModal.hide()\">\r\n                        <span aria-hidden=\"true\">×</span>\r\n                      </button>\r\n                      <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:green\">Request Maintenace job Page</h4>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                      <div class=\"modal-body\">\r\n                        <a href=\"https://motlatso-baps.github.io/HelpInturbidus/pages/62610request-repair-job.html\" target=\"_blank\" mat-menu-item>\r\n                         \r\n                          <mat-icon class=\"icons\">help_outline</mat-icon>        \r\n                          Go to Help</a>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                      <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n                  \r\n                  \r\n           <!-- Modal -->\r\n           <div class=\"modal fade\" id=\"editEmployeeTypeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog\" role=\"document\">\r\n              <div class=\"modal-content\">\r\n                <div class=\"modal-header  alert-success\">\r\n                  <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Success Notification</h3>\r\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                 <p>The request was successfully submitted!</p>\r\n               \r\n                <div class=\"modal-footer\">\r\n                  <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                  \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>   \r\n              \r\n          \r\n          <ng-template #content let-modal>\r\n            <div class=\"modal-header alert-success\">\r\n              <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Successfully Requested Repair</h3>\r\n              <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button> -->\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleFormControlInput1\">Your repair request has been received successfully.We will be in touch </label>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\"modal.close()\" routerLink=\"/\" >Ok</button>\r\n            </div>\r\n          </ng-template>\r\n","import { DatePipe } from '@angular/common';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Observable } from 'rxjs';\nimport { MakePaymentService } from '../make-payment.service';\nimport { Terminate } from '../terminate';\nimport { TerminatedAgree } from '../terminated-agree';\n\n@Component({\n  selector: 'app-request-to-extend-rental-agreement',\n  templateUrl: './request-to-extend-rental-agreement.component.html',\n  styleUrls: ['./request-to-extend-rental-agreement.component.css']\n})\nexport class RequestToExtendRentalAgreementComponent implements OnInit {\n\n  dataSaved = false;  \n  extendedForm: any;  \n  allTerminated: Observable<TerminatedAgree[]>;  \n  terminatedIdUpdate = null;  \n  massage = null;  \n  url=\"http://formspree.io/nhlanhlakhosa69@gmail.com\";\n  totalAmount = 0;\n  allRentals:any; \n  searchForm: any; \n  AmountDue:any;\n  selected:any;\n  Terminate = new Terminate();\n  @ViewChild('content') content : any;\n  date: string;\n  available = true;\n  constructor(private modalService: NgbModal ,private apiService:MakePaymentService,private formbuilderUpdate:FormBuilder) { }\n  ngOnInit()  :void {this.GetAllRentalAgreements2();\n    this.extendedForm = this.formbuilderUpdate.group({  \n  \n  \n      RentalAgreementID: ['', [Validators.required]], \n      ExtensionPeriod: ['', [Validators.required]],   \n         \n\n    });\n  }\n    GetAllRentalAgreements2(){\n      this.apiService.getRentalAgreement2(sessionStorage.getItem('clientID')).toPromise().then(data => {//ClientID\n        this.allRentals = data; debugger;\n        if (this.allRentals.length == 0) \n        {\n          this.available = false;\n        }\n        console.log(data);\n        debugger;\n      });\n    }\n    GetAmount(ReferenceNo:string){debugger;\n      this.extendedForm.controls['ExtensionDate'].setValue(' ');       \n      this.apiService.getDate(ReferenceNo).toPromise().then(data => {//ClientID\n        this.AmountDue = data.toString(); debugger;\n        var pipe = new DatePipe('en-ZA'); // Use your own locale\n        this.date =pipe.transform(this.AmountDue,'yyyy-MM-dd');\n\n      });\n    }\n    public onOptionsSelected(event) {debugger;\n      const value = event.target.value;\n      this.selected = value;\n      console.log(value);\n   }\n\n   openWindowCustomClass() {\n    this.modalService.open(this.content,{ centered: true });\n  }\n\n\n   OnSubmit(){\nthis.Terminate=this.extendedForm.value; debugger;\nthis.apiService.sendExtension(this.Terminate).subscribe(data=>{\n  debugger;\n  this.openWindowCustomClass();\n  //this.myBooking();\n  \n});\n\n}}","<mat-sidenav-container class=\"example-container\"  >\n    <mat-sidenav mode=\"side\" opened> \n      <app-nav></app-nav>\n    </mat-sidenav>\n    <mat-sidenav-content>\n      <app-username></app-username>\n          <mat-card>  \n            <mat-toolbar color=\"primary\">  \n              <div class=\"container w-100 row\" >\n              <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">Rental Extension Request\n             \n               </div>\n  \n               <div align=\"right\"  class=\"col-6\">\n                \n               </div>\n               <br>\n            \n            \n  \n            </div>\n            </mat-toolbar>  \n          <br><br> \n          <form  [formGroup]=\"extendedForm\" (ngSubmit)=\"OnSubmit()\">  \n            <mat-card-content> \n              <div *ngIf=\"available\"> \n              <div>\n                <mat-form-field class=\"w-100\">\n                  <mat-label>Choose a property to extend rental agreement</mat-label>\n                  <mat-select #ReferenceNo  formControlName=\"RentalAgreementID\" (selectionChange)=\"GetAmount(ReferenceNo.value)\">\n                    <mat-option  matInput *ngFor=\"let selectCity of allRentals \" value=\"{{selectCity.RentalAgreementID}}\"  selected>Property ReferenceNo: {{selectCity.PropertyID }} || Property Address: {{selectCity.PropertyAddress }} || Agreement ReferenceNo: {{selectCity.RefferenceNo }}  </mat-option>\n                    \n          \n                  </mat-select>\n                  <mat-error *ngIf=\"extendedForm.controls['RentalAgreementID'].errors?.required && extendedForm.controls['RentalAgreementID'].touched \"   >This field is required</mat-error>\n                  <mat-hint>Click the dropdown icon to select an agreement</mat-hint>\n                </mat-form-field>\n              </div>\n            <br>\n            <br>        \n            <div>\n            \n                <mat-form-field appearance=\"fill\">\n                  <mat-label>Extension Period</mat-label>\n                  <select matNativeControl required formControlName=\"ExtensionPeriod\" >\n                    <option value=\"1\">6 Months</option>\n                    <option value=\"2\">1 Year</option>\n                    <option value=\"3\">2 Years</option>\n                  </select>\n              \n                <mat-error *ngIf=\"extendedForm.controls['ExtensionPeriod'].errors?.required  \">This field is required</mat-error>\n         \n              </mat-form-field>\n              \n      </div>\n                        \n               <div>\n\n                <button id=\"my-form-button\" type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"extendedForm.invalid\" >Send Request</button>\n               </div>\n              \n             \n              </div>\n            </mat-card-content>\n          </form>  \n           <div *ngIf=\"!available\" class=\"alert alert-danger\">\n             No Agreements available for Extension.\n              </div>\n          </mat-card>  \n  \n                </mat-sidenav-content>\n              </mat-sidenav-container>\n          \n              <div id=\"MyModal\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\" role=\"document\">\n                  <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" data-dismiss=\"modal\" (click)=\"basicModal.hide()\">\n                        <span aria-hidden=\"true\">×</span>\n                      </button>\n                      <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:rgb(60, 191, 196)\">Rental Extension Request Page</h4>\n                    </div>\n                    <div class=\"modal-body\">\n                      <p>Rental Extension Request Page</p><br/>\n                      <p style=\"color:rgb(60, 191, 196); font-weight: bold\">Here you can select to:</p>\n                      <p>-Click DROPDOWN ICON to select rental agreement  </p>\n                      <p>-Click CALENDER ICON to select the preferred rental extension date  </p>\n                     \n                      <p>-Click SEND REQUEST to send the rental extension request</p>\n                    </div>\n                    <div class=\"modal-footer\">\n                      <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div> \n              <div id=\"MyModal1\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\" role=\"document\">\n                  <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"basicModal.hide()\">\n                        <span aria-hidden=\"true\">×</span>\n                      </button>\n                      <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:green\">Request to extend rental agreement Page</h4>\n                    </div>\n                    <div class=\"modal-body\">\n                      <div class=\"modal-body\">\n                        <a href=\"https://motlatso-baps.github.io/HelpInturbidus/pages/6269request-to-extend-rental-agreement.html\" target=\"_blank\" mat-menu-item>\n                         \n                          <mat-icon class=\"icons\">help_outline</mat-icon>        \n                          Go to Help</a>\n                      </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                      <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n           \n           <!-- Modal -->\n           <div class=\"modal fade\" id=\"editEmployeeTypeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\" role=\"document\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header  alert-danger\">\n                  <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Error Notification</h3>\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div class=\"modal-body\">\n                 <p>Please provide a valid date!</p>\n               \n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n                  \n                </div>\n              </div>\n            </div>\n          </div>   \n         \n          <ng-template #content let-modal>\n            <div class=\"modal-header alert-success\">\n              <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Successfully Requested Extension</h3>\n              <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button> -->\n            </div>\n            <div class=\"modal-body\">\n              <div class=\"form-group\">\n                <label for=\"exampleFormControlInput1\">Your extension request has been received successfully.We will be in touch. </label>\n              </div>\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\"modal.close()\" routerLink=\"/\" >Ok</button>\n            </div>\n          </ng-template>\n          \n         \n              \n          \n          \n          \n         ","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { TerminatedAgree } from '../terminated-agree';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MyServiceService } from '../my-service.service';\r\nimport { TerminateRService } from '../terminate-r.service';\r\nimport { MakePaymentService } from '../make-payment.service';\r\nimport { Terminate } from '../terminate';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-request-to-terminate-rental-agreement',\r\n  templateUrl: './request-to-terminate-rental-agreement.component.html',\r\n  styleUrls: ['./request-to-terminate-rental-agreement.component.css']\r\n})\r\nexport class RequestToTerminateRentalAgreementComponent implements OnInit {\r\n\r\n  dataSaved = false;  \r\n  terminatedForm: any;  \r\n  allTerminated: Observable<TerminatedAgree[]>;  \r\n  terminatedIdUpdate = null;  \r\n  massage = null;  \r\n  url=\"http://formspree.io/nhlanhlakhosa69@gmail.com\";\r\n  totalAmount = 0;\r\n  allRentals:any; \r\n  searchForm: any; \r\n  AmountDue:any;\r\n  selected:any;\r\n  Terminate = new Terminate();\r\n  @ViewChild('content') content : any;\r\n  date: string;\r\n  available = true;\r\n  EndDate: string;\r\n\r\n  \r\n  constructor(private modalService: NgbModal ,private apiService:MakePaymentService,private formbuilderUpdate:FormBuilder) { }  \r\n  openWindowCustomClass() {\r\n    this.modalService.open(this.content,{ centered: true });\r\n  }\r\n\r\n  ngOnInit()  :void {\r\n\r\nvar pipe = new DatePipe('en-ZA'); // Use your own locale\r\n\r\n\r\nconst today = new Date()\r\nconst days = new Date(today)\r\nvar format=days.setDate(days.getDate() + 30)\r\nthis.date =pipe.transform(format,'yyyy-MM-dd')\r\n\r\n    \r\n    this.GetAllRentalAgreements1();\r\n    this.terminatedForm = this.formbuilderUpdate.group({  \r\n  \r\n  \r\n      RentalAgreementID: ['', [Validators.required]], \r\n      TerminationDate: ['', [Validators.required]],   \r\n      TerminationReason: ['', [Validators.required]],   \r\n\r\n    });\r\n  }\r\n    GetAllRentalAgreements1(){\r\n      this.apiService.getRentalAgreement1(sessionStorage.getItem('clientID')).toPromise().then(data => {//ClientID\r\n        this.allRentals = data; debugger;\r\n        if (this.allRentals.length == 0) \r\n        {\r\n          this.available = false;\r\n        }\r\n       // this.allRentals['RENTALENDDATE'] == this.EndDate;\r\n        \r\n        console.log(data);\r\n        debugger;\r\n      });\r\n\r\n\r\n  \r\n    }\r\n    GetAmount(ReferenceNo:string){debugger;\r\n      this.apiService.getAmount1(ReferenceNo).toPromise().then(data => {//ClientID\r\n        this.AmountDue = data.toString(); debugger;\r\n        \r\n      });\r\n    }\r\n    Getdate(RENTALAGREEMENTID:string){debugger;\r\n      this.apiService.getDate(RENTALAGREEMENTID).toPromise().then(data => {//ClientID\r\n        this.EndDate = data.toString(); debugger;\r\n        \r\n      });\r\n    }\r\n    public onOptionsSelected(event) {debugger;\r\n      const value = event.target.value;\r\n      this.selected = value;\r\n      console.log(value);\r\n   }\r\n\r\n   OnSubmit(){\r\nthis.Terminate=this.terminatedForm.value; debugger;\r\nthis.apiService.sendTermination(this.Terminate).subscribe(data=>{\r\n  debugger;\r\n  this.openWindowCustomClass();\r\n  //this.myBooking();\r\n  \r\n});\r\n\r\n\r\n  \r\n\r\n\r\n// var now = new Date();\r\n// var year = now.getFullYear();\r\n// var month = now.getMonth();\r\n// var day = now.getDay();\r\n// var minDate = moment({year: this.year - 100, month: this.month, day: this.day}).format('YYYY-MM-DD');\r\n\r\n\r\n\r\n   }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n  \r\n","<app-is-logged-in></app-is-logged-in>\r\n<mat-sidenav-container class=\"example-container\"  >\r\n    <mat-sidenav mode=\"side\" opened>\r\n      <app-nav></app-nav>\r\n\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n      <app-username></app-username>\r\n          <mat-card>\r\n            <mat-toolbar color=\"primary\">\r\n              <div class=\"container w-100 row\" >\r\n              <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">Rental Termination Request\r\n\r\n               </div>\r\n\r\n               <div align=\"right\"  class=\"col-6\">\r\n\r\n               </div>\r\n               <br>\r\n\r\n\r\n\r\n            </div>\r\n            </mat-toolbar>\r\n          <br><br>\r\n            <mat-card-content>\r\n\r\n              <form  [formGroup]=\"terminatedForm\" (ngSubmit)=\"OnSubmit()\"> \r\n              <!-- <div>\r\n                <mat-form-field class=\"w-50\">\r\n                  <mat-label>Choose a property to terminate rental agreement</mat-label>\r\n                  <mat-select>\r\n                    <mat-option value=\"Apartment/Flat\">1080 Prospect St, Hatfield, Pretoria || 002</mat-option>\r\n                    <mat-option value=\"Commune\">1080 Prospect St, Hatfield, Pretoria || 001</mat-option>\r\n                    <mat-option value=\"Townhouse\">1122 Burnett St, Hatfield, Pretoria || 0002</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div> -->\r\n              \r\n              <div *ngIf=\"available\">\r\n              <div>\r\n                <mat-form-field class=\"w-100\">\r\n                  <mat-label>Choose a property to terminate rental agreement</mat-label>\r\n                  <mat-select #ReferenceNo  formControlName=\"RentalAgreementID\" >\r\n                    <mat-option  matInput *ngFor=\"let selectCity of allRentals \" value=\"{{selectCity.RentalAgreementID}}\"  selected>Property ReferenceNo: {{selectCity.PropertyID }} || Property Address: {{selectCity.PropertyAddress }} || Agreement ReferenceNo: {{selectCity.RefferenceNo }}  </mat-option>\r\n                    <!-- <mat-error *ngIf=\"userForm.controls['Name'].errors?.pattern && userForm.controls['Name'].touched \">Name is not valid. Special characters, numbers or spaces are not allowed!</mat-error> -->\r\n\r\n          \r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"terminatedForm.controls['RentalAgreementID'].errors?.required && terminatedForm.controls['RentalAgreementID'].touched \">This field is required</mat-error>\r\n                  <mat-hint>Click the dropdown icon to select an agreement</mat-hint>\r\n\r\n                </mat-form-field>\r\n              </div>\r\n            <br>\r\n           \r\n\r\n                        <div>\r\n                                <mat-form-field class=\"w-50\">\r\n                                  <input   matInput [matDatepicker]=\"picker\" matTooltip=\"Termination Date\" [min]=\"date\" [max]=\"EndDate\" formControlName=\"TerminationDate\"  placeholder=\"Select the termination date at least 30 days from today\" readonly>\r\n                                  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                                  <mat-datepicker #picker></mat-datepicker>\r\n                                  <mat-error *ngIf=\"terminatedForm.controls['TerminationDate'].errors?.required && terminatedForm.controls['TerminationDate'].touched \">This field is required</mat-error>\r\n                                  <!-- <mat-error *ngIf=\"userForm.controls['Name'].errors?.pattern && userForm.controls['Name'].touched \">Name is not valid. Special characters, numbers or spaces are not allowed!</mat-error> -->\r\n                                  <mat-hint>Click the calendar icon to select an date</mat-hint>\r\n\r\n                                </mat-form-field>\r\n                                \r\n                        </div>\r\n                        <br>\r\n                        <div>\r\n\r\n                          <mat-form-field appearance=\"fill\"  class=\"w-100\">\r\n                            <mat-label>Termination Reason</mat-label>\r\n                          <textarea  matInput  class=\"form-control\" rows=\"5\" placeholder=\"Reason for rental agreement termination.....\" formControlName=\"TerminationReason\"  ></textarea>\r\n                          <mat-error *ngIf=\"terminatedForm.controls['TerminationReason'].errors?.required && terminatedForm.controls['TerminationReason'].touched \">This field is required</mat-error>\r\n                          <mat-hint>Please input the termination reason </mat-hint>\r\n                        </mat-form-field>\r\n                          <!-- <mat-form-field class=\"w-100\"> -->\r\n\r\n                \r\n                      </div> \r\n                      <br>\r\n                   \r\n                     \r\n                    \r\n               <div >\r\n\r\n                <button  id=\"my-form-button\" type=\"submit\" mat-raised-button color=\"primary\" matTooltip=\"Click Submit Button\" [disabled]=\"terminatedForm.invalid\">Send Request</button>\r\n\r\n               </div>\r\n              </div>\r\n               </form> \r\n               <div *ngIf=\"!available\" class=\"alert alert-danger\">\r\n             No Agreements available for Termination. Please make sure all rental payments are made before attempting to terminate.\r\n              </div>\r\n            </mat-card-content>\r\n          </mat-card>\r\n\r\n                </mat-sidenav-content>\r\n              </mat-sidenav-container>\r\n              <div id=\"MyModal\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\r\n                <div class=\"modal-dialog\" role=\"document\">\r\n                  <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" data-dismiss=\"modal\" (click)=\"basicModal.hide()\">\r\n                        <span aria-hidden=\"true\">×</span>\r\n                      </button>\r\n                      <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:rgb(60, 191, 196)\">Rental Termination Request Page</h4>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                      <p>Rental Termination Request Page</p><br/>\r\n                      <p style=\"color:rgb(60, 191, 196); font-weight: bold\">Here you can select to:</p>\r\n                      <p>-Click DROPDOWN ICON to select rental agreement  </p>\r\n                      <p>-Click CALENDER ICON to select the preferred rental termination date  </p>\r\n                      <p>-Click COMMENT INPUT to provide termination reason</p>\r\n                      <p>-Click SEND REQUEST to send the rental termination request</p>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                      <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div id=\"MyModal1\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\r\n                <div class=\"modal-dialog\" role=\"document\">\r\n                  <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"basicModal.hide()\">\r\n                        <span aria-hidden=\"true\">×</span>\r\n                      </button>\r\n                      <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:green\">Request to terminate rental agreement Page</h4>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                      <div class=\"modal-body\">\r\n                        <a href=\"https://motlatso-baps.github.io/HelpInturbidus/pages/6268request-to-terminate-rentals-agreement.html\" target=\"_blank\" mat-menu-item>\r\n                         \r\n                          <mat-icon class=\"icons\">help_outline</mat-icon>        \r\n                          Go to Help</a>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                      <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n           <!-- Modal -->\r\n           <div class=\"modal fade\" id=\"editEmployeeTypeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog\" role=\"document\">\r\n              <div class=\"modal-content\">\r\n                <div class=\"modal-header  alert-success\">\r\n                  <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Success Notification</h3>\r\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                 <p>The request was successfully submitted!</p>\r\n\r\n                <div class=\"modal-footer\">\r\n                  <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <ng-template #content let-modal>\r\n            <div class=\"modal-header alert-success\">\r\n              <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Successfully Requested Termination</h3>\r\n              <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button> -->\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleFormControlInput1\">Your termination request has been received successfully.We will be in touch </label>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\"modal.close()\" routerLink=\"/\" >Ok</button>\r\n            </div>\r\n          </ng-template>","import { Injectable } from '@angular/core';\n \nimport { HttpClient } from '@angular/common/http';  \nimport { HttpHeaders } from '@angular/common/http';  \nimport { Observable } from 'rxjs';  \nimport { Job } from 'src/classes/Jobs';  \nimport { OnlineLink } from './Global';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestedjobsService {\n  url = OnlineLink;  \n  constructor(private http: HttpClient) { }  \n\n  GetReqJobs(ID:number): Observable<[]> {  debugger;\n    return this.http.get<[]>(this.url + 'api/Requested/GetRequestedJobs/'+ID);  \n  } \n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport { Newpass } from '../newpass';\nimport { VerifyOTP } from '../verify-otp';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n  constructor(private apiService: ApiService, private router:Router) { }\n\n  otpMatch=false;\n  emailResent=false;\n  failedOTP=false;\n  failedToSend=false;\n  newPassSet=false;\n  newPassFailed=false;\n  usrname=\"\";\n  enteredOTP=\"\";\n  dataX = new VerifyOTP();\n  newP = new Newpass();\n  pss1=\"\";\n  pss2=\"\";\n  firstPanel=true;\n  complete=false;\n  saveInProgress=false;\n  noUsrEntered=false;\n  noOTPentered=false;\n  noMatch=false;\n  userForm:any;\n\n  ngOnInit() {\n    this.userForm = new FormGroup({\n      Username : new FormControl(\"\",[Validators.required,Validators.pattern(\"^[A-Za-z0-9ñÑáéíóúÁÉÍÓÚ]+$\")]), \n\n\n\n    })\n  }\n\n  requestReset()\n  {\n    this.noUsrEntered=false;\n    if(this.usrname==\"\")\n    {\n      this.noUsrEntered=true;\n    }else{\n      this.saveInProgress=true;\n      document.getElementById(\"overlay\").style.display = \"block\";\n      this.apiService.requestPasswordReset(this.usrname).subscribe(x=>{\n        this.getResult(x);\n      });\n    }\n  }\n  getResult(x:any)\n  {\n    this.saveInProgress=false;\n    document.getElementById(\"overlay\").style.display = \"none\";\n    if(x==true)\n    {\n      this.emailResent=true;\n      this.firstPanel=false;\n      this.failedToSend=false;\n    }else{\n      this.failedToSend=true;\n    }\n  }\n\n\n\n\n\n\n  checkOTP()\n  {\n    this.noOTPentered=false; \n    if(this.enteredOTP.length!=6)\n    {\n      this.noOTPentered=true;\n    }else{\n      this.saveInProgress=true;\n      document.getElementById(\"overlay\").style.display = \"block\";\n      this.dataX.otp=this.enteredOTP;\n      this.dataX.usrn=this.usrname;\n      console.log(this.dataX);\n      this.apiService.verifyResetOTP(this.dataX).subscribe(h=>{\n        this.getResponse(h);\n      });\n    }\n\n  }\n\n  getResponse(x:any)\n  {\n    this.saveInProgress=false;\n    document.getElementById(\"overlay\").style.display = \"none\";\n    if(x==true)\n    {\n      this.otpMatch = true;\n      this.emailResent = false;\n      this.failedOTP=false;\n    }else{\n      this.failedOTP = true;\n    }\n  }\n\n\n\n\n\n\n\n  setNewPass()\n  {\n    this.noMatch=false;\n    this.newPassFailed=false;\n    if(this.pss1.length==0 || this.pss2.length==0)\n    {\n      this.newPassFailed=true;\n    }else{\n      if(this.pss1!=this.pss2)\n    {\n      this.noMatch=true;\n    }else{\n      this.saveInProgress=true;\n      document.getElementById(\"overlay\").style.display = \"block\";\n      this.newP.pssw=this.pss1;\n      this.newP.usrn=this.usrname;\n      this.apiService.setNewPass(this.newP).subscribe(p=>{\n        this.getStatus(p);\n      });\n    }\n    }\n    \n  }\n\n  getStatus(p:any)\n  {\n    this.saveInProgress=false;\n    document.getElementById(\"overlay\").style.display = \"none\";\n    if(p==true)\n    {\n      this.newPassSet=true;\n      this.complete=true;\n      this.firstPanel=false;\n      this.failedToSend=false;\n      this.emailResent=false;\n      this.failedOTP=false;\n      this.otpMatch=false;\n    }else{\n      this.newPassFailed=true;\n    }\n  }\n\n}\n","\n<div class=\"container\">\n      \n    <div class=\"col-md-6\" style=\"margin:auto; margin-bottom: 75px;\">\n        <!--This is the help icon, when clicked, modal pops up-->\n    <div>\n        <button type=\"button\" mat-raised-button  color=\"primary\" block=\"true\"  mdbWavesEffect routerLink=\"/login\">Cancel</button>\n    </div>\n        <form [formGroup]=\"userForm\" *ngIf=\"firstPanel\" class=\"text-center border border-light p-5\" action=\"#!\" style=\"background-color: #c8f0ea\">\n            <p class=\"h4 mb-4\">Reset Password</p>\n            <div *ngIf=\"noUsrEntered\" class=\"alet alert-danger\">Please enter a username</div> \n            <mat-form-field >\n            <input  id=\"username\" matInput formControlName=\"Username\" name=\"username\" placeholder=\"Username\" [(ngModel)]=\"usrname\"> \n            <mat-error *ngIf=\"userForm.controls['Username'].errors?.pattern && userForm.controls['Username'].touched \">Username is not valid. Special characters, numbers or spaces are not allowed!</mat-error>\n            <mat-error *ngIf=\"userForm.controls['Username'].errors?.required \">Username is required</mat-error>\n\n        </mat-form-field>\n        <br>\n        <div>\n            <button mat-raised-button  color=\"primary\"  block=\"true\"  (click)=\"requestReset()\"mdbWavesEffect type=\"submit\" [disabled]=\"!userForm.valid\">Reset</button>\n        </div>\n        </form>\n\n        <div *ngIf=\"failedToSend\" class=\"alert alert-danger\">\n            User does not exist !\n        </div>\n\n        <form *ngIf=\"emailResent\" class=\"text-center border border-light p-5\" action=\"#!\" style=\"background-color: #c8f0ea\">\n            <p class=\"h4 mb-4\">Enter OTP</p>\n            <div *ngIf=\"noOTPentered\" class=\"alet alert-danger\">Please enter an OTP (6-digits)</div> \n            <input type=\"text\" id=\"otp\" name=\"username\" class=\"form-control mb-4\" maxlength=\"6\" placeholder=\"OTP\" [(ngModel)]=\"enteredOTP\">\n            <button mat-raised-button  color=\"primary\" block=\"true\"  (click)=\"checkOTP()\" mdbWavesEffect type=\"submit\">Submit</button>\n        </form>\n\n        <div *ngIf=\"failedOTP\" class=\"alert alert-danger\">\n            OTP incorrect! Please resubmit!\n        </div>\n\n        <form *ngIf=\"otpMatch\" class=\"text-center border border-light p-5\" action=\"#!\" style=\"background-color: #c8f0ea;\">\n            <p class=\"h4 mb-4\">New Password</p>\n            <div *ngIf=\"noMatch\" class=\"alet alert-danger\">Passwords must match</div> \n            <input type=\"password\" id=\"pssw1\" name=\"passw1\" class=\"form-control mb-4\" placeholder=\"Password\" [(ngModel)]=\"pss1\">\n          \n            <div *ngIf=\"noMatch\" class=\"alet alert-danger\">Passwords must match</div> \n            <input type=\"password\" id=\"pssw2\" name=\"passw2\" class=\"form-control mb-4\" placeholder=\"Confirm Password\" [(ngModel)]=\"pss2\">\n            <button mat-raised-button  color=\"primary\" block=\"true\" (click)=\"setNewPass()\" mdbWavesEffect type=\"submit\">Submit</button>\n        </form>\n\n        <div *ngIf=\"newPassFailed\" class=\"alert alert-danger\">\n                Please enter a password!\n            </div>\n\n        <form *ngIf=\"complete\" class=\"text-center border border-light p-5\" action=\"#!\" style=\"background-color: #c8f0ea\">\n                <p class=\"h4 mb-4\">Password Reset!</p>\n                <button mat-raised-button  color=\"primary\" block=\"true\"  routerLink=\"/login\" mdbWavesEffect type=\"submit\">Login</button>\n        </form>\n    </div>\n\n\n    \n</div>\n\n\n\n<div id=\"overlay\">\n        <span id=\"nav\" *ngIf=\"saveInProgress\">\n            <div class=\"spinner\" style=\"display: block; position: fixed\">\n            </div>\n        </span>\n        <span id=\"nav\" *ngIf=\"saveInProgress\">\n            <div class=\"submit-message\" style=\"display: block; color: #FFFFFF; position: fixed; left: 49.7%; top: 54.5%;\">\n                Requesting...\n            </div>\n        </span>\n    </div>\n\n   <!--HTML for HELP MODAL. Load help message from database-->\n   <div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <button type=\"button\" class=\"close pull-right\" data-dismiss=\"modal\" aria-label=\"Close\" >\n            <span aria-hidden=\"true\">×</span>\n          </button>\n          <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:rgb(60, 191, 196)\">Reset Password</h4>\n        </div>\n        <div class=\"modal-body\">\n          <p >This is the reset password screen.</p><br/>\n          <p style=\"color:rgb(60, 191, 196); font-weight: bold\">The process follows:</p>\n          <p>-Enter your username and click RESET</p>\n          <p>-Enter your OTP that we mailed to you then click SUBMIT</p>\n          <p>-Enter your new password and click SUBMIT</p>\n          <p>-If you did not receive our email, simply navigate back to the Account menu and then click Reset My Password again</p>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" mdbBtn color=\"secondary\" class=\"waves-light\" aria-label=\"Close\"  mdbWavesEffect>Close</button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!--End of help modal-->\n  <div id=\"MyModal1\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"basicModal.hide()\">\n            <span aria-hidden=\"true\">×</span>\n          </button>\n          <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:green\">Reset password Page</h4>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"modal-body\">\n            <a href=\"https://motlatso-baps.github.io/HelpInturbidus/index.html?page=623-reset-password.html\" target=\"_blank\" mat-menu-item>\n             \n              <mat-icon class=\"icons\">help_outline</mat-icon>        \n              Go to Help</a>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n","export class SearchPropety {\n   \n    minamount:number;\n    minbed:number;\n    maxamount:number;\n    type:string;\n    searchvalue:string;\n   \n}\n","//loader.service.ts\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  public isLoading = new BehaviorSubject(false);\n  constructor() { }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-success',\n  templateUrl: './success.component.html',\n  styleUrls: ['./success.component.css']\n})\nexport class SuccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"modal fade\" id=\"editEmployeeTypeModa2\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header  alert-info\">\n          <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Payment</h3>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n         <p>The payment was successful! </p>\n       \n        <div class=\"modal-footer\">\n         \n          &nbsp;\n          <button  mat-raised-button color=\"primary\" data-dismiss=\"modal\" >Close</button>\n        </div>\n      </div>\n    </div>\n  </div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n//import { TerminatedAgree } from './terminated-agree';\r\nimport * as myGlobal  from './Global';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TerminateRService {\r\n   //url = 'http://localhost:30135/Api/Apply'; \r\n   url = myGlobal.OnlineLink + 'api/Apply';\r\n    // url = 'http://localhost:30135/Api/Apply';  \r\n  constructor(private http: HttpClient) {}  \r\n  public downloadFile(docFile: string): Observable < Blob > {  \r\n      return this.http.get(this.url + '/GetFile?docFile=' + docFile, {  \r\n          responseType: 'blob'  \r\n      });  \r\n  }  \r\n  public downloadImage(image: string): Observable < Blob > {  \r\n      return this.http.get(this.url + '/GetImage?image=' + image, {  \r\n          responseType: 'blob'  \r\n      });  \r\n  }  \r\n  public getFiles(): Observable < any[] > {  \r\n      return this.http.get < any[] > (this.url + '/GetFileDetails');  \r\n  }  \r\n  AddFileDetails(data: FormData): Observable < string > {  debugger;\r\n      let headers = new HttpHeaders();  \r\n      headers.append('Content-Type', 'application/json');  \r\n      const httpOptions = {  \r\n          headers: headers  \r\n      };  \r\n      return this.http.post < string > (this.url + '/AddFileDetails', data, httpOptions); debugger; \r\n  }  \r\n}  \r\n\r\n  \r\n","import { Dates } from 'src/classes/Date';\n\nexport class Terminate {\n\n    RentalAgreementID:number;\n    TerminationDate:Date;\n    TerminationReason:string;\n    ExtensionDate:Date;\n    MaintenanceReason:string;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Booking } from '../booking';\nimport { BookingService } from '../booking.service';\nimport * as myGlobal  from '../Global';\n\n@Component({\n  selector: 'app-update-booking',\n  templateUrl: './update-booking.component.html',\n  styleUrls: ['./update-booking.component.css']\n})\nexport class UpdateBookingComponent implements OnInit {\n  allBookings: any;\n  noBoookings: boolean;\n  @ViewChild('content') content : any;\n\n\n  constructor(private modalService: NgbModal,private httpService: HttpClient,private bookingService:BookingService) { }\n  EMPLOYEEs: string[];  \n  DATEs: string[]; \n  SLOTs: string[];\n  booking = new Booking();\n  ngOnInit(): void {\n    this.loadSlots()\n  }\n  \n  loadSlots()\n  { this.httpService.get( myGlobal.OnlineLink+ 'Api/GetAvailableSlots/Slots').subscribe(  \n    data => { this.allBookings =data;\n      this.EMPLOYEEs = data as string [];  \n     this.DATEs = data as string []\n      this.SLOTs = data as string []\n      debugger;\n      if(this.EMPLOYEEs.length==0){\n      \n        this.noBoookings=true;\n       }\n       else{\n        this.noBoookings=false;\n       }\n        \n\n\n    }  \n  ); }\n\n  openWindowCustomClass() {\n    this.modalService.open(this.content,{ centered: true });\n  }\n\n\n  OnSubmit(EMPLOYEEDATETIMESLOTID){\n    debugger;\n    this.booking.EMPLOYEEDATETIMESLOTID=Number(sessionStorage.getItem('PreviousEMPLOYEEDATETIMESLOTID'));//to be changed to previous booking aftert testing\n    this.booking.CLIENTID=Number(sessionStorage.getItem('clientID')); \n    \n    this.booking.newEMPLOYEEDATETIMESLOTID=EMPLOYEEDATETIMESLOTID;\n\n\n    //this.bookingService.PreviousEMPLOYEEDATETIMESLOTID; \n    this.bookingService.updateBooking(this.booking).subscribe(data=>{\nthis.openWindowCustomClass();\n      this.loadSlots();\n      \n    });\n\n    \n  }\n}\n","<app-is-logged-in></app-is-logged-in>\n\n<mat-sidenav-container class=\"example-container\"  >\n    <mat-sidenav mode=\"side\" opened> \n      <app-nav></app-nav>\n  \n  \n    </mat-sidenav>\n    <mat-sidenav-content>\n      <app-username></app-username>\n          <mat-card>  \n            <mat-toolbar color=\"primary\">  \n              <div class=\"container w-100 row\">\n              <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">  \n               Update Booking <br>\n\n                <!-- <h6 style=\"font-size: 10px;\">Select your updated booking</h6> -->\n               \n             \n               </div>\n  \n               <div align=\"right\"  class=\"col-6\">\n                \n                <button class=\"btn btn-primary\"  routerLink=\"/ViewBooking\" style=\"vertical-align: middle; display: inline-flex; line-height: 24px;\" type=\"button\" >\n                   \n                    <i style=\" color: rgb(66, 252, 9);\" class=\"material-icons\">\n                        keyboard_backspace\n                      </i>\n                      <span>  \n                       \n                        Go Back To My Bookings</span>\n    \n                  </button>\n                  \n                  \n                  \n  \n                \n  \n               </div>\n               <br>\n            \n            \n  \n            </div>\n            </mat-toolbar>  \n          <br><br>  \n            <mat-card-content *ngIf=\"noBoookings\">  \n             \n                <h4>Select your updated booking slot </h4>\n                <table class=\"mat-elevation-z8 table w-100\" >\n            <thead class=\"thead-dark\">\n                <tr>\n  \n                  <th>Employee Name</th>\n                  <th>Employee Surname</th>\n                  <th>Phone Number</th>\n                    <th>Date</th>\n                    <th>Start Date</th>\n                    <th>End Date</th>\n                    \n                    <th>Action</th>\n                        \n                </tr>\n            </thead>\n            <tbody>\n                      <tr *ngFor=\"let item of allBookings\">\n                        <td hidden>{{item.EmployeeDateTimeSLotID}}</td> \n                        <td>{{item.Name}}</td> \n                        <td>{{item.Surname}}</td> \n                        <td>{{item.PhoneNumber}}</td>\n                        <td>{{item.Date}}</td> \n                        <td>{{item.Startime }}</td>  \n                        <td>{{item.Endtime}}</td> \n                          \n                      <td> <button mat-raised-button color=\"primary\" (click)=\"OnSubmit(item.EmployeeDateTimeSLotID)\">Update Booking</button></td>\n                        \n                    </tr>\n        \n             \n            </tbody>\n          </table> \n            </mat-card-content>  \n            <div *ngIf=\"!noBoookings\" class=\"alert alert-danger\">\n                There are no available booking slots.Please contact us on 0123456789 for alternative arrangments!\n            </div> \n          </mat-card>  \n  \n  \n                \n           \n          \n                </mat-sidenav-content>\n              </mat-sidenav-container>\n          \n          \n          \n  \n               <!-- /////////////////////////////////////////Area Modals //////////////////////////-->\n          \n          <!-- Add Area modal -->\n          \n          <!-- Modal -->\n          <div class=\"modal fade\" id=\"addAreaModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\" role=\"document\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header alert-primary \">\n                  <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Add New Booking</h3>\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div class=\"modal-body\">\n                  <div class=\"form-group\">\n                    <label for=\"exampleFormControlInput1\">Employee Type Name</label>\n                    <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"\">\n                  </div>\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\n                  <button type=\"button\" class=\"btn btn-success\">Add New Booking</button>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <!-- Edit Area modal -->\n          \n          <!-- Modal -->\n          <div class=\"modal fade\" id=\"editEmployeeTypeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\" role=\"document\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header  alert-info \">\n                  <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Booking Confirmation</h3>\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div class=\"modal-body\">\n                 <p>Are you sure you want to make the booking?</p>\n               \n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">Yes</button>\n                  <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">No</button>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          \n          <!-- Delete Area modal -->\n          \n          \n          <ng-template #content let-modal>\n            <div class=\"modal-header alert-success\">\n              <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Success</h3>\n              <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button> -->\n            </div>\n            <div class=\"modal-body\">\n              <div class=\"form-group\">\n                <label for=\"exampleFormControlInput1\">You have successfully updated your booking.</label>\n              </div>\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\" modal.close()\" routerLink=\"/ViewBooking\"   >Ok</button>\n            </div>\n          </ng-template>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-username',\n  templateUrl: './username.component.html',\n  styleUrls: ['./username.component.css']\n})\nexport class UsernameComponent implements OnInit {\n  names: string;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.names=sessionStorage.getItem('clientName') +\" \"+ sessionStorage.getItem('clientSurname') ;\n    if (sessionStorage.getItem('clientID') == null) {\n      this.router.navigate(['/login']);\n    }\n  }\n\n}\n","<nav class=\"navbar  navbar-dark \"  style=\"  background-color: #111;  \">\n    <div class=\"container-fluid\">\n      <div class=\"navbar-header\">\n        <a class=\"navbar-brand\" href=\"#\"></a>\n      </div>\n   \n      <ul class=\"nav navbar-nav navbar-right nav-item nav-link\">\n        <a  routerLink=\"/view-user\" class=\"nav-link\"><li style=\" font-size: 20px; \">{{names}}<mat-icon class=\"icons\">account_circle</mat-icon></li></a>\n      </ul>\n    </div>\n  </nav>","export class VerifyOTP {\r\n    otp:string;\r\n    usrn:string;\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router, RouterModule, Routes } from '@angular/router';\n//import { GlobalvariablesService } from '../globalvariables.service';\nimport { stripGeneratedFileSuffix } from '@angular/compiler/src/aot/util';\nimport { APIService } from '../Services/api.service';\nimport { Otp } from '../otp';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n@Component({\n  selector: 'app-verify',\n  templateUrl: './verify.component.html',\n  styleUrls: ['./verify.component.css']\n})\nexport class VerifyComponent implements OnInit {\n  constructor(private modalService: NgbModal,private apiService: ApiService,private router:Router,private gVars:APIService) { }\n\n  enteredOTP=\"\";\n  otpObj = new Otp();\n  success=false;\n  failure=false;\n  noOTP=false;\n  ngOnInit() {\n  }\n  @ViewChild('content') content : any;\n\n  checkOTP()\n  {\n    this.noOTP=false;\n    if(this.enteredOTP.length!=6)\n    {\n      this.noOTP=true;\n    }else{\n      this.otpObj.addr = this.enteredOTP;\n      this.otpObj.cID = parseInt(window.sessionStorage.getItem(\"clientID\"));\n      this.apiService.verifyWithOTP(this.otpObj).subscribe(p=>{\n        this.getResult(p);\n        debugger\n      });\n    }\n    \n  }\n\n  getResult(p:any)\n  {\n    if(p==true)\n    {\n      this.success=true;\n      this.failure=false;\n      //this.gVars.setVerified(true);\n      sessionStorage.setItem('verified','true');\n      this.openWindowCustomClass();\n\n    }else{\n      this.failure=true;\n    }\n  }\n\n  ResendOTP()\n  {\n    //  this.otpObj.addr = this.enteredOTP;\n      this.otpObj.cID = parseInt(window.sessionStorage.getItem(\"clientID\"));\n      this.apiService.ResendOTP(this.otpObj).subscribe(p=>{\n      //  this.getResult(p);\n        debugger\n      });\n    \n    \n  }\n\n  openWindowCustomClass() {\n    this.modalService.open(this.content,{ centered: true });\n  }\n\n\n}\n","<mat-sidenav-container class=\"example-container\"  >\n    <mat-sidenav mode=\"side\" opened > \n     \n  <app-nav></app-nav>\n  \n  \n    </mat-sidenav>\n    <mat-sidenav-content>\n\n<app-username></app-username>\n\n\n<div class=\"container\">\n    <img src=\"assets/Logo.png\"   class=\"d-inline-block align-middle mr-2\">\n    <div class=\"col-md-12\" style=\"margin:auto\" style=\"text-align: center;\">\n        <form  class=\"text-center border border-light p-5\" action=\"#!\" style=\"background-color:rgb(60, 191, 196)\">\n            <p class=\"h4 mb-4\">Enter OTP</p>\n            <p>If you have not recieved an OTP please ensure your email address was inputted correctly then select to Resend.</p>\n            <div *ngIf=\"noOTP\" class=\"alet alert-danger\">Please Enter the OTP sent to your Email (6-digits)</div> \n            <input type=\"text\" id=\"otp\" maxlength=\"6\" name=\"username\" class=\"form-control mb-4\" placeholder=\"OTP\" [(ngModel)]=\"enteredOTP\">\n            <button mdbBtn block=\"true\" color=\"light-blue\" (click)=\"checkOTP()\" mdbWavesEffect type=\"submit\">Verify</button> <br>\n            <button mdbBtn block=\"true\" color=\"light-green\" (click)=\"ResendOTP()\" mdbWavesEffect type=\"submit\">Resend OTP</button>\n        </form>\n\n        <div  *ngIf=\"success\" class=\"alert alert-success\" >\n         OTP Verified!\n        </div>\n\n        <div  *ngIf=\"failure\" class=\"alert alert-danger\" >\n           Incorrect OTP! Please try again!\n        </div>\n    </div>\n</div>\n</mat-sidenav-content>\n</mat-sidenav-container>\n\n<ng-template #content let-modal>\n    <div class=\"modal-header alert-success\">\n      <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Successfully Verified</h3>\n      <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button> -->\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"form-group\">\n        <label for=\"exampleFormControlInput1\">You have successfully verified your account !</label>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\"modal.close()\" routerLink=\"/\"  >Ok</button>\n    </div>\n  </ng-template>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BookingService } from '../booking.service';\r\nimport { Booking } from '../booking';\r\nimport { debounce } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { saveAs as importedSaveAs } from \"file-saver\";\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { mobiscroll, MbscEventcalendarOptions } from 'src/lib/mobiscroll/js/mobiscroll.angular.min.js';\r\nimport * as myGlobal  from '../Global';\r\n\r\n\r\n@Component({\r\n  selector: 'app-view-booking',\r\n  templateUrl: './view-booking.component.html',\r\n  styleUrls: ['./view-booking.component.css']\r\n})\r\nexport class ViewBookingComponent implements OnInit {\r\n  allBookings:any;\r\n  booking = new Booking();\r\n  searchedKeyword: string;\r\n  ID: number;\r\n  noBoookings: boolean;\r\n  @ViewChild('content') content : any;\r\n\r\n  events: any;\r\n    \r\n  eventSettings: MbscEventcalendarOptions = {\r\n      lang: 'en',                        // Specify language like: lang: 'pl' or omit setting to use default\r\n      theme: 'ios',                      // Specify theme like: theme: 'ios' or omit setting to use default\r\n  themeVariant: 'light',                 // More info about themeVariant: https://docs.mobiscroll.com/4-10-7/angular/eventcalendar#opt-themeVariant\r\n      display: 'inline',                 // Specify display mode like: display: 'bottom' or omit setting to use default\r\n      calendarHeight: 610,               // More info about calendarHeight: https://docs.mobiscroll.com/4-10-7/angular/eventcalendar#opt-calendarHeight\r\n      view: {                            // More info about view: https://docs.mobiscroll.com/4-10-7/angular/eventcalendar#opt-view\r\n          calendar: {\r\n              labels: true               // More info about labels: https://docs.mobiscroll.com/4-10-7/angular/eventcalendar#opt-labels\r\n          }\r\n      },\r\n      onEventSelect: (event, inst) => {  // More info about onEventSelect: https://docs.mobiscroll.com/4-10-7/angular/eventcalendar#event-onEventSelect\r\n        debugger;\r\n\r\n      \r\n        mobiscroll.toast({ \r\n              \r\n              message: event.event.text,\r\n              display:\"center\",\r\n              color:\"info\" \r\n          });\r\n      }\r\n  };\r\n  searching: boolean;\r\n\r\n  constructor(private modalService: NgbModal,private _Router : Router ,private httpService: HttpClient,private bookingService:BookingService) { }  \r\n  EMPLOYEEs: string[];  \r\n  DATEs: string[]; \r\n  SLOTs: string[];\r\n  ngOnInit() { \r\n\r\n   \r\n    \r\n     \r\n    this.loadSlots();\r\n  this.calendar();\r\n  };\r\n    \r\nremove(){\r\ndebugger;\r\n//   $(\"div:contains('TRIAL')\").remove();\r\n//   $(\"div:contains(TRIAL)\").filter(function () {\r\n//     return true;\r\n// }).remove();\r\ndebugger;\r\n}\r\n\r\nExport(){\r\n  var ID = parseInt(sessionStorage.getItem(\"userID\"))\r\n  debugger;\r\nthis.searching=true;\r\nthis.httpService.get(myGlobal.OnlineLink+ 'Api/AddBooking/ExportMySlotsCalendar/'+ID).subscribe( hh=>{\r\n\r\n   \r\n\r\n    var icsMSG = hh;\r\n\r\n    window.location.href=( \"data:text/calendar;charset=utf8,\" + escape(hh.toString()));\r\n    this.searching=false;\r\n\r\n\r\n  } );\r\n \r\n\r\n\r\n}\r\n\r\n    applyFilter(event: Event) {\r\n      const filterValue = (event.target as HTMLInputElement).value;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      // this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n  }\r\n\r\n  loadSlots()\r\n  {\r\n    var ID = parseInt(sessionStorage.getItem(\"userID\"))\r\n    this.httpService.get(myGlobal.OnlineLink+ 'Api/Addbooking/mySlots/'+ID).subscribe(  \r\n      \r\n    data => { this.allBookings =data;\r\n     this.EMPLOYEEs = data as unknown as string [];  \r\n     this.DATEs = data as unknown as string []\r\n     this.SLOTs = data as unknown as string []\r\n\r\n     if(this.EMPLOYEEs.length==0){\r\n      \r\n      this.noBoookings=true;\r\n     }\r\n     else{\r\n      this.noBoookings=false;\r\n     }\r\n    }  \r\n  ); }\r\n  \r\n  update(SlotID:number){\r\n    sessionStorage.setItem('PreviousEMPLOYEEDATETIMESLOTID',SlotID.toString());\r\n\r\n    \r\n   \r\nthis.bookingService.PreviousEMPLOYEEDATETIMESLOTID=SlotID;\r\n// to update booking below\r\nthis._Router.navigate(['/UpdateBooking']);\r\n  }\r\n\r\n  openWindowCustomClass() {\r\n    this.modalService.open(this.content,{ centered: true });\r\n  }\r\n\r\n  delete(BOOKINGID:number){\r\n\r\n    this.booking.BOOKINGID=BOOKINGID;\r\n    this.booking.CLIENTID=Number(sessionStorage.getItem('clientID')); \r\ndebugger;    // this.booking.PROPERTYID=1; //to be changed to dynammic value\r\n    this.bookingService.DeleteBooking(this.booking).subscribe(data=>{\r\n      this.loadSlots();\r\n      this.calendar();\r\n});\r\n    \r\n\r\n  }\r\n\r\n\r\n  calendar(){\r\n\r\n    var ID = parseInt(sessionStorage.getItem(\"userID\"))\r\n\r\n    this.httpService.get(myGlobal.OnlineLink+'Api/Addbooking/mySlotsCalendar/'+ID).subscribe(ff=>{\r\n\r\n      this.events=ff;\r\n\r\n  })  \r\n\r\n\r\n\r\n  }\r\n\r\n\r\n \r\n\r\n}\r\n","<mat-sidenav-container class=\"example-container\"  >\r\n    <mat-sidenav mode=\"side\" opened> \r\n      <app-nav></app-nav>\r\n  \r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n    \r\n\r\n          <app-username></app-username>\r\n          <mat-card>  \r\n            <mat-toolbar color=\"primary\">  \r\n              <div class=\"container w-100 row\">\r\n              <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">  \r\n                My Bookings\r\n             \r\n               </div>\r\n  \r\n               <div align=\"right\"  class=\"col-6\">\r\n                \r\n                   \r\n                  \r\n                  \r\n                  \r\n  \r\n                \r\n  \r\n               </div>\r\n               <br>\r\n            \r\n            \r\n  \r\n            </div>\r\n            </mat-toolbar>  \r\n          <br><br>  \r\n            <mat-card-content *ngIf=\"!noBoookings\" >  \r\n         \r\n               <mbsc-page theme=\"ios\" themeVariant=\"light\" lang=\"en\">\r\n                <mbsc-eventcalendar [data]=\"events\" [options]=\"eventSettings\"></mbsc-eventcalendar>\r\n            </mbsc-page>\r\n<br>\r\n            <div >\r\n              <mat-form-field class=\"w-100\">\r\n                <mat-label>Search Bookings</mat-label>\r\n                <input matInput  [(ngModel)]=\"searchedKeyword\" placeholder=\"Search Keyword\">\r\n                <mat-icon matSuffix>search</mat-icon>\r\n              </mat-form-field>\r\n\r\n             </div>\r\n\r\n                <table class=\"mat-elevation-z8 table w-100\" >\r\n            <thead class=\"thead-dark\">\r\n                <tr>\r\n  \r\n                  <th>Employee Name</th>\r\n                  <th>Employee Surname</th>\r\n                  <th>Phone Number</th>\r\n                    <th>Date</th>\r\n                    <th>Start Time</th>\r\n                    <th>End Time</th>\r\n                    \r\n                    <th>Update</th>\r\n                    <th>Cancel</th>\r\n                        \r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                      <tr *ngFor=\"let item of allBookings | filter:searchedKeyword\">\r\n                        <td hidden>{{item.EmployeeDateTimeSLotID}}</td> \r\n                        <td>{{item.Name}}</td> \r\n                        <td>{{item.Surname}}</td> \r\n                        <td>{{item.PhoneNumber}}</td>\r\n                        <td>{{item.Date}}</td> \r\n                        <td>{{item.Startime}}</td>  \r\n                        <td>{{item.Endtime}}</td> \r\n                          \r\n                      <td> <button mat-raised-button  color=\"primary\" (click)=\"update(item.EmployeeDateTimeSLotID)\">Update Booking</button></td>\r\n                      <td> <button mat-raised-button  color=\"warn\" (click)=\"delete(item.EmployeeDateTimeSLotID)\"  >Cancel Booking</button></td>\r\n                    </tr>\r\n        \r\n             \r\n            </tbody>\r\n            <tfoot>\r\n              \r\n              <td *ngIf=\"!noBoookings\"> <button   class=\"btn btn-info rounded-0\" (click)=\"Export()\">Export to my calendar</button></td>\r\n<td></td><td></td><td></td>\r\n\r\n\r\n            </tfoot>\r\n          </table> \r\n            </mat-card-content>  \r\n            <div *ngIf=\"noBoookings\" class=\"alert alert-danger\">\r\n              You have no bookings!\r\n          </div>\r\n          </mat-card>  \r\n  \r\n  \r\n                \r\n          <!-- <app-my-loader></app-my-loader> -->\r\n\r\n\r\n              \r\n          \r\n                </mat-sidenav-content>\r\n              </mat-sidenav-container>\r\n          \r\n          \r\n          \r\n              <div id=\"MyModal\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\r\n                <div class=\"modal-dialog\" role=\"document\">\r\n                  <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" data-dismiss=\"modal\" (click)=\"basicModal.hide()\">\r\n                        <span aria-hidden=\"true\">×</span>\r\n                      </button>\r\n                      <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:rgb(60, 191, 196)\">My Booking Page</h4>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                      <p>This My Booking Page.</p><br/>\r\n                      <p style=\"color:rgb(60, 191, 196); font-weight: bold\">Here you can select to:</p>\r\n                      <p>-Click UPDATE BOOKING to update booking </p>\r\n                      <p>-Click DELETE BOOKING to delete booking </p>\r\n                      <p>-Click EXPORT MY CALENDER to export the calendar to your google calender </p>\r\n                   \r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                      <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div id=\"MyModal1\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\r\n                <div class=\"modal-dialog\" role=\"document\">\r\n                  <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n              \r\n                      <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:green\">My Booking Page</h4>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                      <div class=\"modal-body\">\r\n                        <a href=\"https://motlatso-baps.github.io/HelpInturbidus/pages/6251-booking-management.html\" target=\"_blank\" mat-menu-item>\r\n                         \r\n                          <mat-icon class=\"icons\">help_outline</mat-icon>        \r\n                          Go to Help</a>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                      <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>      \r\n                \r\n                             <!-- //////\r\n                /////////////////////////////////////////Area Modals //////////////////////////-->\r\n          \r\n          <!-- Add Area modal -->\r\n          \r\n          <!-- Modal -->\r\n          <div class=\"modal fade\" id=\"addAreaModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog\" role=\"document\">\r\n              <div class=\"modal-content\">\r\n                <div class=\"modal-header alert-primary \">\r\n                  <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Add New Booking</h3>\r\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlInput1\">Employee Type Name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                  <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\r\n                  <button type=\"button\" class=\"btn btn-success\">Add New Booking</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- Edit Area modal -->\r\n          \r\n          <!-- Modal -->\r\n          <div class=\"modal fade\" id=\"editEmployeeTypeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog\" role=\"document\">\r\n              <div class=\"modal-content\">\r\n                <div class=\"modal-header  alert-info \">\r\n                  <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Booking Confirmation</h3>\r\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                 <p>Are you sure you want to make the booking?</p>\r\n               \r\n                <div class=\"modal-footer\">\r\n                  <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">Yes</button>\r\n                  <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">No</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          \r\n          <!-- Delete Area modal -->\r\n          \r\n          \r\n            \r\n          <ng-template #content let-modal>\r\n            <div class=\"modal-header alert-success\">\r\n              <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Success</h3>\r\n              <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button> -->\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleFormControlInput1\">You have successfully cancelled your booking.</label>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\" modal.close()\" routerLink=\"/ViewBooking\"   >Ok</button>\r\n            </div>\r\n          </ng-template>\r\n\r\n  \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport * as myGlobal  from '../Global';\r\n\r\n@Component({\r\n  selector: 'app-view-feedback',\r\n  templateUrl: './view-feedback.component.html',\r\n  styleUrls: ['./view-feedback.component.css']\r\n})\r\nexport class ViewFeedbackComponent implements OnInit {\r\n\r\n  constructor(private httpService: HttpClient) { }  \r\n  FEEDBACKs: string[];  \r\n  ngOnInit() {  \r\n    this.httpService.get(myGlobal.OnlineLink+ 'Api/ViewFeedback/GetFeedbackComments').subscribe(  \r\n      data => {  \r\n       this.FEEDBACKs = data as string [];  \r\n      }  \r\n    );  \r\n  }  \r\n  \r\n}  ","<mat-sidenav-container class=\"example-container\" style=\"  overflow-y: hidden;\" >\r\n    <mat-sidenav mode=\"side\" opened  style=\"height:100vh;\r\n     overflow-y: hidden;\"> \r\n  \r\n  <app-nav></app-nav>\r\n  \r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n      <app-username></app-username>\r\n          <mat-card>  \r\n            <mat-toolbar color=\"primary\">  \r\n              <div class=\"container w-100 row\"   >\r\n              <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">  \r\n               View Maintenance/Repair Job Feedback\r\n             \r\n               </div>\r\n  \r\n               \r\n               <br>\r\n            \r\n            \r\n  \r\n            </div>\r\n            </mat-toolbar>  \r\n          <br><br>  \r\n            <mat-card-content>  \r\n              <div >\r\n                <!-- <mat-form-field class=\"w-100\">\r\n                  <mat-label>Search</mat-label>\r\n                  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search Keyword\">\r\n                  <mat-icon matSuffix>search</mat-icon>\r\n                </mat-form-field> -->\r\n\r\n               </div>\r\n            \r\n               <table class=\"mat-elevation-z8 table w-100\" >\r\n            <thead class=\"thead-dark\">\r\n                <tr>\r\n                    <th>FeedbackID</th>\r\n                    <th>FeedbackComment</th>\r\n                    <th>FeedbackDate</th>\r\n             \r\n    \r\n                    \r\n                 \r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                    <tr *ngFor=\"let emp of FEEDBACKs\">\r\n                        <th>{{emp.FEEDBACKID}}</th>\r\n                        <td>{{emp.FEEDBACKCOMMENT}}</td>\r\n                        <td>{{emp.DATE}}</td>\r\n              \r\n                    \r\n                       \r\n                    </tr>\r\n          \r\n               \r\n              \r\n             \r\n            </tbody>\r\n          </table>\r\n            </mat-card-content>  \r\n          </mat-card>  \r\n\r\n\r\n                \r\n           \r\n          \r\n                </mat-sidenav-content>\r\n              </mat-sidenav-container>\r\n          \r\n          ","import { Component, OnInit } from '@angular/core';\nimport {ViewEncapsulation} from '@angular/core';\nimport { DisplayUser } from 'src/app/Classes/DisplayUser';\nimport {Observable} from 'rxjs/observable';\nimport { HttpHeaders } from '@angular/common/http';\nimport {Router} from '@angular/router'\nimport {HttpClient} from '@angular/common/http';\nimport { FormBuilder, Validators } from '@angular/forms';  \nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MakePaymentService } from 'src/app/make-payment.service';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\n\n@Component({\n  selector: 'app-view-payments',\n  templateUrl: './view-payments.component.html',\n  styleUrls: ['./view-payments.component.css']\n})\nexport class ViewPaymentsComponent implements OnInit {\n\n  constructor(private _Router : Router ,private formbulider: FormBuilder,private paymentservice:MakePaymentService) { }\n  allPayments : any\n  searchedKeyword: string;\n  \n  loadPayments(clientID : number) {  \n    this.allPayments = this.paymentservice.GetAllPaymentsByID(clientID).subscribe(data =>{\n      this.allPayments = data;\n      console.log(this.allPayments);\n\n    }); \n  }\n\n\n\n  ngOnInit(): void {\nthis.loadPayments(Number(window.sessionStorage.getItem('clientID')))\n\n  }\n\n\n}\n","<mat-sidenav-container class=\"example-container\"  >\n    <mat-sidenav mode=\"side\" opened> \n\n  \n      <app-nav></app-nav>\n    </mat-sidenav>\n    <mat-sidenav-content>\n      <app-username></app-username>\n          <mat-card>  \n            <mat-toolbar color=\"primary\">  \n              <div class=\"container w-100 row\"  >\n              <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">  \n              View Payments\n             \n               </div>\n  \n               \n               <br>\n            \n            \n  \n            </div>\n            </mat-toolbar>  \n          <br><br>  \n            <mat-card-content>  \n                <div *ngIf=\"allPayments.length == 0\" class=\"alert alert-danger\">\n                    No Payments have been made\n                   </div>\n              \n              <div *ngIf=\"allPayments.length !== 0\">\n                <div   >\n                    <mat-form-field class=\"w-100\">\n                      <mat-label>Search</mat-label>\n                      <input matInput  [(ngModel)]=\"searchedKeyword\" placeholder=\"Search Keyword\">\n                      <mat-icon matSuffix>search</mat-icon>\n                    </mat-form-field>\n      \n                   </div>\n    \n     \n             \n            \n               <table class=\"mat-elevation-z8 table w-100\" >\n            <thead class=\"thead-dark\">\n                <tr>\n                    <th>PaymentID</th>\n                    <th>Rental Agreement ID</th>\n                    <th>Referance No.</th>\n                    <th>Amount</th>\n                    <th>Payment Date</th>\n                    <th>Payment Type</th>\n                </tr>\n            </thead>\n            <tbody>\n                    <tr *ngFor =\"let pay of allPayments | filter:searchedKeyword\">\n                      <td>{{pay.PAYMENTID}}</td>\n                      <td>{{pay.RENTALAGREEMENTID}}</td>\n                      <td>{{pay.PAYMENT_REFERENCE_NO}}</td>\n                      <td>{{pay.PAYMENT_AMOUNT}}</td>\n                      <td>{{pay.PAYMENTDATETIME |date:'dd MMMM yyyy'}}</td>\n                      <td>{{pay.PAYMENTTYPE}}</td>\n  \n                  </tr>\n               \n             \n            </tbody>\n          </table>\n        </div>\n            </mat-card-content>  \n          </mat-card>  \n  \n  \n          <br>\n          <br>\n          <br>\n          <br> <br> <br> <br> <br> <br>  \n          <!-- <button type=\"button\" data-toggle=\"modal\" data-target=\"#editEmployeeTypeModal\" class=\"btn btn-primary\" matTooltip=\"Click Delete Button\"  >View</button>   -->\n  \n           \n          \n                </mat-sidenav-content>\n              </mat-sidenav-container>\n          \n  \n          \n              <br>\n              <br>\n              <br>\n              <br> <br> <br> <br> <br> <br>\n              <br> <br> <br> <br> <br> <br>\n              <br> <br> <br> <br> <br> <br>\n          \n              <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br>    \n          \n          \n          \n          \n          <!-- /////////////////////////////////////////Area Modals //////////////////////////-->\n          \n          <!-- Add Area modal -->\n          \n          <!-- Modal -->\n          <div class=\"modal fade\" id=\"addAreaModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\" role=\"document\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header alert-primary \">\n                  <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\"></h3>\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div class=\"modal-body\">\n                  <div class=\"form-group\">\n                    <label for=\"exampleFormControlInput1\">No search results found</label>\n                    <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"\">\n                  </div>\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Ok</button>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <!-- Edit Area modal -->\n          \n          <!-- Modal -->\n          <div class=\"modal fade\" id=\"editEmployeeTypeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\" role=\"document\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header alert-primary \">\n                  <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Are your sure you want to deactivate?</h3>\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div class=\"modal-body\">\n                  <div class=\"form-group\">\n                    <label for=\"exampleFormControlInput1\">Please give a reason for why you want to deactivate</label>\n                    <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"\" value=\"EmployeeType1\">\n                  </div>\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">Cancel</button>\n                  <button type=\"button\" class=\"btn btn-danger\">Deactivate Account</button>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          \n          <!-- Delete Area modal -->\n          \n          <!-- Modal -->\n          <div class=\"modal fade\" id=\"deleteEmployeeTypeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\" role=\"document\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header alert-danger \">\n                  <h3 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"text-align: center;\">Search Results</h3>\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div class=\"modal-body\">\n                 <h2>No search results found</h2>\n                </div>\n                <div class=\"modal-footer \" >\n                  <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-danger\">Ok</button>\n                </div>\n              </div>\n            </div>\n          </div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport {ApiService} from '../api.service';\nimport { BookingService } from '../booking.service';\nimport { Router } from '@angular/router';\nimport { MyServiceService } from '../my-service.service';\nimport { DatePipe } from '@angular/common';\n\n\n@Component({\n  selector: 'app-view-property',\n  templateUrl: './view-property.component.html',\n  styleUrls: ['./view-property.component.css']\n})\nexport class ViewPropertyComponent implements OnInit {\n  allProperty:any;  \n  hasApplied: boolean;\n  names: string;\n  isLoggedIn: boolean;\n  date: string;\n  ID: any;\n  Check: any;\n  \n  Checking=1 ;\n  constructor(private router:Router,private formbuilderUpdate:FormBuilder,private ApiService:ApiService,private bookingService:BookingService,private applicationService:MyServiceService) { }\n\n  ngOnInit(): void {\n   // this.CheckOTP();\n    const today = new Date();\n    var pipe = new DatePipe('en-ZA'); // Use your own locale\n    this.date =pipe.transform(today,'yyyy-MM-dd');debugger;\n    this.hasApplied=Boolean(JSON.parse(sessionStorage.getItem('hasApplied')));\n\n    if(sessionStorage.getItem('loggedInStatus')=='true')\n    { this.names=sessionStorage.getItem('clientName') +\" \"+ sessionStorage.getItem('clientSurname') ;\n      this.isLoggedIn=false;\n\n    }\n    else{\n\n      this.isLoggedIn=true;\n    }\n\nthis.loadPropertyDetails();\n\n  }\n\n  \n\n\n  loadPropertyDetails(){\n\n    this.ApiService.getPropertyByReference1(sessionStorage.getItem('PropertyID')).toPromise().then(data => {\n      debugger;\n      console.log(data);\n      this.allProperty = data;  debugger;});\n  }\n\n  // makeBooking(PropertyID){debugger;\n  //   this.bookingService.PropertyID=PropertyID;\n\n  //   this.router.navigate(['/booking']);\n\n  // }\n  logout(){\n\n    sessionStorage.clear();\n    this.ngOnInit()\n  }\n\n  // apply(PropertyID){\n  //   this.applicationService.PropertyID=PropertyID;\n\n  //   this.router.navigate(['/apply']);\n\n  // }\n\n\n  makeBooking(PropertyID){\ndebugger;\n    this.ID = Number(window.sessionStorage.getItem(\"clientID\"));\n\n    if(this.ID!=0)\n    {\n\n      this.ApiService.checkOTP(this.ID).subscribe(data =>{\n        //  this.Check = this.ApiService.checkOTP(this.otpObj); \n          this.Check = data; debugger;\n          if (this.Check.length == 0)\n          {\n            this.Checking = 0\n    \n            if (this.Checking == 0)\n        {\n          this.router.navigate(['/verify']);\n        }\n       \n          }\n          else {\n            this.bookingService.PropertyID=PropertyID;\n      \n            this.router.navigate(['/booking']);\n          }\n        });\n    \n        \n       \n\n    }\n    else{\n      this.router.navigate(['/login']);\n//display message\n\n\n    }\n\n\n  }\n\n  apply(PropertyID){\n    this.ID = Number(window.sessionStorage.getItem(\"clientID\"));\n    if(this.ID!=0)\n    {\n    this.ApiService.checkOTP(this.ID).subscribe(data =>{\n    //  this.Check = this.ApiService.checkOTP(this.otpObj); \n      this.Check = data; debugger;\n      if (this.Check.length == 0)\n      {\n        this.Checking = 0\n\n        if (this.Checking == 0)\n    {\n      this.router.navigate(['/verify']);\n    }\n  \n      }\n      else {\n        this.bookingService.PropertyID=PropertyID;\n  \n        this.router.navigate(['/apply']);\n      }\n\n    });\n\n  }else{\n    this.router.navigate(['/login']);\n\n\n\n\n  }\n  }\n}","\n<mat-sidenav-container class=\"example-container\"  >\n    <mat-sidenav mode=\"side\" opened *ngIf=\"!isLoggedIn\"> \n     \n  <app-nav></app-nav>\n  \n  \n    </mat-sidenav>\n    <mat-sidenav-content>\n      <nav class=\"navbar navbar-expand-lg py-3 navbar-dark shadow-sm navbar-inverse navbar-fixed-top\" style=\"  background-color: #111;  \">\n        <div class=\"container\">\n          <a  class=\"navbar-brand\" >\n            <!-- Logo Image -->\n            <img src=\"assets/Logo (2).png\"   class=\"d-inline-block align-middle mr-2\">\n            <!-- Logo Text -->\n            <span class=\"text-uppercase font-weight-bold\">Inturbidus</span>\n          </a>\n      \n          <button type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" class=\"navbar-toggler\"><span class=\"navbar-toggler-icon\"></span></button>\n      \n          <div id=\"navbarSupportedContent\" class=\"collapse navbar-collapse\">\n            <ul class=\"navbar-nav ml-auto\">\n      \n              <li class=\"nav-item \" style=\" font-size: 20px; color: gray; \"><a routerLink=\"/login\"  *ngIf=\"isLoggedIn\" class=\"nav-link\">Login <span class=\"sr-only\">(current)</span></a></li>\n               <li class=\"nav-item\" style=\" font-size: 20px; color: gray; \"><a *ngIf=\"!isLoggedIn \"  routerLink=\"/view-user\" class=\"nav-link\">{{names}}<mat-icon class=\"icons\">account_circle</mat-icon></a></li>\n              \n              <li class=\"nav-item\" style=\" font-size: 20px; color: gray; \"><a routerLink=\"/register\"  *ngIf=\"isLoggedIn\" class=\"nav-link\">Register</a></li>\n            <li class=\"nav-item\" style=\" font-size: 20px; color: gray; \"><a (click)=\"logout();\"  *ngIf=\"!isLoggedIn \" [hidden]=\"!isLoggedIn\" class=\"nav-link\">Logout</a></li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n\n          <mat-card>  \n            <mat-toolbar color=\"primary\">  \n              <div class=\"container w-100 row\"  >\n              <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">  \n                Property Details\n             \n               </div>\n               <div align=\"right\"  class=\"col-6\">\n                <button class=\"btn btn-primary\" routerLink=\"/\" style=\"vertical-align: middle; display: inline-flex; line-height: 24px;\" type=\"button\" >\n                   \n                  <i style=\" color: rgb(66, 252, 9);\" class=\"material-icons\">\n                    keyboard_backspace\n                  </i>\n                    <span>  \n                     \n                      Go Back To Browse properties</span>\n  \n                </button>\n\n               </div>\n               \n               <br>\n            \n            \n  \n            </div>\n            </mat-toolbar>  \n            <!-- <mat-toolbar color=\"primary\">  \n              <div class=\"container w-100 row\">\n              <div align=\"center\" style=\"color:white; text-align: left;\"  class=\"col-6\">  \n               Property Details\n             \n               </div>\n               <div align=\"right\"  class=\"col-6\">\n                \n                <button class=\"btn btn-primary\"  routerLink=\"/\" style=\"vertical-align: middle; display: inline-flex; line-height: 24px;\" type=\"button\" >\n                   \n                    <i style=\" color: rgb(66, 252, 9);\" class=\"material-icons\">\n                        keyboard_backspace\n                      </i>\n                      <span>  \n                       \n                        Go Back To Browse properties</span>\n    \n                  </button>\n                  \n                  \n                  \n  \n                \n  \n               </div>\n               <br>\n            </div>\n            </mat-toolbar>   -->\n          <br><br>  \n            <mat-card-content>  \n              <div >\n                \n  \n               </div>\n               <div class=\"control-group span6 container row\">\n  \n                <div class=\"col-md-4\">\n                \n                </div>\n  \n               </div>\n               <br><br>\n               <div class=\"row\">\n                <div class=\"col-md-12\">\n              \n                  <!-- <div id=\"mdb-lightbox-ui\"></div>\n              \n                  <div class=\"mdb-lightbox no-margin\">\n              \n                    <figure class=\"center\">\n                     \n                        <img alt=\"picture\" src=\"../../assets/images/Accomodation1.jpg\"\n                        \n                          class=\"img-fluid\">\n                       \n                      \n                    </figure> \n                    <mat-card class=\"card\" >   \n                        <h2>{{allProperty.ADDITIONALINFO}}</h2> \n                        <p>{{allProperty.PROPERTYDESCRIPTION}}</p>\n                        <p>{{allProperty.ADDRESS}}</p>\n                        </mat-card>\n<br><br>\n                     -->\n<mdb-carousel [animation]=\"'slide'\"  style=\"margin-top:0px; width:100%; height:50px;\" class=\"images\">\n  <mdb-carousel-item *ngFor=\"let ty of allProperty.photo\">\n    <img class=\"d-block w-100 img-fluid\" src=\"{{ty.PHOTO}}\" alt=\"First slide\">\n  </mdb-carousel-item>\n \n</mdb-carousel>\n<!-- <img [src]=\"allProperty.photo.PHOTO\" style=\"margin-top:0px; width:100%; height:330px;\" class=\"images\">\n<ng-image-slider [images]=\"allProperty.photo\" #nav style=\"margin-top:0px; width:100%; height:330px;\" class=\"images\"></ng-image-slider> -->\n<!-- <img src=\"../../../assets/images/left.png\" (click)=\"left()\" class=\"left\">  \n<img src=\"../../../assets/images/right.png\" (click)=\"right()\" class=\"right\"> -->\n<table class=\"table table-striped text-center \" style=\"table-layout: fixed;width: 100%;\">\n <tbody>\n  <tr >\n    <td class=\"text-center\" colspan=\"4\">{{allProperty.PROPERTYDESCRIPTION}}</td>\n  </tr>\n  <tr>\n    <td style=\"text-align:right;\">Size:</td><td>{{allProperty.SIZE}} m<sup>2</sup></td>\n    <td style=\"text-align:right;\">Address:</td><td>{{allProperty.ADDRESS}}</td>\n  </tr>\n  <tr >\n      <td style=\"text-align:right;\">Rental Amount:</td><td>R {{allProperty.RentalAmount}} per month</td>\n      <td style=\"text-align:right;\">Bedrooms:</td><td>{{allProperty.NUMBED}}</td>\n  </tr>\n  <tr >\n    <td style=\"text-align:right;\">Property Reference No.:</td><td>{{allProperty.PROPERTYID}}</td>\n    <td style=\"text-align:right;\">Bathrooms:</td><td>{{allProperty.NUMBBATH}}</td>\n</tr>\n <tr >\n  <td style=\"text-align:right;\">Garden:</td><td>{{allProperty.GARDEN}}</td>\n  <td style=\"text-align:right;\">Available from :</td><td>{{allProperty.AVAILABLEDATE |date:'dd MMMM yyyy'}}</td>\n </tr> \n <tr >\n  <td class=\"text-center\" colspan=\"4\">Property Reference No : {{allProperty.PROPERTYID}}</td>\n</tr>\n<tr>\n\n  <td></td>\n  <td></td>\n  <td></td>\n  <td></td>\n\n</tr>\n\n</tbody>\n</table>\n\n                            \n                        <br><br>\n                       \n                           <mat-card class=\"card row\">\n                            <!-- check if logged in -->\n                            <button mat-raised-button class=\"col\" *ngIf=\"date>=(allProperty.AVAILABLEDATE |date:'yyyy-MM-dd')\" color=\"primary\" (click)=\"makeBooking(allProperty.PROPERTYID)\" >Make Viewing Booking</button><br>\n                            <button mat-raised-button color=\"warn\" class=\"col\" (click)=\"apply(allProperty.PROPERTYID)\" >Apply for Rental Agreement</button>\n                           </mat-card>\n                  </div>\n                \n              </div>\n            </mat-card-content>  \n          </mat-card>  \n                </mat-sidenav-content>\n              </mat-sidenav-container>\n\n<!--End of help modal-->\n<div id=\"MyModal1\"  mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"basicModal.hide()\">\n          <span aria-hidden=\"true\">×</span>\n        </button>\n        <h4 class=\"modal-title w-100\" id=\"myModalLabel\" style=\"color:green\">View Property Page</h4>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"modal-body\">\n          <a href=\"https://motlatso-baps.github.io/HelpInturbidus/pages/6262view-property.html\" target=\"_blank\" mat-menu-item>\n           \n            <mat-icon class=\"icons\">help_outline</mat-icon>        \n            Go to Help</a>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n              <ng-template #content let-modal>\n                <div class=\"modal-header alert-success\">\n                  <h3 class=\"modal-title text-center\"  style=\"text-align: center;\">Verification</h3>\n                  <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\" routerLink=\"/login\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button> -->\n                </div>\n                <div class=\"modal-body\">\n                  <div class=\"form-group\">\n                    <label for=\"exampleFormControlInput1\">Please verify your account before proceeding.</label>\n                  </div>\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"button\" ngbAutofocus  class=\"btn btn-success\" (click)=\"modal.close()\" routerLink=\"/verify\" >Ok</button>\n                </div>\n              </ng-template>\n          \n          \n         ","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs'; \nimport {Job} from 'src/classes/Jobs';\n// import { RequestedjobsService } from 'src/app/requestedjobs.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { RequestedjobsService } from '../requestedjobs.service';\n\n@Component({\n  selector: 'app-viewrequestedjobs',\n  templateUrl: './viewrequestedjobs.component.html',\n  styleUrls: ['./viewrequestedjobs.component.css']\n})\nexport class ViewrequestedjobsComponent implements OnInit {\n  alljobs: Observable<Job[]>;  \n  jobForm: any;\n  searchedKeyword: string;\n\n  constructor(private modalService: NgbModal,private formbulider: FormBuilder,private reqService:RequestedjobsService) { }  \n\n  ngOnInit(): void {\n    \n    this.jobForm = this.formbulider.group({ \n      \n      RENTALAGREEMENTID:['', [Validators.required]], \n      JOBTYPEID:['', [Validators.required]],  \n      EMPLOYEEID:['', [Validators.required]],  \n      JOBSTATUSID: ['', [Validators.required]],  \n      ADDRESS:['', [Validators.required]],  \n      DATEREQUESTED:['', [Validators.required]],  \n      DESCRIPTION:['', [Validators.required]],  \n      USERNAME:['',[Validators.required]],\n      JOBSTATUS:['', [Validators.required]], \n    })  \n    this.loadAlljobs();  \n  \n  }\n  loadAlljobs() {  \n    this.alljobs = this.reqService.GetReqJobs(Number( window.sessionStorage.getItem(\"clientID\")));  debugger;\n  }  \n\n}\n","<mat-sidenav-container class=\"example-container\"  >\n    <mat-sidenav mode=\"side\" opened> \n      <app-nav></app-nav>\n\n      </mat-sidenav>\n      <mat-sidenav-content>\n        <app-username></app-username>\n            <mat-card>  \n              <mat-toolbar color=\"primary\">  \n                <div class=\"container w-100 row\"  >\n                <div align=\"center\" style=\"color:white; text-align: left;  \" class=\"col-6\">  \n                 Requested Jobs \n               \n                 </div>\n    \n                \n                 <br>\n              \n              \n    \n              </div>\n              </mat-toolbar>  \n              <div >\n                <mat-form-field class=\"w-100\">\n                  <mat-label>Search</mat-label>\n                  <input matInput [(ngModel)]=\"searchedKeyword\" placeholder=\"Search Keyword\">\n                  <mat-icon matSuffix>search</mat-icon>\n                </mat-form-field>\n               </div>\n                 <table class=\"mat-elevation-z8 table w-100\" >\n              \n                <tr ngclass=\"btn-primary\"> \n\n                      <!-- <th>Username </th>  -->\n                      <th>Job Description</th>\n                \n                      <th>Property Address</th> \n                      <th>Date Requested </th>\n                      <th>Status</th>\n\n                     </tr>\n    \n                     <tr *ngFor=\"let job of alljobs | async |  filter:searchedKeyword\">  \n               <input hidden value=\"{{job.JOBID}}\">\n                      <!-- <td class=\"tbl2\">{{job.USERNAME}}</td>      -->\n                      <td class=\"tbl2\">{{job.DESCRIPTION}}</td>  \n                      <!-- <td class=\"tbl2\">{{job.JOBTYPE}}</td>  -->\n                      <td class=\"tbl2\">{{job.ADDRESS}}</td>     \n                      <td class=\"tbl2\">{{job.DATEREQUESTED  |  date:'dd/MM/yyyy'}}</td>  \n                      <td class=\"tbl2\">{{job.JOBSTATUS}}</td>  \n                      <!-- <td class=\"tbl2\">{{job.CLIENTNAME}}</td>  \n                      <td class=\"tbl2\">{{job.CLIENTSURNAME}}</td>   -->\n                      <!-- <td class=\"tbl2\">{{job.CLIENTNUMBER}}</td>   -->\n                     \n                     \n                    </tr>\n                  \n            \n                      \n                \n               \n\n            </table>\n            <!-- <button type=\"button\" data-target=\"#capturejobfeedback\" class=\"btn btn-info\" matTooltip=\"Click Delete Button\" mat-raised-button routerLink = \"/capturejobfeedback\" >Capture Job Details</button>   -->\n          \n            \n\n             \n            </mat-card>  \n  \n  \n                  \n             \n            \n                  </mat-sidenav-content>\n                </mat-sidenav-container>\n            \n            \n            \n    ","export class Hash {\r\n    hashString:string;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","/* eslint-disable */\r\n(function (global, factory) {\r\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/forms')) :\r\n  typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common', '@angular/forms'], factory) :\r\n  (global = global || self, factory(global.mobiscroll = {}, global.angularCore, global.angularCommon, global.angularForms));\r\n}(this, (function (exports, core, common, forms) { 'use strict';\r\n\r\n  /* eslint-disable */\r\n\r\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation. All rights reserved.\r\n  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n  this file except in compliance with the License. You may obtain a copy of the\r\n  License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n  THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n  MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n  See the Apache Version 2.0 License for specific language governing permissions\r\n  and limitations under the License.\r\n  ***************************************************************************** */\r\n\r\n  /* global Reflect, Promise */\r\n  var extendStatics = function (d, b) {\r\n    extendStatics = Object.setPrototypeOf || {\r\n      __proto__: []\r\n    } instanceof Array && function (d, b) {\r\n      d.__proto__ = b;\r\n    } || function (d, b) {\r\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    };\r\n\r\n    return extendStatics(d, b);\r\n  };\r\n\r\n  function __extends(d, b) {\r\n    extendStatics(d, b);\r\n\r\n    function __() {\r\n      this.constructor = d;\r\n    }\r\n\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n  }\r\n\r\n  var mobiscroll = mobiscroll || {},\r\n      util = {},\r\n      calendars = {};\r\n\r\n  var os,\r\n      vers,\r\n      majorVersion,\r\n      minorVersion,\r\n      version = [],\r\n      isBrowser = typeof window !== 'undefined',\r\n      isDark = isBrowser && window.matchMedia && window.matchMedia('(prefers-color-scheme:dark)').matches,\r\n      userAgent = isBrowser ? navigator.userAgent : '',\r\n      platform = isBrowser ? navigator.platform : '',\r\n      maxTouchPoints = isBrowser ? navigator.maxTouchPoints : 0,\r\n      isSafari = /Safari/.test(userAgent),\r\n      device = userAgent.match(/Android|iPhone|iPad|iPod|Windows Phone|Windows|MSIE/i),\r\n      raf = isBrowser && window.requestAnimationFrame || function (func) {\r\n    return setTimeout(func, 20);\r\n  },\r\n      rafc = isBrowser && window.cancelAnimationFrame || function (id) {\r\n    clearTimeout(id);\r\n  };\r\n\r\n  if (/Android/i.test(device)) {\r\n    os = 'android';\r\n    vers = userAgent.match(/Android\\s+([\\d.]+)/i);\r\n\r\n    if (vers) {\r\n      version = vers[0].replace('Android ', '').split('.');\r\n    }\r\n  } else if (/iPhone|iPad|iPod/i.test(device) || /iPhone|iPad|iPod/i.test(platform) || platform === 'MacIntel' && maxTouchPoints > 1) {\r\n    // On iPad with iOS 13 desktop site request is automatically enabled in Safari,\r\n    // so 'iPad' is no longer present in the user agent string.\r\n    // In this case we check `navigator.platform` and `navigator.maxTouchPoints`.\r\n    // maxTouchPoints is needed to exclude desktop Mac OS X.\r\n    os = 'ios';\r\n    vers = userAgent.match(/OS\\s+([\\d_]+)/i);\r\n\r\n    if (vers) {\r\n      version = vers[0].replace(/_/g, '.').replace('OS ', '').split('.');\r\n    }\r\n  } else if (/Windows Phone/i.test(device)) {\r\n    os = 'wp';\r\n  } else if (/Windows|MSIE/i.test(device)) {\r\n    os = 'windows';\r\n  }\r\n\r\n  majorVersion = version[0];\r\n  minorVersion = version[1];\r\n\r\n  function testProps(props) {\r\n    var i;\r\n\r\n    for (i in props) {\r\n      if (mod[props[i]] !== undefined) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  function testPrefix() {\r\n    var prefixes = ['Webkit', 'Moz', 'O', 'ms'],\r\n        p;\r\n\r\n    for (p in prefixes) {\r\n      if (testProps([prefixes[p] + 'Transform'])) {\r\n        return '-' + prefixes[p].toLowerCase() + '-';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  function testTouch(e, elm) {\r\n    if (e.type == 'touchstart') {\r\n      elm.__mbscTouched = 1;\r\n    } else if (elm.__mbscTouched) {\r\n      delete elm.__mbscTouched;\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  function getPosition(t, vertical) {\r\n    var prefixes = ['t', 'webkitT', 'MozT', 'OT', 'msT'],\r\n        style = getComputedStyle(t[0]),\r\n        i = 0,\r\n        matrix,\r\n        px,\r\n        v;\r\n\r\n    while (!matrix && i < prefixes.length) {\r\n      v = prefixes[i];\r\n\r\n      if (style[v + 'ransform'] !== undefined) {\r\n        matrix = style[v + 'ransform'];\r\n      }\r\n\r\n      i++;\r\n    }\r\n\r\n    matrix = matrix.split(')')[0].split(', ');\r\n    px = vertical ? matrix[13] || matrix[5] : matrix[12] || matrix[4];\r\n    return px;\r\n  }\r\n\r\n  function getTextColor(color) {\r\n    if (color) {\r\n      // Cache calculated text colors, because it is slow\r\n      if (textColors[color]) {\r\n        return textColors[color];\r\n      }\r\n\r\n      var ctx = canvas && canvas.getContext('2d');\r\n\r\n      if (!ctx) {\r\n        return '#fff';\r\n      } // Use canvas element, since it does not require DOM append\r\n\r\n\r\n      ctx.fillStyle = color;\r\n      ctx.fillRect(0, 0, 1, 1);\r\n      var rgb = ctx.getImageData(0, 0, 1, 1).data;\r\n      var delta = +rgb[0] * 0.299 + +rgb[1] * 0.587 + +rgb[2] * 0.114;\r\n      var textColor = delta < 130 ? '#fff' : '#000';\r\n      textColors[color] = textColor;\r\n      return textColor;\r\n    }\r\n  }\r\n\r\n  function scrollStep(el, startTime, from, to, callback) {\r\n    var elapsed = Math.min(1, (new Date() - startTime) / 468),\r\n        eased = 0.5 * (1 - Math.cos(Math.PI * elapsed)),\r\n        current = from + (to - from) * eased;\r\n    el.scrollTop = current;\r\n\r\n    if (current !== to) {\r\n      raf(function () {\r\n        scrollStep(el, startTime, from, to, callback);\r\n      });\r\n    } else if (callback) {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  function smoothScroll(el, to, prevAnim, callback) {\r\n    if (prevAnim) {\r\n      el.scrollTop = to;\r\n\r\n      if (callback) {\r\n        callback();\r\n      }\r\n    } else {\r\n      scrollStep(el, new Date(), el.scrollTop, to, callback);\r\n    }\r\n  }\r\n\r\n  function listen(el, event, handler, opt) {\r\n    if (el) {\r\n      el.addEventListener(event, handler, opt);\r\n    }\r\n  }\r\n\r\n  function unlisten(el, event, handler, opt) {\r\n    if (el) {\r\n      el.removeEventListener(event, handler, opt);\r\n    }\r\n  }\r\n\r\n  function matches(element, selector) {\r\n    if (!selector || !element || element.nodeType !== 1) {\r\n      return false;\r\n    }\r\n\r\n    var matchesSelector = element.matches || element.matchesSelector || element.webkitMatchesSelector || element.mozMatchesSelector || element.msMatchesSelector;\r\n    return matchesSelector.call(element, selector);\r\n  }\r\n\r\n  function closest(el, target, selector) {\r\n    while (target) {\r\n      if (matches(target, selector)) {\r\n        return target;\r\n      }\r\n\r\n      target = target !== el ? target.parentNode : null;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  function trigger(elm, name, data) {\r\n    var evt;\r\n\r\n    try {\r\n      evt = new CustomEvent(name, {\r\n        detail: data,\r\n        bubbles: true,\r\n        cancelable: true\r\n      });\r\n    } catch (e) {\r\n      evt = document.createEvent('Event');\r\n      evt.initEvent(name, true, true);\r\n      evt.detail = data;\r\n    }\r\n\r\n    elm.dispatchEvent(evt);\r\n  }\r\n\r\n  function setFocusInvisible() {\r\n    win.__mbscFocusVisible = false;\r\n  }\r\n\r\n  function setFocusVisible() {\r\n    win.__mbscFocusVisible = true;\r\n  }\r\n\r\n  function addWindowFocus() {\r\n    var focusCount = win.__mbscFocusCount || 0;\r\n\r\n    if (focusCount === 0) {\r\n      listen(win, 'mousedown', setFocusInvisible, true);\r\n      listen(win, 'keydown', setFocusVisible, true);\r\n    }\r\n\r\n    win.__mbscFocusCount = ++focusCount;\r\n  }\r\n\r\n  function removeWindowFocus() {\r\n    var focusCount = win.__mbscFocusCount || 0;\r\n    win.__mbscFocusCount = --focusCount;\r\n\r\n    if (win.__mbscFocusCount === 0) {\r\n      unlisten(win, 'mousedown', setFocusInvisible);\r\n      unlisten(win, 'keydown', setFocusVisible);\r\n    }\r\n  }\r\n\r\n  var animEnd,\r\n      canvas,\r\n      mod,\r\n      cssPrefix,\r\n      hasGhostClick,\r\n      hasTransition,\r\n      isWebView,\r\n      isWkWebView,\r\n      jsPrefix,\r\n      win,\r\n      textColors = {};\r\n\r\n  if (isBrowser) {\r\n    win = window;\r\n    canvas = document.createElement('canvas');\r\n    mod = document.createElement('modernizr').style;\r\n    cssPrefix = testPrefix();\r\n    jsPrefix = cssPrefix.replace(/^-/, '').replace(/-$/, '').replace('moz', 'Moz');\r\n    animEnd = mod.animation !== undefined ? 'animationend' : 'webkitAnimationEnd';\r\n    hasTransition = mod.transition !== undefined; // UIWebView on iOS still has the ghost click, \r\n    // WkWebView does not have a ghost click, but it's hard to tell if it's UIWebView or WkWebView\r\n    // In addition in iOS 12.2 if we enable tap handling, it brakes the form inputs\r\n    // (keyboard appears, but the cursor is not in the input).\r\n\r\n    isWebView = os === 'ios' && !isSafari;\r\n    isWkWebView = isWebView && win.webkit && win.webkit.messageHandlers;\r\n    hasGhostClick = mod.touchAction === undefined || isWebView && !isWkWebView;\r\n  }\r\n\r\n  var cssNumber = {\r\n    'column-count': 1,\r\n    'columns': 1,\r\n    'font-weight': 1,\r\n    'line-height': 1,\r\n    'opacity': 1,\r\n    'z-index': 1,\r\n    'zoom': 1\r\n  },\r\n      propMap = {\r\n    'readonly': 'readOnly'\r\n  },\r\n      emptyArray = [],\r\n      _slice = Array.prototype.slice;\r\n\r\n  function isFunction(value) {\r\n    return typeof value === \"function\";\r\n  }\r\n\r\n  function isObject(obj) {\r\n    return typeof obj === \"object\";\r\n  }\r\n\r\n  function likeArray(obj) {\r\n    return typeof obj.length == 'number';\r\n  }\r\n\r\n  function camelize(str) {\r\n    return str.replace(/-+(.)?/g, function (match, chr) {\r\n      return chr ? chr.toUpperCase() : '';\r\n    });\r\n  }\r\n\r\n  function extend(target, source, deep) {\r\n    for (var key in source) {\r\n      if (deep && ($.isPlainObject(source[key]) || $.isArray(source[key]))) {\r\n        if ($.isPlainObject(source[key]) && !$.isPlainObject(target[key]) || $.isArray(source[key]) && !$.isArray(target[key])) {\r\n          target[key] = {};\r\n        }\r\n\r\n        extend(target[key], source[key], deep);\r\n      } else if (source[key] !== undefined) {\r\n        target[key] = source[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  function dasherize(str) {\r\n    return str.replace(/::/g, '/').replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2').replace(/([a-z\\d])([A-Z])/g, '$1_$2').replace(/_/g, '-').toLowerCase();\r\n  }\r\n\r\n  function maybeAddPx(name, value) {\r\n    return typeof value == \"number\" && !cssNumber[dasherize(name)] ? value + \"px\" : value;\r\n  }\r\n\r\n  var Dom = function () {\r\n    var Dom = function Dom(arr) {\r\n      var _this = this,\r\n          i = 0; // Create array-like object\r\n\r\n\r\n      for (i = 0; i < arr.length; i++) {\r\n        _this[i] = arr[i];\r\n      }\r\n\r\n      _this.length = arr.length; // Return collection with methods\r\n\r\n      return $(this);\r\n    };\r\n\r\n    var $ = function $(selector, context) {\r\n      var arr = [],\r\n          i = 0;\r\n\r\n      if (selector && !context) {\r\n        if (selector instanceof Dom) {\r\n          return selector;\r\n        }\r\n      }\r\n\r\n      if (isFunction(selector)) {\r\n        return $(document).ready(selector);\r\n      }\r\n\r\n      if (selector) {\r\n        // String\r\n        if (typeof selector === 'string') {\r\n          var els, tempParent, html;\r\n          selector = html = selector.trim();\r\n\r\n          if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\r\n            var toCreate = 'div';\r\n\r\n            if (html.indexOf('<li') === 0) {\r\n              toCreate = 'ul';\r\n            }\r\n\r\n            if (html.indexOf('<tr') === 0) {\r\n              toCreate = 'tbody';\r\n            }\r\n\r\n            if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) {\r\n              toCreate = 'tr';\r\n            }\r\n\r\n            if (html.indexOf('<tbody') === 0) {\r\n              toCreate = 'table';\r\n            }\r\n\r\n            if (html.indexOf('<option') === 0) {\r\n              toCreate = 'select';\r\n            }\r\n\r\n            tempParent = document.createElement(toCreate);\r\n            tempParent.innerHTML = html;\r\n\r\n            for (i = 0; i < tempParent.childNodes.length; i++) {\r\n              arr.push(tempParent.childNodes[i]);\r\n            }\r\n          } else {\r\n            if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\r\n              // Pure ID selector\r\n              els = [document.getElementById(selector.split('#')[1])];\r\n            } else {\r\n              if (context instanceof Dom) {\r\n                context = context[0];\r\n              } // Other selectors\r\n\r\n\r\n              els = (context || document).querySelectorAll(selector);\r\n            }\r\n\r\n            for (i = 0; i < els.length; i++) {\r\n              if (els[i]) {\r\n                arr.push(els[i]);\r\n              }\r\n            }\r\n          }\r\n        } // Node/element\r\n        else if (selector.nodeType || selector === window || selector === document) {\r\n            arr.push(selector);\r\n          } //Array of elements or instance of Dom\r\n          else if (selector.length > 0 && selector[0].nodeType) {\r\n              for (i = 0; i < selector.length; i++) {\r\n                arr.push(selector[i]);\r\n              }\r\n            } else if ($.isArray(selector)) {\r\n              arr = selector;\r\n            }\r\n      }\r\n\r\n      return new Dom(arr);\r\n    };\r\n\r\n    Dom.prototype = {\r\n      ready: function ready(callback) {\r\n        if (document.attachEvent ? document.readyState == 'complete' : document.readyState != 'loading') {\r\n          callback($);\r\n        } else {\r\n          document.addEventListener('DOMContentLoaded', function () {\r\n            callback($);\r\n          }, false);\r\n        }\r\n\r\n        return this;\r\n      },\r\n      concat: emptyArray.concat,\r\n      empty: function empty() {\r\n        return this.each(function () {\r\n          this.innerHTML = '';\r\n        });\r\n      },\r\n      map: function map(fn) {\r\n        return $($.map(this, function (el, i) {\r\n          return fn.call(el, i, el);\r\n        }));\r\n      },\r\n      slice: function slice() {\r\n        return $(_slice.apply(this, arguments));\r\n      },\r\n      // Classes and attriutes\r\n      // NOTE: element.classList attribure is not supported on android 2.3!!!\r\n      addClass: function addClass(className) {\r\n        if (typeof className === 'undefined') {\r\n          return this;\r\n        }\r\n\r\n        var classes = className.split(' ');\r\n\r\n        for (var i = 0; i < classes.length; i++) {\r\n          for (var j = 0; j < this.length; j++) {\r\n            if (typeof this[j].classList !== 'undefined' && classes[i] !== '') {\r\n              this[j].classList.add(classes[i]);\r\n            }\r\n          }\r\n        }\r\n\r\n        return this;\r\n      },\r\n      removeClass: function removeClass(className) {\r\n        if (typeof className === 'undefined') {\r\n          return this;\r\n        }\r\n\r\n        var classes = className.split(' ');\r\n\r\n        for (var i = 0; i < classes.length; i++) {\r\n          for (var j = 0; j < this.length; j++) {\r\n            if (typeof this[j].classList !== 'undefined' && classes[i] !== '') {\r\n              this[j].classList.remove(classes[i]);\r\n            }\r\n          }\r\n        }\r\n\r\n        return this;\r\n      },\r\n      hasClass: function hasClass(className) {\r\n        return this[0] ? this[0].classList.contains(className) : false;\r\n      },\r\n      toggleClass: function toggleClass(className) {\r\n        var classes = className.split(' ');\r\n\r\n        for (var i = 0; i < classes.length; i++) {\r\n          for (var j = 0; j < this.length; j++) {\r\n            if (typeof this[j].classList !== 'undefined') {\r\n              this[j].classList.toggle(classes[i]);\r\n            }\r\n          }\r\n        }\r\n\r\n        return this;\r\n      },\r\n      closest: function closest(selector, context) {\r\n        var node = this[0],\r\n            collection = false;\r\n\r\n        if (isObject(selector)) {\r\n          collection = $(selector);\r\n        }\r\n\r\n        while (node && !(collection ? collection.indexOf(node) >= 0 : matches(node, selector))) {\r\n          node = node !== context && node.nodeType !== node.DOCUMENT_NODE && node.parentNode;\r\n        }\r\n\r\n        return $(node);\r\n      },\r\n      attr: function attr(attrs, value) {\r\n        var attr;\r\n\r\n        if (arguments.length === 1 && typeof attrs === 'string') {\r\n          // Get attr\r\n          if (this.length) {\r\n            attr = this[0].getAttribute(attrs);\r\n            return attr || attr === '' ? attr : undefined;\r\n          }\r\n        } else {\r\n          // Set attrs\r\n          for (var i = 0; i < this.length; i++) {\r\n            if (arguments.length === 2) {\r\n              // String\r\n              this[i].setAttribute(attrs, value);\r\n            } else {\r\n              // Object\r\n              for (var attrName in attrs) {\r\n                this[i][attrName] = attrs[attrName];\r\n                this[i].setAttribute(attrName, attrs[attrName]);\r\n              }\r\n            }\r\n          }\r\n\r\n          return this;\r\n        }\r\n      },\r\n      removeAttr: function removeAttr(attr) {\r\n        for (var i = 0; i < this.length; i++) {\r\n          this[i].removeAttribute(attr);\r\n        }\r\n\r\n        return this;\r\n      },\r\n      prop: function prop(props, value) {\r\n        props = propMap[props] || props;\r\n\r\n        if (arguments.length === 1 && typeof props === 'string') {\r\n          // Get prop\r\n          return this[0] ? this[0][props] : undefined;\r\n        } else {\r\n          // Set props\r\n          for (var i = 0; i < this.length; i++) {\r\n            this[i][props] = value;\r\n          }\r\n\r\n          return this;\r\n        }\r\n      },\r\n      val: function val(value) {\r\n        if (typeof value === 'undefined') {\r\n          if (this.length && this[0].multiple) {\r\n            return $.map(this.find('option:checked'), function (v) {\r\n              return v.value;\r\n            });\r\n          }\r\n\r\n          return this[0] ? this[0].value : undefined;\r\n        }\r\n\r\n        if (this.length && this[0].multiple) {\r\n          $.each(this[0].options, function () {\r\n            this.selected = value.indexOf(this.value) != -1;\r\n          });\r\n        } else {\r\n          for (var i = 0; i < this.length; i++) {\r\n            this[i].value = value;\r\n          }\r\n        }\r\n\r\n        return this;\r\n      },\r\n      //Events\r\n      on: function on(eventName, targetSelector, listener, capture) {\r\n        var boundListener,\r\n            elm,\r\n            event,\r\n            events = eventName.split(' '),\r\n            i,\r\n            j;\r\n\r\n        function handleLiveEvent(e) {\r\n          var target = e.target;\r\n\r\n          while (target) {\r\n            if ($(target).is(targetSelector)) {\r\n              listener.call(target, e);\r\n            }\r\n\r\n            target = target !== this ? target.parentNode : null;\r\n          }\r\n        }\r\n\r\n        function handleNamespaces(el, name, listener, capture) {\r\n          var namespace = name.split('.');\r\n\r\n          if (!el.DomNameSpaces) {\r\n            el.DomNameSpaces = [];\r\n          }\r\n\r\n          el.DomNameSpaces.push({\r\n            namespace: namespace[1],\r\n            event: namespace[0],\r\n            listener: listener,\r\n            capture: capture\r\n          });\r\n          el.addEventListener(namespace[0], listener, capture);\r\n        }\r\n\r\n        for (i = 0; i < this.length; i++) {\r\n          elm = this[i];\r\n\r\n          if (isFunction(targetSelector) || targetSelector === false) {\r\n            // Usual events\r\n            if (isFunction(targetSelector)) {\r\n              capture = listener || false;\r\n              listener = targetSelector;\r\n            }\r\n\r\n            for (j = 0; j < events.length; j++) {\r\n              event = events[j]; // check for namespaces\r\n\r\n              if (event.indexOf('.') != -1) {\r\n                handleNamespaces(elm, event, listener, capture);\r\n              } else {\r\n                elm.addEventListener(event, listener, capture);\r\n              }\r\n            }\r\n          } else {\r\n            // Live events\r\n            boundListener = handleLiveEvent.bind(elm);\r\n\r\n            for (j = 0; j < events.length; j++) {\r\n              event = events[j];\r\n\r\n              if (!elm.DomLiveListeners) {\r\n                elm.DomLiveListeners = [];\r\n              }\r\n\r\n              elm.DomLiveListeners.push({\r\n                listener: listener,\r\n                liveListener: boundListener\r\n              });\r\n\r\n              if (event.indexOf('.') != -1) {\r\n                handleNamespaces(elm, event, boundListener, capture);\r\n              } else {\r\n                elm.addEventListener(event, boundListener, capture);\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        return this;\r\n      },\r\n      off: function off(eventName, targetSelector, listener, capture) {\r\n        var elm,\r\n            event,\r\n            events,\r\n            i,\r\n            j,\r\n            k,\r\n            liveListeners,\r\n            that = this;\r\n\r\n        function removeEvents(event) {\r\n          var el,\r\n              i,\r\n              j,\r\n              item,\r\n              nameSpaces,\r\n              parts = event.split('.'),\r\n              name = parts[0],\r\n              ns = parts[1];\r\n\r\n          for (i = 0; i < that.length; ++i) {\r\n            el = that[i];\r\n            nameSpaces = el.DomNameSpaces;\r\n\r\n            if (nameSpaces) {\r\n              for (j = 0; j < nameSpaces.length; ++j) {\r\n                item = nameSpaces[j];\r\n\r\n                if (item.namespace == ns && (item.event == name || !name)) {\r\n                  el.removeEventListener(item.event, item.listener, item.capture);\r\n                  item.removed = true;\r\n                }\r\n              } // remove the events from the DomNameSpaces array\r\n\r\n\r\n              for (j = nameSpaces.length - 1; j >= 0; --j) {\r\n                if (nameSpaces[j].removed) {\r\n                  nameSpaces.splice(j, 1);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        events = eventName.split(' ');\r\n\r\n        for (i = 0; i < events.length; i++) {\r\n          event = events[i];\r\n\r\n          for (j = 0; j < this.length; j++) {\r\n            elm = this[j];\r\n            liveListeners = elm.DomLiveListeners;\r\n\r\n            if (isFunction(targetSelector) || targetSelector === false) {\r\n              // Usual events\r\n              if (isFunction(targetSelector)) {\r\n                capture = listener || false;\r\n                listener = targetSelector;\r\n              }\r\n\r\n              if (event.indexOf('.') === 0) {\r\n                // remove namespace events\r\n                removeEvents(event.substr(1));\r\n              } else {\r\n                elm.removeEventListener(event, listener, capture);\r\n              }\r\n            } else {\r\n              // Live event\r\n              if (liveListeners) {\r\n                for (k = 0; k < liveListeners.length; k++) {\r\n                  if (liveListeners[k].listener === listener) {\r\n                    elm.removeEventListener(event, liveListeners[k].liveListener, capture);\r\n                  }\r\n                }\r\n              }\r\n\r\n              if (elm.DomNameSpaces && elm.DomNameSpaces.length && event) {\r\n                removeEvents(event);\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        return this;\r\n      },\r\n      trigger: function trigger$1(eventName, eventData) {\r\n        var events = eventName.split(' ');\r\n\r\n        for (var i = 0; i < events.length; i++) {\r\n          for (var j = 0; j < this.length; j++) {\r\n            trigger(this[j], events[i], eventData);\r\n          }\r\n        }\r\n\r\n        return this;\r\n      },\r\n      // Sizing/Styles\r\n      width: function width(dim) {\r\n        if (dim !== undefined) {\r\n          return this.css('width', dim);\r\n        }\r\n\r\n        if (this[0] === window) {\r\n          return window.innerWidth;\r\n        } else if (this[0] === document) {\r\n          return document.documentElement.scrollWidth;\r\n        } else {\r\n          return this.length > 0 ? parseFloat(this.css('width')) : null;\r\n        }\r\n      },\r\n      height: function height(dim) {\r\n        if (dim !== undefined) {\r\n          return this.css('height', dim);\r\n        }\r\n\r\n        if (this[0] === window) {\r\n          return window.innerHeight;\r\n        } else if (this[0] === document) {\r\n          var body = document.body,\r\n              html = document.documentElement;\r\n          return Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\r\n        } else {\r\n          return this.length > 0 ? parseFloat(this.css('height')) : null;\r\n        }\r\n      },\r\n      innerWidth: function innerWidth() {\r\n        var elm = this;\r\n\r\n        if (this.length > 0) {\r\n          if (this[0].innerWidth) {\r\n            return this[0].innerWidth;\r\n          } else {\r\n            var size = this[0].offsetWidth,\r\n                sides = ['left', 'right'];\r\n            sides.forEach(function (side) {\r\n              size -= parseInt(elm.css(camelize('border-' + side + '-width')) || 0, 10);\r\n            });\r\n            return size;\r\n          }\r\n        }\r\n      },\r\n      innerHeight: function innerHeight() {\r\n        var elm = this;\r\n\r\n        if (this.length > 0) {\r\n          if (this[0].innerHeight) {\r\n            return this[0].innerHeight;\r\n          } else {\r\n            var size = this[0].offsetHeight,\r\n                sides = ['top', 'bottom'];\r\n            sides.forEach(function (side) {\r\n              size -= parseInt(elm.css(camelize('border-' + side + '-width')) || 0, 10);\r\n            });\r\n            return size;\r\n          }\r\n        }\r\n      },\r\n      offset: function offset() {\r\n        if (this.length > 0) {\r\n          var el = this[0],\r\n              box = el.getBoundingClientRect(),\r\n              doc = document.documentElement;\r\n          return {\r\n            top: box.top + window.pageYOffset - doc.clientTop,\r\n            left: box.left + window.pageXOffset - doc.clientLeft\r\n          };\r\n        }\r\n      },\r\n      hide: function hide() {\r\n        for (var i = 0; i < this.length; i++) {\r\n          this[i].style.display = 'none';\r\n        }\r\n\r\n        return this;\r\n      },\r\n      show: function show() {\r\n        for (var i = 0; i < this.length; i++) {\r\n          if (this[i].style.display == \"none\") {\r\n            this[i].style.display = '';\r\n          }\r\n\r\n          if (getComputedStyle(this[i], '').getPropertyValue(\"display\") == \"none\") {\r\n            this[i].style.display = 'block';\r\n          }\r\n        }\r\n\r\n        return this;\r\n      },\r\n      clone: function clone() {\r\n        return this.map(function () {\r\n          return this.cloneNode(true);\r\n        });\r\n      },\r\n      styles: function styles() {\r\n        return this[0] ? window.getComputedStyle(this[0], null) : undefined;\r\n      },\r\n      css: function css(property, value) {\r\n        var i,\r\n            key,\r\n            element = this[0],\r\n            css = '';\r\n\r\n        if (arguments.length < 2) {\r\n          if (!element) {\r\n            return;\r\n          }\r\n\r\n          if (typeof property === 'string') {\r\n            return element.style[property] || getComputedStyle(element, '').getPropertyValue(property);\r\n          }\r\n        }\r\n\r\n        if (typeof property === 'string') {\r\n          if (!value && value !== 0) {\r\n            this.each(function () {\r\n              this.style.removeProperty(dasherize(property));\r\n            });\r\n          } else {\r\n            css = dasherize(property) + \":\" + maybeAddPx(property, value);\r\n          }\r\n        } else {\r\n          for (key in property) {\r\n            if (!property[key] && property[key] !== 0) {\r\n              for (i = 0; i < this.length; i++) {\r\n                this[i].style.removeProperty(dasherize(key));\r\n              }\r\n            } else {\r\n              css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';';\r\n            }\r\n          }\r\n        }\r\n\r\n        return this.each(function () {\r\n          this.style.cssText += ';' + css;\r\n        });\r\n      },\r\n      each: function each(callback) {\r\n        for (var i = 0; i < this.length; i++) {\r\n          if (callback.apply(this[i], [i, this[i]]) === false) {\r\n            break;\r\n          }\r\n        }\r\n\r\n        return this;\r\n      },\r\n      filter: function filter(callback) {\r\n        var matchedItems = [];\r\n\r\n        for (var i = 0; i < this.length; i++) {\r\n          if (isFunction(callback)) {\r\n            if (callback.call(this[i], i, this[i])) {\r\n              matchedItems.push(this[i]);\r\n            }\r\n          } else if (matches(this[i], callback)) {\r\n            matchedItems.push(this[i]);\r\n          }\r\n        }\r\n\r\n        return new Dom(matchedItems);\r\n      },\r\n      html: function html(_html) {\r\n        if (typeof _html === 'undefined') {\r\n          return this[0] ? this[0].innerHTML : undefined;\r\n        } else {\r\n          this.empty();\r\n\r\n          for (var i = 0; i < this.length; i++) {\r\n            this[i].innerHTML = _html;\r\n          }\r\n\r\n          return this;\r\n        }\r\n      },\r\n      text: function text(_text) {\r\n        if (typeof _text === 'undefined') {\r\n          return this[0] ? this[0].textContent.trim() : null;\r\n        } else {\r\n          for (var i = 0; i < this.length; i++) {\r\n            this[i].textContent = _text;\r\n          }\r\n\r\n          return this;\r\n        }\r\n      },\r\n      is: function is(selector) {\r\n        return this.length > 0 && matches(this[0], selector);\r\n      },\r\n      not: function not(selector) {\r\n        var nodes = [];\r\n\r\n        if (isFunction(selector) && selector.call !== undefined) {\r\n          this.each(function (idx) {\r\n            if (!selector.call(this, idx)) {\r\n              nodes.push(this);\r\n            }\r\n          });\r\n        } else {\r\n          var excludes = typeof selector == 'string' ? this.filter(selector) : likeArray(selector) && isFunction(selector.item) ? _slice.call(selector) : $(selector);\r\n\r\n          if (isObject(excludes)) {\r\n            excludes = $.map(excludes, function (el) {\r\n              return el;\r\n            });\r\n          }\r\n\r\n          this.each(function (i, el) {\r\n            if (excludes.indexOf(el) < 0) {\r\n              nodes.push(el);\r\n            }\r\n          });\r\n        }\r\n\r\n        return $(nodes);\r\n      },\r\n      indexOf: function indexOf(el) {\r\n        for (var i = 0; i < this.length; i++) {\r\n          if (this[i] === el) {\r\n            return i;\r\n          }\r\n        }\r\n      },\r\n      index: function index(element) {\r\n        return element ? this.indexOf($(element)[0]) : this.parent().children().indexOf(this[0]);\r\n      },\r\n      get: function get(idx) {\r\n        return idx === undefined ? _slice.call(this) : this[idx >= 0 ? idx : idx + this.length];\r\n      },\r\n      eq: function eq(index) {\r\n        if (typeof index === 'undefined') {\r\n          return this;\r\n        }\r\n\r\n        var length = this.length,\r\n            returnIndex;\r\n\r\n        if (index > length - 1) {\r\n          return new Dom([]);\r\n        }\r\n\r\n        if (index < 0) {\r\n          returnIndex = length + index;\r\n          return returnIndex < 0 ? new Dom([]) : new Dom([this[returnIndex]]);\r\n        }\r\n\r\n        return new Dom([this[index]]);\r\n      },\r\n      append: function append(newChild) {\r\n        var i, j;\r\n\r\n        for (i = 0; i < this.length; i++) {\r\n          if (typeof newChild === 'string') {\r\n            var tempDiv = document.createElement('div');\r\n            tempDiv.innerHTML = newChild;\r\n\r\n            while (tempDiv.firstChild) {\r\n              this[i].appendChild(tempDiv.firstChild);\r\n            }\r\n          } else if (newChild instanceof Dom) {\r\n            for (j = 0; j < newChild.length; j++) {\r\n              this[i].appendChild(newChild[j]);\r\n            }\r\n          } else {\r\n            this[i].appendChild(newChild);\r\n          }\r\n        }\r\n\r\n        return this;\r\n      },\r\n      appendTo: function appendTo(parent) {\r\n        $(parent).append(this);\r\n        return this;\r\n      },\r\n      prepend: function prepend(newChild) {\r\n        var i, j;\r\n\r\n        for (i = 0; i < this.length; i++) {\r\n          if (typeof newChild === 'string') {\r\n            var tempDiv = document.createElement('div');\r\n            tempDiv.innerHTML = newChild;\r\n\r\n            for (j = tempDiv.childNodes.length - 1; j >= 0; j--) {\r\n              this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\r\n            } // this[i].insertAdjacentHTML('afterbegin', newChild);\r\n\r\n          } else if (newChild instanceof Dom) {\r\n            for (j = 0; j < newChild.length; j++) {\r\n              this[i].insertBefore(newChild[j], this[i].childNodes[0]);\r\n            }\r\n          } else {\r\n            this[i].insertBefore(newChild, this[i].childNodes[0]);\r\n          }\r\n        }\r\n\r\n        return this;\r\n      },\r\n      prependTo: function prependTo(parent) {\r\n        $(parent).prepend(this);\r\n        return this;\r\n      },\r\n      insertBefore: function insertBefore(selector) {\r\n        var before = $(selector);\r\n\r\n        for (var i = 0; i < this.length; i++) {\r\n          if (before.length === 1) {\r\n            before[0].parentNode.insertBefore(this[i], before[0]);\r\n          } else if (before.length > 1) {\r\n            for (var j = 0; j < before.length; j++) {\r\n              before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\r\n            }\r\n          }\r\n        }\r\n\r\n        return this;\r\n      },\r\n      insertAfter: function insertAfter(selector) {\r\n        var after = $(selector);\r\n\r\n        for (var i = 0; i < this.length; i++) {\r\n          if (after.length === 1) {\r\n            after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\r\n          } else if (after.length > 1) {\r\n            for (var j = 0; j < after.length; j++) {\r\n              after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\r\n            }\r\n          }\r\n        }\r\n\r\n        return this;\r\n      },\r\n      next: function next(selector) {\r\n        if (this.length > 0) {\r\n          if (selector) {\r\n            if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\r\n              return new Dom([this[0].nextElementSibling]);\r\n            } else {\r\n              return new Dom([]);\r\n            }\r\n          } else {\r\n            if (this[0].nextElementSibling) {\r\n              return new Dom([this[0].nextElementSibling]);\r\n            } else {\r\n              return new Dom([]);\r\n            }\r\n          }\r\n        } else {\r\n          return new Dom([]);\r\n        }\r\n      },\r\n      nextAll: function nextAll(selector) {\r\n        var nextEls = [],\r\n            el = this[0];\r\n\r\n        if (!el) {\r\n          return new Dom([]);\r\n        }\r\n\r\n        while (el.nextElementSibling) {\r\n          var next = el.nextElementSibling;\r\n\r\n          if (selector) {\r\n            if ($(next).is(selector)) {\r\n              nextEls.push(next);\r\n            }\r\n          } else {\r\n            nextEls.push(next);\r\n          }\r\n\r\n          el = next;\r\n        }\r\n\r\n        return new Dom(nextEls);\r\n      },\r\n      prev: function prev(selector) {\r\n        if (this.length > 0) {\r\n          if (selector) {\r\n            if (this[0].previousElementSibling && $(this[0].previousElementSibling).is(selector)) {\r\n              return new Dom([this[0].previousElementSibling]);\r\n            } else {\r\n              return new Dom([]);\r\n            }\r\n          } else {\r\n            if (this[0].previousElementSibling) {\r\n              return new Dom([this[0].previousElementSibling]);\r\n            } else {\r\n              return new Dom([]);\r\n            }\r\n          }\r\n        } else {\r\n          return new Dom([]);\r\n        }\r\n      },\r\n      prevAll: function prevAll(selector) {\r\n        var prevEls = [];\r\n        var el = this[0];\r\n\r\n        if (!el) {\r\n          return new Dom([]);\r\n        }\r\n\r\n        while (el.previousElementSibling) {\r\n          var prev = el.previousElementSibling;\r\n\r\n          if (selector) {\r\n            if ($(prev).is(selector)) {\r\n              prevEls.push(prev);\r\n            }\r\n          } else {\r\n            prevEls.push(prev);\r\n          }\r\n\r\n          el = prev;\r\n        }\r\n\r\n        return new Dom(prevEls);\r\n      },\r\n      parent: function parent(selector) {\r\n        var parents = [];\r\n\r\n        for (var i = 0; i < this.length; i++) {\r\n          if (this[i].parentNode !== null) {\r\n            if (selector) {\r\n              if ($(this[i].parentNode).is(selector)) {\r\n                parents.push(this[i].parentNode);\r\n              }\r\n            } else {\r\n              parents.push(this[i].parentNode);\r\n            }\r\n          }\r\n        }\r\n\r\n        return $($.unique(parents));\r\n      },\r\n      parents: function parents(selector) {\r\n        var parents = [];\r\n\r\n        for (var i = 0; i < this.length; i++) {\r\n          var parent = this[i].parentNode;\r\n\r\n          while (parent) {\r\n            if (selector) {\r\n              if ($(parent).is(selector)) {\r\n                parents.push(parent);\r\n              }\r\n            } else {\r\n              parents.push(parent);\r\n            }\r\n\r\n            parent = parent.parentNode;\r\n          }\r\n        }\r\n\r\n        return $($.unique(parents));\r\n      },\r\n      find: function find(selector) {\r\n        var foundElements = [];\r\n\r\n        for (var i = 0; i < this.length; i++) {\r\n          var found = this[i].querySelectorAll(selector);\r\n\r\n          for (var j = 0; j < found.length; j++) {\r\n            foundElements.push(found[j]);\r\n          }\r\n        }\r\n\r\n        return new Dom(foundElements);\r\n      },\r\n      children: function children(selector) {\r\n        var children = [];\r\n\r\n        for (var i = 0; i < this.length; i++) {\r\n          var childNodes = this[i].childNodes;\r\n\r\n          for (var j = 0; j < childNodes.length; j++) {\r\n            if (!selector) {\r\n              if (childNodes[j].nodeType === 1) {\r\n                children.push(childNodes[j]);\r\n              }\r\n            } else {\r\n              if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\r\n                children.push(childNodes[j]);\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        return new Dom($.unique(children));\r\n      },\r\n      remove: function remove() {\r\n        for (var i = 0; i < this.length; i++) {\r\n          if (this[i].parentNode) {\r\n            this[i].parentNode.removeChild(this[i]);\r\n          }\r\n        }\r\n\r\n        return this;\r\n      },\r\n      add: function add() {\r\n        var dom = this;\r\n        var i, j;\r\n\r\n        for (i = 0; i < arguments.length; i++) {\r\n          var toAdd = $(arguments[i]);\r\n\r\n          for (j = 0; j < toAdd.length; j++) {\r\n            dom[dom.length] = toAdd[j];\r\n            dom.length++;\r\n          }\r\n        }\r\n\r\n        return dom;\r\n      },\r\n      before: function before(elm) {\r\n        $(elm).insertBefore(this);\r\n        return this;\r\n      },\r\n      after: function after(elm) {\r\n        $(elm).insertAfter(this);\r\n        return this;\r\n      },\r\n      scrollTop: function scrollTop(value) {\r\n        if (!this.length) {\r\n          return;\r\n        }\r\n\r\n        var hasScrollTop = 'scrollTop' in this[0];\r\n\r\n        if (value === undefined) {\r\n          return hasScrollTop ? this[0].scrollTop : this[0].pageYOffset;\r\n        }\r\n\r\n        return this.each(hasScrollTop ? function () {\r\n          this.scrollTop = value;\r\n        } : function () {\r\n          this.scrollTo(this.scrollX, value);\r\n        });\r\n      },\r\n      scrollLeft: function scrollLeft(value) {\r\n        if (!this.length) {\r\n          return;\r\n        }\r\n\r\n        var hasScrollLeft = 'scrollLeft' in this[0];\r\n\r\n        if (value === undefined) {\r\n          return hasScrollLeft ? this[0].scrollLeft : this[0].pageXOffset;\r\n        }\r\n\r\n        return this.each(hasScrollLeft ? function () {\r\n          this.scrollLeft = value;\r\n        } : function () {\r\n          this.scrollTo(value, this.scrollY);\r\n        });\r\n      },\r\n      contents: function contents() {\r\n        return this.map(function (i, v) {\r\n          return _slice.call(v.childNodes);\r\n        });\r\n      },\r\n      nextUntil: function nextUntil(selector) {\r\n        var n = this,\r\n            array = [];\r\n\r\n        while (n.length && !n.filter(selector).length) {\r\n          array.push(n[0]);\r\n          n = n.next();\r\n        }\r\n\r\n        return $(array);\r\n      },\r\n      prevUntil: function prevUntil(selector) {\r\n        var n = this,\r\n            array = [];\r\n\r\n        while (n.length && !$(n).filter(selector).length) {\r\n          array.push(n[0]);\r\n          n = n.prev();\r\n        }\r\n\r\n        return $(array);\r\n      },\r\n      detach: function detach() {\r\n        return this.remove();\r\n      }\r\n    }; // Link to prototype\r\n\r\n    $.fn = Dom.prototype;\r\n    return $;\r\n  }(); // Export to local scope\r\n\r\n\r\n  var $ = Dom; // Export to mobiscroll\r\n\r\n  mobiscroll.$ = Dom; // DOM Library Utilites\r\n\r\n  $.inArray = function (elem, array, i) {\r\n    return emptyArray.indexOf.call(array, elem, i);\r\n  };\r\n\r\n  $.extend = function (target) {\r\n    var deep,\r\n        args = _slice.call(arguments, 1);\r\n\r\n    if (typeof target == 'boolean') {\r\n      deep = target;\r\n      target = args.shift();\r\n    }\r\n\r\n    target = target || {};\r\n    args.forEach(function (arg) {\r\n      extend(target, arg, deep);\r\n    });\r\n    return target;\r\n  };\r\n\r\n  $.isFunction = isFunction;\r\n\r\n  $.isArray = function (arr) {\r\n    return Object.prototype.toString.apply(arr) === '[object Array]';\r\n  };\r\n\r\n  $.isPlainObject = function (obj) {\r\n    return isObject(obj) && obj !== null && obj !== obj.window && Object.getPrototypeOf(obj) == Object.prototype;\r\n  };\r\n\r\n  $.each = function (obj, callback) {\r\n    var i, prop;\r\n\r\n    if (!isObject(obj) || !callback) {\r\n      return;\r\n    }\r\n\r\n    if ($.isArray(obj) || obj instanceof Dom) {\r\n      // Array\r\n      for (i = 0; i < obj.length; i++) {\r\n        if (callback.call(obj[i], i, obj[i]) === false) {\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      // Object\r\n      for (prop in obj) {\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        if (obj.hasOwnProperty(prop) && prop !== 'length') {\r\n          if (callback.call(obj[prop], prop, obj[prop]) === false) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  $.unique = function (arr) {\r\n    var unique = [];\r\n\r\n    for (var i = 0; i < arr.length; i++) {\r\n      if (unique.indexOf(arr[i]) === -1) {\r\n        unique.push(arr[i]);\r\n      }\r\n    }\r\n\r\n    return unique;\r\n  };\r\n\r\n  $.map = function (elements, callback) {\r\n    var value,\r\n        values = [],\r\n        i,\r\n        key;\r\n\r\n    if (likeArray(elements)) {\r\n      for (i = 0; i < elements.length; i++) {\r\n        value = callback(elements[i], i);\r\n\r\n        if (value !== null) {\r\n          values.push(value);\r\n        }\r\n      }\r\n    } else {\r\n      for (key in elements) {\r\n        value = callback(elements[key], key);\r\n\r\n        if (value !== null) {\r\n          values.push(value);\r\n        }\r\n      }\r\n    }\r\n\r\n    return values.length > 0 ? $.fn.concat.apply([], values) : values;\r\n  };\r\n\r\n  function noop() {}\r\n\r\n  function objectToArray(obj) {\r\n    var arr = [],\r\n        i;\r\n\r\n    for (i in obj) {\r\n      arr.push(obj[i]);\r\n    }\r\n\r\n    return arr;\r\n  }\r\n\r\n  function arrayToObject(arr) {\r\n    var obj = {},\r\n        i;\r\n\r\n    if (arr) {\r\n      for (i = 0; i < arr.length; i++) {\r\n        obj[arr[i]] = arr[i];\r\n      }\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  function isNumeric(a) {\r\n    return a - parseFloat(a) >= 0;\r\n  }\r\n\r\n  function isString(s) {\r\n    return typeof s === 'string';\r\n  }\r\n\r\n  function constrain(val, min, max) {\r\n    return Math.max(min, Math.min(val, max));\r\n  }\r\n\r\n  function pad(num, size) {\r\n    num = num + '';\r\n    size = size || 2;\r\n\r\n    while (num.length < size) {\r\n      num = '0' + num;\r\n    }\r\n\r\n    return num;\r\n  }\r\n\r\n  function throttle(fn, threshhold) {\r\n    var last, timer;\r\n    threshhold = threshhold || 100;\r\n    return function () {\r\n      var context = this,\r\n          now = +new Date(),\r\n          args = arguments;\r\n\r\n      if (last && now < last + threshhold) {\r\n        clearTimeout(timer);\r\n        timer = setTimeout(function () {\r\n          last = now;\r\n          fn.apply(context, args);\r\n        }, threshhold);\r\n      } else {\r\n        last = now;\r\n        fn.apply(context, args);\r\n      }\r\n    };\r\n  }\r\n\r\n  function vibrate(time) {\r\n    if ('vibrate' in navigator) {\r\n      navigator.vibrate(time || 50);\r\n    }\r\n  }\r\n\r\n  function getPercent(v, min, max) {\r\n    return (v - min) * 100 / (max - min);\r\n  }\r\n\r\n  function getBoolAttr(attr, def, $elm) {\r\n    var v = $elm.attr(attr);\r\n    return v === undefined || v === '' ? def : v === 'true';\r\n  }\r\n\r\n  var tapped = 0;\r\n  var allowQuick;\r\n\r\n  function preventClick() {\r\n    // Prevent ghost click\r\n    tapped++;\r\n    setTimeout(function () {\r\n      tapped--;\r\n    }, 500);\r\n  }\r\n\r\n  function triggerClick(ev, control) {\r\n    // Prevent duplicate triggers on the same element\r\n    // e.g. a form checkbox inside a listview item\r\n    if (control.mbscClick) {\r\n      return;\r\n    }\r\n\r\n    var touch = (ev.originalEvent || ev).changedTouches[0],\r\n        evt = document.createEvent('MouseEvents');\r\n    evt.initMouseEvent('click', true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);\r\n    evt.isMbscTap = true; // Prevent ionic to bust our click\r\n    // This works for Ionic 1 - 3, not sure about 4\r\n\r\n    evt.isIonicTap = true; // This will allow a click fired together with this click\r\n    // We need this, because clicking on a label will trigger a click\r\n    // on the associated input as well, which should not be busted\r\n\r\n    allowQuick = true;\r\n    control.mbscChange = true;\r\n    control.mbscClick = true;\r\n    control.dispatchEvent(evt);\r\n    allowQuick = false; // Prevent ghost click\r\n\r\n    preventClick();\r\n    setTimeout(function () {\r\n      delete control.mbscClick;\r\n    });\r\n  }\r\n\r\n  function getCoord(e, c, page) {\r\n    var ev = e.originalEvent || e,\r\n        prop = (page ? 'page' : 'client') + c; // Multi touch support\r\n\r\n    if (ev.targetTouches && ev.targetTouches[0]) {\r\n      return ev.targetTouches[0][prop];\r\n    }\r\n\r\n    if (ev.changedTouches && ev.changedTouches[0]) {\r\n      return ev.changedTouches[0][prop];\r\n    }\r\n\r\n    return e[prop];\r\n  }\r\n\r\n  function getControlType($elm) {\r\n    var attrs = ['switch', 'range', 'rating', 'segmented', 'stepper'];\r\n    var elm = $elm[0];\r\n    var role = $elm.attr('data-role');\r\n    var type = $elm.attr('type') || elm.nodeName.toLowerCase();\r\n\r\n    if (/(switch|range|rating|segmented|stepper|select)/.test(role)) {\r\n      type = role;\r\n    } else {\r\n      for (var i = 0; i < attrs.length; i++) {\r\n        if ($elm.is('[mbsc-' + attrs[i] + ']')) {\r\n          type = attrs[i];\r\n        }\r\n      }\r\n    }\r\n\r\n    return type;\r\n  }\r\n\r\n  function activateControl(control, type, ev) {\r\n    control.focus();\r\n\r\n    if (/(button|submit|checkbox|switch|radio)/.test(type)) {\r\n      ev.preventDefault();\r\n    }\r\n\r\n    if (!/select/.test(type)) {\r\n      triggerClick(ev, control);\r\n    }\r\n  }\r\n\r\n  function tap(that, el, handler, prevent, tolerance, time) {\r\n    var startX,\r\n        startY,\r\n        target,\r\n        moved,\r\n        startTime,\r\n        $ = mobiscroll.$,\r\n        $elm = $(el);\r\n    tolerance = tolerance || 9;\r\n\r\n    function onStart(ev) {\r\n      if (!target) {\r\n        // Can't always call preventDefault here, it kills page scroll\r\n        // if (prevent) {\r\n        //     ev.preventDefault();\r\n        // }\r\n        target = this;\r\n        startX = getCoord(ev, 'X');\r\n        startY = getCoord(ev, 'Y');\r\n        moved = false;\r\n        startTime = new Date();\r\n      }\r\n    }\r\n\r\n    function onMove(ev) {\r\n      // If movement is more than 20px, don't fire the click event handler\r\n      if (target && !moved && (Math.abs(getCoord(ev, 'X') - startX) > tolerance || Math.abs(getCoord(ev, 'Y') - startY) > tolerance)) {\r\n        moved = true;\r\n      }\r\n    }\r\n\r\n    function onEnd(ev) {\r\n      if (target) {\r\n        if (time && new Date() - startTime < 100 || !moved) {\r\n          // ev.preventDefault();\r\n          // handler.call(target, ev, that);\r\n          triggerClick(ev, ev.target);\r\n        } else {\r\n          preventClick();\r\n        }\r\n\r\n        target = false;\r\n      }\r\n    }\r\n\r\n    function onClick(ev) {\r\n      if (prevent) {\r\n        ev.preventDefault();\r\n      } // If handler was not called on touchend, call it on click;\r\n\r\n\r\n      handler.call(this, ev, that);\r\n    }\r\n\r\n    function onCancel() {\r\n      target = false;\r\n    }\r\n\r\n    $elm.each(function (i, elm) {\r\n      if (that.settings.tap) {\r\n        listen(elm, 'touchstart', onStart, {\r\n          passive: true\r\n        });\r\n        listen(elm, 'touchcancel', onCancel);\r\n        listen(elm, 'touchmove', onMove, {\r\n          passive: true\r\n        });\r\n        listen(elm, 'touchend', onEnd);\r\n      }\r\n\r\n      listen(elm, 'click', onClick);\r\n\r\n      elm.__mbscOff = function () {\r\n        unlisten(elm, 'touchstart', onStart, {\r\n          passive: true\r\n        });\r\n        unlisten(elm, 'touchcancel', onCancel);\r\n        unlisten(elm, 'touchmove', onMove, {\r\n          passive: true\r\n        });\r\n        unlisten(elm, 'touchend', onEnd);\r\n        unlisten(elm, 'click', onClick);\r\n        delete elm.__mbscOff;\r\n      };\r\n    });\r\n  }\r\n\r\n  function tapOff($elm) {\r\n    if ($elm && $elm[0] && $elm[0].__mbscOff) {\r\n      $elm[0].__mbscOff();\r\n    }\r\n  } // Prevent standard behaviour on body click\r\n\r\n\r\n  function bustClick(ev) {\r\n    // Textarea needs the mousedown event\r\n    if (tapped && !allowQuick && !ev.isMbscTap && !(ev.target.nodeName == 'TEXTAREA' && ev.type == 'mousedown')) {\r\n      ev.stopPropagation();\r\n      ev.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  if (isBrowser) {\r\n    ['mouseover', 'mousedown', 'mouseup', 'click'].forEach(function (ev) {\r\n      document.addEventListener(ev, bustClick, true);\r\n    });\r\n\r\n    if (os == 'android' && majorVersion < 5) {\r\n      document.addEventListener('change', function (ev) {\r\n        if (tapped && ev.target.type == 'checkbox' && !ev.target.mbscChange) {\r\n          ev.stopPropagation();\r\n          ev.preventDefault();\r\n        }\r\n\r\n        delete ev.target.mbscChange;\r\n      }, true);\r\n    }\r\n  }\r\n\r\n  function adjustedDate(y, m, d, h, i, s, u) {\r\n    var date = new Date(y, m, d, h || 0, i || 0, s || 0, u || 0);\r\n\r\n    if (date.getHours() == 23 && (h || 0) === 0) {\r\n      date.setHours(date.getHours() + 2);\r\n    }\r\n\r\n    return date;\r\n  }\r\n  /**\r\n   * Format a date into a string value with a specified format.\r\n   * @param {String} format Output format.\r\n   * @param {Date} date Date to format.\r\n   * @param {Object} [settings={}] Settings.\r\n   * @return {String} Returns the formatted date string.\r\n   */\r\n\r\n\r\n  function formatDate(format, date, settings) {\r\n    if (!date) {\r\n      return null;\r\n    }\r\n\r\n    var s = extend$1({}, dateTimeDefaults, settings),\r\n        look = function look(m) {\r\n      // Check whether a format character is doubled\r\n      var n = 0;\r\n\r\n      while (i + 1 < format.length && format.charAt(i + 1) == m) {\r\n        n++;\r\n        i++;\r\n      }\r\n\r\n      return n;\r\n    },\r\n        f1 = function f1(m, val, len) {\r\n      // Format a number, with leading zero if necessary\r\n      var n = '' + val;\r\n\r\n      if (look(m)) {\r\n        while (n.length < len) {\r\n          n = '0' + n;\r\n        }\r\n      }\r\n\r\n      return n;\r\n    },\r\n        f2 = function f2(m, val, s, l) {\r\n      // Format a name, short or long as requested\r\n      return look(m) ? l[val] : s[val];\r\n    },\r\n        i,\r\n        year,\r\n        output = '',\r\n        literal = false;\r\n\r\n    for (i = 0; i < format.length; i++) {\r\n      if (literal) {\r\n        if (format.charAt(i) == \"'\" && !look(\"'\")) {\r\n          literal = false;\r\n        } else {\r\n          output += format.charAt(i);\r\n        }\r\n      } else {\r\n        switch (format.charAt(i)) {\r\n          case 'd':\r\n            output += f1('d', s.getDay(date), 2);\r\n            break;\r\n\r\n          case 'D':\r\n            output += f2('D', date.getDay(), s.dayNamesShort, s.dayNames);\r\n            break;\r\n\r\n          case 'o':\r\n            output += f1('o', (date.getTime() - new Date(date.getFullYear(), 0, 0).getTime()) / 86400000, 3);\r\n            break;\r\n\r\n          case 'm':\r\n            output += f1('m', s.getMonth(date) + 1, 2);\r\n            break;\r\n\r\n          case 'M':\r\n            output += f2('M', s.getMonth(date), s.monthNamesShort, s.monthNames);\r\n            break;\r\n\r\n          case 'y':\r\n            year = s.getYear(date);\r\n            output += look('y') ? year : (year % 100 < 10 ? '0' : '') + year % 100; //output += (look('y') ? date.getFullYear() : (date.getYear() % 100 < 10 ? '0' : '') + date.getYear() % 100);\r\n\r\n            break;\r\n\r\n          case 'h':\r\n            var h = date.getHours();\r\n            output += f1('h', h > 12 ? h - 12 : h === 0 ? 12 : h, 2);\r\n            break;\r\n\r\n          case 'H':\r\n            output += f1('H', date.getHours(), 2);\r\n            break;\r\n\r\n          case 'i':\r\n            output += f1('i', date.getMinutes(), 2);\r\n            break;\r\n\r\n          case 's':\r\n            output += f1('s', date.getSeconds(), 2);\r\n            break;\r\n\r\n          case 'a':\r\n            output += date.getHours() > 11 ? s.pmText : s.amText;\r\n            break;\r\n\r\n          case 'A':\r\n            output += date.getHours() > 11 ? s.pmText.toUpperCase() : s.amText.toUpperCase();\r\n            break;\r\n\r\n          case \"'\":\r\n            if (look(\"'\")) {\r\n              output += \"'\";\r\n            } else {\r\n              literal = true;\r\n            }\r\n\r\n            break;\r\n\r\n          default:\r\n            output += format.charAt(i);\r\n        }\r\n      }\r\n    }\r\n\r\n    return output;\r\n  } // --- TRIAL SERVER CODE END ---\r\n\r\n  /**\r\n   * Extract a date from a string value with a specified format.\r\n   * @param {String} format Input format.\r\n   * @param {String} value String to parse.\r\n   * @param {Object} [settings={}] Settings.\r\n   * @return {Date} Returns the extracted date.\r\n   */\r\n\r\n\r\n  function parseDate(format, value, settings) {\r\n    var s = extend$1({}, dateTimeDefaults, settings),\r\n        def = makeDate(s.defaultValue || new Date());\r\n\r\n    if (!format || !value) {\r\n      return def;\r\n    } // If already a date object\r\n\r\n\r\n    if (value.getTime) {\r\n      return value;\r\n    }\r\n\r\n    value = typeof value == 'object' ? value.toString() : value + '';\r\n\r\n    var shortYearCutoff = s.shortYearCutoff,\r\n        year = s.getYear(def),\r\n        month = s.getMonth(def) + 1,\r\n        day = s.getDay(def),\r\n        doy = -1,\r\n        hours = def.getHours(),\r\n        minutes = def.getMinutes(),\r\n        seconds = 0,\r\n        //def.getSeconds(),\r\n    ampm = -1,\r\n        literal = false,\r\n        // Check whether a format character is doubled\r\n    lookAhead = function lookAhead(match) {\r\n      var matches = iFormat + 1 < format.length && format.charAt(iFormat + 1) == match;\r\n\r\n      if (matches) {\r\n        iFormat++;\r\n      }\r\n\r\n      return matches;\r\n    },\r\n        getNumber = function getNumber(match) {\r\n      // Extract a number from the string value\r\n      lookAhead(match);\r\n      var size = match == '@' ? 14 : match == '!' ? 20 : match == 'y' ? 4 : match == 'o' ? 3 : 2,\r\n          digits = new RegExp('^\\\\d{1,' + size + '}'),\r\n          num = value.substr(iValue).match(digits);\r\n\r\n      if (!num) {\r\n        return 0;\r\n      }\r\n\r\n      iValue += num[0].length;\r\n      return parseInt(num[0], 10);\r\n    },\r\n        getName = function getName(match, s, l) {\r\n      // Extract a name from the string value and convert to an index\r\n      var names = lookAhead(match) ? l : s,\r\n          i;\r\n\r\n      for (i = 0; i < names.length; i++) {\r\n        if (value.substr(iValue, names[i].length).toLowerCase() == names[i].toLowerCase()) {\r\n          iValue += names[i].length;\r\n          return i + 1;\r\n        }\r\n      }\r\n\r\n      return 0;\r\n    },\r\n        checkLiteral = function checkLiteral() {\r\n      iValue++;\r\n    },\r\n        iValue = 0,\r\n        iFormat;\r\n\r\n    for (iFormat = 0; iFormat < format.length; iFormat++) {\r\n      if (literal) {\r\n        if (format.charAt(iFormat) == \"'\" && !lookAhead(\"'\")) {\r\n          literal = false;\r\n        } else {\r\n          checkLiteral();\r\n        }\r\n      } else {\r\n        switch (format.charAt(iFormat)) {\r\n          case 'd':\r\n            day = getNumber('d');\r\n            break;\r\n\r\n          case 'D':\r\n            getName('D', s.dayNamesShort, s.dayNames);\r\n            break;\r\n\r\n          case 'o':\r\n            doy = getNumber('o');\r\n            break;\r\n\r\n          case 'm':\r\n            month = getNumber('m');\r\n            break;\r\n\r\n          case 'M':\r\n            month = getName('M', s.monthNamesShort, s.monthNames);\r\n            break;\r\n\r\n          case 'y':\r\n            year = getNumber('y');\r\n            break;\r\n\r\n          case 'H':\r\n            hours = getNumber('H');\r\n            break;\r\n\r\n          case 'h':\r\n            hours = getNumber('h');\r\n            break;\r\n\r\n          case 'i':\r\n            minutes = getNumber('i');\r\n            break;\r\n\r\n          case 's':\r\n            seconds = getNumber('s');\r\n            break;\r\n\r\n          case 'a':\r\n            ampm = getName('a', [s.amText, s.pmText], [s.amText, s.pmText]) - 1;\r\n            break;\r\n\r\n          case 'A':\r\n            ampm = getName('A', [s.amText, s.pmText], [s.amText, s.pmText]) - 1;\r\n            break;\r\n\r\n          case \"'\":\r\n            if (lookAhead(\"'\")) {\r\n              checkLiteral();\r\n            } else {\r\n              literal = true;\r\n            }\r\n\r\n            break;\r\n\r\n          default:\r\n            checkLiteral();\r\n        }\r\n      }\r\n    }\r\n\r\n    if (year < 100) {\r\n      year += new Date().getFullYear() - new Date().getFullYear() % 100 + (year <= (typeof shortYearCutoff != 'string' ? shortYearCutoff : new Date().getFullYear() % 100 + parseInt(shortYearCutoff, 10)) ? 0 : -100);\r\n    }\r\n\r\n    if (doy > -1) {\r\n      month = 1;\r\n      day = doy;\r\n\r\n      do {\r\n        var dim = 32 - new Date(year, month - 1, 32, 12).getDate();\r\n\r\n        if (day > dim) {\r\n          month++;\r\n          day -= dim;\r\n        }\r\n      } while (day > dim);\r\n    }\r\n\r\n    hours = ampm == -1 ? hours : ampm && hours < 12 ? hours + 12 : !ampm && hours == 12 ? 0 : hours;\r\n    var date = s.getDate(year, month - 1, day, hours, minutes, seconds);\r\n\r\n    if (s.getYear(date) != year || s.getMonth(date) + 1 != month || s.getDay(date) != day) {\r\n      return def; // Invalid date\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  function getDayDiff(d1, d2) {\r\n    return Math.round((d2 - d1) / (24 * 60 * 60 * 1000));\r\n  }\r\n\r\n  function getDateOnly(d) {\r\n    return adjustedDate(d.getFullYear(), d.getMonth(), d.getDate());\r\n  }\r\n\r\n  function getDateStr(d) {\r\n    return d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate();\r\n  }\r\n\r\n  function getISOString(d, parts) {\r\n    var ret = '',\r\n        time = '';\r\n\r\n    if (d) {\r\n      if (parts.h) {\r\n        time += pad(d.getHours()) + ':' + pad(d.getMinutes());\r\n\r\n        if (parts.s) {\r\n          time += ':' + pad(d.getSeconds());\r\n        }\r\n\r\n        if (parts.u) {\r\n          time += '.' + pad(d.getMilliseconds(), 3);\r\n        }\r\n\r\n        if (parts.tz) {\r\n          time += parts.tz; // Just put what we got\r\n        }\r\n      }\r\n\r\n      if (parts.y) {\r\n        ret += d.getFullYear();\r\n\r\n        if (parts.m) {\r\n          ret += '-' + pad(d.getMonth() + 1);\r\n\r\n          if (parts.d) {\r\n            ret += '-' + pad(d.getDate());\r\n          }\r\n\r\n          if (parts.h) {\r\n            ret += 'T' + time;\r\n          }\r\n        }\r\n      } else if (parts.h) {\r\n        ret = time;\r\n      }\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  function setISOParts(parsed, offset, parts) {\r\n    var part,\r\n        v,\r\n        p = {\r\n      y: 1,\r\n      m: 2,\r\n      d: 3,\r\n      h: 4,\r\n      i: 5,\r\n      s: 6,\r\n      u: 7,\r\n      tz: 8\r\n    };\r\n\r\n    if (parts) {\r\n      for (part in p) {\r\n        v = parsed[p[part] - offset];\r\n\r\n        if (v) {\r\n          parts[part] = part == 'tz' ? v : 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function returnDate(d, s, displayFormat) {\r\n    var moment = window.moment || s.moment,\r\n        format = s.returnFormat;\r\n\r\n    if (d) {\r\n      if (format == 'moment' && moment) {\r\n        return moment(d);\r\n      }\r\n\r\n      if (format == 'locale') {\r\n        return formatDate(displayFormat, d, s);\r\n      }\r\n\r\n      if (format == 'iso8601') {\r\n        return getISOString(d, s.isoParts);\r\n      }\r\n    }\r\n\r\n    return d;\r\n  }\r\n\r\n  function makeDate(d, format, s, parts) {\r\n    var parse;\r\n\r\n    if (!d) {\r\n      return null;\r\n    } // If already date object\r\n\r\n\r\n    if (d.getTime) {\r\n      return d;\r\n    } // Moment object\r\n\r\n\r\n    if (d.toDate) {\r\n      return d.toDate();\r\n    }\r\n\r\n    if (typeof d == 'string') {\r\n      d = d.trim();\r\n    }\r\n\r\n    parse = ISO_8601_TIME.exec(d); // If ISO 8601 time string\r\n\r\n    if (parse) {\r\n      setISOParts(parse, 2, parts);\r\n      return new Date(1970, 0, 1, parse[2] ? +parse[2] : 0, parse[3] ? +parse[3] : 0, parse[4] ? +parse[4] : 0, parse[5] ? +parse[5] : 0);\r\n    }\r\n\r\n    if (!parse) {\r\n      parse = ISO_8601_FULL.exec(d);\r\n    } // If ISO 8601 date string\r\n\r\n\r\n    if (parse) {\r\n      setISOParts(parse, 0, parts);\r\n      return new Date(parse[1] ? +parse[1] : 1970, parse[2] ? parse[2] - 1 : 0, parse[3] ? +parse[3] : 1, parse[4] ? +parse[4] : 0, parse[5] ? +parse[5] : 0, parse[6] ? +parse[6] : 0, parse[7] ? +parse[7] : 0);\r\n    } // Parse date based on format\r\n\r\n\r\n    return parseDate(format, d, s);\r\n  }\r\n\r\n  function isSameDay(d1, d2) {\r\n    return d1.getFullYear() == d2.getFullYear() && d1.getMonth() == d2.getMonth() && d1.getDate() == d2.getDate();\r\n  }\r\n\r\n  var ISO_8601_FULL = /^(\\d{4}|[+-]\\d{6})(?:-(\\d{2})(?:-(\\d{2}))?)?(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?((Z)|([+-])(\\d{2})(?::(\\d{2}))?)?)?$/;\r\n  var ISO_8601_TIME = /^((\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+-])(\\d{2})(?::(\\d{2}))?)?)?$/;\r\n  var DAY_OF_MONTH = /^\\d{1,2}(\\/\\d{1,2})?$/;\r\n  var DAY_OF_WEEK = /^w\\d$/i;\r\n  var dateTimeDefaults = {\r\n    shortYearCutoff: '+10',\r\n    monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n    dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n    dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n    dayNamesMin: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\r\n    amText: 'am',\r\n    pmText: 'pm',\r\n    getYear: function getYear(d) {\r\n      return d.getFullYear();\r\n    },\r\n    getMonth: function getMonth(d) {\r\n      return d.getMonth();\r\n    },\r\n    getDay: function getDay(d) {\r\n      return d.getDate();\r\n    },\r\n    getDate: adjustedDate,\r\n    getMaxDayOfMonth: function getMaxDayOfMonth(y, m) {\r\n      return 32 - new Date(y, m, 32, 12).getDate();\r\n    },\r\n    getWeekNumber: function getWeekNumber(d) {\r\n      // Copy date so don't modify original\r\n      d = new Date(d);\r\n      d.setHours(0, 0, 0); // Set to nearest Thursday: current date + 4 - current day number\r\n      // Make Sunday's day number 7\r\n\r\n      d.setDate(d.getDate() + 4 - (d.getDay() || 7)); // Get first day of year\r\n\r\n      var yearStart = new Date(d.getFullYear(), 0, 1); // Calculate full weeks to nearest Thursday\r\n\r\n      return Math.ceil(((d - yearStart) / 86400000 + 1) / 7);\r\n    }\r\n  };\r\n  util.datetime = {\r\n    formatDate: formatDate,\r\n    parseDate: parseDate\r\n  };\r\n\r\n  /*!\r\n   * Mobiscroll v4.10.7\r\n   * http://mobiscroll.com\r\n   *\r\n   * Copyright 2010-2018, Acid Media\r\n   *\r\n   */\r\n  //console.info('The trial is being authenticated with remote calls made to https://trial.mobiscroll.com. This is strictly necessary for the trial. No remote calls are made from the licensed version. More info on the trial and its limitations: http://help.mobiscroll.com/trials/what-are-the-limitations-of-the-trial');\r\n\r\n  function getWidth(el) {\r\n    return el[0].innerWidth || el.innerWidth();\r\n  }\r\n\r\n  function getThemeName(s) {\r\n    var themeName = s.theme,\r\n        themeVariant = s.themeVariant;\r\n\r\n    if (themeName == 'auto' || !themeName) {\r\n      themeName = ms.autoTheme;\r\n    }\r\n\r\n    if (themeName == 'default') {\r\n      themeName = 'mobiscroll';\r\n    }\r\n\r\n    if ((themeVariant === 'dark' || isDark && themeVariant === 'auto') && ms.themes.form[themeName + '-dark']) {\r\n      themeName = themeName + '-dark';\r\n    } else if (themeVariant === 'light' && /.+-dark$/.test(themeName)) {\r\n      themeName = themeName.replace(/-dark$/, '');\r\n    }\r\n\r\n    return themeName;\r\n  }\r\n\r\n  function autoInit(selector, Component, hasRefresh) {\r\n    if (isBrowser) {\r\n      $$1(function () {\r\n        $$1(selector).each(function () {\r\n          new Component(this, {});\r\n        });\r\n        $$1(document).on('mbsc-enhance', function (ev, settings) {\r\n          if ($$1(ev.target).is(selector)) {\r\n            new Component(ev.target, settings || {});\r\n          } else {\r\n            $$1(selector, ev.target).each(function () {\r\n              new Component(this, settings || {});\r\n            });\r\n          }\r\n        });\r\n\r\n        if (hasRefresh) {\r\n          $$1(document).on('mbsc-refresh', function (ev) {\r\n            var inst;\r\n\r\n            if ($$1(ev.target).is(selector)) {\r\n              inst = instances[ev.target.id];\r\n\r\n              if (inst) {\r\n                inst.refresh();\r\n              }\r\n            } else {\r\n              $$1(selector, ev.target).each(function () {\r\n                inst = instances[this.id];\r\n\r\n                if (inst) {\r\n                  inst.refresh();\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  var messageShow,\r\n      ms,\r\n      $$1 = mobiscroll.$,\r\n      id = +new Date(),\r\n      instances = {},\r\n      classes = {},\r\n      empty = {},\r\n      breakpoints = {\r\n    xsmall: 0,\r\n    small: 576,\r\n    medium: 768,\r\n    large: 992,\r\n    xlarge: 1200\r\n  },\r\n      extend$1 = $$1.extend;\r\n  extend$1(util, {\r\n    getCoord: getCoord,\r\n    preventClick: preventClick,\r\n    vibrate: vibrate\r\n  });\r\n  ms = extend$1(mobiscroll, {\r\n    $: $$1,\r\n    version: '4.10.7',\r\n    autoTheme: 'mobiscroll',\r\n    themes: {\r\n      form: {},\r\n      page: {},\r\n      frame: {},\r\n      scroller: {},\r\n      listview: {},\r\n      navigation: {},\r\n      progress: {},\r\n      card: {}\r\n    },\r\n    platform: {\r\n      name: os,\r\n      majorVersion: majorVersion,\r\n      minorVersion: minorVersion\r\n    },\r\n    i18n: {},\r\n    instances: instances,\r\n    classes: classes,\r\n    util: util,\r\n    settings: {},\r\n    setDefaults: function setDefaults(o) {\r\n      extend$1(this.settings, o);\r\n    },\r\n    customTheme: function customTheme(name, baseTheme) {\r\n      var i,\r\n          themes = mobiscroll.themes,\r\n          comps = ['frame', 'scroller', 'listview', 'navigation', 'form', 'page', 'progress', 'card'];\r\n\r\n      for (i = 0; i < comps.length; i++) {\r\n        themes[comps[i]][name] = extend$1({}, themes[comps[i]][baseTheme], {\r\n          baseTheme: baseTheme\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  var Base = function Base(el, settings) {\r\n    var ctx,\r\n        lang,\r\n        preset,\r\n        resp,\r\n        s,\r\n        theme,\r\n        themeName,\r\n        trigger,\r\n        defaults,\r\n        that = this;\r\n    that.settings = {};\r\n    that._getText = new Function('mobiscroll, p', function () {\r\n      function getKey(encryptKey) {\r\n        var a = encryptKey[0],\r\n            i;\r\n\r\n        for (i = 0; i < 16; ++i) {\r\n          if (a * i % 16 == 1) {\r\n            return [i, encryptKey[1]];\r\n          }\r\n        }\r\n      }\r\n\r\n      function affine(enc, str, a, b) {\r\n        var alfb = '0123456789abcdef',\r\n            newstr = '',\r\n            len = str.length,\r\n            i;\r\n\r\n        for (i = 0; i < len; ++i) {\r\n          newstr += enc ? alfb[(a * alfb.indexOf(str[i]) + b) % 16] : alfb[((a * alfb.indexOf(str[i]) - a * b) % 16 + 16) % 16];\r\n        }\r\n\r\n        return newstr;\r\n      }\r\n\r\n      function decrypt(str, encryptKey) {\r\n        var decryptKey = getKey(encryptKey),\r\n            decryptedStr = affine(0, str, decryptKey[0], decryptKey[1]),\r\n            len = decryptedStr.length,\r\n            arr = [],\r\n            i;\r\n\r\n        for (i = 0; i < len; i += 2) {\r\n          arr.push(decryptedStr[i] + decryptedStr[i + 1]);\r\n        }\r\n\r\n        return arr;\r\n      }\r\n\r\n      var a = decrypt(\"565c5f59030d0c0f51015c0d0e0ec86e6f6f0fb51317195c0b565b5c08ca6307560ac85c0708060d03cacf1e6307560ac803075aca12c81210ce52cf1dc51e060f50c251565f0e0b13ccc5c9005b0801560f0d08ca0bcf5950075cc256130bc80e0b0805560ace08ce5c19550a0f0e0bca12c7131356cf595c136307560ac8000e0d0d5cca6307560ac85c0708060d03cacfc456cf1956c313171908130bb956b3190bb956b3130bb95cb3190bb95cb31308535c0b565b5c08c20b53cab9c5060f51520e075f140c0e0d0109c70f03520d5c56070856c5cec5520d510f560f0d0814070c510d0e5b560bc70f03520d5c56070856c5cec554c30f08060b5a14c317c5cec5560d521412c70f03520d5c56070856c5cec50e0b00561412c70f03520d5c56070856c5cec50c0d56560d031412c70f03520d5c56070856c5cec55c0f050a561412c70f03520d5c56070856c5cec503075c050f081412c70f03520d5c56070856c5cec5520706060f08051412c70f03520d5c56070856c5cec5000d0856c3510f540b141a525ac70f03520d5c56070856c5cec50e0f080bc30a0b0f050a5614171c525ac5cec5560b5a56c3070e0f050814010b08560b5cc5cec50d5207010f565f14c5c9ca6307560ac8000e0d0d5cca6307560ac85c0708060d03cacfc41c12cfcd171212c912c81acfc9c5c70f03520d5c56070856c5b3cfc8040d0f08cac519c5cfc9c5cc18be5b12121b16be5b12121b1cbe5b1212161fbe5b12121617be5b121216011ecd060f5018c514c5c5cf53010756010aca0bcf595c0b565b5c08c2c5c55334\", [5, 2]),\r\n          b = '',\r\n          l = a.length,\r\n          c;\r\n\r\n      for (c = 0; c < l; c++) {\r\n        b += String.fromCharCode(parseInt(a[c], 16));\r\n      }\r\n\r\n      return b;\r\n    }());\r\n    that.element = el;\r\n    that._init = noop;\r\n    that._destroy = noop;\r\n    that._processSettings = noop;\r\n\r\n    that._checkResp = function (width) {\r\n      if (that && that._responsive) {\r\n        var newResp = getResponsiveSettings(width);\r\n\r\n        if (resp !== newResp) {\r\n          resp = newResp;\r\n          that.init({});\r\n          return true;\r\n        }\r\n      }\r\n    };\r\n\r\n    that._getRespCont = function () {\r\n      return $$1(s.context == 'body' ? window : s.context);\r\n    };\r\n\r\n    that.init = function (newSettings, newValue) {\r\n      var key, value; // In case of settings update save the old value\r\n\r\n      if (newSettings && that.getVal) {\r\n        value = that.getVal();\r\n      } // Reset settings object\r\n\r\n\r\n      for (key in that.settings) {\r\n        delete that.settings[key];\r\n      }\r\n\r\n      s = that.settings; // Update original user settings\r\n\r\n      extend$1(settings, newSettings); // Load user defaults\r\n\r\n      if (that._hasDef) {\r\n        defaults = ms.settings;\r\n      } // Create settings object\r\n\r\n\r\n      extend$1(s, that._defaults, defaults, settings);\r\n      ctx = that._getRespCont();\r\n\r\n      if (that._responsive) {\r\n        if (!resp) {\r\n          resp = getResponsiveSettings();\r\n        }\r\n\r\n        extend$1(s, resp);\r\n      } // Get theme defaults\r\n\r\n\r\n      if (that._hasTheme) {\r\n        themeName = getThemeName(s);\r\n        settings.theme = themeName;\r\n        theme = ms.themes[that._class] ? ms.themes[that._class][themeName] : {};\r\n      } // Get language defaults\r\n\r\n\r\n      if (that._hasLang) {\r\n        lang = ms.i18n[s.lang];\r\n      } // Update settings object\r\n\r\n\r\n      extend$1(s, theme, lang, defaults, settings, resp);\r\n\r\n      that._processSettings(resp || {}); // --- REMOTE TRIAL CODE START ---\r\n\r\n\r\n      var noRemote = {\r\n        form: true,\r\n        page: true,\r\n        progress: true,\r\n        switch: true,\r\n        slider: true,\r\n        stepper: true\r\n      };\r\n\r\n      function toDateStr(d) {\r\n        return typeof d == 'string' ? d : getISOString(makeDate(d), {\r\n          y: 1,\r\n          m: 1,\r\n          d: 1,\r\n          h: 1,\r\n          i: 1,\r\n          s: 1,\r\n          u: 1\r\n        });\r\n      }\r\n\r\n      function init() {\r\n        that._init(newSettings); // In case of settings update reset the value.\r\n        // This is needed to adapt the value for the updated settings\r\n        // E.g. min/max, date format, etc.\r\n\r\n\r\n        if (newSettings && that.setVal) {\r\n          that.setVal(newValue === undefined ? value : newValue, true);\r\n        }\r\n\r\n        trigger('onInit');\r\n      }\r\n\r\n      if (!that._class || noRemote[that._class]) {\r\n        init();\r\n      } else {\r\n        if (!ms.fwv) {\r\n          var vers;\r\n\r\n          switch (ms.fw) {\r\n            case 'angular':\r\n              vers = $$1('[ng-version]').attr('ng-version');\r\n              break;\r\n\r\n            case 'jquery':\r\n              vers = $$1.fn && $$1.fn.jquery;\r\n              break;\r\n          }\r\n\r\n          ms.fwv = vers || 'N/A';\r\n        }\r\n\r\n        var config = {\r\n          className: that._class,\r\n          buttons: that.buttons,\r\n          platform: ms.platform,\r\n          v: ms.version,\r\n          userAgent: navigator.userAgent,\r\n          defSortHandle: $$1(el).find(s.listSelector || 'ul,ol').length ? 'left' : 'right',\r\n          // For listview\r\n          settings: {\r\n            activeClass: s.activeClass,\r\n            ampmText: s.ampmText,\r\n            amText: s.amText,\r\n            animateIcons: s.animateIcons,\r\n            backText: s.backText,\r\n            baseTheme: s.baseTheme,\r\n            buttons: s.buttons,\r\n            btnClass: s.btnClass,\r\n            btnWidth: s.btnWidth,\r\n            btnReverse: s.btnReverse,\r\n            closeIcon: s.closeIcon,\r\n            context: s.context == 'body' ? 'body' : '',\r\n            controls: s.controls,\r\n            cssClass: s.cssClass,\r\n            dateDisplay: s.dateDisplay,\r\n            dateFormat: s.dateFormat,\r\n            dateWheels: s.dateWheels,\r\n            dayNames: s.dayNames,\r\n            dayNamesShort: s.dayNamesShort,\r\n            daySuffix: s.daySuffix,\r\n            display: s.display,\r\n            dayText: s.dayText,\r\n            endYear: s.endYear,\r\n            fixedHeader: s.fixedHeader,\r\n            handleClass: s.handleClass,\r\n            handleMarkup: s.handleMarkup,\r\n            hideText: s.hideText,\r\n            hourText: s.hourText,\r\n            itemNode: s.itemNode,\r\n            itemWidth: s.itemWidth,\r\n            lang: s.lang,\r\n            lapIcon: s.lapIcon,\r\n            lapText: s.lapText,\r\n            layout: s.layout,\r\n            leftArrowClass: s.leftArrowClass,\r\n            max: toDateStr(s.max),\r\n            min: toDateStr(s.min),\r\n            minuteText: s.minuteText,\r\n            monthNames: s.monthNames,\r\n            monthNamesShort: s.monthNamesShort,\r\n            monthSuffix: s.monthSuffix,\r\n            monthText: s.monthText,\r\n            nowIcon: s.nowIcon,\r\n            nowText: s.nowText,\r\n            pmText: s.pmText,\r\n            preset: s.preset,\r\n            resetIcon: s.resetIcon,\r\n            resetText: s.resetText,\r\n            rightArrowClass: s.rightArrowClass,\r\n            rtl: s.rtl,\r\n            secText: s.secText,\r\n            select: s.select,\r\n            showOverlay: s.showOverlay,\r\n            snap: s.snap,\r\n            sort: s.sort,\r\n            sortable: s.sortable,\r\n            sortHandle: s.sortHandle,\r\n            startIcon: s.startIcon,\r\n            startText: s.startText,\r\n            startYear: s.startYear,\r\n            stepHour: s.stepHour,\r\n            stepMinute: s.stepMinute,\r\n            stepSecond: s.stepSecond,\r\n            steps: s.steps,\r\n            stopIcon: s.stopIcon,\r\n            stopText: s.stopText,\r\n            striped: s.striped,\r\n            theme: s.theme,\r\n            timeFormat: s.timeFormat,\r\n            timeWheels: s.timeWheels,\r\n            todayText: s.todayText,\r\n            type: s.type,\r\n            variant: s.variant,\r\n            wrapperClass: s.wrapperClass,\r\n            yearSuffix: s.yearSuffix,\r\n            yearText: s.yearText\r\n          }\r\n        };\r\n\r\n        var i,\r\n            prop,\r\n            q = [],\r\n            tempInst = {},\r\n            presetFunctions = ['refresh', 'redraw', 'navigate', 'changeTab', // Calendar Base\r\n        'getDate', 'setDate', // Datetime\r\n        'addEvent', 'removeEvent', 'getEvents', 'setEvents', // Event calendar\r\n        'setActiveDate', // Range\r\n        'start', 'stop', 'reset', 'lap', 'resetlap', 'getTime', 'setTime', 'getEllapsedTime', 'setEllapsedTime' // Timer\r\n        ],\r\n            noProxy = {\r\n          jsonp: 1,\r\n          getInst: 1,\r\n          init: 1,\r\n          destroy: 1\r\n        },\r\n            proxy = function proxy(name) {\r\n          that[name] = function () {\r\n            q.push({\r\n              func: name,\r\n              args: arguments\r\n            });\r\n          };\r\n        }; // Override all methods of the instance to delay execution\r\n        // until the server side initialization is done.\r\n        // For this we create a function which just pushes the function name\r\n        // and arguments into a queue.\r\n\r\n\r\n        for (prop in that) {\r\n          if (typeof that[prop] === 'function' && !noProxy[prop]) {\r\n            tempInst[prop] = that[prop];\r\n            proxy(prop);\r\n          }\r\n        } // Proxy possible preset functions, which does not exist yet\r\n\r\n\r\n        for (i = 0; i < presetFunctions.length; i++) {\r\n          proxy(presetFunctions[i]);\r\n        } // Workaround for timer buttons\r\n\r\n\r\n        if (s.preset == 'timer' && !settings.buttons) {\r\n          config.settings.buttons = ['resetlap', 'toggle'];\r\n\r\n          if (s.display !== 'inline') {\r\n            config.settings.buttons.unshift('hide');\r\n          }\r\n        }\r\n\r\n        if (s.preset == 'eventcalendar' && !settings.buttons && s.display != 'inline') {\r\n          config.settings.buttons = ['close'];\r\n        }\r\n\r\n        s.zone = s.zone || {\r\n          run: function run(func) {\r\n            func();\r\n          },\r\n          runOutsideAngular: function runOutsideAngular(func) {\r\n            func();\r\n          }\r\n        };\r\n\r\n        if (ms.apiKey !== 'mbscdemo') {\r\n          logData.theme = s.theme;\r\n          logData.components = logData.components || [];\r\n          logData.components.push(that._class + '_' + (s.preset || ''));\r\n          sendLog();\r\n        }\r\n\r\n        that.jsonp('remote', config, function (data) {\r\n          s.zone.run(function () {\r\n            if (!that) {\r\n              return;\r\n            }\r\n\r\n            that.remote = data; // Copy back original functions in place of the proxy\r\n\r\n            for (prop in tempInst) {\r\n              that[prop] = tempInst[prop];\r\n            }\r\n\r\n            if (data.notification !== undefined && !messageShow) {\r\n              messageShow = true;\r\n              mobiscroll.snackbar(data.notification);\r\n            } // Workaround for remote data updates\r\n\r\n\r\n            var settingsCopy = extend$1({}, settings);\r\n            delete settingsCopy.data; // --- REMOTE TRIAL CODE END ---\r\n            // Load preset settings\r\n\r\n            if (that._presets) {\r\n              preset = that._presets[s.preset];\r\n\r\n              if (preset) {\r\n                preset = preset.call(el, that, settings);\r\n                extend$1(s, preset, settingsCopy, resp);\r\n              }\r\n            }\r\n\r\n            init(); // --- REMOTE TRIAL CODE START ---\r\n            // Execute functions in the queue\r\n\r\n            for (i = 0; i < q.length; i++) {\r\n              that[q[i].func].apply(that, q[i].args);\r\n            } // Empty temporary variables\r\n\r\n\r\n            q = null;\r\n            tempInst = null;\r\n          });\r\n        }, guid);\r\n      } // --- REMOTE TRIAL CODE END ---\r\n\r\n    };\r\n\r\n    that.destroy = function () {\r\n      if (that) {\r\n        that._destroy();\r\n\r\n        trigger('onDestroy'); // Delete scroller instance\r\n\r\n        delete instances[el.id];\r\n        that = null;\r\n      }\r\n    };\r\n    /**\r\n     * Attach tap event to the given element.\r\n     */\r\n\r\n\r\n    that.tap = function (el, handler, prevent, tolerance, time) {\r\n      tap(that, el, handler, prevent, tolerance, time);\r\n    };\r\n    /**\r\n     * Triggers an event\r\n     */\r\n\r\n\r\n    that.trigger = function (name, ev) {\r\n      var ret,\r\n          i,\r\n          v,\r\n          s = [defaults, theme, preset, settings];\r\n\r\n      for (i = 0; i < 4; i++) {\r\n        v = s[i];\r\n\r\n        if (v && v[name]) {\r\n          ret = v[name].call(el, ev || {}, that);\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    };\r\n    /**\r\n     * Sets one ore more options.\r\n     */\r\n\r\n\r\n    that.option = function (opt, value, newValue) {\r\n      var obj = {},\r\n          // preserve settings that are possible to change runtime\r\n      dynamic = ['data', 'invalid', 'valid', 'readonly'];\r\n\r\n      if (/calendar|eventcalendar|range/.test(s.preset)) {\r\n        dynamic.push('marked', 'labels', 'colors');\r\n      }\r\n\r\n      if (typeof opt === 'object') {\r\n        obj = opt;\r\n      } else {\r\n        obj[opt] = value;\r\n      }\r\n\r\n      dynamic.forEach(function (v) {\r\n        settings[v] = s[v];\r\n      });\r\n      that.init(obj, newValue);\r\n    };\r\n    /**\r\n     * Returns the mobiscroll instance.\r\n     */\r\n\r\n\r\n    that.getInst = function () {\r\n      return that;\r\n    }; // --- REMOTE TRIAL CODE START ---\r\n\r\n\r\n    that.jsonp = jsonp;\r\n    var guid = 'comp_' + (el.id || ++uid); // --- REMOTE TRIAL CODE END ---\r\n\r\n    settings = settings || {};\r\n    trigger = that.trigger;\r\n\r\n    function getResponsiveSettings(w) {\r\n      var result = empty,\r\n          width;\r\n\r\n      if (s.responsive) {\r\n        width = w || getWidth(ctx);\r\n        $$1.each(s.responsive, function (key, value) {\r\n          if (width >= (value.breakpoint || breakpoints[key])) {\r\n            result = value;\r\n          }\r\n        });\r\n      }\r\n\r\n      return result;\r\n    }\r\n\r\n    function construct() {\r\n      $$1(el).addClass('mbsc-comp'); // Autogenerate id\r\n\r\n      if (!el.id) {\r\n        el.id = 'mobiscroll' + ++id;\r\n      } else if (instances[el.id]) {\r\n        instances[el.id].destroy();\r\n      } // Save instance\r\n\r\n\r\n      instances[el.id] = that;\r\n      that.__ready = true;\r\n    }\r\n\r\n    if (!that.__ready) {\r\n      construct();\r\n    }\r\n  }; // --- REMOTE TRIAL CODE START ---\r\n\r\n\r\n  var uid = 0;\r\n  var logData = {};\r\n  var logTimer;\r\n\r\n  function sendError() {\r\n    var sessionID = document.cookie.replace(/(?:(?:^|.*;\\s*)ASP.NET_SessionId\\s*=\\s*([^;]*).*$)|^.*$/, \"$1\");\r\n    document.cookie = 'mobiscrollClientError=1; expires=' + new Date(new Date().getTime() + 1000 * 60 * 60 * 24).toUTCString() + '; path=/'; // Workaround for file protocoll\r\n\r\n    try {\r\n      window.name = (window.name || '') + ';mobiscrollClientError';\r\n    } catch (e) {// Make eslint happy\r\n    }\r\n\r\n    jsonp('error', {\r\n      trialCode: ms.apiKey,\r\n      sessionID: sessionID\r\n    }, function () {\r\n      document.cookie = 'mobiscrollClientError=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/';\r\n\r\n      try {\r\n        window.name = (window.name || '').replace(/;mobiscrollClientError/g, '');\r\n      } catch (e) {// Make eslint happy\r\n      }\r\n    });\r\n  }\r\n\r\n  function sendLog() {\r\n    clearTimeout(logTimer);\r\n    logTimer = setTimeout(function () {\r\n      extend$1(logData, {\r\n        trialCode: ms.apiKey,\r\n        fw: ms.fw + (window.Ionic || window.ionic ? '-ionic' : ''),\r\n        fwv: ms.fwv,\r\n        demo: !!window.isMbscDemo\r\n      });\r\n      jsonp('log', logData, function () {\r\n        logData = {};\r\n      });\r\n    }, 5000);\r\n  }\r\n\r\n  function jsonp(method, data, callback, uniqueId, attempts) {\r\n    var timer,\r\n        script = document.createElement('script'),\r\n        unique = 'mbsc_jsonp_' + (uniqueId ? uniqueId : ++id);\r\n    attempts = attempts || 1;\r\n\r\n    function onError() {\r\n      if (window[unique]) {\r\n        window[unique]();\r\n      }\r\n\r\n      if (method === 'remote') {\r\n        if (attempts < 4) {\r\n          jsonp(method, data, callback, uniqueId, attempts + 1);\r\n        } else if (!ms.trialError) {\r\n          ms.trialError = true;\r\n          sendError();\r\n\r\n          if (ms.apiKey != 'mbscdemo') {\r\n            alert('Mobiscroll trial not loaded. Please check your connection. If the problem persists, contact us at support@mobiscroll.com');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    window[unique] = function (data) {\r\n      clearTimeout(timer);\r\n      script.parentNode.removeChild(script);\r\n      delete window[unique];\r\n      callback(data ? JSON.parse(data, function (key, value) {\r\n        if (typeof value != 'string') {\r\n          return value;\r\n        }\r\n\r\n        if (value.substring(0, 8) === 'function') {\r\n          return window.eval('(' + value + ')');\r\n        }\r\n\r\n        if (value.match(ISO_8601_FULL)) {\r\n          return makeDate(value);\r\n        }\r\n\r\n        return value;\r\n      }) : {});\r\n    };\r\n\r\n    timer = setTimeout(onError, 6000);\r\n    script.onerror = onError;\r\n    script.src = ms.apiUrl + ms.apiKey + '/' + method + '?callback=' + unique + '&data=' + encodeURIComponent(JSON.stringify(data));\r\n    document.body.appendChild(script);\r\n  }\r\n\r\n  if (isBrowser) {\r\n    $$1(function () {\r\n      if (document.cookie.replace(/(?:(?:^|.*;\\s*)mobiscrollClientError\\s*=\\s*([^;]*).*$)|^.*$/, \"$1\") || /mobiscrollClientError/.test(window.name || '')) {\r\n        sendError();\r\n      }\r\n    });\r\n  } // --- REMOTE TRIAL CODE END ---\r\n\r\n  var Observable = function () {\r\n    function Observable() {\r\n      this.keyCount = 0;\r\n      this.subscribers = new Map();\r\n    }\r\n\r\n    Observable.prototype.subscribe = function (handler) {\r\n      var key = this.keyCount++;\r\n      this.subscribers.set(key, handler);\r\n      return key;\r\n    };\r\n\r\n    Observable.prototype.unsubscribe = function (handler) {\r\n      if (typeof handler === 'number') {\r\n        this.subscribers.delete(handler);\r\n      } else {\r\n        var foundKey_1 = null;\r\n        this.subscribers.forEach(function (fn, key) {\r\n          if (fn === handler) {\r\n            foundKey_1 = key;\r\n          }\r\n        });\r\n        this.subscribers.delete(foundKey_1);\r\n      }\r\n    };\r\n\r\n    Observable.prototype.next = function (value) {\r\n      this.subscribers.forEach(function (handler) {\r\n        handler(value);\r\n      });\r\n    };\r\n\r\n    return Observable;\r\n  }();\r\n\r\n  var MbscRouterToken = (function () {\r\n      function MbscRouterToken() {\r\n      }\r\n      return MbscRouterToken;\r\n  }());\r\n  var MbscOptionsService = (function () {\r\n      function MbscOptionsService() {\r\n      }\r\n      Object.defineProperty(MbscOptionsService.prototype, \"options\", {\r\n          get: function () {\r\n              return this._options;\r\n          },\r\n          set: function (o) {\r\n              this._options = o;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscOptionsService.decorators = [\r\n          { type: core.Injectable },\r\n      ];\r\n      MbscOptionsService.ctorParameters = function () { return []; };\r\n      return MbscOptionsService;\r\n  }());\r\n  var MbscInputService = (function () {\r\n      function MbscInputService() {\r\n          this._controlSet = false;\r\n          this._componentRef = undefined;\r\n      }\r\n      Object.defineProperty(MbscInputService.prototype, \"isControlSet\", {\r\n          get: function () {\r\n              return this._controlSet;\r\n          },\r\n          set: function (v) {\r\n              this._controlSet = v;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscInputService.prototype, \"input\", {\r\n          get: function () {\r\n              return this._componentRef;\r\n          },\r\n          set: function (v) {\r\n              this._componentRef = v;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscInputService.decorators = [\r\n          { type: core.Injectable },\r\n      ];\r\n      MbscInputService.ctorParameters = function () { return []; };\r\n      return MbscInputService;\r\n  }());\r\n  var MbscListService = (function () {\r\n      function MbscListService() {\r\n          this.addRemoveObservable = new Observable();\r\n      }\r\n      MbscListService.prototype.notifyAddRemove = function (item) {\r\n          this.addRemoveObservable.next(item);\r\n      };\r\n      MbscListService.prototype.onAddRemove = function () {\r\n          return this.addRemoveObservable;\r\n      };\r\n      MbscListService.decorators = [\r\n          { type: core.Injectable },\r\n      ];\r\n      MbscListService.ctorParameters = function () { return []; };\r\n      return MbscListService;\r\n  }());\r\n  var MbscBase = (function () {\r\n      function MbscBase(initialElem, zone) {\r\n          this.initialElem = initialElem;\r\n          this.zone = zone;\r\n          this.options = {};\r\n          this.onInit = new core.EventEmitter();\r\n          this.onDestroy = new core.EventEmitter();\r\n          this.inlineOptionsObj = {};\r\n          this.pendingValue = undefined;\r\n          this.themeClassesSet = false;\r\n          this.instance = null;\r\n          this.element = null;\r\n          this.inlineOptionsObj.zone = zone;\r\n      }\r\n      MbscBase.prototype.getInlineEvents = function () {\r\n          var _this = this;\r\n          var _loop_1 = function (prop) {\r\n              if (this_1[prop] instanceof (core.EventEmitter) && (!this_1.options || !(this_1.options[prop]))) {\r\n                  this_1.inlineOptionsObj[prop] = function (event, inst) {\r\n                      event.inst = inst;\r\n                      _this[prop].emit(event);\r\n                  };\r\n              }\r\n          };\r\n          var this_1 = this;\r\n          for (var prop in this) {\r\n              _loop_1(prop);\r\n          }\r\n      };\r\n      MbscBase.prototype.setThemeClasses = function () {\r\n          $$1(this.initialElem.nativeElement).addClass(this.getThemeClasses());\r\n          this.themeClassesSet = true;\r\n      };\r\n      MbscBase.prototype.clearThemeClasses = function () {\r\n          $$1(this.initialElem.nativeElement).removeClass(this.getThemeClasses());\r\n      };\r\n      MbscBase.prototype.getThemeClasses = function () {\r\n          var s = this.instance.settings;\r\n          return 'mbsc-control-ng mbsc-' + s.theme + (s.baseTheme ? ' mbsc-' + s.baseTheme : '');\r\n      };\r\n      MbscBase.prototype.setElement = function () {\r\n          this.element = this.initialElem.nativeElement;\r\n          var contentInput = $$1('input', this.initialElem.nativeElement);\r\n          if (contentInput.length) {\r\n              this.element = contentInput[0];\r\n          }\r\n      };\r\n      MbscBase.prototype.ngAfterViewInit = function () {\r\n          this.setElement();\r\n          this.startInit();\r\n      };\r\n      MbscBase.prototype.startInit = function () {\r\n          var _this = this;\r\n          this.getInlineEvents();\r\n          var ionInput = this.getIonInput();\r\n          if (ionInput && (ionInput.getInputElement || ionInput.then) && this.element.nodeName !== \"INPUT\") {\r\n              if (ionInput.getInputElement) {\r\n                  ionInput.getInputElement().then(function (inp) {\r\n                      _this.setElement();\r\n                      _this.initControl();\r\n                  });\r\n              }\r\n              else {\r\n                  ionInput.then(function (ionInpComponent) {\r\n                      ionInpComponent\r\n                          .getInputElement()\r\n                          .then(function (inp) {\r\n                          _this.setElement();\r\n                          _this.initControl();\r\n                      });\r\n                  });\r\n              }\r\n          }\r\n          else if (!this.instance) {\r\n              this.initControl();\r\n          }\r\n      };\r\n      MbscBase.prototype.getIonInput = function () {\r\n          var v = this._view;\r\n          var native = this.initialElem.nativeElement;\r\n          var ionInputNode = native.nodeName === \"ION-INPUT\";\r\n          var inp1 = ionInputNode && v && v._data && v._data.componentView && v._data.componentView.component;\r\n          var inp2 = ionInputNode && native.componentOnReady && native.componentOnReady();\r\n          return inp1 || inp2;\r\n      };\r\n      MbscBase.prototype.initControl = function () { };\r\n      MbscBase.prototype.ngOnDestroy = function () {\r\n          if (this.instance) {\r\n              this.instance.destroy();\r\n          }\r\n      };\r\n      MbscBase.prototype.updateOptions = function (newOptions, optionChanged, invalidChanged, dataChanged) {\r\n          var _this = this;\r\n          if (optionChanged || invalidChanged) {\r\n              setTimeout(function () {\r\n                  if (newOptions.theme && _this.themeClassesSet) {\r\n                      _this.clearThemeClasses();\r\n                  }\r\n                  _this.instance.option(newOptions, undefined, _this.pendingValue);\r\n                  if (newOptions.theme && _this.themeClassesSet) {\r\n                      _this.setThemeClasses();\r\n                  }\r\n              });\r\n          }\r\n          else if (dataChanged) {\r\n              this.refreshData(this.data);\r\n          }\r\n          else if (this.instance.redraw) {\r\n              this.instance.redraw();\r\n          }\r\n      };\r\n      MbscBase.prototype.ngOnChanges = function (changes) {\r\n          var optionChange = false, cloneChange = false, invalidChange = false, dataChange = false, newOptions = {};\r\n          for (var prop in changes) {\r\n              if (!changes[prop].firstChange && prop !== 'options' && prop !== 'value') {\r\n                  if (this.cloneDictionary && this.cloneDictionary[prop]) {\r\n                      this.makeClone(prop, changes[prop].currentValue);\r\n                      if (this.instance) {\r\n                          this.instance.settings[prop] = changes[prop].currentValue;\r\n                      }\r\n                      if (prop == 'invalid') {\r\n                          invalidChange = true;\r\n                      }\r\n                      if (prop == 'data') {\r\n                          dataChange = true;\r\n                      }\r\n                      cloneChange = true;\r\n                  }\r\n                  else {\r\n                      newOptions[prop] = changes[prop].currentValue;\r\n                      optionChange = true;\r\n                  }\r\n              }\r\n              else if (!changes[prop].firstChange && prop !== 'value') {\r\n                  newOptions = extend$1(changes[prop].currentValue, newOptions);\r\n                  optionChange = true;\r\n              }\r\n              else if (changes[prop].firstChange) {\r\n                  if (prop !== 'options' && prop !== 'value') {\r\n                      this.inlineOptionsObj[prop] = changes[prop].currentValue;\r\n                  }\r\n              }\r\n          }\r\n          if (cloneChange) {\r\n              extend$1(newOptions, this.cloneDictionary);\r\n          }\r\n          if (optionChange || cloneChange) {\r\n              this.updateOptions(newOptions, optionChange, invalidChange, dataChange);\r\n          }\r\n      };\r\n      MbscBase.decorators = [\r\n          { type: core.Directive, args: [{ selector: '[mbsc-b]' },] },\r\n      ];\r\n      MbscBase.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n      ]; };\r\n      MbscBase.propDecorators = {\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n          'cssClass': [{ type: core.Input },],\r\n          'theme': [{ type: core.Input },],\r\n          'themeVariant': [{ type: core.Input },],\r\n          'lang': [{ type: core.Input },],\r\n          'rtl': [{ type: core.Input },],\r\n          'responsive': [{ type: core.Input },],\r\n          'onInit': [{ type: core.Output },],\r\n          'onDestroy': [{ type: core.Output },],\r\n      };\r\n      return MbscBase;\r\n  }());\r\n  var MbscValueBase = (function (_super) {\r\n      __extends(MbscValueBase, _super);\r\n      function MbscValueBase(initialElem, zone) {\r\n          var _this = _super.call(this, initialElem, zone) || this;\r\n          _this.initialValue = undefined;\r\n          return _this;\r\n      }\r\n      MbscValueBase.prototype.setNewValue = function (v) { };\r\n      MbscValueBase.prototype.setNewValueProxy = function (v) {\r\n          if (!this.instance) {\r\n              this.initialValue = v;\r\n          }\r\n          this.setNewValue(v);\r\n      };\r\n      MbscValueBase.decorators = [\r\n          { type: core.Directive, args: [{ selector: '[mbsc-v-b]' },] },\r\n      ];\r\n      MbscValueBase.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n      ]; };\r\n      return MbscValueBase;\r\n  }(MbscBase));\r\n  var MbscCloneBase = (function (_super) {\r\n      __extends(MbscCloneBase, _super);\r\n      function MbscCloneBase(initElem, zone) {\r\n          var _this = _super.call(this, initElem, zone) || this;\r\n          _this.cloneDictionary = {};\r\n          return _this;\r\n      }\r\n      MbscCloneBase.prototype.makeClone = function (setting, value) {\r\n          if (value) {\r\n              this.cloneDictionary[setting] = [];\r\n              for (var i = 0; i < value.length; i++) {\r\n                  this.cloneDictionary[setting].push(value[i]);\r\n              }\r\n          }\r\n          else {\r\n              this.cloneDictionary[setting] = value;\r\n          }\r\n      };\r\n      MbscCloneBase.prototype.ngDoCheck = function () {\r\n          var changed = false, data = false, invalid = false;\r\n          for (var key in this.cloneDictionary) {\r\n              if (this[key] !== undefined && !deepEqualsArray(this[key], this.cloneDictionary[key])) {\r\n                  this.makeClone(key, this[key]);\r\n                  this.instance.settings[key] = this[key];\r\n                  changed = true;\r\n                  if (key == 'invalid') {\r\n                      invalid = true;\r\n                  }\r\n                  if (key == 'data') {\r\n                      data = true;\r\n                  }\r\n              }\r\n          }\r\n          if (changed && this.instance) {\r\n              this.updateOptions(this.cloneDictionary, false, invalid, data);\r\n          }\r\n      };\r\n      MbscCloneBase.prototype.ngOnInit = function () {\r\n          for (var key in this.cloneDictionary) {\r\n              this.makeClone(key, this[key]);\r\n          }\r\n      };\r\n      MbscCloneBase.decorators = [\r\n          { type: core.Directive, args: [{ selector: '[mbsc-c-b]' },] },\r\n      ];\r\n      MbscCloneBase.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n      ]; };\r\n      return MbscCloneBase;\r\n  }(MbscValueBase));\r\n  var MbscControlBase = (function (_super) {\r\n      __extends(MbscControlBase, _super);\r\n      function MbscControlBase(initialElement, zone, control, _inputService, _view) {\r\n          var _this = _super.call(this, initialElement, zone) || this;\r\n          _this.control = control;\r\n          _this._inputService = _inputService;\r\n          _this._view = _view;\r\n          _this._needsTimeout = true;\r\n          _this.onChange = function () { };\r\n          _this.onTouch = function () { };\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          _this.oldAccessor = null;\r\n          _this.overwriteAccessor();\r\n          if (_inputService) {\r\n              _inputService.isControlSet = true;\r\n          }\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscControlBase.prototype, \"optionExtensions\", {\r\n          get: function () {\r\n              var _this = this;\r\n              var externalOnClose = this.options && this.options.onClose;\r\n              var externalOnFill = this.options && this.options.onFill;\r\n              var onCloseEmitter = this.onClose;\r\n              return {\r\n                  onFill: function (event, inst) {\r\n                      if (_this.oldAccessor) {\r\n                          _this.oldAccessor.writeValue(event.valueText);\r\n                      }\r\n                      else {\r\n                          var ionInput = _this.getIonInput();\r\n                          if (ionInput) {\r\n                              ionInput.value = event.valueText;\r\n                          }\r\n                      }\r\n                      if (externalOnFill) {\r\n                          externalOnFill(event, inst);\r\n                      }\r\n                  },\r\n                  onClose: function (event, inst) {\r\n                      _this.onTouch();\r\n                      if (externalOnClose) {\r\n                          externalOnClose(event, inst);\r\n                      }\r\n                      if (onCloseEmitter) {\r\n                          event.inst = inst;\r\n                          onCloseEmitter.emit(event);\r\n                      }\r\n                  }\r\n              };\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscControlBase.prototype, \"enableManualEdit\", {\r\n          get: function () {\r\n              var nsf = this.showOnFocus === false || this.options.showOnFocus === false, nst = this.showOnTap === false || this.options.showOnTap === false;\r\n              return nsf && nst;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscControlBase.prototype.handleChange = function (element) {\r\n          var that = this;\r\n          $$1(element || this.element).on('change', function () {\r\n              that.zone.run(function () {\r\n                  if (that.element.value !== that.instance._value && that.enableManualEdit) {\r\n                      that.instance.setVal(that.element.value, true, true);\r\n                  }\r\n                  else {\r\n                      var value = that.instance.getVal();\r\n                      if (that.control) {\r\n                          if (!valueEquals(value, that.control.model)) {\r\n                              that.onChange(value);\r\n                              that.control.control.patchValue(value);\r\n                          }\r\n                      }\r\n                      else {\r\n                          that.onChangeEmitter.emit(value);\r\n                      }\r\n                  }\r\n              });\r\n          });\r\n          function valueEquals(v1, v2) {\r\n              if (v1 === v2) {\r\n                  return true;\r\n              }\r\n              if (v1 instanceof Date && v2 instanceof Date) {\r\n                  return (+v1) === (+v2);\r\n              }\r\n              return false;\r\n          }\r\n      };\r\n      MbscControlBase.prototype.overwriteAccessor = function () {\r\n          if (this.control) {\r\n              if (this.control.valueAccessor !== this) {\r\n                  this.oldAccessor = this.control.valueAccessor;\r\n              }\r\n              this.control.valueAccessor = this;\r\n          }\r\n      };\r\n      MbscControlBase.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.handleChange();\r\n          this.overwriteAccessor();\r\n          if (this.control && this.control._setUpControl) {\r\n              this.control._setUpControl();\r\n          }\r\n      };\r\n      MbscControlBase.prototype.registerOnChange = function (fn) {\r\n          this.onChange = fn;\r\n      };\r\n      MbscControlBase.prototype.registerOnTouched = function (fn) {\r\n          this.onTouch = fn;\r\n      };\r\n      MbscControlBase.prototype.setDisabledState = function (isDisabled) {\r\n          this.disabled = isDisabled;\r\n          if (this.oldAccessor && this.oldAccessor.setDisabledState) {\r\n              this.oldAccessor.setDisabledState(isDisabled);\r\n          }\r\n          if (this.instance && this.instance.disable && this.instance.enable) {\r\n              if (isDisabled) {\r\n                  this.instance.disable();\r\n              }\r\n              else {\r\n                  this.instance.enable();\r\n              }\r\n          }\r\n      };\r\n      MbscControlBase.prototype.writeValue = function (v) {\r\n          var _this = this;\r\n          if (this._needsTimeout) {\r\n              this.pendingValue = v;\r\n              setTimeout(function () {\r\n                  _this.pendingValue = undefined;\r\n                  _this.setNewValueProxy(v);\r\n              });\r\n          }\r\n          else {\r\n              this.setNewValueProxy(v);\r\n          }\r\n      };\r\n      MbscControlBase.decorators = [\r\n          { type: core.Directive, args: [{ selector: '[mbsc-cc-b]' },] },\r\n      ];\r\n      MbscControlBase.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, },\r\n          { type: MbscInputService, },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscControlBase.propDecorators = {\r\n          'labelStyle': [{ type: core.Input, args: ['label-style',] },],\r\n          'inputStyle': [{ type: core.Input, args: ['input-style',] },],\r\n          'showOnFocus': [{ type: core.Input },],\r\n          'showOnTap': [{ type: core.Input },],\r\n          'disabled': [{ type: core.Input },],\r\n      };\r\n      return MbscControlBase;\r\n  }(MbscCloneBase));\r\n  var MbscFrameBase = (function (_super) {\r\n      __extends(MbscFrameBase, _super);\r\n      function MbscFrameBase(initialElem, zone, control, _inputService, view) {\r\n          var _this = _super.call(this, initialElem, zone, control, _inputService, view) || this;\r\n          _this.onBeforeClose = new core.EventEmitter();\r\n          _this.onBeforeShow = new core.EventEmitter();\r\n          _this.onCancel = new core.EventEmitter();\r\n          _this.onClose = new core.EventEmitter();\r\n          _this.onFill = new core.EventEmitter();\r\n          _this.onMarkupReady = new core.EventEmitter();\r\n          _this.onPosition = new core.EventEmitter();\r\n          _this.onShow = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscFrameBase.prototype, \"inline\", {\r\n          get: function () {\r\n              return (this.display || (this.options && this.options.display)) === 'inline';\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscFrameBase.prototype.ngOnInit = function () {\r\n          this.cloneDictionary.invalid = [];\r\n          this.cloneDictionary.valid = [];\r\n          _super.prototype.ngOnInit.call(this);\r\n      };\r\n      MbscFrameBase.decorators = [\r\n          { type: core.Directive, args: [{ selector: '[mbsc-fr-b]' },] },\r\n      ];\r\n      MbscFrameBase.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, },\r\n          { type: MbscInputService, },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscFrameBase.propDecorators = {\r\n          'options': [{ type: core.Input },],\r\n          'dropdown': [{ type: core.Input },],\r\n          'anchor': [{ type: core.Input },],\r\n          'animate': [{ type: core.Input },],\r\n          'buttons': [{ type: core.Input },],\r\n          'closeOnOverlayTap': [{ type: core.Input },],\r\n          'context': [{ type: core.Input },],\r\n          'display': [{ type: core.Input },],\r\n          'showInput': [{ type: core.Input },],\r\n          'focusOnClose': [{ type: core.Input },],\r\n          'focusTrap': [{ type: core.Input },],\r\n          'headerText': [{ type: core.Input },],\r\n          'scrollLock': [{ type: core.Input },],\r\n          'touchUi': [{ type: core.Input },],\r\n          'onBeforeClose': [{ type: core.Output },],\r\n          'onBeforeShow': [{ type: core.Output },],\r\n          'onCancel': [{ type: core.Output },],\r\n          'onClose': [{ type: core.Output },],\r\n          'onFill': [{ type: core.Output },],\r\n          'onMarkupReady': [{ type: core.Output },],\r\n          'onPosition': [{ type: core.Output },],\r\n          'onShow': [{ type: core.Output },],\r\n      };\r\n      return MbscFrameBase;\r\n  }(MbscControlBase));\r\n  var MbscScrollerBase = (function (_super) {\r\n      __extends(MbscScrollerBase, _super);\r\n      function MbscScrollerBase(initialElement, zone, control, _inputService, view) {\r\n          var _this = _super.call(this, initialElement, zone, control, _inputService, view) || this;\r\n          _this.onWheelChange = new core.EventEmitter();\r\n          _this.onSet = new core.EventEmitter();\r\n          _this.onItemTap = new core.EventEmitter();\r\n          _this.onClear = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      MbscScrollerBase.decorators = [\r\n          { type: core.Directive, args: [{ selector: '[mbsc-s-b]' },] },\r\n      ];\r\n      MbscScrollerBase.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, },\r\n          { type: MbscInputService, },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscScrollerBase.propDecorators = {\r\n          'circular': [{ type: core.Input },],\r\n          'height': [{ type: core.Input },],\r\n          'layout': [{ type: core.Input },],\r\n          'maxWidth': [{ type: core.Input },],\r\n          'minWidth': [{ type: core.Input },],\r\n          'multiline': [{ type: core.Input },],\r\n          'readonly': [{ type: core.Input },],\r\n          'rows': [{ type: core.Input },],\r\n          'showLabel': [{ type: core.Input },],\r\n          'showScrollArrows': [{ type: core.Input },],\r\n          'wheels': [{ type: core.Input },],\r\n          'width': [{ type: core.Input },],\r\n          'validate': [{ type: core.Input },],\r\n          'cancelText': [{ type: core.Input },],\r\n          'clearText': [{ type: core.Input },],\r\n          'selectedText': [{ type: core.Input },],\r\n          'setText': [{ type: core.Input },],\r\n          'formatValue': [{ type: core.Input },],\r\n          'parseValue': [{ type: core.Input },],\r\n          'onWheelChange': [{ type: core.Output, args: ['onChange',] },],\r\n          'onSet': [{ type: core.Output },],\r\n          'onItemTap': [{ type: core.Output },],\r\n          'onClear': [{ type: core.Output },],\r\n      };\r\n      return MbscScrollerBase;\r\n  }(MbscFrameBase));\r\n  var MbscBaseModule = (function () {\r\n      function MbscBaseModule() {\r\n      }\r\n      MbscBaseModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [common.CommonModule],\r\n                      declarations: [MbscBase, MbscValueBase, MbscCloneBase, MbscControlBase],\r\n                  },] },\r\n      ];\r\n      MbscBaseModule.ctorParameters = function () { return []; };\r\n      return MbscBaseModule;\r\n  }());\r\n  var MbscFrameBaseModule = (function () {\r\n      function MbscFrameBaseModule() {\r\n      }\r\n      MbscFrameBaseModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [common.CommonModule, MbscBaseModule],\r\n                      declarations: [MbscFrameBase],\r\n                  },] },\r\n      ];\r\n      MbscFrameBaseModule.ctorParameters = function () { return []; };\r\n      return MbscFrameBaseModule;\r\n  }());\r\n  var MbscScrollerBaseModule = (function () {\r\n      function MbscScrollerBaseModule() {\r\n      }\r\n      MbscScrollerBaseModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [common.CommonModule, MbscFrameBaseModule],\r\n                      declarations: [MbscScrollerBase],\r\n                  },] },\r\n      ];\r\n      MbscScrollerBaseModule.ctorParameters = function () { return []; };\r\n      return MbscScrollerBaseModule;\r\n  }());\r\n  function deepEqualsArray(a1, a2) {\r\n      if (a1 === a2) {\r\n          return true;\r\n      }\r\n      else if (!a1 || !a2 || a1.length !== a2.length) {\r\n          return false;\r\n      }\r\n      else {\r\n          for (var i = 0; i < a1.length; i++) {\r\n              if (a1[i] !== a2[i]) {\r\n                  return false;\r\n              }\r\n          }\r\n          return true;\r\n      }\r\n  }\r\n  function isDateEqual(d1, d2) {\r\n      if ((d1 && !d2) || (d2 && !d1)) {\r\n          return false;\r\n      }\r\n      else if (!d1 && !d2) {\r\n          return true;\r\n      }\r\n      else {\r\n          return d1 && d2 && d1.toString() === d2.toString();\r\n      }\r\n  }\r\n  function emptyOrTrue(val) {\r\n      return (typeof (val) === 'string' && (val === 'true' || val === '')) || !!val;\r\n  }\r\n  var INPUT_TEMPLATE = \"<mbsc-input *ngIf=\\\"!inline || showInput\\\"\\n    [controlNg]=\\\"false\\\" [name]=\\\"name\\\" [theme]=\\\"theme\\\" [themeVariant]=\\\"themeVariant\\\" [label-style]=\\\"labelStyle\\\" [input-style]=\\\"inputStyle\\\" [disabled]=\\\"disabled\\\" [dropdown]=\\\"dropdown\\\" [placeholder]=\\\"placeholder\\\"\\n    [error]=\\\"error\\\" [errorMessage]=\\\"errorMessage\\\"\\n    [icon]=\\\"inputIcon\\\" [icon-align]=\\\"iconAlign\\\">\\n    <ng-content></ng-content>\\n</mbsc-input>\";\r\n\r\n  function _defineProperty(obj, key, value) {\r\n    if (key in obj) {\r\n      Object.defineProperty(obj, key, {\r\n        value: value,\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true\r\n      });\r\n    } else {\r\n      obj[key] = value;\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  function _inheritsLoose(subClass, superClass) {\r\n    subClass.prototype = Object.create(superClass.prototype);\r\n    subClass.prototype.constructor = subClass;\r\n    subClass.__proto__ = superClass;\r\n  }\r\n\r\n  function _assertThisInitialized(self) {\r\n    if (self === void 0) {\r\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\r\n    }\r\n\r\n    return self;\r\n  }\r\n\r\n  var wrapClass = 'mbsc-input-wrap';\r\n  var events = ['touchend', 'touchcancel', 'mousedown', 'mousemove', 'mouseup', 'mouseleave'];\r\n  var defaults = {\r\n    tap: hasGhostClick\r\n  };\r\n  var $active;\r\n\r\n  function addIcon($control, ic) {\r\n    var icons = {},\r\n        control = $control[0],\r\n        $parent = $control.parent(),\r\n        errorMsg = $parent.find('.mbsc-err-msg'),\r\n        align = $control.attr('data-icon-align') || 'left',\r\n        icon = $control.attr('data-icon');\r\n\r\n    if ($parent.hasClass(wrapClass)) {\r\n      $parent = $parent.parent();\r\n    } else {\r\n      // Wrap input\r\n      $$1('<span class=\"' + wrapClass + '\"></span>').insertAfter($control).append($control);\r\n    }\r\n\r\n    if (errorMsg) {\r\n      $parent.find('.' + wrapClass).append(errorMsg);\r\n    }\r\n\r\n    if (icon) {\r\n      if (icon.indexOf('{') !== -1) {\r\n        icons = JSON.parse(icon);\r\n      } else {\r\n        icons[align] = icon;\r\n      }\r\n    }\r\n\r\n    if (control.type == 'file') {\r\n      // Set icon\r\n      icons.right = $control.attr('data-icon-upload') || 'upload';\r\n    }\r\n\r\n    if (icon || ic) {\r\n      extend$1(icons, ic);\r\n      $parent.addClass((icons.right ? 'mbsc-ic-right ' : '') + (icons.left ? ' mbsc-ic-left' : '')).find('.' + wrapClass).append('<span class=\"mbsc-input-fill\"></span>').append(icons.left ? '<span class=\"mbsc-input-ic mbsc-left-ic mbsc-ic mbsc-ic-' + icons.left + '\"></span>' : '').append(icons.right ? '<span class=\"mbsc-input-ic mbsc-right-ic mbsc-ic mbsc-ic-' + icons.right + '\"></span>' : '');\r\n    }\r\n  }\r\n\r\n  function addIconToggle(that, $parent, $control) {\r\n    var icons = {},\r\n        control = $control[0],\r\n        toggle = $control.attr('data-password-toggle'),\r\n        iconShow = $control.attr('data-icon-show') || 'eye',\r\n        iconHide = $control.attr('data-icon-hide') || 'eye-blocked';\r\n\r\n    if (toggle) {\r\n      icons.right = control.type == 'password' ? iconShow : iconHide;\r\n    }\r\n\r\n    addIcon($control, icons);\r\n\r\n    if (toggle) {\r\n      tap(that, $parent.find('.mbsc-right-ic').addClass('mbsc-input-toggle'), function () {\r\n        if (control.type == \"text\") {\r\n          control.type = \"password\";\r\n          $$1(this).addClass('mbsc-ic-' + iconShow).removeClass('mbsc-ic-' + iconHide);\r\n        } else {\r\n          control.type = \"text\";\r\n          $$1(this).removeClass('mbsc-ic-' + iconShow).addClass('mbsc-ic-' + iconHide);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function wrapLabel($parent, type, inputStyle, labelStyle, elm) {\r\n    // Wrap non-empty text nodes in span with mbsc-label class\r\n    if (type == 'segmented') {\r\n      $parent.closest('.mbsc-segmented').addClass(inputStyle == 'box' ? 'mbsc-input-box' : '').addClass(inputStyle == 'outline' ? 'mbsc-input-outline' : '');\r\n    } else if (type != 'button' && type != 'submit') {\r\n      $parent.addClass('mbsc-control-w').addClass(inputStyle == 'box' ? 'mbsc-input-box' : '').addClass(inputStyle == 'outline' ? 'mbsc-input-outline' : '').addClass(labelStyle == 'inline' ? 'mbsc-label-inline' : '').addClass(labelStyle == 'stacked' ? 'mbsc-label-stacked' : '').addClass(labelStyle == 'floating' ? 'mbsc-label-floating' : '').addClass(labelStyle == 'floating' && elm.value ? 'mbsc-label-floating-active' : '').find('label').addClass('mbsc-label').each(function (i, v) {\r\n        $$1(v).attr('title', $$1(v).text());\r\n      });\r\n      $parent.contents().filter(function () {\r\n        return this.nodeType == 3 && this.nodeValue && /\\S/.test(this.nodeValue);\r\n      }).each(function () {\r\n        $$1('<span class=\"mbsc-label\" title=\"' + this.textContent.trim() + '\"></span>').insertAfter(this).append(this);\r\n      });\r\n    }\r\n  }\r\n\r\n  function getRipple(theme) {\r\n    var ripple = mobiscroll.themes.form[theme];\r\n    return ripple && ripple.addRipple ? ripple : null;\r\n  }\r\n\r\n  function getAttr($elm, attr, def) {\r\n    var v = $elm.attr(attr);\r\n    return v === undefined || v === '' ? def : v;\r\n  }\r\n\r\n  function getCssClass(s) {\r\n    var theme = getThemeName(s);\r\n    var baseTheme = mobiscroll.themes.form[theme].baseTheme;\r\n    return 'mbsc-' + theme + (baseTheme ? ' mbsc-' + baseTheme : '') + (s.rtl ? ' mbsc-rtl' : ' mbsc-ltr');\r\n  }\r\n\r\n  var FormControl =\r\n  /*#__PURE__*/\r\n  function () {\r\n    function FormControl(elm, settings) {\r\n      var _this = this;\r\n\r\n      var s = extend$1({}, defaults, mobiscroll.settings, settings);\r\n      var $elm = $$1(elm);\r\n      var $p = $elm.parent();\r\n      var $parent = $p.hasClass('mbsc-input-wrap') ? $p.parent() : $p; // Check for inline mobiscroll components\r\n\r\n      var $frame = $elm.next().hasClass('mbsc-fr') ? $elm.next() : null;\r\n      var type = getControlType($elm);\r\n      var inputStyle = getAttr($elm, 'data-input-style', s.inputStyle);\r\n      var labelStyle = getAttr($elm, 'data-label-style', s.labelStyle);\r\n\r\n      if (elm.mbscInst) {\r\n        elm.mbscInst.destroy();\r\n      }\r\n\r\n      if ($frame) {\r\n        $frame.insertAfter($parent);\r\n      }\r\n\r\n      s.theme = getThemeName(s);\r\n\r\n      if (s.rtl === undefined && s.lang && mobiscroll.i18n[s.lang]) {\r\n        s.rtl = mobiscroll.i18n[s.lang].rtl;\r\n      }\r\n\r\n      wrapLabel($parent, type, inputStyle, labelStyle, elm);\r\n      $elm.addClass('mbsc-control'); // Attach events\r\n\r\n      this._handle = this._handle.bind(this); // Prevent 300ms click latency\r\n\r\n      events.forEach(function (ev) {\r\n        $elm.on(ev, _this._handle);\r\n      }); // Touch events are added separately, needs to be passive listener\r\n\r\n      listen(elm, 'touchstart', this._handle, {\r\n        passive: true\r\n      });\r\n      listen(elm, 'touchmove', this._handle, {\r\n        passive: true\r\n      });\r\n      this.settings = s;\r\n      this._type = type;\r\n      this._elm = elm;\r\n      this._$elm = $elm;\r\n      this._$parent = $parent;\r\n      this._$frame = $frame;\r\n      this._ripple = getRipple(s.theme);\r\n      this._isFloating = labelStyle == 'floating' || $parent.hasClass('mbsc-label-floating');\r\n      this.cssClass = getCssClass(s);\r\n      this.getClassElm().addClass(this.cssClass);\r\n      elm.mbscInst = this;\r\n    }\r\n\r\n    var _proto = FormControl.prototype;\r\n\r\n    _proto.getClassElm = function getClassElm() {\r\n      return this._$parent;\r\n    };\r\n\r\n    _proto.destroy = function destroy() {\r\n      var _this2 = this;\r\n\r\n      var $elm = this._$elm;\r\n      var elm = this._elm;\r\n      $elm.removeClass('mbsc-control');\r\n      this.getClassElm().removeClass(this.cssClass);\r\n      events.forEach(function (ev) {\r\n        $elm.off(ev, _this2._handle);\r\n      });\r\n      unlisten(elm, 'touchstart', this._handle, {\r\n        passive: true\r\n      });\r\n      unlisten(elm, 'touchmove', this._handle, {\r\n        passive: true\r\n      });\r\n      delete elm.mbscInst;\r\n    };\r\n\r\n    _proto.option = function option(s) {\r\n      extend$1(this.settings, s);\r\n      var classElm = this.getClassElm();\r\n\r\n      if (this.cssClass) {\r\n        classElm.removeClass(this.cssClass);\r\n      }\r\n\r\n      this.cssClass = getCssClass(this.settings);\r\n      classElm.addClass(this.cssClass);\r\n      this._ripple = getRipple(this.settings.theme);\r\n    };\r\n\r\n    _proto._handle = function _handle(ev) {\r\n      switch (ev.type) {\r\n        case 'touchstart':\r\n        case 'mousedown':\r\n          this._onStart(ev);\r\n\r\n          break;\r\n\r\n        case 'touchmove':\r\n        case 'mousemove':\r\n          this._onMove(ev);\r\n\r\n          break;\r\n\r\n        case 'touchend':\r\n        case 'touchcancel':\r\n        case 'mouseup':\r\n        case 'mouseleave':\r\n          this._onEnd(ev);\r\n\r\n          break;\r\n      }\r\n    };\r\n\r\n    _proto._addRipple = function _addRipple(ev) {\r\n      if (this._ripple && this._$rippleElm) {\r\n        this._ripple.addRipple(this._$rippleElm, ev);\r\n      }\r\n    };\r\n\r\n    _proto._removeRipple = function _removeRipple() {\r\n      if (this._ripple && this._$rippleElm) {\r\n        this._ripple.removeRipple();\r\n      }\r\n    };\r\n\r\n    _proto._onStart = function _onStart(ev) {\r\n      var elm = this._elm;\r\n\r\n      if (testTouch(ev, elm)) {\r\n        this._startX = getCoord(ev, 'X');\r\n        this._startY = getCoord(ev, 'Y');\r\n\r\n        if ($active) {\r\n          $active.removeClass('mbsc-active');\r\n        }\r\n\r\n        if (!elm.disabled) {\r\n          this._isActive = true;\r\n          $active = this._$elm;\r\n          $active.addClass('mbsc-active');\r\n\r\n          this._addRipple(ev);\r\n        }\r\n      }\r\n\r\n      if (ev.type == 'touchstart') {\r\n        this._$elm.closest('.mbsc-no-touch').removeClass('mbsc-no-touch');\r\n      }\r\n    };\r\n\r\n    _proto._onMove = function _onMove(ev) {\r\n      // If movement is more than 9px, don't fire the click event handler\r\n      if (this._isActive && Math.abs(getCoord(ev, 'X') - this._startX) > 9 || Math.abs(getCoord(ev, 'Y') - this._startY) > 9) {\r\n        this._$elm.removeClass('mbsc-active');\r\n\r\n        this._removeRipple();\r\n\r\n        this._isActive = false;\r\n      }\r\n    };\r\n\r\n    _proto._onEnd = function _onEnd(ev) {\r\n      var _this3 = this;\r\n\r\n      var control = this._elm;\r\n      var type = this._type;\r\n\r\n      if (this._isActive && this.settings.tap && ev.type == 'touchend' && !control.readOnly) {\r\n        activateControl(control, type, ev);\r\n      }\r\n\r\n      if (this._isActive) {\r\n        setTimeout(function () {\r\n          _this3._$elm.removeClass('mbsc-active');\r\n\r\n          _this3._removeRipple();\r\n        }, 100);\r\n      }\r\n\r\n      this._isActive = false;\r\n      $active = null;\r\n    };\r\n\r\n    return FormControl;\r\n  }();\r\n  mobiscroll.themes.form.mobiscroll = {};\r\n\r\n  var events$1 = ['focus', 'change', 'blur', 'animationstart'];\r\n  var Input =\r\n  /*#__PURE__*/\r\n  function (_FormControl) {\r\n    _inheritsLoose(Input, _FormControl);\r\n\r\n    function Input(elm, settings) {\r\n      var _this;\r\n\r\n      _this = _FormControl.call(this, elm, settings) || this;\r\n      var $elm = _this._$elm;\r\n      var $parent = _this._$parent;\r\n      var $dummy = $parent.find('.mbsc-select-input, .mbsc-color-input');\r\n      addIconToggle(_assertThisInitialized(_this), $parent, $elm);\r\n      _this._checkLabel = _this._checkLabel.bind(_assertThisInitialized(_this));\r\n      _this._mouseDown = _this._mouseDown.bind(_assertThisInitialized(_this));\r\n      _this._setText = _this._setText.bind(_assertThisInitialized(_this));\r\n\r\n      if (elm.type == 'file') {\r\n        // Copy attributes and create dummy input\r\n        var $existing = $parent.find('.mbsc-file-input');\r\n        _this._$input = $existing.length ? $existing : $$1('<input type=\"text\" class=\"' + ($elm.attr('class') || '') + ' mbsc-file-input\" placeholder=\"' + ($elm.attr('placeholder') || '') + '\"/>').insertAfter($elm); // Copy value on file upload\r\n\r\n        $elm.on('change', _this._setText);\r\n      }\r\n\r\n      $parent.addClass('mbsc-input').on('mousedown', _this._mouseDown); // Attach events\r\n\r\n      events$1.forEach(function (ev) {\r\n        $elm.on(ev, _this._checkLabel);\r\n      }); // Move the dummy input after the element for correct styling\r\n\r\n      if ($dummy.length) {\r\n        $elm.after($dummy);\r\n\r\n        if ($dummy.hasClass('mbsc-select-input')) {\r\n          _this._delm = $dummy[0];\r\n\r\n          _this.refresh();\r\n        }\r\n      }\r\n\r\n      return _this;\r\n    }\r\n\r\n    var _proto = Input.prototype;\r\n\r\n    _proto._setText = function _setText(ev) {\r\n      var files = ev.target.files;\r\n      var names = [];\r\n\r\n      for (var i = 0; i < files.length; ++i) {\r\n        names.push(files[i].name);\r\n      }\r\n\r\n      this._$input.val(names);\r\n    };\r\n\r\n    _proto._checkLabel = function _checkLabel(ev) {\r\n      if (this._isFloating) {\r\n        // In case of select we need to check the dummy element\r\n        var elm = this._delm || this._elm; // In case of autofill in webkit browsers the animationstart event will fire \r\n        // due to the empty animation added in the css,\r\n        // because there's no other event in case of the initial autofill\r\n\r\n        if (elm.value || document.activeElement === elm || ev && (ev.type == 'focus' || ev.type == 'animationstart' && this._$elm.is('*:-webkit-autofill'))) {\r\n          this._$parent.addClass('mbsc-label-floating-active');\r\n        } else {\r\n          this._$parent.removeClass('mbsc-label-floating-active');\r\n        }\r\n      }\r\n    };\r\n\r\n    _proto._mouseDown = function _mouseDown(ev) {\r\n      // Will prevent floating label animation when loosing focus only for a brief moment\r\n      if (document.activeElement === this._elm && ev.target !== this._elm) {\r\n        ev.preventDefault();\r\n      }\r\n    };\r\n\r\n    _proto.refresh = function refresh() {\r\n      this._checkLabel();\r\n    };\r\n\r\n    _proto.destroy = function destroy() {\r\n      var _this2 = this;\r\n\r\n      _FormControl.prototype.destroy.call(this);\r\n\r\n      this._$parent.off('mousedown', this._mouseDown).removeClass('mbsc-ic-left mbsc-ic-right').find('.mbsc-input-ic').remove();\r\n\r\n      this._$parent.find('.mbsc-input-fill').remove();\r\n\r\n      events$1.forEach(function (ev) {\r\n        _this2._$elm.off(ev, _this2._checkLabel);\r\n      });\r\n\r\n      this._$elm.off('change', this._setText);\r\n    };\r\n\r\n    return Input;\r\n  }(FormControl); // Init mbsc-input elements on page load\r\n\r\n  autoInit('[mbsc-input]', Input);\r\n\r\n  var MbscFormBase = (function (_super) {\r\n      __extends(MbscFormBase, _super);\r\n      function MbscFormBase(hostElem, _formService, zone) {\r\n          var _this = _super.call(this, hostElem, zone) || this;\r\n          _this._formService = _formService;\r\n          _this.disabled = false;\r\n          return _this;\r\n      }\r\n      MbscFormBase.prototype.ngOnInit = function () {\r\n          this._inheritedOptions = this._formService ? this._formService.options : {};\r\n      };\r\n      MbscFormBase.decorators = [\r\n          { type: core.Directive, args: [{ selector: '[mbsc-f-b]' },] },\r\n      ];\r\n      MbscFormBase.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: MbscOptionsService, },\r\n          { type: core.NgZone, },\r\n      ]; };\r\n      MbscFormBase.propDecorators = {\r\n          'color': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n          'disabled': [{ type: core.Input },],\r\n          'name': [{ type: core.Input },],\r\n          '_initElem': [{ type: core.ViewChild, args: ['initElement', { static: false },] },],\r\n      };\r\n      return MbscFormBase;\r\n  }(MbscBase));\r\n  var MbscFormValueBase = (function (_super) {\r\n      __extends(MbscFormValueBase, _super);\r\n      function MbscFormValueBase(hostElem, _formService, _inputService, _control, zone) {\r\n          var _this = _super.call(this, hostElem, _formService, zone) || this;\r\n          _this._control = _control;\r\n          _this.onChange = function () { };\r\n          _this.onTouch = function () { };\r\n          _this.errorMessage = '';\r\n          _this.valueChangeEmitter = new core.EventEmitter();\r\n          if (_control && (!_inputService || !_inputService.isControlSet)) {\r\n              if (_control.valueAccessor && _control.valueAccessor.oldAccessor !== undefined) {\r\n                  _control.valueAccessor.oldAccessor = _this;\r\n              }\r\n              else {\r\n                  _control.valueAccessor = _this;\r\n              }\r\n          }\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscFormValueBase.prototype, \"readonly\", {\r\n          set: function (val) {\r\n              this._readonly = emptyOrTrue(val);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscFormValueBase.prototype, \"innerValue\", {\r\n          get: function () {\r\n              return this._value;\r\n          },\r\n          set: function (v) {\r\n              this._value = v;\r\n              this.onChange(v);\r\n              this.valueChangeEmitter.emit(v);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscFormValueBase.prototype, \"value\", {\r\n          set: function (v) {\r\n              this._value = v;\r\n              this.refresh();\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscFormValueBase.prototype.registerOnChange = function (fn) {\r\n          this.onChange = fn;\r\n      };\r\n      MbscFormValueBase.prototype.registerOnTouched = function (fn) {\r\n          this.onTouch = fn;\r\n      };\r\n      MbscFormValueBase.prototype.setDisabledState = function (isDisabled) {\r\n          this.disabled = isDisabled;\r\n      };\r\n      MbscFormValueBase.prototype.writeValue = function (v) {\r\n          this._value = v;\r\n          this.refresh();\r\n      };\r\n      MbscFormValueBase.prototype.refresh = function () {\r\n          var _this = this;\r\n          if (this.instance && this.instance.refresh) {\r\n              setTimeout(function () {\r\n                  _this.instance.refresh();\r\n              });\r\n          }\r\n          else {\r\n              this._needRefresh = true;\r\n          }\r\n      };\r\n      MbscFormValueBase.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          if (this._needRefresh) {\r\n              this.refresh();\r\n          }\r\n      };\r\n      MbscFormValueBase.decorators = [\r\n          { type: core.Directive, args: [{ selector: '[mbsc-fv-b]' },] },\r\n      ];\r\n      MbscFormValueBase.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: forms.NgControl, },\r\n          { type: core.NgZone, },\r\n      ]; };\r\n      MbscFormValueBase.propDecorators = {\r\n          'readonly': [{ type: core.Input },],\r\n          'value': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'valueChangeEmitter': [{ type: core.Output, args: ['valueChange',] },],\r\n      };\r\n      return MbscFormValueBase;\r\n  }(MbscFormBase));\r\n  var MbscInputBase = (function (_super) {\r\n      __extends(MbscInputBase, _super);\r\n      function MbscInputBase(initialElem, _formService, _inputService, _control, zone) {\r\n          var _this = _super.call(this, initialElem, _formService, _inputService, _control, zone) || this;\r\n          _this.type = 'text';\r\n          _this.placeholder = '';\r\n          return _this;\r\n      }\r\n      MbscInputBase.decorators = [\r\n          { type: core.Directive, args: [{ selector: '[mbsc-i-b]' },] },\r\n      ];\r\n      MbscInputBase.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: forms.NgControl, },\r\n          { type: core.NgZone, },\r\n      ]; };\r\n      MbscInputBase.propDecorators = {\r\n          'autocomplete': [{ type: core.Input },],\r\n          'autocapitalize': [{ type: core.Input },],\r\n          'autocorrect': [{ type: core.Input },],\r\n          'spellcheck': [{ type: core.Input },],\r\n          'autofocus': [{ type: core.Input },],\r\n          'minlength': [{ type: core.Input },],\r\n          'maxlength': [{ type: core.Input },],\r\n          'required': [{ type: core.Input },],\r\n          'icon': [{ type: core.Input },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'type': [{ type: core.Input },],\r\n          'passwordToggle': [{ type: core.Input, args: ['password-toggle',] },],\r\n          'iconShow': [{ type: core.Input, args: ['icon-show',] },],\r\n          'iconHide': [{ type: core.Input, args: ['icon-hide',] },],\r\n          'iconUpload': [{ type: core.Input, args: ['icon-upload',] },],\r\n          'inputStyle': [{ type: core.Input, args: ['input-style',] },],\r\n          'labelStyle': [{ type: core.Input, args: ['label-style',] },],\r\n          'placeholder': [{ type: core.Input },],\r\n      };\r\n      return MbscInputBase;\r\n  }(MbscFormValueBase));\r\n  var MbscInput = (function (_super) {\r\n      __extends(MbscInput, _super);\r\n      function MbscInput(initialElem, _formService, _inputService, _control, zone) {\r\n          var _this = _super.call(this, initialElem, _formService, _inputService, _control, zone) || this;\r\n          _this._inputService = _inputService;\r\n          _this.controlNg = true;\r\n          _this.dropdown = false;\r\n          _inputService.input = _this;\r\n          return _this;\r\n      }\r\n      MbscInput.prototype.initControl = function () {\r\n          var _this = this;\r\n          var options = extend$1({}, this._inheritedOptions, this.options, this.inlineOptionsObj);\r\n          this.instance = new Input(this._initElem.nativeElement, options);\r\n          setTimeout(function () {\r\n              _this.instance.refresh();\r\n          });\r\n      };\r\n      MbscInput.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-input',\r\n                      host: {\r\n                          '[class.mbsc-control-ng]': 'controlNg',\r\n                          '[class.mbsc-err]': 'error'\r\n                      },\r\n                      template: \"\\n        <label\\n            [class.mbsc-err]=\\\"error\\\" [class.mbsc-select]=\\\"dropdown\\\"\\n            [class.mbsc-input-box]=\\\"inputStyle == 'box'\\\"\\n            [class.mbsc-input-outline]=\\\"inputStyle == 'outline'\\\"\\n            [class.mbsc-label-stacked]=\\\"labelStyle == 'stacked'\\\"\\n            [class.mbsc-label-inline]=\\\"labelStyle == 'inline'\\\"\\n            [class.mbsc-label-floating]=\\\"labelStyle == 'floating'\\\"\\n        >\\n            <ng-content></ng-content>\\n            <span class=\\\"mbsc-input-wrap\\\">\\n                <input #initElement [type]=\\\"type\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"innerValue\\\" (blur)=\\\"onTouch($event)\\\"\\n                    [attr.name]=\\\"name\\\"\\n                    [attr.data-icon]=\\\"icon ? icon : null\\\"\\n                    [attr.data-icon-align]=\\\"iconAlign ? iconAlign : null\\\"\\n                    [attr.data-password-toggle]=\\\"passwordToggle ? 'true': null\\\"\\n                    [attr.data-icon-show]=\\\"iconShow ? iconShow : null\\\"\\n                    [attr.data-icon-hide]=\\\"iconHide ? iconHide : null\\\"\\n                    [attr.data-icon-upload]=\\\"iconUpload ? iconUpload : null\\\"\\n                    [attr.min]=\\\"min\\\"\\n                    [attr.max]=\\\"max\\\"\\n                    [attr.minlength]=\\\"minlength\\\"\\n                    [attr.maxlength]=\\\"maxlength\\\"\\n                    [attr.autocomplete]=\\\"autocomplete\\\"\\n                    [attr.autocapitalize]=\\\"autocapitalize\\\"\\n                    [attr.autocorrect]=\\\"autocorrect\\\"\\n                    [attr.spellcheck]=\\\"spellcheck\\\"\\n                    [attr.autofocus]=\\\"autofocus\\\"\\n                    [attr.step]=\\\"step\\\"\\n                    [attr.pattern]=\\\"pattern\\\"\\n                    [attr.required]=\\\"required\\\"\\n                    [attr.accept]=\\\"accept\\\"\\n                    [attr.multiple]=\\\"multiple\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [readonly]=\\\"_readonly\\\" />\\n                <span *ngIf=\\\"dropdown\\\" class=\\\"mbsc-select-ic mbsc-ic mbsc-ic-arrow-down5\\\"></span>\\n                <span *ngIf=\\\"error && errorMessage\\\" class=\\\"mbsc-err-msg\\\">{{errorMessage}}</span>\\n            </span>\\n        </label>\\n    \",\r\n                      providers: [MbscInputService]\r\n                  },] },\r\n      ];\r\n      MbscInput.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: core.NgZone, },\r\n      ]; };\r\n      MbscInput.propDecorators = {\r\n          'min': [{ type: core.Input },],\r\n          'max': [{ type: core.Input },],\r\n          'step': [{ type: core.Input },],\r\n          'pattern': [{ type: core.Input },],\r\n          'accept': [{ type: core.Input },],\r\n          'multiple': [{ type: core.Input },],\r\n          'controlNg': [{ type: core.Input },],\r\n          'dropdown': [{ type: core.Input },],\r\n      };\r\n      return MbscInput;\r\n  }(MbscInputBase));\r\n  var MbscInputModule = (function () {\r\n      function MbscInputModule() {\r\n      }\r\n      MbscInputModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [forms.FormsModule, common.CommonModule, MbscBaseModule],\r\n                      declarations: [MbscInput, MbscInputBase, MbscFormBase, MbscFormValueBase],\r\n                      exports: [MbscInput]\r\n                  },] },\r\n      ];\r\n      MbscInputModule.ctorParameters = function () { return []; };\r\n      return MbscInputModule;\r\n  }());\r\n\r\n  function createStepper($elm, action, delay, isReadOnly, stopProp, ripple) {\r\n    var $btn,\r\n        changed,\r\n        index,\r\n        running,\r\n        source,\r\n        startX,\r\n        startY,\r\n        step,\r\n        timer,\r\n        check = isReadOnly || noop;\r\n\r\n    function onBtnStart(ev) {\r\n      var proceed;\r\n      $btn = $$1(this);\r\n      step = +$btn.attr('data-step');\r\n      index = +$btn.attr('data-index');\r\n      changed = true;\r\n\r\n      if (stopProp) {\r\n        ev.stopPropagation();\r\n      }\r\n\r\n      if (ev.type == 'touchstart') {\r\n        $btn.closest('.mbsc-no-touch').removeClass('mbsc-no-touch');\r\n      }\r\n\r\n      if (ev.type == 'mousedown') {\r\n        // Prevent focus\r\n        ev.preventDefault();\r\n      }\r\n\r\n      if (ev.type != 'keydown') {\r\n        //e.preventDefault();\r\n        startX = getCoord(ev, 'X');\r\n        startY = getCoord(ev, 'Y');\r\n        proceed = testTouch(ev, this);\r\n      } else {\r\n        proceed = ev.keyCode === 32;\r\n      }\r\n\r\n      if (!running && proceed && !$btn.hasClass('mbsc-disabled')) {\r\n        if (start(index, step, ev)) {\r\n          $btn.addClass('mbsc-active');\r\n\r\n          if (ripple) {\r\n            ripple.addRipple($btn.find('.mbsc-segmented-content'), ev);\r\n          }\r\n        }\r\n\r\n        if (ev.type == 'mousedown') {\r\n          $$1(document).on('mousemove', onBtnMove).on('mouseup', onBtnEnd);\r\n        }\r\n      }\r\n    }\r\n\r\n    function onBtnMove(ev) {\r\n      if (Math.abs(startX - getCoord(ev, 'X')) > 7 || Math.abs(startY - getCoord(ev, 'Y')) > 7) {\r\n        changed = true;\r\n        stop();\r\n      }\r\n    }\r\n\r\n    function onBtnEnd(ev) {\r\n      if (ev.type == 'touchend') {\r\n        // Prevents iOS scroll on double tap\r\n        ev.preventDefault();\r\n      }\r\n\r\n      stop();\r\n\r\n      if (ev.type == 'mouseup') {\r\n        $$1(document).off('mousemove', onBtnMove).off('mouseup', onBtnEnd);\r\n      }\r\n    }\r\n\r\n    function stop() {\r\n      running = false;\r\n      clearInterval(timer);\r\n\r\n      if ($btn) {\r\n        $btn.removeClass('mbsc-active');\r\n\r\n        if (ripple) {\r\n          setTimeout(function () {\r\n            ripple.removeRipple();\r\n          }, 100);\r\n        }\r\n      }\r\n    }\r\n\r\n    function start(i, st, ev) {\r\n      if (!running && !check(i)) {\r\n        index = i;\r\n        step = st;\r\n        source = ev;\r\n        running = true;\r\n        changed = false;\r\n        setTimeout(tick, 100);\r\n      }\r\n\r\n      return running;\r\n    }\r\n\r\n    function tick() {\r\n      if ($btn && $btn.hasClass('mbsc-disabled')) {\r\n        stop();\r\n        return;\r\n      }\r\n\r\n      if (running || !changed) {\r\n        changed = true;\r\n        action(index, step, source, tick);\r\n      }\r\n\r\n      if (running && delay) {\r\n        clearInterval(timer);\r\n        timer = setInterval(function () {\r\n          action(index, step, source);\r\n        }, delay);\r\n      }\r\n    }\r\n\r\n    function destroy() {\r\n      $elm.each(function (i, el) {\r\n        unlisten(el, 'touchstart', onBtnStart, {\r\n          passive: true\r\n        });\r\n        unlisten(el, 'mousedown', onBtnStart);\r\n        unlisten(el, 'keydown', onBtnStart);\r\n        unlisten(el, 'touchmove', onBtnMove, {\r\n          passive: true\r\n        });\r\n        unlisten(el, 'touchend', onBtnEnd);\r\n        unlisten(el, 'touchcancel', onBtnEnd);\r\n        unlisten(el, 'keyup', onBtnEnd);\r\n      });\r\n    }\r\n\r\n    $elm.each(function (i, el) {\r\n      listen(el, 'touchstart', onBtnStart, {\r\n        passive: true\r\n      });\r\n      listen(el, 'mousedown', onBtnStart);\r\n      listen(el, 'keydown', onBtnStart);\r\n      listen(el, 'touchmove', onBtnMove, {\r\n        passive: true\r\n      });\r\n      listen(el, 'touchend', onBtnEnd);\r\n      listen(el, 'touchcancel', onBtnEnd);\r\n      listen(el, 'keyup', onBtnEnd);\r\n    });\r\n    return {\r\n      start: start,\r\n      stop: stop,\r\n      destroy: destroy\r\n    };\r\n  }\r\n\r\n  var innerStyle = 'position:absolute;left:0;top:0;';\r\n  var style = innerStyle + 'right:0;bottom:0;overflow:hidden;z-index:-1;';\r\n  var markup = '<div style=\"' + style + '\"><div style=\"' + innerStyle + '\"></div></div>' + '<div style=\"' + style + '\"><div style=\"' + innerStyle + 'width:200%;height:200%;\"></div></div>';\r\n  var observer;\r\n  var count = 0;\r\n  function resizeObserver(el, callback, zone) {\r\n    function reset() {\r\n      expandChild.style.width = '100000px';\r\n      expandChild.style.height = '100000px';\r\n      expand.scrollLeft = 100000;\r\n      expand.scrollTop = 100000;\r\n      shrink.scrollLeft = 100000;\r\n      shrink.scrollTop = 100000;\r\n    }\r\n\r\n    function checkHidden() {\r\n      var now = new Date();\r\n      hiddenRafId = 0;\r\n\r\n      if (!stopCheck) {\r\n        if (now - lastCheck > 200 && !expand.scrollTop && !expand.scrollLeft) {\r\n          lastCheck = now;\r\n          reset();\r\n        }\r\n\r\n        if (!hiddenRafId) {\r\n          hiddenRafId = raf(checkHidden);\r\n        }\r\n      }\r\n    }\r\n\r\n    function onScroll() {\r\n      if (!rafId) {\r\n        rafId = raf(onResize);\r\n      }\r\n    }\r\n\r\n    function onResize() {\r\n      rafId = 0;\r\n      reset();\r\n      callback();\r\n    }\r\n\r\n    var expand;\r\n    var expandChild;\r\n    var helper;\r\n    var hiddenRafId;\r\n    var rafId;\r\n    var shrink;\r\n    var stopCheck;\r\n    var lastCheck = 0; //let isHidden = true;\r\n\r\n    if (window.ResizeObserver) {\r\n      if (!observer) {\r\n        observer = new ResizeObserver(function (entries) {\r\n          for (var _iterator = entries, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\r\n            var _ref;\r\n\r\n            if (_isArray) {\r\n              if (_i >= _iterator.length) break;\r\n              _ref = _iterator[_i++];\r\n            } else {\r\n              _i = _iterator.next();\r\n              if (_i.done) break;\r\n              _ref = _i.value;\r\n            }\r\n\r\n            var entry = _ref;\r\n\r\n            entry.target.__mbscResize();\r\n          }\r\n        });\r\n      }\r\n\r\n      count++;\r\n      el.__mbscResize = callback;\r\n      observer.observe(el);\r\n    } else {\r\n      helper = document.createElement('div');\r\n      helper.innerHTML = markup;\r\n      helper.dir = 'ltr'; // Need this to work in rtl as well;\r\n\r\n      shrink = helper.childNodes[1];\r\n      expand = helper.childNodes[0];\r\n      expandChild = expand.childNodes[0];\r\n      el.appendChild(helper);\r\n      expand.addEventListener('scroll', onScroll);\r\n      shrink.addEventListener('scroll', onScroll);\r\n\r\n      if (zone) {\r\n        zone.runOutsideAngular(function () {\r\n          raf(checkHidden);\r\n        });\r\n      } else {\r\n        raf(checkHidden);\r\n      }\r\n    }\r\n\r\n    return {\r\n      detach: function detach() {\r\n        if (observer) {\r\n          count--;\r\n          observer.unobserve(el);\r\n\r\n          if (!count) {\r\n            observer = null;\r\n          }\r\n        } else {\r\n          el.removeChild(helper);\r\n          stopCheck = true;\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  var $activeElm,\r\n      preventShow,\r\n      themes = mobiscroll.themes,\r\n      needsFixed = /(iphone|ipod)/i.test(userAgent) && majorVersion >= 7,\r\n      isAndroid = os == 'android',\r\n      isIOS = os == 'ios',\r\n      isIOS8 = isIOS && majorVersion == 8,\r\n      halfBorder = isIOS && majorVersion > 7,\r\n      prevdef = function prevdef(ev) {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  var EDITABLE = 'input,select,textarea,button';\r\n  var ALLOW_ENTER = 'textarea,button,input[type=\"button\"],input[type=\"submit\"]';\r\n  var FOCUSABLE = EDITABLE + ',[tabindex=\"0\"]';\r\n  var Frame = function Frame(el, settings, inherit) {\r\n    var //$ariaDiv,\r\n    $ctx,\r\n        $header,\r\n        $lock,\r\n        $markup,\r\n        $overlay,\r\n        $persp,\r\n        $popup,\r\n        $wnd,\r\n        $wrapper,\r\n        buttons,\r\n        btn,\r\n        ctx,\r\n        doAnim,\r\n        hasContext,\r\n        isModal,\r\n        isInserted,\r\n        isPointer,\r\n        markup,\r\n        modalWidth,\r\n        modalHeight,\r\n        needsDimensions,\r\n        needsLock,\r\n        observer,\r\n        overlay,\r\n        popup,\r\n        posDebounce,\r\n        prevInst,\r\n        s,\r\n        scrollLock,\r\n        touched,\r\n        trigger,\r\n        wndWidth,\r\n        wndHeight,\r\n        that = this,\r\n        $elm = $$1(el),\r\n        elmList = [],\r\n        lastFocus = new Date();\r\n\r\n    function onBtnStart(ev) {\r\n      // Need this to prevent opening of sidemenus or similar\r\n      if (s.stopProp) {\r\n        ev.stopPropagation();\r\n      }\r\n\r\n      var b = closest(this, ev.target, '.mbsc-fr-btn-e');\r\n\r\n      if (!b) {\r\n        return;\r\n      } // Can't call preventDefault here, it kills page scroll\r\n\r\n\r\n      if (btn) {\r\n        btn.removeClass('mbsc-active');\r\n      }\r\n\r\n      btn = $$1(b); // Active button\r\n\r\n      if (!btn.hasClass('mbsc-disabled') && !btn.hasClass('mbsc-fr-btn-nhl')) {\r\n        btn.addClass('mbsc-active');\r\n      }\r\n\r\n      if (ev.type === 'mousedown') {\r\n        $$1(document).on('mouseup', onBtnEnd);\r\n      }\r\n    }\r\n\r\n    function onBtnEnd(ev) {\r\n      if (btn) {\r\n        btn.removeClass('mbsc-active');\r\n        btn = null;\r\n      }\r\n\r\n      if (ev.type === 'mouseup') {\r\n        $$1(document).off('mouseup', onBtnEnd);\r\n      }\r\n    }\r\n\r\n    function onScroll(ev) {\r\n      if (scrollLock && markup.contains(ev.target)) {\r\n        ev.preventDefault();\r\n      }\r\n    }\r\n\r\n    function onWndKeyDown(ev) {\r\n      if (mobiscroll.activeInstance == that) {\r\n        if (ev.keyCode == 13 && (!$$1(ev.target).is(ALLOW_ENTER) || ev.shiftKey)) {\r\n          that.select();\r\n        } else if (ev.keyCode == 27) {\r\n          that.cancel();\r\n        }\r\n      }\r\n    }\r\n\r\n    function onShow(prevFocus) {\r\n      if (!prevFocus && !isAndroid && that._activeElm) {\r\n        //overlay.focus();\r\n        lastFocus = new Date();\r\n\r\n        that._activeElm.focus();\r\n      } //that.ariaMessage(s.ariaMessage);\r\n\r\n    }\r\n\r\n    function onHide(prevAnim) {\r\n      var $activeEl = $activeElm,\r\n          focus = s.focusOnClose;\r\n\r\n      that._markupRemove();\r\n\r\n      $markup.remove();\r\n\r\n      if (isModal) {\r\n        ctx.mbscModals--;\r\n\r\n        if (s.scrollLock) {\r\n          ctx.mbscLock--;\r\n        }\r\n\r\n        if (!ctx.mbscLock) {\r\n          $lock.removeClass('mbsc-fr-lock');\r\n        }\r\n\r\n        if (needsLock) {\r\n          ctx.mbscIOSLock--;\r\n\r\n          if (!ctx.mbscIOSLock) {\r\n            $lock.removeClass('mbsc-fr-lock-ios');\r\n            $ctx.css({\r\n              top: '',\r\n              left: ''\r\n            });\r\n            $wnd.scrollLeft(ctx.mbscScrollLeft);\r\n            $wnd.scrollTop(ctx.mbscScrollTop);\r\n          }\r\n        } // The follwing should be done only if no other\r\n        // instance was opened during the hide animation\r\n\r\n\r\n        if (!ctx.mbscModals) {\r\n          $lock.removeClass('mbsc-fr-lock-ctx');\r\n        }\r\n\r\n        if (!ctx.mbscModals || prevInst) {\r\n          // Put focus back to the last active element\r\n          if (!prevAnim) {\r\n            if (!$activeEl) {\r\n              $activeEl = $elm;\r\n            }\r\n\r\n            setTimeout(function () {\r\n              if (focus === undefined || focus === true) {\r\n                preventShow = true;\r\n                $activeEl[0].focus();\r\n              } else if (focus) {\r\n                $$1(focus)[0].focus();\r\n              }\r\n            }, 200);\r\n          }\r\n        }\r\n      }\r\n\r\n      prevInst = undefined;\r\n      isInserted = false;\r\n      trigger('onHide');\r\n    }\r\n\r\n    function onPosition() {\r\n      clearTimeout(posDebounce);\r\n      posDebounce = setTimeout(function () {\r\n        if (that.position(true)) {\r\n          // Trigger reflow, needed on iOS safari, when orientation is changed\r\n          popup.style.visibility = 'hidden';\r\n          popup.offsetHeight;\r\n          popup.style.visibility = '';\r\n        }\r\n      }, 200);\r\n    }\r\n\r\n    function onFocus(ev) {\r\n      if (mobiscroll.activeInstance == that && ev.target.nodeType && !overlay.contains(ev.target) && new Date() - lastFocus > 100) {\r\n        lastFocus = new Date();\r\n\r\n        that._activeElm.focus();\r\n      }\r\n    }\r\n\r\n    function insertMarkup(prevAnim, prevFocus) {\r\n      function onAnimEnd() {\r\n        $markup.off(animEnd, onAnimEnd).removeClass('mbsc-anim-in mbsc-anim-trans mbsc-anim-trans-' + doAnim).find('.mbsc-fr-popup').removeClass('mbsc-anim-' + doAnim);\r\n        onShow(prevFocus);\r\n      }\r\n\r\n      function onOverlayStart(ev) {\r\n        if (!target && ev.target == overlay) {\r\n          target = true;\r\n          moved = false;\r\n          startX = getCoord(ev, 'X');\r\n          startY = getCoord(ev, 'Y');\r\n        }\r\n      }\r\n\r\n      function onOverlayMove(ev) {\r\n        if (target && !moved && (Math.abs(getCoord(ev, 'X') - startX) > 9 || Math.abs(getCoord(ev, 'Y') - startY) > 9)) {\r\n          moved = true;\r\n        }\r\n      } // Might be not visible if immediately hidden\r\n\r\n\r\n      if (!that._isVisible) {\r\n        return;\r\n      } // Show\r\n\r\n\r\n      if (isModal) {\r\n        $markup.appendTo($ctx);\r\n      } else if ($elm.is('div') && !that._hasContent) {\r\n        // Insert inside the element on which was initialized\r\n        $elm.empty().append($markup);\r\n      } else {\r\n        // Insert after the element\r\n        if ($elm.hasClass('mbsc-control')) {\r\n          var $wrap = $elm.closest('.mbsc-control-w');\r\n          $markup.insertAfter($wrap);\r\n\r\n          if ($wrap.hasClass('mbsc-select')) {\r\n            $wrap.addClass('mbsc-select-inline');\r\n          }\r\n        } else {\r\n          $markup.insertAfter($elm);\r\n        }\r\n      }\r\n\r\n      isInserted = true;\r\n\r\n      that._markupInserted($markup);\r\n\r\n      trigger('onMarkupInserted', {\r\n        target: markup\r\n      });\r\n\r\n      if (isModal && s.closeOnOverlayTap) {\r\n        var moved, target, startX, startY;\r\n        listen(overlay, 'touchstart', onOverlayStart, {\r\n          passive: true\r\n        });\r\n        listen(overlay, 'touchmove', onOverlayMove, {\r\n          passive: true\r\n        });\r\n        $overlay.on('mousedown', onOverlayStart).on('mousemove', onOverlayMove).on('touchcancel', function () {\r\n          target = false;\r\n        }).on('touchend click', function (ev) {\r\n          if (target && !moved) {\r\n            that.cancel();\r\n\r\n            if (ev.type == 'touchend') {\r\n              preventClick();\r\n            }\r\n          }\r\n\r\n          target = false;\r\n        });\r\n      }\r\n\r\n      $markup.on('mousedown', '.mbsc-btn-e,.mbsc-fr-btn-e', prevdef).on('keydown', '.mbsc-fr-btn-e', function (ev) {\r\n        if (ev.keyCode == 32) {\r\n          // Space\r\n          ev.preventDefault();\r\n          ev.stopPropagation();\r\n          this.click();\r\n        }\r\n      }).on('keydown', function (ev) {\r\n        // Trap focus inside modal\r\n        if (ev.keyCode == 32 && !$$1(ev.target).is(EDITABLE)) {\r\n          // Prevent page scroll on space press\r\n          ev.preventDefault();\r\n        } else if (ev.keyCode == 9 && isModal && s.focusTrap) {\r\n          // Tab\r\n          var $focusable = $markup.find(FOCUSABLE).filter(function () {\r\n            return this.offsetWidth > 0 || this.offsetHeight > 0;\r\n          }),\r\n              index = $focusable.index($$1(':focus', $markup)),\r\n              i = $focusable.length - 1,\r\n              target = 0;\r\n\r\n          if (ev.shiftKey) {\r\n            i = 0;\r\n            target = -1;\r\n          }\r\n\r\n          if (index === i) {\r\n            $focusable.eq(target)[0].focus();\r\n            ev.preventDefault();\r\n          }\r\n        }\r\n      }).on('touchend', '.mbsc-fr-btn-e', onBtnEnd);\r\n      listen(markup, 'touchstart', onBtnStart, {\r\n        passive: true\r\n      });\r\n      listen(markup, 'mousedown', onBtnStart); // Need event capture for this\r\n\r\n      listen(markup, 'touchstart', function () {\r\n        if (!touched) {\r\n          touched = true;\r\n          $ctx.find('.mbsc-no-touch').removeClass('mbsc-no-touch');\r\n        }\r\n      }, {\r\n        passive: true,\r\n        capture: true\r\n      }); // Init buttons\r\n\r\n      $$1.each(buttons, function (i, b) {\r\n        that.tap($$1('.mbsc-fr-btn' + i, $markup), function (ev) {\r\n          b = isString(b) ? that.buttons[b] : b;\r\n          (isString(b.handler) ? that.handlers[b.handler] : b.handler).call(this, ev, that);\r\n        }, true);\r\n      });\r\n\r\n      that._attachEvents($markup); // Set position\r\n\r\n\r\n      if (that.position() === false) {\r\n        return;\r\n      }\r\n\r\n      if (isModal || that._checkSize) {\r\n        observer = resizeObserver(markup, onPosition, s.zone);\r\n      }\r\n\r\n      if (isModal) {\r\n        $markup.removeClass('mbsc-fr-pos');\r\n\r\n        if (doAnim && !prevAnim) {\r\n          $markup.addClass('mbsc-anim-in mbsc-anim-trans mbsc-anim-trans-' + doAnim).on(animEnd, onAnimEnd).find('.mbsc-fr-popup').addClass('mbsc-anim-' + doAnim);\r\n        } else {\r\n          onShow(prevFocus);\r\n        }\r\n      }\r\n\r\n      trigger('onShow', {\r\n        target: markup,\r\n        valueText: that._tempValue\r\n      });\r\n    }\r\n\r\n    function show(beforeShow, $elm) {\r\n      if (that._isVisible) {\r\n        return;\r\n      }\r\n\r\n      if (beforeShow) {\r\n        beforeShow();\r\n      }\r\n\r\n      if (that.show() !== false) {\r\n        $activeElm = $elm;\r\n      }\r\n    }\r\n\r\n    function set() {\r\n      that._fillValue();\r\n\r\n      trigger('onSet', {\r\n        valueText: that._value\r\n      });\r\n    }\r\n\r\n    function cancel() {\r\n      trigger('onCancel', {\r\n        valueText: that._value\r\n      });\r\n    }\r\n\r\n    function clear() {\r\n      that.setVal(null, true);\r\n    } // Call the parent constructor\r\n\r\n\r\n    Base.call(this, el, settings, true);\r\n    /**\r\n     * Positions the scroller on the screen.\r\n     */\r\n\r\n    that.position = function (check) {\r\n      var anchor,\r\n          anchorWidth,\r\n          anchorHeight,\r\n          anchorPos,\r\n          anchorTop,\r\n          anchorLeft,\r\n          arrow,\r\n          arrowWidth,\r\n          arrowHeight,\r\n          docHeight,\r\n          docWidth,\r\n          isWrapped,\r\n          newHeight,\r\n          newWidth,\r\n          oldHeight,\r\n          oldWidth,\r\n          width,\r\n          top,\r\n          left,\r\n          css = {},\r\n          scrollLeft = 0,\r\n          scrollTop = 0,\r\n          minWidth = 0,\r\n          totalWidth = 0;\r\n\r\n      if (!isInserted) {\r\n        return false;\r\n      }\r\n\r\n      oldWidth = wndWidth;\r\n      oldHeight = wndHeight;\r\n      newHeight = Math.min(markup.offsetHeight, hasContext ? Infinity : window.innerHeight);\r\n      newWidth = Math.min(markup.offsetWidth, hasContext ? Infinity : window.innerWidth);\r\n\r\n      if (!newWidth || !newHeight || wndWidth === newWidth && wndHeight === newHeight && check) {\r\n        return;\r\n      }\r\n\r\n      if (that._checkResp(newWidth)) {\r\n        return false;\r\n      }\r\n\r\n      wndWidth = newWidth;\r\n      wndHeight = newHeight;\r\n\r\n      if (that._isFullScreen || /top|bottom/.test(s.display)) {\r\n        // Set width, if document is larger than viewport, needs to be set before onPosition (for calendar)\r\n        $popup.width(newWidth);\r\n      } else if (isModal) {\r\n        // Reset width\r\n        $wrapper.width('');\r\n      }\r\n\r\n      that._position($markup); // Call position for nested mobiscroll components\r\n      // $('.mbsc-comp', $markup).each(function () {\r\n      //     var inst = instances[this.id];\r\n      //     if (inst && inst !== that && inst.position) {\r\n      //         inst.position();\r\n      //     }\r\n      // });\r\n\r\n\r\n      if (!that._isFullScreen && /center|bubble/.test(s.display)) {\r\n        $$1('.mbsc-w-p', $markup).each(function () {\r\n          // Need fractional values here, so offsetWidth is not ok\r\n          width = this.getBoundingClientRect().width;\r\n          totalWidth += width;\r\n          minWidth = width > minWidth ? width : minWidth;\r\n        });\r\n        isWrapped = totalWidth > newWidth - 16 || s.tabs === true;\r\n        $wrapper.css({\r\n          'width': that._isLiquid ? Math.min(s.maxPopupWidth, newWidth - 16) : Math.ceil(isWrapped ? minWidth : totalWidth),\r\n          'white-space': isWrapped ? '' : 'nowrap'\r\n        });\r\n      }\r\n\r\n      if (trigger('onPosition', {\r\n        target: markup,\r\n        popup: popup,\r\n        hasTabs: isWrapped,\r\n        oldWidth: oldWidth,\r\n        oldHeight: oldHeight,\r\n        windowWidth: newWidth,\r\n        windowHeight: newHeight\r\n      }) === false || !isModal) {\r\n        return;\r\n      }\r\n\r\n      if (needsDimensions) {\r\n        scrollLeft = $wnd.scrollLeft();\r\n        scrollTop = $wnd.scrollTop();\r\n\r\n        if (wndWidth) {\r\n          $persp.css({\r\n            width: '',\r\n            height: ''\r\n          });\r\n        }\r\n      }\r\n\r\n      modalWidth = popup.offsetWidth;\r\n      modalHeight = popup.offsetHeight;\r\n      scrollLock = modalHeight <= newHeight && modalWidth <= newWidth;\r\n\r\n      if (s.display == 'center') {\r\n        left = Math.max(0, scrollLeft + (newWidth - modalWidth) / 2);\r\n        top = Math.max(0, scrollTop + (newHeight - modalHeight) / 2);\r\n      } else if (s.display == 'bubble') {\r\n        anchor = s.anchor === undefined ? $elm : $$1(s.anchor);\r\n        arrow = $$1('.mbsc-fr-arr-i', $markup)[0];\r\n        anchorPos = anchor.offset();\r\n        anchorTop = anchorPos.top + (hasContext ? scrollTop - $ctx.offset().top : 0);\r\n        anchorLeft = anchorPos.left + (hasContext ? scrollLeft - $ctx.offset().left : 0);\r\n        anchorWidth = anchor[0].offsetWidth;\r\n        anchorHeight = anchor[0].offsetHeight;\r\n        arrowWidth = arrow.offsetWidth;\r\n        arrowHeight = arrow.offsetHeight; // Horizontal positioning\r\n\r\n        left = constrain(anchorLeft - (modalWidth - anchorWidth) / 2, scrollLeft + 3, scrollLeft + newWidth - modalWidth - 3); // Vertical positioning\r\n        // Below the input\r\n\r\n        top = anchorTop + anchorHeight + arrowHeight / 2;\r\n\r\n        if (top + modalHeight + 8 > scrollTop + newHeight && anchorTop - modalHeight - arrowHeight / 2 > scrollTop) {\r\n          $popup.removeClass('mbsc-fr-bubble-bottom').addClass('mbsc-fr-bubble-top'); // Above the input\r\n\r\n          top = anchorTop - modalHeight - arrowHeight / 2;\r\n        } else {\r\n          $popup.removeClass('mbsc-fr-bubble-top').addClass('mbsc-fr-bubble-bottom');\r\n        } // Set arrow position\r\n\r\n\r\n        $$1('.mbsc-fr-arr', $markup).css({\r\n          left: constrain(anchorLeft + anchorWidth / 2 - (left + (modalWidth - arrowWidth) / 2), 0, arrowWidth)\r\n        }); // Lock scroll only if popup is entirely in the viewport\r\n\r\n        scrollLock = top > scrollTop && left > scrollLeft && top + modalHeight <= scrollTop + newHeight && left + modalWidth <= scrollLeft + newWidth;\r\n      } else {\r\n        left = scrollLeft;\r\n        top = s.display == 'top' ? scrollTop : Math.max(0, scrollTop + newHeight - modalHeight);\r\n      }\r\n\r\n      if (needsDimensions) {\r\n        // If top + modal height > doc height, increase doc height\r\n        docHeight = Math.max(top + modalHeight, hasContext ? ctx.scrollHeight : $$1(document).height());\r\n        docWidth = Math.max(left + modalWidth, hasContext ? ctx.scrollWidth : $$1(document).width());\r\n        $persp.css({\r\n          width: docWidth,\r\n          height: docHeight\r\n        }); // Check if scroll needed\r\n\r\n        if (s.scroll && s.display == 'bubble' && (top + modalHeight + 8 > scrollTop + newHeight || anchorTop > scrollTop + newHeight || anchorTop + anchorHeight < scrollTop)) {\r\n          $wnd.scrollTop(Math.min(anchorTop, top + modalHeight - newHeight + 8, docHeight - newHeight));\r\n        }\r\n      }\r\n\r\n      css.top = Math.floor(top);\r\n      css.left = Math.floor(left);\r\n      $popup.css(css);\r\n      return true;\r\n    };\r\n    /**\r\n     * Show mobiscroll on focus and click event of the parameter.\r\n     * @param {HTMLElement} elm - Events will be attached to this element.\r\n     * @param {Function} [beforeShow=undefined] - Optional function to execute before showing mobiscroll.\r\n     */\r\n\r\n\r\n    that.attachShow = function (elm, beforeShow) {\r\n      var $label,\r\n          $elm = $$1(elm).off('.mbsc'),\r\n          readOnly = $elm.prop('readonly');\r\n      tapOff($elm);\r\n\r\n      if (s.display !== 'inline') {\r\n        if ((s.showOnFocus || s.showOnTap) && $elm.is('input,select')) {\r\n          $elm.prop('readonly', true).on('mousedown.mbsc', function (ev) {\r\n            // Prevent input to get focus on tap (virtual keyboard pops up on some devices)\r\n            ev.preventDefault();\r\n          }).on('focus.mbsc', function () {\r\n            if (that._isVisible) {\r\n              // Don't allow input focus if mobiscroll is being opened\r\n              this.blur();\r\n            }\r\n          });\r\n          $label = $$1('label[for=\"' + $elm.attr('id') + '\"]');\r\n\r\n          if (!$label.length) {\r\n            $label = $elm.closest('label');\r\n          }\r\n        }\r\n\r\n        if (!$elm.is('select')) {\r\n          if (s.showOnFocus) {\r\n            $elm.on('focus.mbsc', function () {\r\n              if (!preventShow) {\r\n                show(beforeShow, $elm);\r\n              } else {\r\n                preventShow = false;\r\n              }\r\n            });\r\n          }\r\n\r\n          if (s.showOnTap) {\r\n            $elm.on('keydown.mbsc', function (ev) {\r\n              if (ev.keyCode == 32 || ev.keyCode == 13) {\r\n                // Space or Enter\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n                show(beforeShow, $elm);\r\n              }\r\n            });\r\n            that.tap($elm, function (ev) {\r\n              if (ev.isMbscTap) {\r\n                touched = true;\r\n              }\r\n\r\n              show(beforeShow, $elm);\r\n            });\r\n\r\n            if ($label && $label.length) {\r\n              that.tap($label, function (ev) {\r\n                ev.preventDefault();\r\n\r\n                if (ev.target !== $elm[0]) {\r\n                  show(beforeShow, $elm);\r\n                }\r\n              });\r\n            }\r\n          }\r\n        }\r\n\r\n        elmList.push({\r\n          readOnly: readOnly,\r\n          el: $elm,\r\n          lbl: $label\r\n        });\r\n      }\r\n    };\r\n    /**\r\n     * Set button handler.\r\n     */\r\n\r\n\r\n    that.select = function () {\r\n      if (isModal) {\r\n        that.hide(false, 'set', false, set);\r\n      } else {\r\n        set();\r\n      }\r\n    };\r\n    /**\r\n     * Cancel and hide the scroller instance.\r\n     */\r\n\r\n\r\n    that.cancel = function () {\r\n      if (isModal) {\r\n        that.hide(false, 'cancel', false, cancel);\r\n      } else {\r\n        cancel();\r\n      }\r\n    };\r\n    /**\r\n     * Clear button handler.\r\n     */\r\n\r\n\r\n    that.clear = function () {\r\n      that._clearValue();\r\n\r\n      trigger('onClear');\r\n\r\n      if (isModal && that._isVisible && !that.live) {\r\n        that.hide(false, 'clear', false, clear);\r\n      } else {\r\n        clear();\r\n      }\r\n    };\r\n    /**\r\n     * Enables the scroller and the associated input.\r\n     */\r\n\r\n\r\n    that.enable = function () {\r\n      s.disabled = false;\r\n      $$1.each(elmList, function (i, v) {\r\n        if (v.el.is('input,select')) {\r\n          v.el[0].disabled = false;\r\n        }\r\n      });\r\n    };\r\n    /**\r\n     * Disables the scroller and the associated input.\r\n     */\r\n\r\n\r\n    that.disable = function () {\r\n      s.disabled = true;\r\n      $$1.each(elmList, function (i, v) {\r\n        if (v.el.is('input,select')) {\r\n          v.el[0].disabled = true;\r\n        }\r\n      });\r\n    };\r\n    /**\r\n     * Shows the scroller instance.\r\n     * @param {Boolean} prevAnim - Prevent animation if true\r\n     * @param {Boolean} prevFocus - Prevent focusing if true\r\n     */\r\n\r\n\r\n    that.show = function (prevAnim, prevFocus) {\r\n      var hasButtons, html, scrollLeft, scrollTop;\r\n\r\n      if (s.disabled || that._isVisible) {\r\n        return;\r\n      } // Parse value from input\r\n\r\n\r\n      that._readValue();\r\n\r\n      if (trigger('onBeforeShow') === false) {\r\n        return false;\r\n      }\r\n\r\n      $activeElm = null;\r\n      doAnim = s.animate;\r\n      buttons = s.buttons || [];\r\n      needsDimensions = hasContext || s.display == 'bubble';\r\n      needsLock = needsFixed && !needsDimensions && s.scrollLock;\r\n      hasButtons = buttons.length > 0; //touched = false;\r\n\r\n      if (doAnim !== false) {\r\n        if (s.display == 'top') {\r\n          doAnim = doAnim || 'slidedown';\r\n        } else if (s.display == 'bottom') {\r\n          doAnim = doAnim || 'slideup';\r\n        } else if (s.display == 'center' || s.display == 'bubble') {\r\n          doAnim = doAnim || 'pop';\r\n        }\r\n      }\r\n\r\n      if (isModal) {\r\n        wndWidth = 0;\r\n        wndHeight = 0;\r\n\r\n        if (needsLock && !$lock.hasClass('mbsc-fr-lock-ios')) {\r\n          //$lock.scrollTop(0);\r\n          ctx.mbscScrollTop = scrollTop = Math.max(0, $wnd.scrollTop());\r\n          ctx.mbscScrollLeft = scrollLeft = Math.max(0, $wnd.scrollLeft());\r\n          $ctx.css({\r\n            top: -scrollTop + 'px',\r\n            left: -scrollLeft + 'px'\r\n          });\r\n        }\r\n\r\n        $lock.addClass((s.scrollLock ? 'mbsc-fr-lock' : '') + (needsLock ? ' mbsc-fr-lock-ios' : '') + (hasContext ? ' mbsc-fr-lock-ctx' : '')); // Hide virtual keyboard\r\n\r\n        if ($$1(document.activeElement).is('input,textarea')) {\r\n          document.activeElement.blur();\r\n        } // Save active instance to previous\r\n\r\n\r\n        prevInst = mobiscroll.activeInstance; // Set active instance\r\n\r\n        mobiscroll.activeInstance = that; // Keep track of modals opened per context\r\n\r\n        ctx.mbscModals = (ctx.mbscModals || 0) + 1;\r\n\r\n        if (needsLock) {\r\n          ctx.mbscIOSLock = (ctx.mbscIOSLock || 0) + 1;\r\n        }\r\n\r\n        if (s.scrollLock) {\r\n          ctx.mbscLock = (ctx.mbscLock || 0) + 1;\r\n        }\r\n      }\r\n      /*\r\n      // Create wheels containers\r\n      html = '<div lang=\"' + s.lang + '\" class=\"mbsc-fr mbsc-' + s.theme +\r\n          (s.baseTheme ? ' mbsc-' + s.baseTheme : '') + ' mbsc-fr-' + s.display + ' ' +\r\n          (s.cssClass || '') + ' ' +\r\n          (s.compClass || '') +\r\n          (that._isLiquid ? ' mbsc-fr-liq' : '') +\r\n          (isModal ? ' mbsc-fr-pos' + ((s.showOverlay ? '' : ' mbsc-fr-no-overlay')) : '') +\r\n          (isPointer ? ' mbsc-fr-pointer' : '') +\r\n          (halfBorder ? ' mbsc-fr-hb' : '') +\r\n          (touched ? '' : ' mbsc-no-touch') +\r\n          (needsLock ? ' mbsc-platform-ios' : '') +\r\n          (hasButtons ? (buttons.length >= 3 ? ' mbsc-fr-btn-block ' : '') : ' mbsc-fr-nobtn') + '\">' +\r\n          (isModal ? '<div class=\"mbsc-fr-persp\">' +\r\n              (s.showOverlay ? '<div class=\"mbsc-fr-overlay\"></div>' : '') + // Overlay\r\n              '<div role=\"dialog\" class=\"mbsc-fr-scroll\">' : '') +\r\n          '<div class=\"mbsc-fr-popup' +\r\n          (s.rtl ? ' mbsc-rtl' : ' mbsc-ltr') +\r\n          (s.headerText ? ' mbsc-fr-has-hdr' : '') +\r\n          '\">' + // Popup\r\n          (s.display === 'bubble' ? '<div class=\"mbsc-fr-arr-w\"><div class=\"mbsc-fr-arr-i\"><div class=\"mbsc-fr-arr\"></div></div></div>' : '') + // Bubble arrow\r\n          (isModal ? '<div class=\"mbsc-fr-focus\" tabindex=\"-1\"></div>' : '') +\r\n          '<div class=\"mbsc-fr-w\">' + // Popup content\r\n          //'<div aria-live=\"assertive\" class=\"mbsc-fr-aria mbsc-fr-hdn\"></div>' +\r\n          (s.headerText ? '<div class=\"mbsc-fr-hdr\">' + (isString(s.headerText) ? s.headerText : '') + '</div>' : '') + // Header\r\n          '<div class=\"mbsc-fr-c\">'; // Wheel group container\r\n      */\r\n      // --- REMOTE TRIAL CODE START ---\r\n\r\n\r\n      html = that.remote.html1.replace('mbsc-no-touch', '') + ' mbsc-fr-' + s.display + ' ' + (s.cssClass || '') + ' ' + (s.compClass || '') + (isModal ? ' mbsc-fr-pos' + (s.showOverlay ? '' : ' mbsc-fr-no-overlay') : '') + (isPointer ? ' mbsc-fr-pointer' : '') + (that._isLiquid ? ' mbsc-fr-liq' : '') + (halfBorder ? ' mbsc-fr-hb' : '') + (touched ? '' : ' mbsc-no-touch') + that.remote.html2 + (s.headerText ? ' mbsc-fr-has-hdr' : '') + '\">' + ( // Popup\r\n      s.display === 'bubble' ? '<div class=\"mbsc-fr-arr-w\"><div class=\"mbsc-fr-arr-i\"><div class=\"mbsc-fr-arr\"></div></div></div>' : '') + // Bubble arrow\r\n      that.remote.html3 + (s.headerText ? '<div class=\"mbsc-fr-hdr\">' + (isString(s.headerText) ? s.headerText : '') + '</div>' : '') + // Header\r\n      '<div class=\"mbsc-fr-c\">'; // Wheel group container\r\n      // --- REMOTE TRIAL CODE END ---\r\n\r\n      html += that._generateContent(); // --- REMOTE TRIAL CODE START ---\r\n\r\n      html += that.remote.html4; // --- REMOTE TRIAL CODE END ---\r\n\r\n      /*\r\n      html += '</div>';\r\n        if (hasButtons) {\r\n          var b,\r\n              i,\r\n              j,\r\n              l = buttons.length;\r\n            html += '<div class=\"mbsc-fr-btn-cont\">';\r\n          for (i = 0; i < buttons.length; i++) {\r\n              j = s.btnReverse ? l - i - 1 : i;\r\n              b = buttons[j];\r\n              b = isString(b) ? that.buttons[b] : b;\r\n                if (b.handler === 'set') {\r\n                  b.parentClass = 'mbsc-fr-btn-s';\r\n              }\r\n                if (b.handler === 'cancel') {\r\n                  b.parentClass = 'mbsc-fr-btn-c';\r\n              }\r\n                html += '<div' + (s.btnWidth ? ' style=\"width:' + (100 / buttons.length) + '%\"' : '') +\r\n                  ' class=\"mbsc-fr-btn-w ' + (b.parentClass || '') + '\">' +\r\n                  '<div tabindex=\"0\" role=\"button\" class=\"mbsc-fr-btn' + j + ' mbsc-fr-btn-e ' +\r\n                  (b.cssClass === undefined ? s.btnClass : b.cssClass) +\r\n                  (b.icon ? ' mbsc-ic mbsc-ic-' + b.icon : '') + '\">' + (b.text || '') + '</div></div>';\r\n          }\r\n          html += '</div>';\r\n      }\r\n      html += '</div></div></div></div>' + (isModal ? '</div></div>' : '');\r\n      */\r\n\r\n      $markup = $$1(html);\r\n      $persp = $$1('.mbsc-fr-persp', $markup);\r\n      $overlay = $$1('.mbsc-fr-scroll', $markup);\r\n      $wrapper = $$1('.mbsc-fr-w', $markup);\r\n      $popup = $$1('.mbsc-fr-popup', $markup);\r\n      $header = $$1('.mbsc-fr-hdr', $markup); //$ariaDiv = $('.mbsc-fr-aria', $markup);\r\n\r\n      markup = $markup[0];\r\n      overlay = $overlay[0];\r\n      popup = $popup[0];\r\n      that._activeElm = $$1('.mbsc-fr-focus', $markup)[0];\r\n      that._markup = $markup;\r\n      that._isVisible = true;\r\n      that.markup = markup;\r\n\r\n      that._markupReady($markup);\r\n\r\n      trigger('onMarkupReady', {\r\n        target: markup\r\n      }); // Attach events\r\n\r\n      if (isModal) {\r\n        // Enter / ESC\r\n        $$1(window).on('keydown', onWndKeyDown); // Prevent scroll if not specified otherwise\r\n\r\n        if (s.scrollLock) {\r\n          listen(document, 'touchmove', onScroll, {\r\n            passive: false\r\n          });\r\n          listen(document, 'mousewheel', onScroll, {\r\n            passive: false\r\n          });\r\n          listen(document, 'wheel', onScroll, {\r\n            passive: false\r\n          });\r\n        }\r\n\r\n        if (s.focusTrap) {\r\n          $wnd.on('focusin', onFocus);\r\n        }\r\n      }\r\n\r\n      if (isModal) {\r\n        // Wait for the toolbar and addressbar to appear on iOS\r\n        setTimeout(function () {\r\n          insertMarkup(prevAnim, prevFocus);\r\n        }, needsLock ? 100 : 0);\r\n      } else {\r\n        insertMarkup(prevAnim, prevFocus);\r\n      }\r\n    };\r\n    /**\r\n     * Hides the scroller instance.\r\n     */\r\n\r\n\r\n    that.hide = function (prevAnim, btn, force, callback) {\r\n      function onAnimEnd() {\r\n        $markup.off(animEnd, onAnimEnd);\r\n        onHide(prevAnim);\r\n      } // If onClose handler returns false, prevent hide\r\n\r\n\r\n      if (!that._isVisible || !force && !that._isValid && btn == 'set' || !force && trigger('onBeforeClose', {\r\n        valueText: that._tempValue,\r\n        button: btn\r\n      }) === false) {\r\n        return false;\r\n      }\r\n\r\n      that._isVisible = false;\r\n\r\n      if (observer) {\r\n        observer.detach();\r\n        observer = null;\r\n      }\r\n\r\n      if (isModal) {\r\n        if ($$1(document.activeElement).is('input,textarea') && popup.contains(document.activeElement)) {\r\n          document.activeElement.blur();\r\n        }\r\n\r\n        if (mobiscroll.activeInstance == that) {\r\n          mobiscroll.activeInstance = prevInst;\r\n        }\r\n\r\n        $$1(window).off('keydown', onWndKeyDown);\r\n        $wnd.off('focusin', onFocus);\r\n        unlisten(document, 'touchmove', onScroll, {\r\n          passive: false\r\n        });\r\n        unlisten(document, 'mousewheel', onScroll, {\r\n          passive: false\r\n        });\r\n        unlisten(document, 'wheel', onScroll, {\r\n          passive: false\r\n        });\r\n      } // Hide wheels and overlay\r\n\r\n\r\n      if ($markup) {\r\n        if (isModal && doAnim && !prevAnim) {\r\n          $markup.addClass('mbsc-anim-out mbsc-anim-trans mbsc-anim-trans-' + doAnim).on(animEnd, onAnimEnd).find('.mbsc-fr-popup').addClass('mbsc-anim-' + doAnim);\r\n        } else {\r\n          onHide(prevAnim);\r\n        }\r\n\r\n        that._detachEvents($markup);\r\n      }\r\n\r\n      if (callback) {\r\n        callback();\r\n      } // For validation\r\n\r\n\r\n      $elm.trigger('blur');\r\n      trigger('onClose', {\r\n        valueText: that._value\r\n      });\r\n    }; // that.ariaMessage = function (txt) {\r\n    //     $ariaDiv.html('');\r\n    //     setTimeout(function () {\r\n    //         $ariaDiv.html(txt);\r\n    //     }, 100);\r\n    // };\r\n\r\n    /**\r\n     * Return true if the scroller is currently visible.\r\n     */\r\n\r\n\r\n    that.isVisible = function () {\r\n      return that._isVisible;\r\n    }; // Protected functions to override\r\n\r\n\r\n    that.setVal = noop;\r\n    that.getVal = noop;\r\n    that._generateContent = noop;\r\n    that._attachEvents = noop;\r\n    that._detachEvents = noop;\r\n    that._readValue = noop;\r\n    that._clearValue = noop;\r\n    that._fillValue = noop;\r\n    that._markupReady = noop;\r\n    that._markupInserted = noop;\r\n    that._markupRemove = noop;\r\n    that._position = noop;\r\n    that.__processSettings = noop;\r\n    that.__init = noop;\r\n    that.__destroy = noop; // Generic frame functions\r\n\r\n    /**\r\n     * Destroys the mobiscroll instance.\r\n     */\r\n\r\n    that._destroy = function () {\r\n      // Force hide without animation\r\n      that.hide(true, false, true);\r\n      $elm.off('.mbsc');\r\n      tapOff($elm); // Remove all events from elements\r\n\r\n      $$1.each(elmList, function (i, v) {\r\n        v.el.off('.mbsc').prop('readonly', v.readOnly);\r\n        tapOff(v.el);\r\n\r\n        if (v.lbl) {\r\n          v.lbl.off('.mbsc');\r\n          tapOff(v.lbl);\r\n        }\r\n      });\r\n\r\n      that.__destroy();\r\n    };\r\n\r\n    that._updateHeader = function () {\r\n      var t = s.headerText,\r\n          txt = t ? typeof t === 'function' ? t.call(el, that._tempValue) : t.replace(/\\{value\\}/i, that._tempValue) : '';\r\n      $header.html(txt || '&nbsp;');\r\n    };\r\n\r\n    that._getRespCont = function () {\r\n      hasContext = s.context != 'body';\r\n      $wnd = $$1(hasContext ? s.context : window);\r\n      return s.display == 'inline' ? $elm.is('div') ? $elm : $elm.parent() : $wnd;\r\n    };\r\n\r\n    that._processSettings = function (resp) {\r\n      var b, i;\r\n\r\n      that.__processSettings(resp);\r\n\r\n      isPointer = !s.touchUi;\r\n\r\n      if (isPointer) {\r\n        s.display = resp.display || settings.display || 'bubble';\r\n        s.buttons = resp.buttons || settings.buttons || [];\r\n        s.showOverlay = resp.showOverlay || settings.showOverlay || false;\r\n      } // Add default buttons\r\n\r\n\r\n      s.buttons = s.buttons || (s.display !== 'inline' ? ['cancel', 'set'] : []); // Hide header text in inline mode by default\r\n\r\n      s.headerText = s.headerText === undefined ? s.display !== 'inline' ? '{value}' : false : s.headerText;\r\n      buttons = s.buttons || [];\r\n      isModal = s.display !== 'inline';\r\n      $ctx = $$1(s.context);\r\n      $lock = hasContext ? $ctx : $$1('body,html');\r\n      ctx = $ctx[0];\r\n      that.live = true; // If no set button is found, live mode is activated\r\n\r\n      for (i = 0; i < buttons.length; i++) {\r\n        b = buttons[i];\r\n\r\n        if (b == 'ok' || b == 'set' || b.handler == 'set') {\r\n          that.live = false;\r\n        }\r\n      }\r\n\r\n      that.buttons.set = {\r\n        text: s.setText,\r\n        icon: s.setIcon,\r\n        handler: 'set'\r\n      };\r\n      that.buttons.cancel = {\r\n        text: s.cancelText,\r\n        icon: s.cancelIcon,\r\n        handler: 'cancel'\r\n      };\r\n      that.buttons.close = {\r\n        text: s.closeText,\r\n        icon: s.closeIcon,\r\n        handler: 'cancel'\r\n      };\r\n      that.buttons.clear = {\r\n        text: s.clearText,\r\n        icon: s.clearIcon,\r\n        handler: 'clear'\r\n      };\r\n      that._isInput = $elm.is('input');\r\n    };\r\n    /**\r\n     * Scroller initialization.\r\n     */\r\n\r\n\r\n    that._init = function (newSettings) {\r\n      var wasVisible = that._isVisible,\r\n          wasReady = wasVisible && !$markup.hasClass('mbsc-fr-pos');\r\n\r\n      if (wasVisible) {\r\n        that.hide(true, false, true);\r\n      } // Unbind all events (if re-init)\r\n\r\n\r\n      $elm.off('.mbsc');\r\n      tapOff($elm);\r\n\r\n      that.__init(newSettings);\r\n\r\n      that._isLiquid = s.layout == 'liquid';\r\n\r\n      if (isModal) {\r\n        that._readValue();\r\n\r\n        if (!that._hasContent && !s.skipShow) {\r\n          that.attachShow($elm);\r\n        }\r\n\r\n        if (wasVisible) {\r\n          that.show(wasReady);\r\n        }\r\n      } else {\r\n        that.show();\r\n      }\r\n\r\n      $elm.removeClass('mbsc-cloak').filter('input, select, textarea').on('change.mbsc', function () {\r\n        if (!that._preventChange) {\r\n          that.setVal($elm.val(), true, false);\r\n        }\r\n\r\n        that._preventChange = false;\r\n      });\r\n    };\r\n\r\n    that.buttons = {};\r\n    that.handlers = {\r\n      set: that.select,\r\n      cancel: that.cancel,\r\n      clear: that.clear\r\n    };\r\n    that._value = null;\r\n    that._isValid = true;\r\n    that._isVisible = false; // Constructor\r\n\r\n    s = that.settings;\r\n    trigger = that.trigger;\r\n\r\n    if (!inherit) {\r\n      that.init();\r\n    }\r\n  };\r\n  Frame.prototype._defaults = {\r\n    // Localization\r\n    lang: 'en',\r\n    setText: 'Set',\r\n    selectedText: '{count} selected',\r\n    closeText: 'Close',\r\n    cancelText: 'Cancel',\r\n    clearText: 'Clear',\r\n    // Options\r\n    context: 'body',\r\n    maxPopupWidth: 600,\r\n    disabled: false,\r\n    closeOnOverlayTap: true,\r\n    showOnFocus: isAndroid || isIOS,\r\n    // Needed for ion-input\r\n    showOnTap: true,\r\n    display: 'center',\r\n    scroll: true,\r\n    scrollLock: true,\r\n    showOverlay: true,\r\n    tap: true,\r\n    touchUi: true,\r\n    btnClass: 'mbsc-fr-btn',\r\n    btnWidth: true,\r\n    focusTrap: true,\r\n    focusOnClose: !isIOS8 // Temporary for iOS8\r\n\r\n  };\r\n  classes.Frame = Frame;\r\n  themes.frame.mobiscroll = {\r\n    headerText: false,\r\n    btnWidth: false\r\n  };\r\n  themes.scroller.mobiscroll = extend$1({}, themes.frame.mobiscroll, {\r\n    rows: 5,\r\n    showLabel: false,\r\n    selectedLineBorder: 1,\r\n    weekDays: 'min',\r\n    checkIcon: 'ion-ios7-checkmark-empty',\r\n    btnPlusClass: 'mbsc-ic mbsc-ic-arrow-down5',\r\n    btnMinusClass: 'mbsc-ic mbsc-ic-arrow-up5',\r\n    btnCalPrevClass: 'mbsc-ic mbsc-ic-arrow-left5',\r\n    btnCalNextClass: 'mbsc-ic mbsc-ic-arrow-right5'\r\n  });\r\n\r\n  if (isBrowser) {\r\n    // Prevent re-show on window focus\r\n    $$1(window).on('focus', function () {\r\n      if ($activeElm) {\r\n        preventShow = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  var isIOS$1 = os == 'ios';\r\n  var ScrollViewBase = function ScrollViewBase(el, settings, inherit) {\r\n    var $btn,\r\n        $scrollbar,\r\n        $scrollbarTrack,\r\n        btnTimer,\r\n        contSize,\r\n        diffX,\r\n        diffY,\r\n        diff,\r\n        dir,\r\n        easing,\r\n        elastic,\r\n        endX,\r\n        endY,\r\n        eventObj,\r\n        isBtn,\r\n        isInfinite,\r\n        maxScroll,\r\n        maxSnapScroll,\r\n        minScroll,\r\n        move,\r\n        moving,\r\n        nativeScroll,\r\n        rafID,\r\n        //rafMoveID,\r\n    rafRunning,\r\n        scrollbar,\r\n        scrollbarHeight,\r\n        scrollbarOffset,\r\n        scrollbarTrack,\r\n        scrolled,\r\n        scrollDebounce,\r\n        scrollSnap,\r\n        scrollTimer,\r\n        snap,\r\n        snapPoints,\r\n        startPos,\r\n        startTime,\r\n        startX,\r\n        startY,\r\n        style,\r\n        target,\r\n        transTimer,\r\n        threshold,\r\n        trigger,\r\n        vertical,\r\n        that = this,\r\n        currPos,\r\n        currSnap = 0,\r\n        currSnapDir = 1,\r\n        s = settings,\r\n        $elm = $$1(el);\r\n\r\n    function onStart(ev) {\r\n      trigger('onStart', {\r\n        domEvent: ev\r\n      }); // Better performance if there are tap events on document\r\n\r\n      if (s.stopProp) {\r\n        ev.stopPropagation();\r\n      } //if (s.prevDef || ev.type == 'mousedown') {\r\n\r\n\r\n      if (s.prevDef && ev.type == 'mousedown') {\r\n        // Prevent touch highlight and focus\r\n        ev.preventDefault();\r\n      }\r\n\r\n      if (s.readonly || s.lock && moving) {\r\n        return;\r\n      }\r\n\r\n      if (testTouch(ev, this) && !move && mobiscroll.LIIiW) {\r\n        if ($btn) {\r\n          $btn.removeClass('mbsc-active');\r\n        } // Highlight button\r\n\r\n\r\n        isBtn = false;\r\n\r\n        if (!moving) {\r\n          $btn = $$1(ev.target).closest('.mbsc-btn-e', this);\r\n\r\n          if ($btn.length && !$btn.hasClass('mbsc-disabled')) {\r\n            isBtn = true;\r\n            btnTimer = setTimeout(function () {\r\n              $btn.addClass('mbsc-active');\r\n            }, 100);\r\n          }\r\n        }\r\n\r\n        move = true;\r\n        scrolled = false;\r\n        nativeScroll = false;\r\n        that.scrolled = moving;\r\n        startX = getCoord(ev, 'X');\r\n        startY = getCoord(ev, 'Y');\r\n        endX = startX;\r\n        diffX = 0;\r\n        diffY = 0;\r\n        diff = 0;\r\n        startTime = new Date();\r\n        startPos = +getPosition(target, vertical) || 0; // Stop scrolling animation, 1ms is needed for Android 4.0\r\n\r\n        if (moving) {\r\n          scroll(startPos, isIOS$1 ? 0 : 1);\r\n        }\r\n\r\n        if (ev.type === 'mousedown') {\r\n          $$1(document).on('mousemove', onMove).on('mouseup', onEnd);\r\n        }\r\n      }\r\n    }\r\n\r\n    function onMove(ev) {\r\n      if (move) {\r\n        if (s.stopProp) {\r\n          ev.stopPropagation();\r\n        }\r\n\r\n        endX = getCoord(ev, 'X');\r\n        endY = getCoord(ev, 'Y');\r\n        diffX = endX - startX;\r\n        diffY = endY - startY;\r\n        diff = vertical ? diffY : diffX;\r\n\r\n        if (isBtn && (Math.abs(diffY) > s.thresholdY || Math.abs(diffX) > s.thresholdX)) {\r\n          clearTimeout(btnTimer);\r\n          $btn.removeClass('mbsc-active');\r\n          isBtn = false;\r\n        }\r\n\r\n        if (that.scrolled || !nativeScroll && Math.abs(diff) > threshold) {\r\n          if (!scrolled) {\r\n            trigger('onGestureStart', eventObj);\r\n          }\r\n\r\n          that.scrolled = scrolled = true;\r\n\r\n          if (!rafRunning) {\r\n            rafRunning = true;\r\n            rafID = raf(onMoving);\r\n          }\r\n        }\r\n\r\n        if (vertical || s.scrollLock) {\r\n          // Always prevent native scroll, if vertical\r\n          ev.preventDefault();\r\n        } else {\r\n          if (that.scrolled) {\r\n            // Prevent native scroll\r\n            ev.preventDefault();\r\n          } else if (Math.abs(diffY) > 7) {\r\n            nativeScroll = true;\r\n            that.scrolled = true;\r\n            onEnd();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function onMoving() {\r\n      //var time = new Date();\r\n      if (maxSnapScroll) {\r\n        diff = constrain(diff, -snap * maxSnapScroll, snap * maxSnapScroll);\r\n      }\r\n\r\n      scroll(constrain(startPos + diff, minScroll - elastic, maxScroll + elastic)); //if (s.momentum) {\r\n      //    startTime = time;\r\n      //    lastX = endX;\r\n      //}\r\n\r\n      rafRunning = false;\r\n    }\r\n\r\n    function onEnd(ev) {\r\n      if (move) {\r\n        var speed,\r\n            time = new Date() - startTime; // Better performance if there are tap events on document\r\n\r\n        if (s.stopProp && ev) {\r\n          ev.stopPropagation();\r\n        }\r\n\r\n        rafc(rafID);\r\n        rafRunning = false;\r\n\r\n        if (!nativeScroll && that.scrolled) {\r\n          // Calculate momentum distance\r\n          if (s.momentum && time < 300) {\r\n            speed = diff / time; //speed = Math.abs(lastX - endX) / time;\r\n\r\n            diff = Math.max(Math.abs(diff), speed * speed / s.speedUnit) * (diff < 0 ? -1 : 1);\r\n          }\r\n\r\n          finalize(diff);\r\n        }\r\n\r\n        if (isBtn) {\r\n          clearTimeout(btnTimer);\r\n          $btn.addClass('mbsc-active');\r\n          setTimeout(function () {\r\n            $btn.removeClass('mbsc-active');\r\n          }, 100);\r\n\r\n          if (!nativeScroll && !that.scrolled) {\r\n            trigger('onBtnTap', {\r\n              target: $btn[0],\r\n              domEvent: ev\r\n            });\r\n          }\r\n        } // Detach document events\r\n\r\n\r\n        if (ev && ev.type == 'mouseup') {\r\n          $$1(document).off('mousemove', onMove).off('mouseup', onEnd);\r\n        }\r\n\r\n        move = false;\r\n      }\r\n    }\r\n\r\n    function onClick(ev) {\r\n      if (that.scrolled) {\r\n        that.scrolled = false;\r\n        ev.stopPropagation();\r\n        ev.preventDefault();\r\n      }\r\n    }\r\n\r\n    function onScroll(ev) {\r\n      if (!el.contains(ev.target)) {\r\n        return;\r\n      }\r\n\r\n      ev = ev.originalEvent || ev;\r\n      diff = vertical ? ev.deltaY == undefined ? ev.wheelDelta || ev.detail : ev.deltaY : ev.deltaX;\r\n      trigger('onStart', {\r\n        domEvent: ev\r\n      });\r\n\r\n      if (s.stopProp) {\r\n        ev.stopPropagation();\r\n      }\r\n\r\n      if (diff && mobiscroll.LIIiW) {\r\n        ev.preventDefault(); //diff = diff < 0 ? 20 : -20;\r\n\r\n        if (ev.deltaMode && ev.deltaMode == 1) {\r\n          diff *= 15;\r\n        }\r\n\r\n        diff = constrain(-diff, -scrollSnap, scrollSnap);\r\n        startPos = currPos;\r\n\r\n        if (s.readonly) {\r\n          return;\r\n        }\r\n\r\n        if (!scrolled) {\r\n          gestureStart();\r\n        }\r\n\r\n        if (startPos + diff < minScroll) {\r\n          startPos = minScroll;\r\n          diff = 0;\r\n        }\r\n\r\n        if (startPos + diff > maxScroll) {\r\n          startPos = maxScroll;\r\n          diff = 0;\r\n        }\r\n\r\n        if (!rafRunning) {\r\n          rafRunning = true;\r\n          rafID = raf(onMoving);\r\n        }\r\n\r\n        if (!diff && scrolled) {\r\n          return;\r\n        }\r\n\r\n        scrolled = true;\r\n        clearTimeout(scrollDebounce);\r\n        scrollDebounce = setTimeout(function () {\r\n          rafc(rafID);\r\n          rafRunning = false;\r\n          scrolled = false;\r\n          finalize(diff);\r\n        }, 200);\r\n      }\r\n    }\r\n\r\n    function onScrollBarStart(ev) {\r\n      trigger('onStart', {\r\n        domEvent: ev\r\n      });\r\n\r\n      if (s.readonly) {\r\n        return;\r\n      }\r\n\r\n      ev.stopPropagation();\r\n      startPos = currPos;\r\n      scrolled = false;\r\n\r\n      if (ev.target == scrollbar) {\r\n        startY = getCoord(ev, 'Y', true);\r\n        $$1(document).on('mousemove', onScrollBarMove).on('mouseup', onScrollBarEnd);\r\n      } else {\r\n        startY = $scrollbar.offset().top;\r\n        onScrollBarMove(ev);\r\n        onScrollBarEnd();\r\n      }\r\n    }\r\n\r\n    function onScrollBarMove(ev) {\r\n      var percent = (getCoord(ev, 'Y', true) - startY) / contSize;\r\n\r\n      if (isInfinite) {\r\n        diff = -(maxSnapScroll * snap * 2 + contSize) * percent;\r\n        diff = constrain(diff, -snap * maxSnapScroll, snap * maxSnapScroll);\r\n      } else {\r\n        diff = (minScroll - maxScroll - contSize) * percent;\r\n      }\r\n\r\n      if (!scrolled) {\r\n        gestureStart();\r\n      }\r\n\r\n      scrolled = true;\r\n      scroll(constrain(startPos + diff, minScroll - elastic, maxScroll + elastic));\r\n    }\r\n\r\n    function onScrollBarEnd() {\r\n      startPos = currPos;\r\n      finalize(0);\r\n      $$1(document).off('mousemove', onScrollBarMove).off('mouseup', onScrollBarEnd);\r\n    }\r\n\r\n    function onScrollBarClick(ev) {\r\n      ev.stopPropagation();\r\n    }\r\n\r\n    function gestureStart() {\r\n      eventObj = {\r\n        posX: vertical ? 0 : currPos,\r\n        posY: vertical ? currPos : 0,\r\n        originX: vertical ? 0 : startPos,\r\n        originY: vertical ? startPos : 0,\r\n        direction: diff > 0 ? vertical ? 270 : 360 : vertical ? 90 : 180\r\n      };\r\n      trigger('onGestureStart', eventObj);\r\n    }\r\n\r\n    function finalize(diff) {\r\n      var i, time, newPos; // Limit scroll to snap size\r\n\r\n      if (maxSnapScroll) {\r\n        diff = constrain(diff, -snap * maxSnapScroll, snap * maxSnapScroll);\r\n      } // Calculate snap and limit between min and max\r\n\r\n\r\n      newPos = constrain(Math.round((startPos + diff) / snap) * snap, minScroll, maxScroll); // Snap to nearest element\r\n\r\n      if (snapPoints) {\r\n        if (diff < 0) {\r\n          for (i = snapPoints.length - 1; i >= 0; i--) {\r\n            if (Math.abs(newPos) + contSize >= snapPoints[i].breakpoint) {\r\n              currSnap = i;\r\n              currSnapDir = 2;\r\n              newPos = snapPoints[i].snap2;\r\n              break;\r\n            }\r\n          }\r\n        } else if (diff >= 0) {\r\n          for (i = 0; i < snapPoints.length; i++) {\r\n            if (Math.abs(newPos) <= snapPoints[i].breakpoint) {\r\n              currSnap = i;\r\n              currSnapDir = 1;\r\n              newPos = snapPoints[i].snap1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        newPos = constrain(newPos, minScroll, maxScroll);\r\n      }\r\n\r\n      time = s.time || (currPos < minScroll || currPos > maxScroll ? 1000 : Math.max(1000, Math.abs(newPos - currPos) * s.timeUnit));\r\n      eventObj.destinationX = vertical ? 0 : newPos;\r\n      eventObj.destinationY = vertical ? newPos : 0;\r\n      eventObj.duration = time;\r\n      eventObj.transitionTiming = easing;\r\n      trigger('onGestureEnd', eventObj); // Scroll to the calculated position\r\n\r\n      that.scroll(newPos, time);\r\n    }\r\n\r\n    function scroll(pos, time, tap, callback) {\r\n      var percent,\r\n          changed = pos != currPos,\r\n          anim = time > 1,\r\n          timing = time ? cssPrefix + 'transform ' + Math.round(time) + 'ms ' + easing : '',\r\n          done = function done() {\r\n        clearInterval(scrollTimer);\r\n        clearTimeout(transTimer); //rafc(rafMoveID);\r\n\r\n        moving = false;\r\n        currPos = pos;\r\n        eventObj.posX = vertical ? 0 : pos;\r\n        eventObj.posY = vertical ? pos : 0;\r\n\r\n        if (changed) {\r\n          trigger('onMove', eventObj);\r\n        }\r\n\r\n        if (anim) {\r\n          //that.scrolled = false;\r\n          trigger('onAnimationEnd', eventObj);\r\n        }\r\n\r\n        if (callback) {\r\n          callback();\r\n        }\r\n      };\r\n\r\n      eventObj = {\r\n        posX: vertical ? 0 : currPos,\r\n        posY: vertical ? currPos : 0,\r\n        originX: vertical ? 0 : startPos,\r\n        originY: vertical ? startPos : 0,\r\n        direction: pos - currPos > 0 ? vertical ? 270 : 360 : vertical ? 90 : 180\r\n      };\r\n      currPos = pos;\r\n\r\n      if (anim) {\r\n        eventObj.destinationX = vertical ? 0 : pos;\r\n        eventObj.destinationY = vertical ? pos : 0;\r\n        eventObj.duration = time;\r\n        eventObj.transitionTiming = easing;\r\n        trigger('onAnimationStart', eventObj);\r\n      }\r\n\r\n      style[jsPrefix + 'Transition'] = timing;\r\n      style[jsPrefix + 'Transform'] = 'translate3d(' + (vertical ? '0,' + pos + 'px,' : pos + 'px,' + '0,') + '0)';\r\n\r\n      if (scrollbar && scrollbarHeight) {\r\n        percent = isInfinite ? (scrollbarOffset - pos) / (maxSnapScroll * snap * 2) : (pos - maxScroll) / (minScroll - maxScroll);\r\n        scrollbar.style[jsPrefix + 'Transition'] = timing;\r\n        scrollbar.style[jsPrefix + 'Transform'] = 'translate3d(0,' + Math.max(0, Math.min((contSize - scrollbarHeight) * percent, contSize - scrollbarHeight)) + 'px,0)';\r\n      }\r\n\r\n      if (!changed && !moving || !time || time <= 1) {\r\n        done();\r\n      } else if (time) {\r\n        moving = !tap;\r\n        clearInterval(scrollTimer);\r\n        scrollTimer = setInterval(function () {\r\n          //rafMoveID = raf(function () {\r\n          var p = +getPosition(target, vertical) || 0;\r\n          eventObj.posX = vertical ? 0 : p;\r\n          eventObj.posY = vertical ? p : 0;\r\n          trigger('onMove', eventObj); // Trigger done if close to the end\r\n\r\n          if (Math.abs(p - pos) < 2) {\r\n            done();\r\n          } //});\r\n\r\n        }, 100);\r\n        clearTimeout(transTimer);\r\n        transTimer = setTimeout(function () {\r\n          done(); //style[pr + 'Transition'] = '';\r\n        }, time); // target.off(transEnd).on(transEnd, function (e) {\r\n        //     if (e.target === target[0]) {\r\n        //         target.off(transEnd);\r\n        //         style[pr + 'Transition'] = '';\r\n        //         done();\r\n        //     }\r\n        // });\r\n      }\r\n\r\n      if (s.sync) {\r\n        s.sync(pos, time, easing);\r\n      }\r\n    } // Call the parent constructor\r\n\r\n\r\n    Base.call(this, el, settings, true);\r\n    that.scrolled = false;\r\n    /**\r\n     * Scroll to the given position or element\r\n     */\r\n\r\n    that.scroll = function (pos, time, tap, callback) {\r\n      // If position is not numeric, scroll to element\r\n      if (!isNumeric(pos)) {\r\n        pos = Math.ceil(($$1(pos, el).length ? Math.round(target.offset()[dir] - $$1(pos, el).offset()[dir]) : currPos) / snap) * snap;\r\n      } else {\r\n        pos = Math.round(pos / snap) * snap;\r\n      }\r\n\r\n      pos = constrain(pos, minScroll, maxScroll);\r\n      currSnap = Math.round(pos / snap);\r\n      startPos = currPos;\r\n      scrollbarOffset = maxSnapScroll * snap + pos;\r\n      scroll(pos, time, tap, callback);\r\n    };\r\n\r\n    that.refresh = function (noScroll) {\r\n      var tempScroll;\r\n      contSize = (s.contSize === undefined ? vertical ? $elm.height() : $elm.width() : s.contSize) || 0;\r\n      maxScroll = (s.maxScroll === undefined ? 0 : s.maxScroll) || 0;\r\n      minScroll = Math.min(maxScroll, s.minScroll === undefined ? Math.min(0, vertical ? contSize - target.height() : contSize - target.width()) : s.minScroll) || 0;\r\n      snapPoints = null;\r\n\r\n      if (!vertical && s.rtl) {\r\n        tempScroll = maxScroll;\r\n        maxScroll = -minScroll;\r\n        minScroll = -tempScroll;\r\n      }\r\n\r\n      if (isString(s.snap)) {\r\n        snapPoints = [];\r\n        target.find(s.snap).each(function () {\r\n          var offset = vertical ? this.offsetTop : this.offsetLeft,\r\n              size = vertical ? this.offsetHeight : this.offsetWidth;\r\n          snapPoints.push({\r\n            breakpoint: offset + size / 2,\r\n            snap1: -offset,\r\n            snap2: contSize - offset - size\r\n          });\r\n        });\r\n      }\r\n\r\n      snap = isNumeric(s.snap) ? s.snap : 1;\r\n      maxSnapScroll = s.snap ? s.maxSnapScroll : 0;\r\n      easing = s.easing;\r\n      elastic = s.elastic ? isNumeric(s.snap) ? snap : isNumeric(s.elastic) ? s.elastic : 0 : 0; // && s.snap ? snap : 0;\r\n\r\n      scrollSnap = snap;\r\n\r\n      while (scrollSnap > 44) {\r\n        scrollSnap /= 2;\r\n      }\r\n\r\n      scrollSnap = Math.round(44 / scrollSnap) * scrollSnap;\r\n\r\n      if (scrollbar) {\r\n        isInfinite = minScroll == -Infinity || maxScroll == Infinity;\r\n        scrollbarHeight = minScroll < maxScroll ? Math.max(20, contSize * contSize / (maxScroll - minScroll + contSize)) : 0;\r\n        scrollbar.style.height = scrollbarHeight + 'px';\r\n        scrollbarTrack.style.height = scrollbarHeight ? '' : 0;\r\n      }\r\n\r\n      if (currPos === undefined) {\r\n        currPos = s.initialPos;\r\n        currSnap = Math.round(currPos / snap);\r\n      }\r\n\r\n      if (!noScroll) {\r\n        that.scroll(s.snap ? snapPoints && snapPoints[currSnap] ? snapPoints[currSnap]['snap' + currSnapDir] : currSnap * snap : currPos);\r\n      }\r\n    };\r\n\r\n    that._processSettings = function () {\r\n      vertical = s.axis == 'Y';\r\n      dir = vertical ? 'top' : 'left';\r\n      target = s.moveElement || $elm.children().eq(0);\r\n      style = target[0].style;\r\n      threshold = vertical ? s.thresholdY : s.thresholdX;\r\n\r\n      if (s.scrollbar) {\r\n        $scrollbarTrack = s.scrollbar;\r\n        $scrollbar = $scrollbarTrack.find('.mbsc-sc-bar');\r\n        scrollbar = $scrollbar[0];\r\n        scrollbarTrack = $scrollbarTrack[0];\r\n      }\r\n    };\r\n\r\n    that._init = function () {\r\n      that.refresh();\r\n      listen(el, 'mousedown', onStart);\r\n      listen(el, 'touchstart', onStart, {\r\n        passive: true\r\n      });\r\n      listen(el, 'touchend', onEnd);\r\n      listen(el, 'touchcancel', onEnd);\r\n      listen(el, 'click', onClick, true);\r\n      listen(document, 'touchmove', onMove, {\r\n        passive: false\r\n      });\r\n\r\n      if (s.mousewheel) {\r\n        listen(document, 'wheel', onScroll, {\r\n          passive: false,\r\n          capture: true\r\n        });\r\n        listen(document, 'mousewheel', onScroll, {\r\n          passive: false,\r\n          capture: true\r\n        });\r\n      }\r\n\r\n      if (scrollbar) {\r\n        $scrollbarTrack.on('mousedown', onScrollBarStart).on('click', onScrollBarClick);\r\n      } //el.addEventListener('touchend', function (ev) {\r\n      //    if (scrolled) {\r\n      //        ev.stopPropagation();\r\n      //    }\r\n      //}, true);\r\n\r\n    };\r\n    /**\r\n     * Destroy\r\n     */\r\n\r\n\r\n    that._destroy = function () {\r\n      clearInterval(scrollTimer);\r\n      unlisten(el, 'mousedown', onStart);\r\n      unlisten(el, 'touchstart', onStart, {\r\n        passive: true\r\n      });\r\n      unlisten(el, 'touchend', onEnd);\r\n      unlisten(el, 'touchcancel', onEnd);\r\n      unlisten(el, 'click', onClick, true);\r\n      unlisten(document, 'touchmove', onMove, {\r\n        passive: false\r\n      });\r\n      unlisten(document, 'wheel', onScroll, {\r\n        passive: false,\r\n        capture: true\r\n      });\r\n      unlisten(document, 'mousewheel', onScroll, {\r\n        passive: false,\r\n        capture: true\r\n      });\r\n\r\n      if (scrollbar) {\r\n        $scrollbarTrack.off('mousedown', onScrollBarStart).off('click', onScrollBarClick);\r\n      }\r\n    }; // Constructor\r\n\r\n\r\n    s = that.settings;\r\n    trigger = that.trigger;\r\n\r\n    if (!inherit) {\r\n      that.init();\r\n    }\r\n  };\r\n  ScrollViewBase.prototype = {\r\n    _defaults: {\r\n      speedUnit: 0.0022,\r\n      //timeUnit: 0.8,\r\n      timeUnit: 3,\r\n      initialPos: 0,\r\n      axis: 'Y',\r\n      thresholdX: 10,\r\n      thresholdY: 5,\r\n      //easing: 'ease-out',\r\n      easing: 'cubic-bezier(0.190, 1.000, 0.220, 1.000)',\r\n      stopProp: true,\r\n      momentum: true,\r\n      mousewheel: true,\r\n      elastic: true\r\n    }\r\n  };\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  var presets = {},\r\n      css = isBrowser ? window.CSS : null,\r\n      has3d = css && css.supports && css.supports(\"(transform-style: preserve-3d)\");\r\n\r\n  function sanitize(str) {\r\n    return (str + '').replace(/\"/g, '___');\r\n  }\r\n  var Scroller = function Scroller(el, settings, inherit) {\r\n    var $markup,\r\n        batchSize3d,\r\n        batchSize = 40,\r\n        animTime = 1000,\r\n        scroll3dAngle,\r\n        scroll3d,\r\n        selectedClass,\r\n        showScrollArrows,\r\n        stepper,\r\n        tempWheelArray,\r\n        itemHeight,\r\n        itemHeight3d,\r\n        isPointer,\r\n        isValidating,\r\n        s,\r\n        trigger,\r\n        lines,\r\n        wheels,\r\n        wheelsMap,\r\n        that = this,\r\n        $elm = $$1(el); // Event handlers\r\n\r\n    function onKeyDown(ev) {\r\n      var i = +$$1(this).attr('data-index'),\r\n          handle,\r\n          direction;\r\n\r\n      if (ev.keyCode == 38) {\r\n        // Up\r\n        handle = true;\r\n        direction = -1;\r\n      } else if (ev.keyCode == 40) {\r\n        // Down\r\n        handle = true;\r\n        direction = 1;\r\n      } else if (ev.keyCode == 32) {\r\n        // Space\r\n        handle = true;\r\n        onItemTap(i, $$1(ev.target));\r\n      }\r\n\r\n      if (handle) {\r\n        ev.stopPropagation();\r\n        ev.preventDefault();\r\n\r\n        if (direction) {\r\n          stepper.start(i, direction, ev);\r\n        }\r\n      }\r\n    }\r\n\r\n    function onKeyUp() {\r\n      stepper.stop();\r\n    }\r\n\r\n    function onItemTap(i, $item) {\r\n      var wheel = wheels[i],\r\n          idx = +$item.attr('data-index'),\r\n          val = getValue(wheel, idx),\r\n          selected = that._tempSelected[i],\r\n          maxSelect = isNumeric(wheel.multiple) ? wheel.multiple : Infinity;\r\n\r\n      if (trigger('onItemTap', {\r\n        target: $item[0],\r\n        index: i,\r\n        value: val,\r\n        selected: $item.hasClass('mbsc-sc-itm-sel')\r\n      }) !== false && !that._prevItemTap) {\r\n        // Select item on tap\r\n        if (wheel.multiple && !wheel._disabled[val]) {\r\n          if (selected[val] !== undefined) {\r\n            $item.removeClass(selectedClass).removeAttr('aria-selected');\r\n            delete selected[val];\r\n          } else {\r\n            if (maxSelect == 1) {\r\n              that._tempSelected[i] = selected = {};\r\n\r\n              wheel._$markup.find('.mbsc-sc-itm-sel').removeClass(selectedClass).removeAttr('aria-selected');\r\n            }\r\n\r\n            if (objectToArray(selected).length < maxSelect) {\r\n              $item.addClass(selectedClass).attr('aria-selected', 'true');\r\n              selected[val] = val;\r\n            }\r\n          }\r\n        }\r\n\r\n        setWheelValue(wheel, i, idx, animTime, wheel._index < idx ? 1 : 2, true, wheel.multiple);\r\n\r\n        if (that.live && (!wheel.multiple || wheel.multiple === 1 && s.tapSelect) && (s.setOnTap === true || s.setOnTap[i])) {\r\n          setTimeout(function () {\r\n            that.select();\r\n          }, s.tapSelect ? 0 : 200);\r\n        }\r\n      }\r\n\r\n      that._prevItemTap = false;\r\n    } // Private functions\r\n\r\n\r\n    function shouldSet(i, noscroll) {\r\n      var wheel = wheels[i];\r\n      return wheel && (!wheel.multiple || wheel.multiple !== 1 && noscroll && (s.setOnTap === true || s.setOnTap[i]));\r\n    }\r\n\r\n    function getMin(wheel) {\r\n      return -(wheel.max - wheel._offset - (wheel.multiple && !scroll3d ? Math.floor(s.rows / 2) : 0)) * itemHeight;\r\n    }\r\n\r\n    function getMax(wheel) {\r\n      return -(wheel.min - wheel._offset + (wheel.multiple && !scroll3d ? Math.floor(s.rows / 2) : 0)) * itemHeight;\r\n    }\r\n\r\n    function getIndex(wheel, val) {\r\n      return (wheel._array ? wheel._map[val] : +wheel.getIndex(val, that)) || 0;\r\n    }\r\n\r\n    function getItem(wheel, i) {\r\n      var data = wheel.data;\r\n\r\n      if (i >= wheel.min && i <= wheel.max) {\r\n        return wheel._array ? wheel.circular ? $$1(data).get(i % wheel._length) : data[i] : $$1.isFunction(data) ? data(i, that) : '';\r\n      }\r\n    }\r\n\r\n    function getItemValue(item) {\r\n      return $$1.isPlainObject(item) ? item.value !== undefined ? item.value : item.display : item;\r\n    }\r\n\r\n    function getItemText(item) {\r\n      var text = $$1.isPlainObject(item) ? item.display : item;\r\n      return text === undefined ? '' : text + that._getText(mobiscroll, 0.2);\r\n    }\r\n\r\n    function getValue(wheel, i) {\r\n      return getItemValue(getItem(wheel, i));\r\n    }\r\n\r\n    function step(index, direction, ev) {\r\n      var wheel = wheels[index];\r\n      setWheelValue(wheel, index, wheel._index + direction, s.delay + 100, direction == 1 ? 1 : 2, false, false, ev.type == 'keydown');\r\n    }\r\n\r\n    function isReadOnly(i) {\r\n      return $$1.isArray(s.readonly) ? s.readonly[i] : s.readonly;\r\n    }\r\n\r\n    function initWheel(ww, l, keep) {\r\n      // Create a copy of the wheel, in case if same option object is used for multiple scroller instances\r\n      var w = extend$1(wheels[l] || {}, ww);\r\n      var index = w._index - w._batch;\r\n      w.data = w.data || [];\r\n      w.key = w.key !== undefined ? w.key : l;\r\n      w.label = w.label !== undefined ? w.label : l;\r\n      w._map = {};\r\n      w._array = $$1.isArray(w.data); // Map keys to index\r\n\r\n      if (w._array) {\r\n        w._length = w.data.length;\r\n        $$1.each(w.data, function (i, v) {\r\n          w._map[getItemValue(v)] = i;\r\n        });\r\n      }\r\n\r\n      w.circular = s.circular === undefined ? w.circular === undefined ? w._array && w._length > s.rows : w.circular : $$1.isArray(s.circular) ? s.circular[l] : s.circular;\r\n      w.min = w._array ? w.circular ? -Infinity : 0 : w.min === undefined ? -Infinity : w.min;\r\n      w.max = w._array ? w.circular ? Infinity : w._length - 1 : w.max === undefined ? Infinity : w.max;\r\n      w._nr = l;\r\n      w._index = getIndex(w, tempWheelArray[l]);\r\n      w._disabled = {};\r\n      w._batch = 0;\r\n      w._current = w._index;\r\n      w._first = w._index - batchSize; //Math.max(w.min, w._current - batchSize);\r\n\r\n      w._last = w._index + batchSize; //Math.min(w.max, w._first + 2 * batchSize);\r\n\r\n      w._offset = w._first;\r\n\r\n      if (keep) {\r\n        w._offset -= w._margin / itemHeight + (w._index - index);\r\n        w._margin += (w._index - index) * itemHeight;\r\n      } else {\r\n        w._margin = 0; //w._first * itemHeight;\r\n      }\r\n\r\n      w._refresh = function (noScroll) {\r\n        extend$1(w._scroller.settings, {\r\n          minScroll: getMin(w),\r\n          maxScroll: getMax(w)\r\n        });\r\n\r\n        w._scroller.refresh(noScroll);\r\n      };\r\n\r\n      wheelsMap[w.key] = w;\r\n      return w;\r\n    }\r\n\r\n    function generateItems(wheel, index, start, end, is3d) {\r\n      var i,\r\n          css,\r\n          item,\r\n          value,\r\n          text,\r\n          lbl,\r\n          invalid,\r\n          selected,\r\n          html = '',\r\n          checked = that._tempSelected[index],\r\n          disabled = wheel._disabled || {};\r\n\r\n      for (i = start; i <= end; i++) {\r\n        item = getItem(wheel, i);\r\n        text = getItemText(item);\r\n        value = getItemValue(item);\r\n        css = item && item.cssClass !== undefined ? item.cssClass : '';\r\n        lbl = item && item.label !== undefined ? item.label : '';\r\n        invalid = item && item.invalid;\r\n        selected = value !== undefined && value == tempWheelArray[index] && !wheel.multiple; // TODO: don't generate items with no value (use margin or placeholder instead)\r\n\r\n        html += '<div role=\"option\" tabindex=\"-1\" aria-selected=\"' + (checked[value] ? true : false) + '\" class=\"mbsc-sc-itm ' + (is3d ? 'mbsc-sc-itm-3d ' : '') + css + ' ' + (selected ? 'mbsc-sc-itm-sel ' : '') + (checked[value] ? selectedClass : '') + (value === undefined ? ' mbsc-sc-itm-ph' : ' mbsc-btn-e') + (invalid ? ' mbsc-sc-itm-inv-h mbsc-disabled' : '') + (disabled[value] ? ' mbsc-sc-itm-inv mbsc-disabled' : '') + '\" data-index=\"' + i + '\" data-val=\"' + sanitize(value) + '\"' + (lbl ? ' aria-label=\"' + lbl + '\"' : '') + (selected ? ' aria-selected=\"true\"' : '') + ' style=\"height:' + itemHeight + 'px;line-height:' + itemHeight + 'px;' + (is3d ? cssPrefix + 'transform:rotateX(' + (wheel._offset - i) * scroll3dAngle % 360 + 'deg) translateZ(' + itemHeight * s.rows / 2 + 'px);' : '') + '\">' + (lines > 1 ? '<div class=\"mbsc-sc-itm-ml\" style=\"line-height:' + Math.round(itemHeight / lines) + 'px;font-size:' + Math.round(itemHeight / lines * 0.8) + 'px;\">' : '') + text + (lines > 1 ? '</div>' : '') + '</div>';\r\n      }\r\n\r\n      return html;\r\n    }\r\n\r\n    function infinite(wheel, i, pos) {\r\n      var index = Math.round(-pos / itemHeight) + wheel._offset,\r\n          diff = index - wheel._current,\r\n          first = wheel._first,\r\n          last = wheel._last,\r\n          first3d = first + batchSize - batchSize3d + 1,\r\n          last3d = last - batchSize + batchSize3d;\r\n\r\n      if (diff) {\r\n        wheel._first += diff;\r\n        wheel._last += diff;\r\n        wheel._current = index; // Generate items\r\n        //setTimeout(function () {\r\n\r\n        if (diff > 0) {\r\n          wheel._$scroller.append(generateItems(wheel, i, Math.max(last + 1, first + diff), last + diff));\r\n\r\n          $$1('.mbsc-sc-itm', wheel._$scroller).slice(0, Math.min(diff, last - first + 1)).remove(); // 3D\r\n\r\n          if (scroll3d) {\r\n            wheel._$3d.append(generateItems(wheel, i, Math.max(last3d + 1, first3d + diff), last3d + diff, true));\r\n\r\n            $$1('.mbsc-sc-itm', wheel._$3d).slice(0, Math.min(diff, last3d - first3d + 1)).attr('class', 'mbsc-sc-itm-del');\r\n          }\r\n        } else if (diff < 0) {\r\n          wheel._$scroller.prepend(generateItems(wheel, i, first + diff, Math.min(first - 1, last + diff)));\r\n\r\n          $$1('.mbsc-sc-itm', wheel._$scroller).slice(Math.max(diff, first - last - 1)).remove(); // 3D\r\n\r\n          if (scroll3d) {\r\n            wheel._$3d.prepend(generateItems(wheel, i, first3d + diff, Math.min(first3d - 1, last3d + diff), true));\r\n\r\n            $$1('.mbsc-sc-itm', wheel._$3d).slice(Math.max(diff, first3d - last3d - 1)).attr('class', 'mbsc-sc-itm-del');\r\n          }\r\n        }\r\n\r\n        wheel._margin += diff * itemHeight;\r\n\r\n        wheel._$scroller.css('margin-top', wheel._margin + 'px'); //}, 10);\r\n\r\n      }\r\n    }\r\n\r\n    function getValid(index, v, dir, dis) {\r\n      var counter,\r\n          wheel = wheels[index],\r\n          disabled = dis || wheel._disabled,\r\n          idx = getIndex(wheel, v),\r\n          val = getValue(wheel, idx),\r\n          v1 = val,\r\n          v2 = val,\r\n          dist1 = 0,\r\n          dist2 = 0; // TODO: what if all items are invalid\r\n\r\n      if (disabled[val] === true) {\r\n        counter = 0;\r\n\r\n        while (idx - dist1 >= wheel.min && disabled[v1] && counter < 100) {\r\n          counter++;\r\n          dist1++;\r\n          v1 = getValue(wheel, idx - dist1);\r\n        }\r\n\r\n        counter = 0;\r\n\r\n        while (idx + dist2 < wheel.max && disabled[v2] && counter < 100) {\r\n          counter++;\r\n          dist2++;\r\n          v2 = getValue(wheel, idx + dist2);\r\n        } // If we have direction (+/- or mouse wheel), the distance does not count\r\n\r\n\r\n        if ((dist2 < dist1 && dist2 && dir !== 2 || !dist1 || idx - dist1 < 0 || dir == 1) && !disabled[v2]) {\r\n          val = v2;\r\n        } else {\r\n          val = v1;\r\n        }\r\n      }\r\n\r\n      return val;\r\n    }\r\n\r\n    function scrollToPos(time, index, dir, manual, tap, noscroll, shouldFocus) {\r\n      var diff,\r\n          idx,\r\n          offset,\r\n          ret,\r\n          isVisible = that._isVisible;\r\n      isValidating = true;\r\n      ret = s.validate.call(el, {\r\n        values: tempWheelArray.slice(0),\r\n        index: index,\r\n        direction: dir\r\n      }, that) || {};\r\n      isValidating = false;\r\n\r\n      if (ret.valid) {\r\n        that._tempWheelArray = tempWheelArray = ret.valid.slice(0);\r\n      }\r\n\r\n      if (!noscroll) {\r\n        $$1.each(wheels, function (i, wheel) {\r\n          if (isVisible) {\r\n            // Enable all items\r\n            wheel._$markup.find('.mbsc-sc-itm-inv').removeClass('mbsc-sc-itm-inv mbsc-disabled');\r\n          }\r\n\r\n          wheel._disabled = {}; // Disable invalid items\r\n\r\n          if (ret.disabled && ret.disabled[i]) {\r\n            $$1.each(ret.disabled[i], function (j, v) {\r\n              wheel._disabled[v] = true;\r\n\r\n              if (isVisible) {\r\n                wheel._$markup.find('.mbsc-sc-itm[data-val=\"' + sanitize(v) + '\"]').addClass('mbsc-sc-itm-inv mbsc-disabled');\r\n              }\r\n            });\r\n          } // Get closest valid value\r\n\r\n\r\n          tempWheelArray[i] = wheel.multiple ? tempWheelArray[i] : getValid(i, tempWheelArray[i], dir);\r\n\r\n          if (isVisible) {\r\n            if (!wheel.multiple || index === undefined) {\r\n              wheel._$markup.find('.mbsc-sc-itm-sel').removeClass(selectedClass).removeAttr('aria-selected');\r\n            } // Get index of valid value\r\n\r\n\r\n            idx = getIndex(wheel, tempWheelArray[i]);\r\n            diff = idx - wheel._index + wheel._batch;\r\n\r\n            if (Math.abs(diff) > 2 * batchSize + 1) {\r\n              offset = diff + (2 * batchSize + 1) * (diff > 0 ? -1 : 1);\r\n              wheel._offset += offset;\r\n              wheel._margin -= offset * itemHeight;\r\n\r\n              wheel._refresh();\r\n            }\r\n\r\n            wheel._index = idx + wheel._batch;\r\n\r\n            if (wheel.multiple) {\r\n              // Add selected styling to selected elements in case of multiselect\r\n              if (index === undefined) {\r\n                for (var v in that._tempSelected[i]) {\r\n                  wheel._$markup.find('.mbsc-sc-itm[data-val=\"' + sanitize(v) + '\"]').addClass(selectedClass).attr('aria-selected', 'true');\r\n                }\r\n              }\r\n            } else {\r\n              // Mark element as aria selected\r\n              wheel._$markup.find('.mbsc-sc-itm[data-val=\"' + sanitize(tempWheelArray[i]) + '\"]').addClass('mbsc-sc-itm-sel').attr('aria-selected', 'true');\r\n            }\r\n\r\n            if (wheel._$active) {\r\n              wheel._$active.attr('tabindex', -1);\r\n            }\r\n\r\n            wheel._$active = wheel._$markup.find('.mbsc-sc-itm[data-index=\"' + wheel._index + '\"]').eq(scroll3d && wheel.multiple ? 1 : 0).attr('tabindex', 0);\r\n\r\n            if (shouldFocus && index === i && wheel._$active.length) {\r\n              wheel._$active[0].focus();\r\n\r\n              wheel._$scroller.parent().scrollTop(0);\r\n            } // Scroll to valid value\r\n\r\n\r\n            wheel._scroller.scroll(-(idx - wheel._offset + wheel._batch) * itemHeight, index === i || index === undefined ? time : animTime, tap);\r\n          }\r\n        });\r\n      }\r\n\r\n      trigger('onValidated', {\r\n        index: index,\r\n        time: time\r\n      }); // Get formatted value\r\n\r\n      that._tempValue = s.formatValue.call(el, tempWheelArray, that);\r\n\r\n      if (isVisible) {\r\n        that._updateHeader();\r\n      } // If in live mode, set and fill value on every move\r\n\r\n\r\n      if (that.live && shouldSet(index, noscroll)) {\r\n        that._hasValue = manual || that._hasValue;\r\n        setValue(manual, manual, 0, true);\r\n\r\n        if (manual) {\r\n          trigger('onSet', {\r\n            valueText: that._value\r\n          });\r\n        }\r\n      }\r\n\r\n      if (manual) {\r\n        trigger('onChange', {\r\n          index: index,\r\n          valueText: that._tempValue\r\n        });\r\n      }\r\n    }\r\n\r\n    function setWheelValue(wheel, i, idx, time, dir, tap, noscroll, shouldFocus) {\r\n      // Get the value at the given index\r\n      var value = getValue(wheel, idx);\r\n\r\n      if (value !== undefined) {\r\n        tempWheelArray[i] = value; // In case of circular wheels calculate the offset of the current batch\r\n\r\n        wheel._batch = wheel._array ? Math.floor(idx / wheel._length) * wheel._length : 0;\r\n        wheel._index = idx;\r\n        setTimeout(function () {\r\n          scrollToPos(time, i, dir, true, tap, noscroll, shouldFocus);\r\n        }, 10);\r\n      }\r\n    }\r\n\r\n    function setValue(fill, change, time, noscroll, temp) {\r\n      if (!noscroll) {\r\n        scrollToPos(time);\r\n      } else {\r\n        that._tempValue = s.formatValue.call(el, that._tempWheelArray, that);\r\n      }\r\n\r\n      if (!temp) {\r\n        that._wheelArray = [];\r\n\r\n        for (var i = 0; i < tempWheelArray.length; i++) {\r\n          // In case of multiple select wheel take the first selected value,\r\n          that._wheelArray[i] = wheels[i] && wheels[i].multiple ? Object.keys(that._tempSelected[i] || {})[0] : tempWheelArray[i];\r\n        }\r\n\r\n        that._value = that._hasValue ? that._tempValue : null;\r\n        that._selected = extend$1(true, {}, that._tempSelected);\r\n      }\r\n\r\n      if (fill) {\r\n        if (that._isInput) {\r\n          $elm.val(that._hasValue ? that._tempValue : '');\r\n        }\r\n\r\n        trigger('onFill', {\r\n          valueText: that._hasValue ? that._tempValue : '',\r\n          change: change\r\n        });\r\n\r\n        if (change) {\r\n          that._preventChange = true;\r\n          $elm.trigger('change');\r\n        }\r\n      }\r\n    } // Call the parent constructor\r\n\r\n\r\n    Frame.call(this, el, settings, true); // Public functions\r\n\r\n    /**\r\n     * Sets the value of the scroller.\r\n     * @param {Array} val - New value.\r\n     * @param {Boolean} [fill=false] - Set the value of the associated input element.\r\n     * @param {Boolean} [change=false] - Trigger change on the input element.\r\n     * @param {Boolean} [temp=false] - If true, then only set the temporary value (only scroll there but not set the value).\r\n     * @param {Number} [time=0] - Animation time in milliseconds.\r\n     */\r\n\r\n    that.setVal = that._setVal = function (val, fill, change, temp, time) {\r\n      that._hasValue = val !== null && val !== undefined;\r\n      that._tempWheelArray = tempWheelArray = $$1.isArray(val) ? val.slice(0) : s.parseValue.call(el, val, that) || [];\r\n      setValue(fill, change === undefined ? fill : change, time, false, temp);\r\n    };\r\n    /**\r\n     * Returns the selected value.\r\n     */\r\n\r\n\r\n    that.getVal = that._getVal = function (temp) {\r\n      var val = that._hasValue || temp ? that[temp ? '_tempValue' : '_value'] : null;\r\n      return isNumeric(val) ? +val : val;\r\n    };\r\n    /*\r\n     * Sets the wheel values (passed as an array).\r\n     */\r\n\r\n\r\n    that.setArrayVal = that.setVal;\r\n    /*\r\n     * Returns the selected wheel values as an array.\r\n     */\r\n\r\n    that.getArrayVal = function (temp) {\r\n      return temp ? that._tempWheelArray : that._wheelArray;\r\n    };\r\n\r\n    that.changeWheel = function (whls, time, manual) {\r\n      var i, w, ww;\r\n      $$1.each(whls, function (key, wheel) {\r\n        ww = wheelsMap[key]; // Check if wheel exists\r\n\r\n        if (ww) {\r\n          i = ww._nr;\r\n          w = initWheel(wheel, i, true);\r\n\r\n          if (that._isVisible) {\r\n            if (scroll3d) {\r\n              w._$3d.html(generateItems(w, i, w._first + batchSize - batchSize3d + 1, w._last - batchSize + batchSize3d, true));\r\n            }\r\n\r\n            w._$scroller.html(generateItems(w, i, w._first, w._last)).css('margin-top', w._margin + 'px');\r\n\r\n            w._refresh(isValidating);\r\n          }\r\n        }\r\n      });\r\n\r\n      if (that._isVisible && !that._isLiquid && !isValidating) {\r\n        that.position();\r\n      }\r\n\r\n      if (!isValidating) {\r\n        scrollToPos(time, undefined, undefined, manual);\r\n      }\r\n    };\r\n    /**\r\n     * Returns the closest valid value.\r\n     */\r\n\r\n\r\n    that.getValidValue = getValid; // Protected overrides \r\n\r\n    that._generateContent = function () {\r\n      var lbl,\r\n          maxPopupWidth = 0,\r\n          html = '',\r\n          style = scroll3d ? cssPrefix + 'transform: translateZ(' + (itemHeight * s.rows / 2 + 3) + 'px);' : '',\r\n          highlight = '<div class=\"mbsc-sc-whl-l\" style=\"' + style + 'height:' + itemHeight + 'px;margin-top:-' + (itemHeight / 2 + (s.selectedLineBorder || 0)) + 'px;\"></div>',\r\n          l = 0;\r\n      $$1.each(s.wheels, function (i, wg) {\r\n        html += '<div class=\"mbsc-w-p mbsc-sc-whl-gr-c' + (scroll3d ? ' mbsc-sc-whl-gr-3d-c' : '') + (s.showLabel ? ' mbsc-sc-lbl-v' : '') + '\">' + highlight + '<div class=\"mbsc-sc-whl-gr' + (scroll3d ? ' mbsc-sc-whl-gr-3d' : '') + (showScrollArrows ? ' mbsc-sc-cp' : '') + (s.width || s.maxWidth ? '\"' : '\" style=\"max-width:' + s.maxPopupWidth + 'px;\"') + '>';\r\n        $$1.each(wg, function (j, ww) {\r\n          // Wheels\r\n          that._tempSelected[l] = extend$1({}, that._selected[l]); // TODO: this should be done on initialization, not on show\r\n\r\n          var w = initWheel(ww, l);\r\n          wheels[l] = w;\r\n          maxPopupWidth += s.maxWidth ? s.maxWidth[l] || s.maxWidth : s.width ? s.width[l] || s.width : 0;\r\n          lbl = w.label !== undefined ? w.label : j;\r\n          html += '<div class=\"mbsc-sc-whl-w ' + (w.cssClass || '') + (w.multiple ? ' mbsc-sc-whl-multi' : '') + '\" style=\"' + (s.width ? 'width:' + (s.width[l] || s.width) + 'px;' : (s.minWidth ? 'min-width:' + (s.minWidth[l] || s.minWidth) + 'px;' : '') + (s.maxWidth ? 'max-width:' + (s.maxWidth[l] || s.maxWidth) + 'px;' : '')) + '\">' + (isPointer ? '<div class=\"mbsc-sc-bar-c\"><div class=\"mbsc-sc-bar\"></div></div>' : '') + // Scrollbar\r\n          '<div class=\"mbsc-sc-whl-o\" style=\"' + style + '\"></div>' + highlight + '<div aria-live=\"off\" aria-label=\"' + lbl + '\"' + (w.multiple ? ' aria-multiselectable=\"true\"' : '') + ' role=\"listbox\" data-index=\"' + l + '\" class=\"mbsc-sc-whl\"' + ' style=\"' + 'height:' + s.rows * itemHeight * (scroll3d ? 1.1 : 1) + 'px;\">' + (showScrollArrows ? '<div data-index=\"' + l + '\" data-step=\"1\" class=\"mbsc-sc-btn mbsc-sc-btn-plus ' + (s.btnPlusClass || '') + '\"></div>' + // + button\r\n          '<div data-index=\"' + l + '\" data-step=\"-1\" class=\"mbsc-sc-btn mbsc-sc-btn-minus ' + (s.btnMinusClass || '') + '\"></div>' : '') + // - button\r\n          '<div class=\"mbsc-sc-lbl\">' + lbl + '</div>' + // Wheel label\r\n          '<div class=\"mbsc-sc-whl-c\"' + ' style=\"height:' + itemHeight3d + 'px;margin-top:-' + (itemHeight3d / 2 + 1) + 'px;' + style + '\">' + '<div class=\"mbsc-sc-whl-sc\" style=\"top:' + (itemHeight3d - itemHeight) / 2 + 'px;\">'; // Create wheel values\r\n\r\n          html += generateItems(w, l, w._first, w._last) + '</div></div>';\r\n\r\n          if (scroll3d) {\r\n            html += '<div class=\"mbsc-sc-whl-3d\" style=\"height:' + itemHeight + 'px;margin-top:-' + itemHeight / 2 + 'px;\">';\r\n            html += generateItems(w, l, w._first + batchSize - batchSize3d + 1, w._last - batchSize + batchSize3d, true);\r\n            html += '</div>';\r\n          }\r\n\r\n          html += '</div></div>';\r\n          l++;\r\n        });\r\n        html += '</div></div>';\r\n      });\r\n\r\n      if (maxPopupWidth) {\r\n        s.maxPopupWidth = maxPopupWidth;\r\n      }\r\n\r\n      return html;\r\n    };\r\n\r\n    that._attachEvents = function ($markup) {\r\n      stepper = createStepper($$1('.mbsc-sc-btn', $markup), step, s.delay, isReadOnly, true);\r\n      $$1('.mbsc-sc-whl', $markup).on('keydown', onKeyDown).on('keyup', onKeyUp);\r\n    };\r\n\r\n    that._detachEvents = function () {\r\n      stepper.stop();\r\n\r\n      for (var i = 0; i < wheels.length; i++) {\r\n        wheels[i]._scroller.destroy();\r\n      }\r\n    };\r\n\r\n    that._markupReady = function ($m) {\r\n      $markup = $m;\r\n      $$1('.mbsc-sc-whl-w', $markup).each(function (i) {\r\n        var idx,\r\n            $wh = $$1(this),\r\n            wheel = wheels[i];\r\n        wheel._$markup = $wh;\r\n        wheel._$scroller = $$1('.mbsc-sc-whl-sc', this);\r\n        wheel._$3d = $$1('.mbsc-sc-whl-3d', this);\r\n        wheel._scroller = new ScrollViewBase(this, {\r\n          mousewheel: s.mousewheel,\r\n          moveElement: wheel._$scroller,\r\n          scrollbar: $$1('.mbsc-sc-bar-c', this),\r\n          initialPos: (wheel._first - wheel._index) * itemHeight,\r\n          contSize: s.rows * itemHeight,\r\n          snap: itemHeight,\r\n          minScroll: getMin(wheel),\r\n          maxScroll: getMax(wheel),\r\n          maxSnapScroll: batchSize,\r\n          prevDef: true,\r\n          stopProp: true,\r\n          timeUnit: 3,\r\n          easing: 'cubic-bezier(0.190, 1.000, 0.220, 1.000)',\r\n          sync: function sync(pos, time, easing) {\r\n            var timing = time ? cssPrefix + 'transform ' + Math.round(time) + 'ms ' + easing : '';\r\n\r\n            if (scroll3d) {\r\n              wheel._$3d[0].style[jsPrefix + 'Transition'] = timing;\r\n              wheel._$3d[0].style[jsPrefix + 'Transform'] = 'rotateX(' + -pos / itemHeight * scroll3dAngle + 'deg)';\r\n            }\r\n          },\r\n          onStart: function onStart(ev, inst) {\r\n            inst.settings.readonly = isReadOnly(i);\r\n          },\r\n          onGestureStart: function onGestureStart() {\r\n            $wh.addClass('mbsc-sc-whl-a mbsc-sc-whl-anim');\r\n            trigger('onWheelGestureStart', {\r\n              index: i\r\n            });\r\n          },\r\n          onGestureEnd: function onGestureEnd(ev) {\r\n            var dir = ev.direction == 90 ? 1 : 2,\r\n                time = ev.duration,\r\n                pos = ev.destinationY;\r\n            idx = Math.round(-pos / itemHeight) + wheel._offset;\r\n            setWheelValue(wheel, i, idx, time, dir);\r\n          },\r\n          onAnimationStart: function onAnimationStart() {\r\n            $wh.addClass('mbsc-sc-whl-anim');\r\n          },\r\n          onAnimationEnd: function onAnimationEnd() {\r\n            $wh.removeClass('mbsc-sc-whl-a mbsc-sc-whl-anim');\r\n            trigger('onWheelAnimationEnd', {\r\n              index: i\r\n            });\r\n\r\n            wheel._$3d.find('.mbsc-sc-itm-del').remove();\r\n          },\r\n          onMove: function onMove(ev) {\r\n            infinite(wheel, i, ev.posY);\r\n          },\r\n          onBtnTap: function onBtnTap(ev) {\r\n            onItemTap(i, $$1(ev.target));\r\n          }\r\n        });\r\n      });\r\n      scrollToPos();\r\n    };\r\n\r\n    that._fillValue = function () {\r\n      that._hasValue = true;\r\n      setValue(true, true, 0, true);\r\n    };\r\n\r\n    that._clearValue = function () {\r\n      $$1('.mbsc-sc-whl-multi .mbsc-sc-itm-sel', $markup).removeClass(selectedClass).removeAttr('aria-selected');\r\n    };\r\n\r\n    that._readValue = function () {\r\n      var v = $elm.val() || '',\r\n          l = 0;\r\n\r\n      if (v !== '') {\r\n        that._hasValue = true;\r\n      }\r\n\r\n      that._tempWheelArray = tempWheelArray = that._hasValue && that._wheelArray ? that._wheelArray.slice(0) : s.parseValue.call(el, v, that) || [];\r\n      that._tempSelected = extend$1(true, {}, that._selected);\r\n      $$1.each(s.wheels, function (i, wg) {\r\n        $$1.each(wg, function (j, w) {\r\n          // Wheels\r\n          wheels[l] = initWheel(w, l);\r\n          l++;\r\n        });\r\n      });\r\n      setValue(false, false, 0, true);\r\n      trigger('onRead');\r\n    };\r\n\r\n    that.__processSettings = function (resp) {\r\n      s = that.settings;\r\n      trigger = that.trigger;\r\n      lines = s.multiline;\r\n      selectedClass = 'mbsc-sc-itm-sel mbsc-ic mbsc-ic-' + s.checkIcon;\r\n      isPointer = !s.touchUi;\r\n\r\n      if (isPointer) {\r\n        // Settings that might be needed by the scroller preset as well\r\n        s.tapSelect = true;\r\n        s.circular = false;\r\n        s.rows = resp.rows || settings.rows || 7;\r\n      }\r\n    };\r\n\r\n    that.__init = function (newSettings) {\r\n      if (newSettings) {\r\n        // Reset wheel array in case of setting change,\r\n        // since it might affect the number of wheels\r\n        that._wheelArray = null;\r\n      }\r\n\r\n      wheels = [];\r\n      wheelsMap = {};\r\n      showScrollArrows = s.showScrollArrows;\r\n      scroll3d = s.scroll3d && has3d && !showScrollArrows && !isPointer && (s.theme == 'ios' || s.baseTheme == 'ios');\r\n      itemHeight = s.height;\r\n      itemHeight3d = scroll3d ? Math.round((itemHeight - (itemHeight * s.rows / 2 + 3) * 0.03) / 2) * 2 : itemHeight;\r\n      batchSize3d = Math.round(s.rows * 1.8);\r\n      scroll3dAngle = 360 / (batchSize3d * 2); // Ensure a minimum number of 3 items if clickpick buttons present\r\n\r\n      if (showScrollArrows) {\r\n        s.rows = Math.max(3, s.rows);\r\n      }\r\n    };\r\n\r\n    that._getItemValue = getItemValue; // Properties\r\n\r\n    that._tempSelected = {};\r\n    that._selected = {}; // Constructor\r\n\r\n    if (!inherit) {\r\n      that.init();\r\n    }\r\n  }; // Extend defaults\r\n\r\n  Scroller.prototype = {\r\n    _hasDef: true,\r\n    _hasTheme: true,\r\n    _hasLang: true,\r\n    _responsive: true,\r\n    _class: 'scroller',\r\n    _presets: presets,\r\n    _defaults: extend$1({}, Frame.prototype._defaults, {\r\n      // Options\r\n      minWidth: 80,\r\n      height: 40,\r\n      rows: 3,\r\n      multiline: 1,\r\n      delay: 200,\r\n      readonly: false,\r\n      showLabel: true,\r\n      setOnTap: false,\r\n      wheels: [],\r\n      preset: '',\r\n      speedUnit: 0.0012,\r\n      timeUnit: 0.08,\r\n      checkIcon: 'checkmark',\r\n      compClass: 'mbsc-sc',\r\n      validate: function validate() {},\r\n      formatValue: function formatValue(d) {\r\n        return d.join(' ');\r\n      },\r\n      parseValue: function parseValue(value, inst) {\r\n        var val = [],\r\n            ret = [],\r\n            i = 0,\r\n            found,\r\n            data;\r\n\r\n        if (value !== null && value !== undefined) {\r\n          val = (value + '').split(' ');\r\n        }\r\n\r\n        $$1.each(inst.settings.wheels, function (j, wg) {\r\n          $$1.each(wg, function (k, w) {\r\n            data = w.data; // Default to first wheel value if not found\r\n\r\n            found = inst._getItemValue(data[0]);\r\n            $$1.each(data, function (l, item) {\r\n              // Don't do strict comparison\r\n              if (val[i] == inst._getItemValue(item)) {\r\n                found = inst._getItemValue(item);\r\n                return false;\r\n              }\r\n            });\r\n            ret.push(found);\r\n            i++;\r\n          });\r\n        });\r\n        return ret;\r\n      }\r\n    })\r\n  };\r\n  classes.Scroller = Scroller;\r\n\r\n  var defaults$1 = {\r\n    separator: ' ',\r\n    // Localization\r\n    dateFormat: 'mm/dd/yy',\r\n    dateDisplay: 'MMddyy',\r\n    timeFormat: 'h:ii A',\r\n    dayText: 'Day',\r\n    monthText: 'Month',\r\n    yearText: 'Year',\r\n    hourText: 'Hours',\r\n    minuteText: 'Minutes',\r\n    ampmText: '&nbsp;',\r\n    secText: 'Seconds',\r\n    nowText: 'Now',\r\n    todayText: 'Today'\r\n  }; // --- TRIAL SERVER CODE END ---\r\n\r\n  var DateTime = function DateTime(inst) {\r\n    function convertRanges(arr) {\r\n      var i,\r\n          v,\r\n          start,\r\n          end,\r\n          ret = [];\r\n\r\n      if (arr) {\r\n        for (i = 0; i < arr.length; i++) {\r\n          v = arr[i]; // Check if it's a range, but skip time-only ranges\r\n\r\n          if (v.start && v.end && !ISO_8601_TIME.test(v.start)) {\r\n            start = new Date(makeDate(v.start, format, s));\r\n            end = new Date(makeDate(v.end, format, s));\r\n\r\n            while (start <= end) {\r\n              ret.push(adjustedDate(start.getFullYear(), start.getMonth(), start.getDate()));\r\n              start.setDate(start.getDate() + 1);\r\n            }\r\n          } else {\r\n            ret.push(v);\r\n          }\r\n        }\r\n\r\n        return ret;\r\n      }\r\n\r\n      return arr;\r\n    }\r\n\r\n    function step(v, st, min, max) {\r\n      return Math.min(max, Math.floor(v / st) * st + min);\r\n    }\r\n\r\n    function getMax(step, min, max) {\r\n      return Math.floor((max - min) / step) * step + min;\r\n    }\r\n\r\n    function getYear(d) {\r\n      return s.getYear(d);\r\n    }\r\n\r\n    function getMonth(d) {\r\n      return s.getMonth(d);\r\n    }\r\n\r\n    function getDay(d) {\r\n      return s.getDay(d);\r\n    }\r\n\r\n    function getHours(d) {\r\n      var hour = d.getHours();\r\n      hour = hasAmPm && hour >= 12 ? hour - 12 : hour;\r\n      return step(hour, stepHour, minHour, maxHour);\r\n    }\r\n\r\n    function getMinutes(d) {\r\n      return step(d.getMinutes(), stepMinute, minMinute, maxMinute);\r\n    }\r\n\r\n    function getSeconds(d) {\r\n      return step(d.getSeconds(), stepSecond, minSecond, maxSecond);\r\n    }\r\n\r\n    function getMilliseconds(d) {\r\n      return d.getMilliseconds();\r\n    }\r\n\r\n    function getAmPm(d) {\r\n      return d.getHours() > 11 ? 1 : 0;\r\n    } // --- TRIAL SERVER CODE START ---\r\n\r\n\r\n    function getFullDate(d) {\r\n      return d.getFullYear() + '-' + pad(d.getMonth() + 1) + '-' + pad(d.getDate());\r\n    } // --- TRIAL SERVER CODE END ---\r\n\r\n\r\n    function getFullTime(d) {\r\n      return step(Math.round((d.getTime() - new Date(d).setHours(0, 0, 0, 0)) / 1000), timeStep || 1, 0, 86400);\r\n    }\r\n\r\n    function getArrayPart(data, part, d, def) {\r\n      var ret;\r\n\r\n      if (wheelOrder[part] !== undefined) {\r\n        ret = +data[wheelOrder[part]];\r\n\r\n        if (!isNaN(ret)) {\r\n          return ret;\r\n        }\r\n      }\r\n\r\n      if (d) {\r\n        return getDatePart[part](d);\r\n      }\r\n\r\n      if (innerValues[part] !== undefined) {\r\n        return innerValues[part];\r\n      }\r\n\r\n      return getDatePart[part](def);\r\n    }\r\n\r\n    function getDate(data) {\r\n      var d,\r\n          def = new Date(new Date().setHours(0, 0, 0, 0));\r\n\r\n      if (data === null) {\r\n        return data;\r\n      }\r\n\r\n      if (wheelOrder.dd !== undefined) {\r\n        d = data[wheelOrder.dd].split('-');\r\n        d = new Date(d[0], d[1] - 1, d[2]);\r\n      }\r\n\r\n      if (wheelOrder.tt !== undefined) {\r\n        d = d || def;\r\n        d = new Date(d.getTime() + data[wheelOrder.tt] % 86400 * 1000);\r\n      }\r\n\r\n      var year = getArrayPart(data, 'y', d, def),\r\n          month = getArrayPart(data, 'm', d, def),\r\n          day = Math.min(getArrayPart(data, 'd', d, def), s.getMaxDayOfMonth(year, month)),\r\n          hour = getArrayPart(data, 'h', d, def);\r\n      return s.getDate(year, month, day, hasAmPm && getArrayPart(data, 'a', d, def) ? hour + 12 : hour, getArrayPart(data, 'i', d, def), getArrayPart(data, 's', d, def), getArrayPart(data, 'u', d, def));\r\n    }\r\n\r\n    function getArray(d, fillInner) {\r\n      var i,\r\n          part,\r\n          parts = ['y', 'm', 'd', 'a', 'h', 'i', 's', 'u', 'dd', 'tt'],\r\n          ret = [];\r\n\r\n      if (d === null || d === undefined) {\r\n        return d;\r\n      }\r\n\r\n      for (i = 0; i < parts.length; i++) {\r\n        part = parts[i];\r\n\r\n        if (wheelOrder[part] !== undefined) {\r\n          ret[wheelOrder[part]] = getDatePart[part](d);\r\n        }\r\n\r\n        if (fillInner) {\r\n          innerValues[part] = getDatePart[part](d);\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    } // --- TRIAL SERVER CODE START ---\r\n\r\n\r\n    function getDateIndex(d, hasDay) {\r\n      return hasDay ? // Number of days since 1970-01-01\r\n      Math.floor(new Date(d) / 8.64e7) : // Number of month since 1970-01-01\r\n      d.getMonth() + 12 * (d.getFullYear() - 1970);\r\n    }\r\n    /*\r\n    function getYearValue(i) {\r\n        return {\r\n            value: i,\r\n            display: (/yy/i.test(dateDisplay) ? i : (i + '').substr(2, 2)) + (s.yearSuffix || '')\r\n        };\r\n    }\r\n      function getYearIndex(v) {\r\n        return v;\r\n    }\r\n      function getDateWheel(template) {\r\n        var hasDay = /d/i.test(template);\r\n        return {\r\n            label: '',\r\n            cssClass: 'mbsc-dt-whl-date',\r\n            min: minDate ? getDateIndex(getFullDate(minDate), hasDay) : undefined,\r\n            max: maxDate ? getDateIndex(getFullDate(maxDate), hasDay) : undefined,\r\n            data: function (i) {\r\n                var today = new Date(new Date().setHours(0, 0, 0, 0)),\r\n                    d = hasDay ? new Date(i * 8.64e7) : new Date(1970, i, 1);\r\n                  if (hasDay) {\r\n                    d = new Date(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate());\r\n                }\r\n                  return {\r\n                    invalid: hasDay && !isValid(d, true),\r\n                    value: getFullDate(d),\r\n                    display: today.getTime() == d.getTime() ? s.todayText : formatDate(template, d, s)\r\n                };\r\n            },\r\n            getIndex: function (v) {\r\n                return getDateIndex(v, hasDay);\r\n            }\r\n        };\r\n    }\r\n      function getTimeWheel(template) {\r\n        var i,\r\n            step,\r\n            time,\r\n            values = [];\r\n          if (/s/i.test(template)) {\r\n            step = stepSecond;\r\n        } else if (/i/i.test(template)) {\r\n            step = stepMinute * 60;\r\n        } else if (/h/i.test(template)) {\r\n            step = stepHour * 3600;\r\n        }\r\n          timeStep = steps.tt = step;\r\n          for (i = 0; i < 86400; i += step) {\r\n            time = new Date(new Date().setHours(0, 0, 0, 0) + i * 1000);\r\n            values.push({\r\n                value: i,\r\n                display: formatDate(template, time, s)\r\n            });\r\n        }\r\n          return {\r\n            label: '',\r\n            cssClass: 'mbsc-dt-whl-time',\r\n            data: values\r\n        };\r\n    }\r\n      function getWheels() {\r\n        var dateParts,\r\n            timeParts,\r\n            template,\r\n            i,\r\n            j,\r\n            types,\r\n            values,\r\n            monthStr,\r\n            nr = 0,\r\n            wheels = [],\r\n            dateGroup = [],\r\n            timeGroup = [];\r\n          if (/date/i.test(preset)) {\r\n            dateParts = dateWheels.split(/\\|/.test(dateWheels) ? '|' : '');\r\n              for (i = 0; i < dateParts.length; i++) {\r\n                template = dateParts[i];\r\n                types = 0;\r\n                if (template.length) {\r\n                    // If contains different characters\r\n                    if (/y/i.test(template)) {\r\n                        isoParts.y = 1;\r\n                        types++;\r\n                    }\r\n                      if (/m/i.test(template)) {\r\n                        isoParts.y = 1;\r\n                        isoParts.m = 1;\r\n                        types++;\r\n                    }\r\n                      if (/d/i.test(template)) {\r\n                        isoParts.y = 1;\r\n                        isoParts.m = 1;\r\n                        isoParts.d = 1;\r\n                        types++;\r\n                    }\r\n                      if (types > 1 && wheelOrder.dd === undefined) {\r\n                        wheelOrder.dd = nr;\r\n                        nr++;\r\n                        dateGroup.push(getDateWheel(template));\r\n                        timeGroup = dateGroup; // TODO ???\r\n                        oneDateWheel = true;\r\n                    } else if (/y/i.test(template) && wheelOrder.y === undefined) {\r\n                        wheelOrder.y = nr;\r\n                        nr++;\r\n                          // Year wheel\r\n                        dateGroup.push({\r\n                            cssClass: 'mbsc-dt-whl-y',\r\n                            label: s.yearText,\r\n                            min: minDate ? s.getYear(minDate) : undefined,\r\n                            max: maxDate ? s.getYear(maxDate) : undefined,\r\n                            data: getYearValue,\r\n                            getIndex: getYearIndex\r\n                        });\r\n                    } else if (/m/i.test(template) && wheelOrder.m === undefined) {\r\n                        // Month wheel\r\n                        wheelOrder.m = nr;\r\n                        values = [];\r\n                        nr++;\r\n                          for (j = 0; j < 12; j++) {\r\n                            monthStr = dateDisplay\r\n                                .replace(/[dy|]/gi, '')\r\n                                .replace(/mm/, pad(j + 1) + (s.monthSuffix || ''))\r\n                                .replace(/m/, j + 1 + (s.monthSuffix || ''));\r\n                              values.push({\r\n                                value: j,\r\n                                display: /MM/.test(monthStr) ?\r\n                                    monthStr.replace(/MM/, '<span class=\"mbsc-dt-month\">' + s.monthNames[j] + '</span>') : monthStr.replace(/M/, '<span class=\"mbsc-dt-month\">' + s.monthNamesShort[j] + '</span>')\r\n                            });\r\n                        }\r\n                          dateGroup.push({\r\n                            cssClass: 'mbsc-dt-whl-m',\r\n                            label: s.monthText,\r\n                            data: values\r\n                        });\r\n                    } else if (/d/i.test(template) && wheelOrder.d === undefined) {\r\n                        // Day wheel\r\n                        wheelOrder.d = nr;\r\n                        values = [];\r\n                        nr++;\r\n                          for (j = 1; j < 32; j++) {\r\n                            values.push({\r\n                                value: j,\r\n                                display: (/dd/i.test(dateDisplay) ? pad(j) : j) + (s.daySuffix || '')\r\n                            });\r\n                        }\r\n                          dateGroup.push({\r\n                            cssClass: 'mbsc-dt-whl-d',\r\n                            label: s.dayText,\r\n                            data: values\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n              wheels.push(dateGroup);\r\n        }\r\n          if (/time/i.test(preset)) {\r\n            timeParts = timeWheels.split(/\\|/.test(timeWheels) ? '|' : '');\r\n              for (i = 0; i < timeParts.length; i++) {\r\n                template = timeParts[i];\r\n                types = 0;\r\n                if (template.length) {\r\n                    // If contains different characters\r\n                    if (/h/i.test(template)) {\r\n                        isoParts.h = 1;\r\n                        types++;\r\n                    }\r\n                      if (/i/i.test(template)) {\r\n                        isoParts.i = 1;\r\n                        types++;\r\n                    }\r\n                      if (/s/i.test(template)) {\r\n                        isoParts.s = 1;\r\n                        types++;\r\n                    }\r\n                      if (/a/i.test(template)) {\r\n                        types++;\r\n                    }\r\n                }\r\n                  if (types > 1 && wheelOrder.tt === undefined) {\r\n                    wheelOrder.tt = nr;\r\n                    nr++;\r\n                    timeGroup.push(getTimeWheel(template));\r\n                } else if (/h/i.test(template) && wheelOrder.h === undefined) {\r\n                    // Hours wheel\r\n                    values = [];\r\n                    wheelOrder.h = nr;\r\n                    isoParts.h = 1;\r\n                    nr++;\r\n                      for (j = minHour; j < (hasAmPm ? 12 : 24); j += stepHour) {\r\n                        values.push({\r\n                            value: j,\r\n                            display: hasAmPm && j === 0 ? 12 : /hh/i.test(timeDisplay) ? pad(j) : j\r\n                        });\r\n                    }\r\n                      timeGroup.push({\r\n                        cssClass: 'mbsc-dt-whl-h',\r\n                        label: s.hourText,\r\n                        data: values\r\n                    });\r\n                } else if (/i/i.test(template) && wheelOrder.i === undefined) {\r\n                    // Minutes wheel\r\n                    values = [];\r\n                    wheelOrder.i = nr;\r\n                    isoParts.i = 1;\r\n                    nr++;\r\n                      for (j = minMinute; j < 60; j += stepMinute) {\r\n                        values.push({\r\n                            value: j,\r\n                            display: /ii/i.test(timeDisplay) ? pad(j) : j\r\n                        });\r\n                    }\r\n                      timeGroup.push({\r\n                        cssClass: 'mbsc-dt-whl-i',\r\n                        label: s.minuteText,\r\n                        data: values\r\n                    });\r\n                } else if (/s/i.test(template) && wheelOrder.s === undefined) {\r\n                    // Seconds wheel\r\n                    values = [];\r\n                    wheelOrder.s = nr;\r\n                    isoParts.s = 1;\r\n                    nr++;\r\n                      for (j = minSecond; j < 60; j += stepSecond) {\r\n                        values.push({\r\n                            value: j,\r\n                            display: /ss/i.test(timeDisplay) ? pad(j) : j\r\n                        });\r\n                    }\r\n                      timeGroup.push({\r\n                        cssClass: 'mbsc-dt-whl-s',\r\n                        label: s.secText,\r\n                        data: values\r\n                    });\r\n                } else if (/a/i.test(template) && wheelOrder.a === undefined) {\r\n                    wheelOrder.a = nr;\r\n                    nr++;\r\n                      timeGroup.push({\r\n                        cssClass: 'mbsc-dt-whl-a',\r\n                        label: s.ampmText,\r\n                        data: /A/.test(template) ? [{\r\n                            value: 0,\r\n                            display: s.amText.toUpperCase()\r\n                        }, {\r\n                            value: 1,\r\n                            display: s.pmText.toUpperCase()\r\n                        }] : [{\r\n                            value: 0,\r\n                            display: s.amText\r\n                        }, {\r\n                            value: 1,\r\n                            display: s.pmText\r\n                        }]\r\n                    });\r\n                }\r\n            }\r\n              if (timeGroup != dateGroup) {\r\n                wheels.push(timeGroup);\r\n            }\r\n        }\r\n          return wheels;\r\n    }\r\n    */\r\n\r\n\r\n    function getHtml5Options($elm) {\r\n      var format,\r\n          min,\r\n          max,\r\n          ret = {}; // Force format for html5 date inputs (experimental)\r\n\r\n      if ($elm.is('input')) {\r\n        switch ($elm.attr('type')) {\r\n          case 'date':\r\n            format = 'yy-mm-dd';\r\n            break;\r\n\r\n          case 'datetime':\r\n            format = 'yy-mm-ddTHH:ii:ssZ';\r\n            break;\r\n\r\n          case 'datetime-local':\r\n            format = 'yy-mm-ddTHH:ii:ss';\r\n            break;\r\n\r\n          case 'month':\r\n            format = 'yy-mm';\r\n            ret.dateOrder = 'mmyy';\r\n            break;\r\n\r\n          case 'time':\r\n            format = 'HH:ii:ss';\r\n            break;\r\n        }\r\n\r\n        ret.format = format; // Check for min/max attributes\r\n\r\n        min = $elm.attr('min');\r\n        max = $elm.attr('max');\r\n\r\n        if (min && min != 'undefined') {\r\n          ret.min = parseDate(format, min);\r\n        }\r\n\r\n        if (max && max != 'undefined') {\r\n          ret.max = parseDate(format, max);\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    }\r\n\r\n    function getClosestValidDate(d, dir) {\r\n      var next,\r\n          prev,\r\n          nextValid = false,\r\n          prevValid = false,\r\n          up = 0,\r\n          down = 0,\r\n          // Normalize min and max dates for comparing later (set default values where there are no values from wheels)\r\n      mind = minDate ? getDate(getArray(minDate)) : -Infinity,\r\n          maxd = maxDate ? getDate(getArray(maxDate)) : Infinity;\r\n\r\n      if (isValid(d)) {\r\n        return d;\r\n      }\r\n\r\n      if (d < mind) {\r\n        d = mind;\r\n      }\r\n\r\n      if (d > maxd) {\r\n        d = maxd;\r\n      }\r\n\r\n      next = d;\r\n      prev = d;\r\n\r\n      if (dir !== 2) {\r\n        nextValid = isValid(next, true);\r\n\r\n        while (!nextValid && next < maxd && up < 100) {\r\n          next = new Date(next.getTime() + 1000 * 60 * 60 * 24);\r\n          nextValid = isValid(next, true);\r\n          up++;\r\n        }\r\n      }\r\n\r\n      if (dir !== 1) {\r\n        prevValid = isValid(prev, true);\r\n\r\n        while (!prevValid && prev > mind && down < 100) {\r\n          prev = new Date(prev.getTime() - 1000 * 60 * 60 * 24);\r\n          prevValid = isValid(prev, true);\r\n          down++;\r\n        }\r\n      }\r\n\r\n      if (dir === 1 && nextValid) {\r\n        return next;\r\n      }\r\n\r\n      if (dir === 2 && prevValid) {\r\n        return prev;\r\n      }\r\n\r\n      if (isSameMonth(d, next)) {\r\n        return next;\r\n      }\r\n\r\n      if (isSameMonth(d, prev)) {\r\n        return prev;\r\n      }\r\n\r\n      return down <= up && prevValid ? prev : next;\r\n    }\r\n\r\n    function isSameMonth(d1, d2) {\r\n      return s.getYear(d1) === s.getYear(d2) && s.getMonth(d1) === s.getMonth(d2);\r\n    }\r\n\r\n    function isValid(d, skip) {\r\n      if (!skip && d < minDate) {\r\n        return false;\r\n      }\r\n\r\n      if (!skip && d > maxDate) {\r\n        return false;\r\n      }\r\n\r\n      if (isInObj(d, valid)) {\r\n        return true;\r\n      }\r\n\r\n      if (isInObj(d, invalid)) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    function isInObj(d, obj) {\r\n      var curr, j, v, val;\r\n\r\n      if (obj) {\r\n        for (j = 0; j < obj.length; j++) {\r\n          curr = obj[j];\r\n          val = curr.d || curr;\r\n          v = val + '';\r\n\r\n          if (!curr.start) {\r\n            if (DAY_OF_WEEK.test(v)) {\r\n              // Day of week\r\n              v = +v.replace('w', '');\r\n\r\n              if (v == d.getDay()) {\r\n                return true;\r\n              }\r\n            } else if (DAY_OF_MONTH.test(v)) {\r\n              // Day of month: '2' or '12/24'\r\n              v = v.split('/');\r\n\r\n              if (v[1]) {\r\n                if (v[0] - 1 == d.getMonth() && v[1] == d.getDate()) {\r\n                  return true;\r\n                }\r\n              } else if (v[0] == d.getDate()) {\r\n                return true;\r\n              }\r\n            } else {\r\n              // Exact date\r\n              curr = makeDate(val, format, s);\r\n\r\n              if (d.getFullYear() == curr.getFullYear() && d.getMonth() == curr.getMonth() && d.getDate() == curr.getDate()) {\r\n                return true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    function validateDates(obj, y, m, first, maxdays, invalids, val) {\r\n      var d, dd, j, k, v;\r\n\r\n      if (obj) {\r\n        for (j = 0; j < obj.length; j++) {\r\n          d = obj[j];\r\n          dd = d.d || d;\r\n          v = dd + '';\r\n\r\n          if (!d.start) {\r\n            if (DAY_OF_WEEK.test(v)) {\r\n              // Day of week\r\n              v = +v.replace('w', '');\r\n\r\n              for (k = v - first; k < maxdays; k += 7) {\r\n                if (k >= 0) {\r\n                  invalids[k + 1] = val;\r\n                }\r\n              }\r\n            } else if (DAY_OF_MONTH.test(v)) {\r\n              // Day of month: '2' or '12/24'\r\n              v = v.split('/');\r\n\r\n              if (v[1]) {\r\n                if (v[0] - 1 == m) {\r\n                  invalids[v[1]] = val;\r\n                }\r\n              } else {\r\n                invalids[v[0]] = val;\r\n              }\r\n            } else {\r\n              // Exact date\r\n              d = makeDate(dd, format, s);\r\n\r\n              if (s.getYear(d) == y && s.getMonth(d) == m) {\r\n                invalids[s.getDay(d)] = val;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function validateTimes(vobj, index, v, y, m, d, invalids, valid) {\r\n      var add,\r\n          all,\r\n          dd,\r\n          hours1,\r\n          hours2,\r\n          hours3,\r\n          i,\r\n          i1,\r\n          i2,\r\n          j,\r\n          obj,\r\n          parts1,\r\n          parts2,\r\n          prop1,\r\n          prop2,\r\n          remove,\r\n          ss,\r\n          str,\r\n          v1,\r\n          v2,\r\n          spec = {},\r\n          day = s.getDate(y, m, d),\r\n          w = ['a', 'h', 'i', 's'];\r\n\r\n      if (vobj) {\r\n        // Check if rules apply to the selected date\r\n        for (i = 0; i < vobj.length; i++) {\r\n          obj = vobj[i];\r\n\r\n          if (obj.start) {\r\n            obj.apply = false;\r\n            dd = obj.d;\r\n            ss = dd + '';\r\n            str = ss.split('/');\r\n\r\n            if (dd && (dd.getTime && y == s.getYear(dd) && m == s.getMonth(dd) && d == s.getDay(dd) || // Exact date\r\n            !DAY_OF_WEEK.test(ss) && (str[1] && d == str[1] && m == str[0] - 1 || !str[1] && d == str[0]) || // Day of month\r\n            DAY_OF_WEEK.test(ss) && day.getDay() == +ss.replace('w', '') // Day of week\r\n            )) {\r\n              obj.apply = true;\r\n              spec[day] = true; // Prevent applying generic rule on day, if specific exists\r\n            }\r\n          }\r\n        } // Apply rules\r\n\r\n\r\n        for (i = 0; i < vobj.length; i++) {\r\n          obj = vobj[i];\r\n          add = 0;\r\n          remove = 0;\r\n          i1 = mins[v];\r\n          i2 = maxs[v];\r\n          prop1 = true;\r\n          prop2 = true;\r\n          all = false;\r\n\r\n          if (obj.start && (obj.apply || !obj.d && !spec[day])) {\r\n            // Define time parts\r\n            parts1 = obj.start.split(':');\r\n            parts2 = obj.end.split(':');\r\n\r\n            for (j = 0; j < 3; j++) {\r\n              if (parts1[j] === undefined) {\r\n                parts1[j] = 0;\r\n              }\r\n\r\n              if (parts2[j] === undefined) {\r\n                parts2[j] = 59;\r\n              }\r\n\r\n              parts1[j] = +parts1[j];\r\n              parts2[j] = +parts2[j];\r\n            }\r\n\r\n            if (v == 'tt') {\r\n              // Wheel containing full time\r\n              i1 = step(Math.round((new Date(day).setHours(parts1[0], parts1[1], parts1[2]) - new Date(day).setHours(0, 0, 0, 0)) / 1000), timeStep, 0, 86400);\r\n              i2 = step(Math.round((new Date(day).setHours(parts2[0], parts2[1], parts2[2]) - new Date(day).setHours(0, 0, 0, 0)) / 1000), timeStep, 0, 86400);\r\n            } else {\r\n              parts1.unshift(parts1[0] > 11 ? 1 : 0);\r\n              parts2.unshift(parts2[0] > 11 ? 1 : 0);\r\n\r\n              if (hasAmPm) {\r\n                if (parts1[1] >= 12) {\r\n                  parts1[1] = parts1[1] - 12;\r\n                }\r\n\r\n                if (parts2[1] >= 12) {\r\n                  parts2[1] = parts2[1] - 12;\r\n                }\r\n              } // Look behind\r\n\r\n\r\n              for (j = 0; j < index; j++) {\r\n                if (validValues[j] !== undefined) {\r\n                  v1 = step(parts1[j], steps[w[j]], mins[w[j]], maxs[w[j]]);\r\n                  v2 = step(parts2[j], steps[w[j]], mins[w[j]], maxs[w[j]]);\r\n                  hours1 = 0;\r\n                  hours2 = 0;\r\n                  hours3 = 0;\r\n\r\n                  if (hasAmPm && j == 1) {\r\n                    hours1 = parts1[0] ? 12 : 0;\r\n                    hours2 = parts2[0] ? 12 : 0;\r\n                    hours3 = validValues[0] ? 12 : 0;\r\n                  }\r\n\r\n                  if (!prop1) {\r\n                    v1 = 0;\r\n                  }\r\n\r\n                  if (!prop2) {\r\n                    v2 = maxs[w[j]];\r\n                  }\r\n\r\n                  if ((prop1 || prop2) && v1 + hours1 < validValues[j] + hours3 && validValues[j] + hours3 < v2 + hours2) {\r\n                    all = true;\r\n                  }\r\n\r\n                  if (validValues[j] != v1) {\r\n                    prop1 = false;\r\n                  }\r\n\r\n                  if (validValues[j] != v2) {\r\n                    prop2 = false;\r\n                  }\r\n                }\r\n              } // Look ahead\r\n\r\n\r\n              if (!valid) {\r\n                for (j = index + 1; j < 4; j++) {\r\n                  if (parts1[j] > 0) {\r\n                    add = steps[v];\r\n                  }\r\n\r\n                  if (parts2[j] < maxs[w[j]]) {\r\n                    remove = steps[v];\r\n                  }\r\n                }\r\n              }\r\n\r\n              if (!all) {\r\n                // Calculate min and max values\r\n                v1 = step(parts1[index], steps[v], mins[v], maxs[v]) + add;\r\n                v2 = step(parts2[index], steps[v], mins[v], maxs[v]) - remove;\r\n\r\n                if (prop1) {\r\n                  i1 = v1;\r\n                }\r\n\r\n                if (prop2) {\r\n                  i2 = v2;\r\n                }\r\n              }\r\n            } // Disable values\r\n\r\n\r\n            if (prop1 || prop2 || all) {\r\n              for (j = i1; j <= i2; j += steps[v]) {\r\n                invalids[j] = !valid;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } // --- TRIAL SERVER CODE START ---\r\n\r\n\r\n    var timeStep,\r\n        oneDateWheel,\r\n        wheels,\r\n        wheelOrder = {},\r\n        innerValues = {},\r\n        isoParts = {},\r\n        validValues = [],\r\n        html5def = getHtml5Options($$1(this)),\r\n        orig = extend$1({}, inst.settings),\r\n        calendarSystem = calendars[orig.calendarSystem],\r\n        s = extend$1(inst.settings, dateTimeDefaults, calendarSystem, defaults$1, html5def, orig),\r\n        preset = s.preset,\r\n        displayFormat = preset == 'datetime' ? s.dateFormat + s.separator + s.timeFormat : preset == 'time' ? s.timeFormat : s.dateFormat,\r\n        format = html5def.format || displayFormat,\r\n        dateWheels = s.dateWheels || s.dateFormat,\r\n        timeWheels = s.timeWheels || s.timeFormat,\r\n        //dateWheels = '|D M d|', // TODO settings\r\n    //timeWheels = '|h|ii|A|',\r\n    dateDisplay = s.dateWheels || s.dateDisplay,\r\n        timeDisplay = timeWheels,\r\n        baseTheme = s.baseTheme || s.theme,\r\n        invalid = convertRanges(s.invalid),\r\n        valid = convertRanges(s.valid),\r\n        minDate = makeDate(s.min, format, s),\r\n        maxDate = makeDate(s.max, format, s),\r\n        hasTime = /time/i.test(preset),\r\n        hasAmPm = /h/.test(timeDisplay),\r\n        genDayNames = /D/.test(dateDisplay),\r\n        stepParts = s.steps || {},\r\n        stepHour = stepParts.hour || s.stepHour || 1,\r\n        stepMinute = stepParts.minute || s.stepMinute || 1,\r\n        stepSecond = stepParts.second || s.stepSecond || 1,\r\n        zeroBased = stepParts.zeroBased,\r\n        minHour = zeroBased || !minDate ? 0 : minDate.getHours() % stepHour,\r\n        minMinute = zeroBased || !minDate ? 0 : minDate.getMinutes() % stepMinute,\r\n        minSecond = zeroBased || !minDate ? 0 : minDate.getSeconds() % stepSecond,\r\n        maxHour = getMax(stepHour, minHour, hasAmPm ? 11 : 23),\r\n        maxMinute = getMax(stepMinute, minMinute, 59),\r\n        maxSecond = getMax(stepMinute, minMinute, 59),\r\n        mins = {\r\n      y: minDate ? minDate.getFullYear() : -Infinity,\r\n      m: 0,\r\n      d: 1,\r\n      h: minHour,\r\n      i: minMinute,\r\n      s: minSecond,\r\n      a: 0,\r\n      tt: 0\r\n    },\r\n        maxs = {\r\n      y: maxDate ? maxDate.getFullYear() : Infinity,\r\n      m: 11,\r\n      d: 31,\r\n      h: maxHour,\r\n      i: maxMinute,\r\n      s: maxSecond,\r\n      a: 1,\r\n      tt: 86400\r\n    },\r\n        steps = {\r\n      y: 1,\r\n      m: 1,\r\n      d: 1,\r\n      h: stepHour,\r\n      i: stepMinute,\r\n      s: stepSecond,\r\n      a: 1,\r\n      tt: 1\r\n    },\r\n        widths = {\r\n      bootstrap: 46,\r\n      ios: 50,\r\n      material: 46,\r\n      mobiscroll: 46,\r\n      windows: 50\r\n    },\r\n        getDatePart = {\r\n      y: getYear,\r\n      m: getMonth,\r\n      d: getDay,\r\n      h: getHours,\r\n      i: getMinutes,\r\n      s: getSeconds,\r\n      u: getMilliseconds,\r\n      a: getAmPm,\r\n      dd: getFullDate,\r\n      tt: getFullTime\r\n    }; // --- TRIAL SERVER CODE END ---\r\n    // Extended methods\r\n    // ---\r\n\r\n    inst.getVal = function (temp) {\r\n      return inst._hasValue || temp ? returnDate(getDate(inst.getArrayVal(temp)), s, format) : null;\r\n    };\r\n    /**\r\n     * Returns the selected date.\r\n     *\r\n     * @param {Boolean} [temp=false] If true, return the currently shown date on the picker, otherwise the last selected one.\r\n     * @return {Date}\r\n     */\r\n\r\n\r\n    inst.getDate = function (temp) {\r\n      return inst._hasValue || temp ? getDate(inst.getArrayVal(temp)) : null;\r\n    };\r\n    /**\r\n     * Sets the selected date\r\n     *\r\n     * @param {Date} d Date to select.\r\n     * @param {Boolean} [fill=false] Also set the value of the associated input element. Default is true.\r\n     * @param {Number} [time=0] Animation time to scroll to the selected date.\r\n     * @param {Boolean} [temp=false] Set temporary value only.\r\n     * @param {Boolean} [change=fill] Trigger change on input element.\r\n     */\r\n\r\n\r\n    inst.setDate = function (d, fill, time, temp, change) {\r\n      inst.setArrayVal(getArray(d, true), fill, change, temp, time);\r\n    }; // ---\r\n    // Initializations\r\n    // ---\r\n\r\n    /*\r\n    wheels = getWheels();\r\n      s.isoParts = isoParts;\r\n    */\r\n    // --- REMOTE TRIAL CODE START ---\r\n\r\n\r\n    wheelOrder = inst.remote.datetime.wheelOrder;\r\n    oneDateWheel = inst.remote.datetime.oneDateWheel;\r\n    timeStep = inst.remote.datetime.timeStep;\r\n    wheels = inst.remote.datetime.wheels;\r\n    s.isoParts = isoParts = inst.remote.datetime.isoParts;\r\n    s.dateDisplay = dateDisplay;\r\n    inst.remote.datetime.isValid = isValid;\r\n    inst.remote.datetime.getFullDate = getFullDate;\r\n    inst.remote.datetime.getDateIndex = getDateIndex;\r\n    inst.remote.datetime.datetime = {\r\n      formatDate: formatDate\r\n    }; // --- REMOTE TRIAL CODE END ---\r\n\r\n    inst._format = displayFormat;\r\n    inst._order = wheelOrder;\r\n\r\n    inst.handlers.now = function () {\r\n      inst.setDate(new Date(), inst.live, 1000, true, true);\r\n    };\r\n\r\n    inst.buttons.now = {\r\n      text: s.nowText,\r\n      icon: s.nowIcon,\r\n      handler: 'now'\r\n    }; // ---\r\n\r\n    return {\r\n      minWidth: oneDateWheel && hasTime ? widths[baseTheme] : undefined,\r\n      compClass: 'mbsc-dt mbsc-sc',\r\n      wheels: wheels,\r\n      headerText: s.headerText ? function () {\r\n        return formatDate(displayFormat, getDate(inst.getArrayVal(true)), s);\r\n      } : false,\r\n      formatValue: function formatValue(d) {\r\n        return formatDate(format, getDate(d), s);\r\n      },\r\n      parseValue: function parseValue(val) {\r\n        if (!val) {\r\n          innerValues = {};\r\n          inst._hasValue = false;\r\n        }\r\n\r\n        return getArray(makeDate(val || s.defaultValue || new Date(), format, s, isoParts), !!val);\r\n      },\r\n      validate: function validate(data) {\r\n        var i,\r\n            j,\r\n            dayStr,\r\n            weekDay,\r\n            values = data.values,\r\n            index = data.index,\r\n            dir = data.direction,\r\n            dayWheel = s.wheels[0][wheelOrder.d],\r\n            validated = getClosestValidDate(getDate(values), dir),\r\n            temp = getArray(validated),\r\n            disabled = [],\r\n            wheels = {},\r\n            y = getDatePart.y(validated),\r\n            //get(temp, 'y'),\r\n        m = getDatePart.m(validated),\r\n            //get(temp, 'm'),\r\n        maxdays = s.getMaxDayOfMonth(y, m),\r\n            minprop = true,\r\n            maxprop = true;\r\n        $$1.each(['dd', 'y', 'm', 'd', 'tt', 'a', 'h', 'i', 's'], function (x, i) {\r\n          var min = mins[i],\r\n              max = maxs[i],\r\n              val = getDatePart[i](validated);\r\n          disabled[wheelOrder[i]] = [];\r\n\r\n          if (minprop && minDate) {\r\n            min = getDatePart[i](minDate);\r\n          }\r\n\r\n          if (maxprop && maxDate) {\r\n            max = getDatePart[i](maxDate);\r\n          }\r\n\r\n          if (val < min) {\r\n            val = min;\r\n          }\r\n\r\n          if (val > max) {\r\n            val = max;\r\n          }\r\n\r\n          if (i !== 'dd' && i !== 'tt') {\r\n            if (minprop) {\r\n              minprop = val == min;\r\n            }\r\n\r\n            if (maxprop) {\r\n              maxprop = val == max;\r\n            }\r\n          }\r\n\r\n          if (wheelOrder[i] !== undefined) {\r\n            if (i != 'y' && i != 'dd') {\r\n              for (j = mins[i]; j <= maxs[i]; j += steps[i]) {\r\n                if (j < min || j > max) {\r\n                  disabled[wheelOrder[i]].push(j);\r\n                }\r\n              }\r\n            } // Disable some days\r\n\r\n\r\n            if (i == 'd') {\r\n              var first = s.getDate(y, m, 1).getDay(),\r\n                  invalids = {}; // Set invalid indexes\r\n\r\n              validateDates(invalid, y, m, first, maxdays, invalids, 1); // Delete indexes which are valid\r\n\r\n              validateDates(valid, y, m, first, maxdays, invalids, 0);\r\n              $$1.each(invalids, function (j, v) {\r\n                if (v) {\r\n                  disabled[wheelOrder[i]].push(j);\r\n                }\r\n              });\r\n            }\r\n          }\r\n        }); // Invalid times\r\n\r\n        if (hasTime) {\r\n          $$1.each(['a', 'h', 'i', 's', 'tt'], function (i, v) {\r\n            var val = getDatePart[v](validated),\r\n                d = getDatePart.d(validated),\r\n                invalids = {};\r\n\r\n            if (wheelOrder[v] !== undefined) {\r\n              validateTimes(invalid, i, v, y, m, d, invalids, 0);\r\n              validateTimes(valid, i, v, y, m, d, invalids, 1);\r\n              $$1.each(invalids, function (j, x) {\r\n                if (x) {\r\n                  disabled[wheelOrder[v]].push(j);\r\n                }\r\n              }); // Get valid value\r\n\r\n              validValues[i] = inst.getValidValue(wheelOrder[v], val, dir, invalids);\r\n            }\r\n          });\r\n        } // Regenerate day wheel if number of days in month changes\r\n        // or if day names needs to be regenerated\r\n\r\n\r\n        if (dayWheel && (dayWheel.data.length !== maxdays || genDayNames && (index === undefined || index === wheelOrder.y || index === wheelOrder.m))) {\r\n          wheels[wheelOrder.d] = dayWheel;\r\n          dayWheel.data = [];\r\n\r\n          for (i = 1; i <= maxdays; i++) {\r\n            weekDay = s.getDate(y, m, i).getDay();\r\n            dayStr = dateDisplay.replace(/[my|]/gi, '').replace(/dd/, (i < 10 ? '0' + i : i) + (s.daySuffix || '')).replace(/d/, i + (s.daySuffix || ''));\r\n            dayWheel.data.push({\r\n              value: i,\r\n              display: /DD/.test(dayStr) ? dayStr.replace(/DD/, '<span class=\"mbsc-dt-day\">' + s.dayNames[weekDay] + '</span>') : dayStr.replace(/D/, '<span class=\"mbsc-dt-day\">' + s.dayNamesShort[weekDay] + '</span>')\r\n            });\r\n          } // Need to update day value, if out of month\r\n\r\n\r\n          inst._tempWheelArray[wheelOrder.d] = temp[wheelOrder.d];\r\n          inst.changeWheel(wheels);\r\n        }\r\n\r\n        return {\r\n          disabled: disabled,\r\n          valid: temp\r\n        };\r\n      }\r\n    };\r\n  };\r\n\r\n  var id$1 = 0;\r\n\r\n  function jsonp$1(url, callback) {\r\n    var script = document.createElement('script'),\r\n        unique = 'mbscjsonp' + ++id$1;\r\n\r\n    window[unique] = function (data) {\r\n      script.parentNode.removeChild(script);\r\n      delete window[unique];\r\n\r\n      if (!data) {\r\n        return;\r\n      }\r\n\r\n      callback(data);\r\n    };\r\n\r\n    script.src = url + (url.indexOf('?') >= 0 ? '&' : '?') + 'callback=' + unique;\r\n    document.body.appendChild(script);\r\n  }\r\n\r\n  function ajaxGet(url, callback) {\r\n    var request = new XMLHttpRequest();\r\n    request.open('GET', url, true);\r\n\r\n    request.onload = function () {\r\n      if (this.status >= 200 && this.status < 400) {\r\n        // Success!\r\n        callback(JSON.parse(this.response));\r\n      } //else {\r\n      // We reached our target server, but it returned an error\r\n      //}\r\n\r\n    };\r\n\r\n    request.onerror = function () {// There was a connection error of some sort\r\n    };\r\n\r\n    request.send();\r\n  }\r\n\r\n  function getJson(url, callback, type) {\r\n    if (type == 'jsonp') {\r\n      jsonp$1(url, callback);\r\n    } else {\r\n      ajaxGet(url, callback);\r\n    }\r\n  }\r\n\r\n  util.getJson = getJson;\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n\r\n  var defaults$2 = {\r\n    controls: ['calendar'],\r\n    firstDay: 0,\r\n    weekDays: 'short',\r\n    maxMonthWidth: 170,\r\n    breakPointMd: 768,\r\n    months: 1,\r\n    pageBuffer: 1,\r\n    weeks: 6,\r\n    highlight: true,\r\n    outerMonthChange: true,\r\n    quickNav: true,\r\n    yearChange: true,\r\n    tabs: 'auto',\r\n    // CSS classes\r\n    todayClass: 'mbsc-cal-today',\r\n    btnCalPrevClass: 'mbsc-ic mbsc-ic-arrow-left6',\r\n    btnCalNextClass: 'mbsc-ic mbsc-ic-arrow-right6',\r\n    // Localization\r\n    dateText: 'Date',\r\n    timeText: 'Time',\r\n    todayText: 'Today',\r\n    fromText: 'Start',\r\n    toText: 'End',\r\n    moreEventsText: '{count} more',\r\n    prevMonthText: 'Previous Month',\r\n    nextMonthText: 'Next Month',\r\n    prevYearText: 'Previous Year',\r\n    nextYearText: 'Next Year'\r\n  }; // --- TRIAL SERVER CODE END ---\r\n\r\n  var CalendarBase = function CalendarBase(inst) {\r\n    var $calendar,\r\n        $markup,\r\n        $monthHdr,\r\n        $monthPicker,\r\n        $tabPaneCont,\r\n        $tabPanes,\r\n        $yearHdr,\r\n        $yearPicker,\r\n        activeDate,\r\n        base,\r\n        calRows,\r\n        calSize,\r\n        calWidth,\r\n        context,\r\n        controls,\r\n        controlsArray,\r\n        cssDisabled,\r\n        cssSelected,\r\n        cssSelectedTab,\r\n        currFirstDay,\r\n        dayLabels,\r\n        dayProps,\r\n        dayScroll,\r\n        displayFormat,\r\n        firstWeekDay,\r\n        hasCal,\r\n        hasLabels,\r\n        hasMarks,\r\n        hasTabs,\r\n        // hasText,\r\n    hasQuickNav,\r\n        hoverTimer,\r\n        invalidObj,\r\n        isCellHover,\r\n        isDayClick,\r\n        isLiquid,\r\n        isMonthView,\r\n        isPageMove,\r\n        isRTL,\r\n        isVertical,\r\n        labelsObj,\r\n        markedObj,\r\n        colorsObj,\r\n        maxDate,\r\n        maxFirstYear,\r\n        maxLabels,\r\n        maxMonth,\r\n        maxYear,\r\n        minDate,\r\n        minFirstYear,\r\n        minMonth,\r\n        minYear,\r\n        monthIndex,\r\n        monthNames,\r\n        monthScroll,\r\n        needsSlide,\r\n        needsRefresh,\r\n        pageBuffer,\r\n        pageNr,\r\n        pageOffset,\r\n        pageTotal,\r\n        rtl,\r\n        s,\r\n        selectedDate,\r\n        showOuterDays,\r\n        trigger,\r\n        validObj,\r\n        visibleTab,\r\n        wasTouched,\r\n        weekCounter,\r\n        weekDays,\r\n        yearChange,\r\n        yearIndex,\r\n        yearScroll,\r\n        yearSuffix,\r\n        labelIdx = 1,\r\n        elm = this;\r\n\r\n    function showCont($cont) {\r\n      if ($cont.hasClass('mbsc-cal-h')) {\r\n        $cont.removeClass('mbsc-cal-h');\r\n      }\r\n    }\r\n\r\n    function hideCont($cont) {\r\n      if (!$cont.hasClass('mbsc-cal-h')) {\r\n        $cont.addClass('mbsc-cal-h');\r\n      }\r\n    }\r\n\r\n    function toggleCont($cont) {\r\n      if ($cont.hasClass('mbsc-cal-h')) {\r\n        showCont($cont);\r\n      } else {\r\n        hideCont($cont);\r\n      }\r\n    }\r\n\r\n    function preProcessSettings() {\r\n      var ctrls, layout, orig;\r\n      controls = {};\r\n      controlsArray = [];\r\n      dayLabels = {};\r\n      trigger = inst.trigger;\r\n      orig = extend$1({}, inst.settings);\r\n      s = extend$1(inst.settings, defaults$2, orig);\r\n      ctrls = s.controls.join(',');\r\n      firstWeekDay = s.firstDay;\r\n      isRTL = s.rtl;\r\n      pageBuffer = s.pageBuffer;\r\n      weekCounter = s.weekCounter;\r\n      calRows = s.weeks;\r\n      isMonthView = calRows == 6;\r\n      isVertical = s.calendarScroll == 'vertical';\r\n      context = inst._getRespCont();\r\n      weekDays = s.weekDays == 'full' ? '' : s.weekDays == 'min' ? 'Min' : 'Short';\r\n      layout = s.layout || (s.display == 'inline' || /top|bottom/.test(s.display) && s.touchUi ? 'liquid' : '');\r\n      isLiquid = layout == 'liquid'; // && s.display !== 'bubble';\r\n\r\n      calWidth = isLiquid ? null : s.calendarWidth;\r\n      rtl = isRTL && !isVertical ? -1 : 1;\r\n      cssDisabled = 'mbsc-disabled ' + (s.disabledClass || '');\r\n      cssSelectedTab = 'mbsc-selected ' + (s.selectedTabClass || '');\r\n      cssSelected = 'mbsc-selected ' + (s.selectedClass || '');\r\n      maxLabels = Math.max(1, Math.floor(((s.calendarHeight || 0) / calRows - 45) / 18));\r\n\r\n      if (ctrls.match(/calendar/)) {\r\n        controls.calendar = 1;\r\n        hasCal = true;\r\n      } // Allow date scroller only if calendar not present\r\n\r\n\r\n      if (ctrls.match(/date/) && !hasCal) {\r\n        controls.date = 1;\r\n      }\r\n\r\n      if (ctrls.match(/time/)) {\r\n        controls.time = 1;\r\n      }\r\n\r\n      s.controls.forEach(function (v) {\r\n        if (controls[v]) {\r\n          controlsArray.push(v);\r\n        }\r\n      }); // Disable quick nav for week view\r\n\r\n      hasQuickNav = s.quickNav && hasCal && isMonthView; // Disable year change for week view\r\n\r\n      yearChange = s.yearChange && isMonthView; // Fullscreen mode\r\n\r\n      if (isLiquid && hasCal && s.display == 'center') {\r\n        inst._isFullScreen = true;\r\n      }\r\n\r\n      s.layout = layout; // Pass back to core if set to liquid\r\n\r\n      s.preset = (controls.date || hasCal ? 'date' : '') + (controls.time ? 'time' : '');\r\n    }\r\n\r\n    function postProcessSettings() {\r\n      monthNames = yearChange ? s.monthNamesShort : s.monthNames;\r\n      yearSuffix = s.yearSuffix || '';\r\n      monthIndex = (s.dateWheels || s.dateFormat).search(/m/i);\r\n      yearIndex = (s.dateWheels || s.dateFormat).search(/y/i);\r\n      displayFormat = inst._format;\r\n\r\n      if (s.min) {\r\n        minDate = getDateOnly(makeDate(s.min, displayFormat, s));\r\n        minYear = s.getYear(minDate);\r\n        minMonth = s.getMonth(minDate);\r\n        minFirstYear = s.getDate(Math.floor(minYear / 12) * 12, 0, 1);\r\n      }\r\n\r\n      if (s.max) {\r\n        maxDate = getDateOnly(makeDate(s.max, displayFormat, s));\r\n        maxYear = s.getYear(maxDate);\r\n        maxMonth = s.getMonth(maxDate);\r\n        maxFirstYear = s.getDate(Math.floor(maxYear / 12) * 12, 0, 1);\r\n      }\r\n\r\n      inst._minDate = minDate;\r\n      inst._maxDate = maxDate;\r\n    }\r\n\r\n    function addToList(obj, d, ev) {\r\n      obj[d] = obj[d] || [];\r\n      obj[d].push(ev);\r\n    }\r\n\r\n    function prepareObj(list, start, end) {\r\n      var d,\r\n          v,\r\n          year,\r\n          month,\r\n          day,\r\n          maxDays,\r\n          endTime,\r\n          startTime,\r\n          getDate = s.getDate,\r\n          getYear = s.getYear,\r\n          getMonth = s.getMonth,\r\n          getDay = s.getDay,\r\n          getMaxDayOfMonth = s.getMaxDayOfMonth,\r\n          startYear = getYear(start),\r\n          startMonth = getMonth(start),\r\n          obj = {};\r\n\r\n      if (list) {\r\n        $$1.each(list, function (i, ev) {\r\n          d = ev.d || ev.start || ev;\r\n          v = d + '';\r\n\r\n          if (ev.start && ev.end) {\r\n            startTime = getDateOnly(makeDate(ev.start, displayFormat, s));\r\n            endTime = getDateOnly(makeDate(ev.end, displayFormat, s));\r\n\r\n            while (startTime <= endTime) {\r\n              addToList(obj, startTime, ev);\r\n              startTime = getDate(getYear(startTime), getMonth(startTime), getDay(startTime) + 1);\r\n            }\r\n          } else if (DAY_OF_WEEK.test(v)) {\r\n            // Day of week\r\n            startTime = getFirstDay(start, false, +v.replace('w', ''));\r\n\r\n            while (startTime <= end) {\r\n              addToList(obj, startTime, ev);\r\n              startTime = getDate(getYear(startTime), getMonth(startTime), getDay(startTime) + 7);\r\n            }\r\n          } else if (DAY_OF_MONTH.test(v)) {\r\n            // Day of month: '2' or '12/24'\r\n            v = v.split('/');\r\n            var hasMonth = !!v[1],\r\n                yearInc = hasMonth ? 1 : 0,\r\n                monthInc = hasMonth ? 0 : 1,\r\n                vMonth = hasMonth ? v[0] - 1 : startMonth,\r\n                vDay = hasMonth ? +v[1] : +v[0];\r\n            maxDays = getMaxDayOfMonth(startYear, vMonth);\r\n            startTime = getDate(startYear, vMonth, Math.min(vDay, maxDays));\r\n\r\n            while (startTime <= end) {\r\n              year = getYear(startTime);\r\n              month = getMonth(startTime);\r\n              day = getDay(startTime);\r\n\r\n              if (day === vDay) {\r\n                addToList(obj, startTime, ev);\r\n              }\r\n\r\n              maxDays = getMaxDayOfMonth(year + yearInc, month + monthInc);\r\n              startTime = getDate(year + yearInc, month + monthInc, Math.min(vDay, maxDays));\r\n            }\r\n          } else {\r\n            // Exact date\r\n            addToList(obj, getDateOnly(makeDate(d, displayFormat, s)), ev);\r\n          }\r\n        });\r\n      }\r\n\r\n      return obj;\r\n    }\r\n\r\n    function isValidDate(d) {\r\n      if (d < minDate) {\r\n        return false;\r\n      }\r\n\r\n      if (d > maxDate) {\r\n        return false;\r\n      }\r\n\r\n      return invalidObj[d] === undefined || validObj[d] !== undefined;\r\n    }\r\n\r\n    function getDayProps(d) {\r\n      var i,\r\n          mark,\r\n          markedMarkup,\r\n          props,\r\n          marked = markedObj[d] ? markedObj[d] : false,\r\n          colors = colorsObj[d] ? colorsObj[d] : false,\r\n          background = colors && colors[0].background ? colors[0].background : marked && marked[0].background,\r\n          cssClass = '';\r\n\r\n      if (colors) {\r\n        for (i = 0; i < colors.length; i++) {\r\n          cssClass += (colors[i].cssClass || '') + ' ';\r\n        }\r\n      }\r\n\r\n      if (marked) {\r\n        // Marks\r\n        markedMarkup = '<div class=\"mbsc-cal-marks\">';\r\n\r\n        for (i = 0; i < marked.length; i++) {\r\n          mark = marked[i];\r\n          cssClass += (mark.cssClass || '') + ' ';\r\n          markedMarkup += '<div class=\"mbsc-cal-mark\"' + (mark.color ? ' style=\"background:' + mark.color + ';\"' : '') + '></div>';\r\n        }\r\n\r\n        markedMarkup += '</div>';\r\n      }\r\n\r\n      props = {\r\n        marked: marked,\r\n        background: background,\r\n        cssClass: cssClass,\r\n        // ariaLabel: hasText ? txt : '',\r\n        markup: dayLabels[d] ? dayLabels[d].join('') : hasMarks ? markedMarkup : ''\r\n      };\r\n      return extend$1(props, inst._getDayProps(d, props));\r\n    }\r\n\r\n    function getOffsetStyle(offset) {\r\n      return ' style=\"' + (isVertical ? 'transform: translateY(' + offset * 100 + '%)' : 'left:' + offset * 100 * rtl + '%') + '\"';\r\n    }\r\n\r\n    function calcMonthNr() {\r\n      // Calculate pageNr\r\n      pageNr = s.months == 'auto' ? // Exact month number from setting\r\n      Math.max(1, // Min 1 month\r\n      Math.min(3, // Max 3 months\r\n      Math.floor((calWidth || getWidth(context)) / 280))) : +s.months;\r\n      pageTotal = pageNr + 2 * pageBuffer;\r\n      pageOffset = 0; //Math.round(pageNr / 2) - 1;\r\n      // Don't allow vertical scroll with multiple months\r\n\r\n      isVertical = isVertical && pageNr < 2; // Don't show outer days by default for multiple months or vertical scroll\r\n\r\n      showOuterDays = s.showOuterDays === undefined ? pageNr < 2 && !isVertical || !isMonthView : s.showOuterDays;\r\n    }\r\n\r\n    function constrain(d) {\r\n      if (getPageDay(d, pageNr - 1) > maxDate) {\r\n        d = getPageDay(maxDate, 1 - pageNr);\r\n      }\r\n\r\n      if (d < minDate) {\r\n        d = minDate;\r\n      }\r\n\r\n      return d;\r\n    }\r\n\r\n    function getLabelMarkup(event, i, showText) {\r\n      var noBg = event.background === 'none';\r\n      var color = noBg ? 'none' : event.color;\r\n      var txtColor = noBg ? event.color : getTextColor(color);\r\n      var txt = event.text;\r\n      return '<div data-id=\"' + event._id + '\" data-index=\"' + i + '\" class=\"mbsc-cal-txt' + (noBg ? ' mbsc-cal-txt-only' : '') + '\" title=\"' + $$1('<div>' + txt + '</div>').text() + '\"' + (color ? ' style=\"background:' + color + (showText && txtColor ? ';color:' + txtColor : '') + ';\"' : '') + '>' + (showText ? txt : '') + '</div>';\r\n    }\r\n\r\n    function onGenMonth(d) {\r\n      var start = getFirstDay(getPageDay(d, -pageOffset - pageBuffer), false);\r\n      var end = getFirstDay(getPageDay(d, -pageOffset + pageNr + pageBuffer - 1), false);\r\n      end = s.getDate(s.getYear(end), s.getMonth(end), s.getDay(end) + calRows * 7);\r\n\r\n      inst._onGenMonth(start, end);\r\n\r\n      invalidObj = prepareObj(s.invalid, start, end);\r\n      validObj = prepareObj(s.valid, start, end);\r\n      markedObj = prepareObj(s.labels || s.events || s.marked, start, end);\r\n      colorsObj = prepareObj(s.colors, start, end);\r\n      labelsObj = inst._labels || markedObj || colorsObj;\r\n      hasLabels = s.labels || inst._labels; // Multiple labels\r\n\r\n      if (hasLabels) {\r\n        (function () {\r\n          dayLabels = {};\r\n          var eventRows = {};\r\n          var day = start;\r\n\r\n          var _loop = function _loop() {\r\n            if (day.getDay() == firstWeekDay) {\r\n              eventRows = {};\r\n            }\r\n\r\n            var maxRows = maxLabels;\r\n            var events = labelsObj[day] || [];\r\n            var eventsNr = events.length;\r\n            var labels = [];\r\n            var prevEvent = void 0;\r\n            var prevIndex = void 0;\r\n            var row = 0;\r\n            var displayed = 0;\r\n            var i = 0;\r\n            var width = void 0;\r\n\r\n            while (row < maxRows) {\r\n              prevEvent = null; // Check  if there are any events already in this row\r\n\r\n              events.forEach(function (ev, j) {\r\n                if (eventRows[row] == ev) {\r\n                  prevEvent = ev;\r\n                  prevIndex = j;\r\n                }\r\n              });\r\n\r\n              if (row == maxRows - 1 && (displayed < eventsNr - 1 || eventsNr && i == eventsNr && !prevEvent)) {\r\n                var nr = eventsNr - displayed;\r\n                var txt = (nr > 1 ? s.moreEventsPluralText || s.moreEventsText : s.moreEventsText).replace(/{count}/, nr);\r\n\r\n                if (nr) {\r\n                  labels.push('<div class=\"mbsc-cal-txt-more\">' + txt + '</div>');\r\n                } // Remove event from previous days and replace it with more label\r\n\r\n\r\n                if (prevEvent) {\r\n                  eventRows[row] = null;\r\n\r\n                  prevEvent._days.forEach(function (d) {\r\n                    dayLabels[d][row] = '<div class=\"mbsc-cal-txt-more\">' + s.moreEventsText.replace(/{count}/, 1) + '</div>';\r\n                  });\r\n                }\r\n\r\n                displayed++;\r\n                row++;\r\n              } else if (prevEvent) {\r\n                if (prevIndex == i) {\r\n                  i++;\r\n                }\r\n\r\n                if (isSameDay(day, makeDate(prevEvent.end))) {\r\n                  eventRows[row] = null;\r\n                }\r\n\r\n                labels.push(getLabelMarkup(prevEvent, prevIndex));\r\n                row++;\r\n                displayed++;\r\n\r\n                prevEvent._days.push(day);\r\n              } else if (i < eventsNr) {\r\n                var event = events[i];\r\n                var startTime = event.start && makeDate(event.start);\r\n                var endTime = event.end && makeDate(event.end);\r\n                var weekDay = day.getDay();\r\n                var offset = firstWeekDay - weekDay > 0 ? 7 : 0;\r\n                var multiDay = endTime && !isSameDay(startTime, endTime);\r\n\r\n                if (!startTime || // all day event\r\n                isSameDay(day, startTime) || // event start day\r\n                weekDay == firstWeekDay // first day of week (if event continues from prev week))\r\n                ) {\r\n                    if (event._id === undefined) {\r\n                      event._id = labelIdx++;\r\n                    }\r\n\r\n                    if (multiDay) {\r\n                      eventRows[row] = event;\r\n                    }\r\n\r\n                    event._days = [day];\r\n                    width = multiDay ? Math.min(getDayDiff(day, getDateOnly(endTime)) + 1, 7 + firstWeekDay - weekDay - offset) * 100 : 100;\r\n                    labels.push(multiDay ? '<div class=\"mbsc-cal-txt-w\" style=\"width:' + width + '%\">' + getLabelMarkup(event, i, true) + '</div>' + getLabelMarkup(event, i) : getLabelMarkup(event, i, true));\r\n                    row++;\r\n                    displayed++;\r\n                  }\r\n\r\n                i++;\r\n              } else {\r\n                labels.push('<div class=\"mbsc-cal-txt-ph\"></div>');\r\n                row++;\r\n              }\r\n            }\r\n\r\n            dayLabels[day] = labels;\r\n            day = s.getDate(s.getYear(day), s.getMonth(day), s.getDay(day) + 1);\r\n          };\r\n\r\n          while (day < end) {\r\n            _loop();\r\n          }\r\n        })();\r\n      }\r\n    }\r\n\r\n    function onBeforeMonthChange(d) {\r\n      var y = s.getYear(d),\r\n          m = s.getMonth(d);\r\n      currFirstDay = d;\r\n      activeDate = d;\r\n      setTitle(d);\r\n      trigger('onMonthChange', {\r\n        year: y,\r\n        month: m\r\n      });\r\n      trigger('onMonthLoading', {\r\n        year: y,\r\n        month: m\r\n      });\r\n      trigger('onPageChange', {\r\n        firstDay: d\r\n      });\r\n      trigger('onPageLoading', {\r\n        firstDay: d\r\n      });\r\n      onGenMonth(d);\r\n    }\r\n\r\n    function onAfterMonthChange(d) {\r\n      var y = s.getYear(d),\r\n          m = s.getMonth(d);\r\n\r\n      if (needsRefresh === undefined) {\r\n        onPageLoaded(d, y, m);\r\n      } else {\r\n        genAllMonths(d, needsRefresh, true);\r\n      }\r\n\r\n      focusDate(activeDate, dayScroll.focus);\r\n      dayScroll.focus = false;\r\n    }\r\n\r\n    function onPageLoaded(d, y, m) {\r\n      var $scroller = dayScroll.$scroller;\r\n      $$1('.mbsc-cal-slide', $scroller).removeClass('mbsc-cal-slide-a');\r\n      $$1('.mbsc-cal-slide', $scroller).slice(pageBuffer, pageBuffer + pageNr).addClass('mbsc-cal-slide-a');\r\n      $$1('.mbsc-cal-slide-a .mbsc-cal-day', $scroller).on('mouseenter', function () {\r\n        var $cell = $$1(this);\r\n\r\n        if (!wasTouched && !isPageMove) {\r\n          hoverTimer = setTimeout(function () {\r\n            isCellHover = true;\r\n            trigger('onCellHoverIn', getDayInfo($cell));\r\n          }, 150);\r\n        }\r\n      }).on('mouseleave', function () {\r\n        clearTimeout(hoverTimer);\r\n\r\n        if (!wasTouched && isCellHover) {\r\n          isCellHover = false;\r\n          trigger('onCellHoverOut', getDayInfo($$1(this)));\r\n        }\r\n      });\r\n\r\n      if (hasLabels) {\r\n        $$1('.mbsc-cal-slide-a .mbsc-cal-txt', $scroller).on('mouseenter', function () {\r\n          var id = $$1(this).attr('data-id');\r\n          $$1('.mbsc-cal-txt[data-id=\"' + id + '\"]', $scroller).addClass('mbsc-hover');\r\n        }).on('mouseleave', function () {\r\n          $$1('.mbsc-cal-txt.mbsc-hover', $scroller).removeClass('mbsc-hover');\r\n        });\r\n      }\r\n\r\n      trigger('onMonthLoaded', {\r\n        year: y,\r\n        month: m\r\n      });\r\n      trigger('onPageLoaded', {\r\n        firstDay: d\r\n      });\r\n    }\r\n\r\n    function genTabMarkup() {\r\n      var html, tabText;\r\n      html = '<div class=\"mbsc-cal-tabs-c\"><div class=\"mbsc-cal-tabs\" role=\"tablist\">';\r\n      controlsArray.forEach(function (v, i) {\r\n        tabText = s[(v == 'calendar' ? 'date' : v) + 'Text'];\r\n        html += '<div role=\"tab\" aria-controls=\"' + (elm.id + '-mbsc-pnl-' + i) + '\" class=\"mbsc-cal-tab mbsc-fr-btn-e ' + (i ? '' : cssSelectedTab) + '\" data-control=\"' + v + '\"' + (s.tabLink ? '><a href=\"#\">' + tabText + '</a>' : ' tabindex=\"0\">' + tabText) + '</div>';\r\n      });\r\n      html += '</div></div>';\r\n      return html;\r\n    }\r\n\r\n    function genCalMarkup() {\r\n      var html,\r\n          i,\r\n          j,\r\n          k,\r\n          monthBtns,\r\n          monthsMarkup,\r\n          yearBtns = '',\r\n          btnPrevClass = isRTL ? s.btnCalNextClass : s.btnCalPrevClass,\r\n          btnNextClass = isRTL ? s.btnCalPrevClass : s.btnCalNextClass; // Generate month buttons\r\n\r\n      monthBtns = '<div class=\"mbsc-cal-btn-w\"><div data-step=\"-1\" role=\"button\" tabindex=\"0\" aria-label=\"' + s.prevMonthText + '\" class=\"' + btnPrevClass + ' mbsc-cal-prev mbsc-cal-prev-m mbsc-cal-btn mbsc-fr-btn mbsc-fr-btn-e\"></div>';\r\n\r\n      for (i = 0; i < (calRows ? pageNr : 1); i++) {\r\n        monthBtns += '<div role=\"button\" class=\"mbsc-cal-month\"></div>';\r\n      }\r\n\r\n      monthBtns += '<div data-step=\"1\" role=\"button\" tabindex=\"0\" aria-label=\"' + s.nextMonthText + '\" class=\"' + btnNextClass + ' mbsc-cal-next mbsc-cal-next-m mbsc-cal-btn mbsc-fr-btn mbsc-fr-btn-e\"></div></div>'; // Generate year buttons\r\n\r\n      if (yearChange) {\r\n        yearBtns = '<div class=\"mbsc-cal-btn-w\"><div data-step=\"-12\" role=\"button\" tabindex=\"0\" aria-label=\"' + s.prevYearText + '\" class=\"' + btnPrevClass + ' mbsc-cal-prev mbsc-cal-prev-y mbsc-cal-btn mbsc-fr-btn mbsc-fr-btn-e\"></div>' + '<div role=\"button\" class=\"mbsc-cal-year\"></div>' + '<div data-step=\"12\" role=\"button\" tabindex=\"0\" aria-label=\"' + s.nextYearText + '\" class=\"' + btnNextClass + ' mbsc-cal-next mbsc-cal-next-y mbsc-cal-btn mbsc-fr-btn mbsc-fr-btn-e\"></div></div>';\r\n      }\r\n\r\n      if (calRows) {\r\n        monthsMarkup = genAllMonths(currFirstDay);\r\n      }\r\n\r\n      html = '<div class=\"mbsc-w-p mbsc-cal-c\"><div class=\"mbsc-cal ' + (isMonthView ? '' : ' mbsc-cal-week-view') + (pageNr > 1 ? ' mbsc-cal-multi ' : '') + (weekCounter ? ' mbsc-cal-weeks ' : '') + (isVertical ? ' mbsc-cal-vertical' : '') + (hasMarks ? ' mbsc-cal-has-marks' : '') + (hasLabels ? ' mbsc-cal-has-labels' : '') + ( // (hasText ? ' mbsc-cal-has-txt' : '') +\r\n      showOuterDays ? '' : ' mbsc-cal-hide-diff ') + (s.calendarClass || '') + '\"' + (!isLiquid ? ' style=\"width:' + (calWidth || 280 * pageNr) + 'px;\"' : '') + '>' + '<div class=\"mbsc-cal-hdr\">' + (yearIndex < monthIndex || pageNr > 1 ? yearBtns + monthBtns : monthBtns + yearBtns) + '</div>';\r\n\r\n      if (calRows) {\r\n        html += '<div class=\"mbsc-cal-body\"><div class=\"mbsc-cal-day-picker\"><div class=\"mbsc-cal-days-c\">';\r\n\r\n        for (j = 0; j < pageNr; j++) {\r\n          // Generate week days\r\n          html += '<div class=\"mbsc-cal-days\">';\r\n\r\n          for (i = 0; i < 7; i++) {\r\n            k = (i + firstWeekDay) % 7;\r\n            html += '<div class=\"mbsc-cal-week-day' + k + '\" aria-label=\"' + s.dayNames[k] + '\">' + s['dayNames' + weekDays][k] + '</div>';\r\n          }\r\n\r\n          html += '</div>';\r\n        }\r\n\r\n        html += '</div>' + '<div class=\"mbsc-cal-scroll-c mbsc-cal-day-scroll-c ' + (s.calendarClass || '') + '\"' + (s.calendarHeight ? ' style=\"height:' + s.calendarHeight + 'px\"' : '') + '>' + '<div class=\"mbsc-cal-scroll\" style=\"width:' + 100 / pageNr + '%' + '\">' + monthsMarkup + '</div></div>';\r\n      }\r\n\r\n      html += '</div>';\r\n\r\n      if (hasQuickNav) {\r\n        // Generate month picker\r\n        html += '<div class=\"mbsc-cal-month-picker mbsc-cal-picker mbsc-cal-h\"><div class=\"mbsc-cal-scroll-c ' + (s.calendarClass || '') + '\">' + '<div class=\"mbsc-cal-scroll\">';\r\n\r\n        for (i = 0; i < 3; i++) {\r\n          html += '<div class=\"mbsc-cal-slide\"' + getOffsetStyle(i - 1) + '><div role=\"grid\" class=\"mbsc-cal-table\"><div role=\"row\" class=\"mbsc-cal-row\">';\r\n\r\n          for (j = 0; j < 12; j++) {\r\n            if (j && j % 3 === 0) {\r\n              html += '</div><div role=\"row\" class=\"mbsc-cal-row\">';\r\n            }\r\n\r\n            html += '<div role=\"gridcell\"' + (i == 1 ? ' tabindex=\"-1\" aria-label=\"' + s.monthNames[j] + '\" data-val=\"' + j + '\"' : '') + ' class=\"mbsc-cal-cell' + (i == 1 ? ' mbsc-btn-e' : '') + '\"><div class=\"mbsc-cal-cell-i mbsc-cal-cell-txt\">' + (i == 1 ? s.monthNamesShort[j] : '&nbsp;') + '</div></div>';\r\n          }\r\n\r\n          html += '</div></div></div>';\r\n        }\r\n\r\n        html += '</div></div></div>'; // Generate year picker\r\n\r\n        html += '<div class=\"mbsc-cal-year-picker mbsc-cal-picker mbsc-cal-h\"><div class=\"mbsc-cal-scroll-c ' + (s.calendarClass || '') + '\">' + '<div class=\"mbsc-cal-scroll\">';\r\n\r\n        for (i = -1; i < 2; i++) {\r\n          html += genYears(getPageYear(currFirstDay, i), i);\r\n        }\r\n\r\n        html += '</div></div></div>';\r\n      } // Closing\r\n\r\n\r\n      html += '</div></div></div>';\r\n      return html;\r\n    }\r\n\r\n    function genYears(d, off) {\r\n      var i,\r\n          year = s.getYear(d),\r\n          html = '<div class=\"mbsc-cal-slide\"' + getOffsetStyle(off) + '><div role=\"grid\" class=\"mbsc-cal-table\"><div role=\"row\" class=\"mbsc-cal-row\">';\r\n\r\n      for (i = 0; i < 12; i++) {\r\n        if (i && i % 3 === 0) {\r\n          html += '</div><div role=\"row\" class=\"mbsc-cal-row\">';\r\n        }\r\n\r\n        html += '<div role=\"gridcell\" tabindex=\"-1\" aria-label=\"' + year + '\" data-val=\"' + year + '\"' + ' class=\"mbsc-cal-cell mbsc-btn-e ' + (year < minYear || year > maxYear ? ' mbsc-disabled ' : '') + (year == s.getYear(currFirstDay) ? cssSelected : '') + '\"><div class=\"mbsc-cal-cell-i mbsc-cal-cell-txt\">' + year + yearSuffix + '</div></div>';\r\n        year++;\r\n      }\r\n\r\n      html += '</div></div></div>';\r\n      return html;\r\n    }\r\n\r\n    function genMonth(firstDay, off) {\r\n      var bg,\r\n          curr,\r\n          cssClass,\r\n          y,\r\n          m,\r\n          d,\r\n          displayMonth,\r\n          displayDate,\r\n          fullDate,\r\n          props,\r\n          isValid,\r\n          isSelected,\r\n          isToday,\r\n          isOuterDay,\r\n          maxDays,\r\n          i,\r\n          j,\r\n          k = 1,\r\n          year = s.getYear(firstDay),\r\n          month = s.getMonth(firstDay),\r\n          day = s.getDay(firstDay),\r\n          selected = s.defaultValue === null && !inst._hasValue ? null : inst.getDate(true),\r\n          weekDay = s.getDate(year, month, day).getDay(),\r\n          // Get the weekday of the month\r\n      offset = firstWeekDay - weekDay > 0 ? 7 : 0,\r\n          html = '<div class=\"mbsc-cal-slide\"' + getOffsetStyle(off) + '><div role=\"grid\" class=\"mbsc-cal-table\"><div role=\"row\" class=\"mbsc-cal-row\">';\r\n\r\n      for (j = 0; j < 7 * calRows; j++) {\r\n        i = j + firstWeekDay - offset;\r\n        curr = s.getDate(year, month, i - weekDay + day);\r\n        y = curr.getFullYear();\r\n        m = curr.getMonth();\r\n        d = curr.getDate();\r\n        displayMonth = s.getMonth(curr);\r\n        displayDate = s.getDay(curr);\r\n        maxDays = s.getMaxDayOfMonth(y, m);\r\n        fullDate = y + '-' + (m + 1) + '-' + d;\r\n        props = extend$1({\r\n          valid: isValidDate(curr),\r\n          selected: selected && isSameDay(selected, curr)\r\n        }, getDayProps(curr));\r\n        bg = props.background === 'none' ? false : props.background;\r\n        isValid = props.valid;\r\n        isSelected = props.selected;\r\n        cssClass = props.cssClass; // Compare dates at noon, in some timezones 0:00 doesn't exists on daylight saving day\r\n\r\n        isToday = new Date(curr).setHours(12, 0, 0, 0) === new Date().setHours(12, 0, 0, 0);\r\n        isOuterDay = displayMonth !== month; // Day is from another month\r\n\r\n        dayProps[fullDate] = props;\r\n\r\n        if (j && j % 7 === 0) {\r\n          html += '</div><div role=\"row\" class=\"mbsc-cal-row\">';\r\n        }\r\n\r\n        if (weekCounter && j % 7 === 0) {\r\n          // If displaying days from next month, reset month counter\r\n          if (weekCounter == 'month' && isOuterDay && k > 1) {\r\n            k = d == 1 ? 1 : 2;\r\n          } else if (weekCounter == 'year') {\r\n            k = s.getWeekNumber(s.getDate(y, m, d + (7 - firstWeekDay + 1) % 7));\r\n          }\r\n\r\n          html += '<div role=\"gridcell\" class=\"mbsc-cal-cell mbsc-cal-week-nr\">' + k + '</div>';\r\n          k++;\r\n        }\r\n\r\n        html += '<div role=\"gridcell\"' + // Aria attributes\r\n        ' aria-label=\"' + (isToday ? s.todayText + ', ' : '') + s.dayNames[curr.getDay()] + ', ' + s.monthNames[displayMonth] + ' ' + displayDate + ' ' + (props.ariaLabel ? ', ' + props.ariaLabel : '') + '\"' + (isOuterDay && !showOuterDays ? ' aria-hidden=\"true\"' : ' data-full=\"' + fullDate + '\"') + (isOuterDay || !isValid ? ' aria-disabled=\"true\"' : '') + (isSelected ? ' aria-selected=\"true\"' : '') + (isValid ? ' tabindex=\"-1\"' : '') + // Classes\r\n        ' class=\"mbsc-cal-cell mbsc-cal-day mbsc-cal-day' + i % 7 + ' ' + (s.dayClass || '') + ' ' + (isSelected ? cssSelected : '') + (isToday ? ' ' + s.todayClass : '') + (cssClass ? ' ' + cssClass : '') + (displayDate == 1 ? ' mbsc-cal-day-first' : '') + (displayDate == maxDays ? ' mbsc-cal-day-last' : '') + (isOuterDay ? ' mbsc-cal-day-diff' : '') + (isValid ? ' mbsc-btn-e' : ' mbsc-disabled') + (props.marked ? ' mbsc-cal-day-marked' : '') + (bg ? ' mbsc-cal-day-colored' : '') + '\"><div class=\"mbsc-cal-cell-i mbsc-cal-day-i\"><div class=\"mbsc-cal-day-date mbsc-cal-cell-txt\"' + (bg ? ' style=\"background:' + bg + ';color:' + getTextColor(bg) + '\"' : '') + '>' + displayDate + '</div>' + inst._getText(mobiscroll, 0.06) + ( // Extra markup (extra div is needed in RTL mode for Chrome, otherwise labels and marks appear at the top of the cell)\r\n        props.markup ? '<div class=\"mbsc-cal-day-markup\">' + props.markup + '</div>' : '') + '</div></div>';\r\n      }\r\n\r\n      html += '</div></div></div>';\r\n      return html;\r\n    }\r\n\r\n    function genAllMonths(firstDay, render, insert) {\r\n      var i,\r\n          y = s.getYear(firstDay),\r\n          m = s.getMonth(firstDay),\r\n          pos = dayScroll ? dayScroll.pos : 0,\r\n          html = '';\r\n      dayProps = {};\r\n\r\n      if (calRows) {\r\n        if (!render) {\r\n          trigger('onMonthLoading', {\r\n            year: y,\r\n            month: m\r\n          });\r\n          trigger('onPageLoading', {\r\n            firstDay: firstDay\r\n          });\r\n        }\r\n\r\n        onGenMonth(firstDay);\r\n\r\n        for (i = 0; i < pageTotal; i++) {\r\n          html += genMonth(getPageDay(firstDay, i - pageOffset - pageBuffer), pos * rtl + i - pageBuffer);\r\n        }\r\n      } //activateMonth(); // TODO: ???\r\n\r\n\r\n      needsRefresh = undefined;\r\n\r\n      if (insert && dayScroll) {\r\n        dayScroll.$active = null;\r\n        dayScroll.$scroller.html(html);\r\n        onPageLoaded(firstDay, y, m);\r\n      }\r\n\r\n      return html;\r\n    }\r\n\r\n    function focusDate(d, focus) {\r\n      if (dayScroll) {\r\n        var $active = dayScroll.$active;\r\n\r\n        if ($active && $active.length) {\r\n          $active[0].blur();\r\n\r\n          if ($active.hasClass('mbsc-disabled')) {\r\n            $active.removeAttr('tabindex');\r\n          } else {\r\n            $active.attr('tabindex', '-1');\r\n          }\r\n        }\r\n\r\n        dayScroll.$active = $$1('.mbsc-cal-slide-a .mbsc-cal-day[data-full=\"' + getDateStr(d) + '\"]', dayScroll.$scroller).attr('tabindex', '0');\r\n\r\n        if (focus && dayScroll.$active.length) {\r\n          dayScroll.$active[0].focus();\r\n        }\r\n      }\r\n    }\r\n\r\n    function highlightDate(d) {\r\n      var $ctx = dayScroll && dayScroll.$scroller;\r\n\r\n      if (s.highlight && dayScroll) {\r\n        $$1('.mbsc-selected', $ctx).removeClass(cssSelected).removeAttr('aria-selected');\r\n\r\n        if (s.defaultValue !== null || inst._hasValue) {\r\n          $$1('.mbsc-cal-day[data-full=\"' + getDateStr(d) + '\"]', $ctx).addClass(cssSelected).attr('aria-selected', 'true');\r\n        }\r\n      }\r\n    }\r\n\r\n    function highlightSelected(v, $ctx) {\r\n      $$1('.mbsc-selected', $ctx).removeClass(cssSelected).removeAttr('aria-selected');\r\n      $$1('.mbsc-cal-cell[data-val=\"' + v + '\"]', $ctx).addClass(cssSelected).attr('aria-selected', 'true');\r\n    }\r\n\r\n    function setDate(d, nav, anim, focus) {\r\n      var diff, newFirstDay;\r\n\r\n      if (!visibleTab) {\r\n        return;\r\n      }\r\n\r\n      if (d < minDate) {\r\n        d = minDate;\r\n      }\r\n\r\n      if (d > maxDate) {\r\n        d = maxDate;\r\n      }\r\n\r\n      if (visibleTab === 'calendar' || !hasTabs || nav) {\r\n        inst._isSetDate = !nav;\r\n\r\n        if (hasCal && calRows) {\r\n          newFirstDay = getFirstDay(constrain(d), isMonthView);\r\n\r\n          if (needsSlide && (d < getPageDay(currFirstDay, -pageOffset) || d >= getPageDay(currFirstDay, pageNr - pageOffset))) {\r\n            diff = isMonthView ? s.getMonth(newFirstDay) - s.getMonth(currFirstDay) + (s.getYear(newFirstDay) - s.getYear(currFirstDay)) * 12 : Math.floor(getDayDiff(currFirstDay, newFirstDay) / (7 * calRows));\r\n\r\n            if (diff) {\r\n              // Clear queue to navigate immediately\r\n              dayScroll.queue = [];\r\n              dayScroll.focus = focus && anim;\r\n              changePageQueue(dayScroll, diff, anim);\r\n            }\r\n          }\r\n\r\n          if (!diff || !anim) {\r\n            focusDate(d, focus);\r\n          }\r\n\r\n          if (!nav) {\r\n            highlightDate(d);\r\n          }\r\n\r\n          if (!isMonthView && !diff) {\r\n            setTitle(currFirstDay, true);\r\n          }\r\n\r\n          activeDate = d;\r\n          needsSlide = true;\r\n        }\r\n\r\n        inst._onSetDate(d, diff);\r\n\r\n        inst._isSetDate = false;\r\n      }\r\n    }\r\n\r\n    function setTitle(d, skipButtons) {\r\n      var i,\r\n          year,\r\n          month,\r\n          dd,\r\n          y = s.getYear(d),\r\n          m = s.getMonth(d),\r\n          yy = y + yearSuffix;\r\n\r\n      if (hasQuickNav) {\r\n        // Highlight month\r\n        highlightSelected(m, monthScroll.$scroller); // Highlight year\r\n\r\n        highlightSelected(y, yearScroll.$scroller); // Scroll to selected year\r\n\r\n        changePageQueue(yearScroll, Math.floor(y / 12) - Math.floor(s.getYear(yearScroll.first) / 12), true); // Disable out of range months\r\n\r\n        $$1('.mbsc-cal-cell', monthScroll.$scroller).removeClass('mbsc-disabled');\r\n\r\n        if (y === minYear) {\r\n          for (i = 0; i < minMonth; i++) {\r\n            $$1('.mbsc-cal-cell[data-val=\"' + i + '\"]', monthScroll.$scroller).addClass('mbsc-disabled');\r\n          }\r\n        }\r\n\r\n        if (y === maxYear) {\r\n          for (i = maxMonth + 1; i <= 12; i++) {\r\n            $$1('.mbsc-cal-cell[data-val=\"' + i + '\"]', monthScroll.$scroller).addClass('mbsc-disabled');\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!skipButtons) {\r\n        // Disable/enable prev/next buttons\r\n        checkBtn($$1('.mbsc-cal-prev-m', $markup), getPageDay(d, -pageOffset) <= minDate);\r\n        checkBtn($$1('.mbsc-cal-next-m', $markup), getPageDay(d, pageNr - pageOffset) > maxDate);\r\n        checkBtn($$1('.mbsc-cal-prev-y', $markup), s.getDate(y - 1, m + 1, 1) <= minDate);\r\n        checkBtn($$1('.mbsc-cal-next-y', $markup), s.getDate(y + 1, m, 1) > maxDate);\r\n      } // Update year in header\r\n\r\n\r\n      $yearHdr.attr('aria-label', y).html(yy); // Update month in header\r\n\r\n      for (i = 0; i < pageNr; i++) {\r\n        dd = getPageDay(d, i - pageOffset);\r\n\r\n        if (selectedDate >= dd && selectedDate < getPageDay(dd, 1)) {\r\n          dd = selectedDate;\r\n        }\r\n\r\n        year = s.getYear(dd);\r\n        month = s.getMonth(dd);\r\n        yy = year + yearSuffix;\r\n        $monthHdr.eq(i).attr('aria-label', s.monthNames[month] + (yearChange ? '' : ' ' + y)).html((!yearChange && yearIndex < monthIndex ? yy + ' ' : '') + monthNames[month] + (!yearChange && yearIndex > monthIndex ? ' ' + yy : ''));\r\n      }\r\n    }\r\n\r\n    function checkBtn($btn, disable) {\r\n      if (disable) {\r\n        $btn.addClass(cssDisabled).attr('aria-disabled', 'true');\r\n      } else {\r\n        $btn.removeClass(cssDisabled).removeAttr('aria-disabled');\r\n      }\r\n    }\r\n\r\n    function getDayInfo($day) {\r\n      var day = $day[0],\r\n          full = $day.attr('data-full'),\r\n          parts = full ? full.split('-') : [],\r\n          d = adjustedDate(parts[0], parts[1] - 1, parts[2]),\r\n          selected = $day.hasClass('mbsc-selected');\r\n      return extend$1(dayProps ? dayProps[full] : {}, {\r\n        date: d,\r\n        target: day,\r\n        selected: selected\r\n      });\r\n    }\r\n\r\n    function selectDay($day, ev) {\r\n      var curr = inst.getDate(true),\r\n          props = getDayInfo($day),\r\n          day = $day[0],\r\n          d = props.date,\r\n          dtime = adjustedDate(d.getFullYear(), d.getMonth(), d.getDate(), curr.getHours(), curr.getMinutes(), curr.getSeconds()),\r\n          $target = $$1(ev.target),\r\n          target = $target[0];\r\n\r\n      if (!dayProps || !showOuterDays && $day.hasClass('mbsc-cal-day-diff')) {\r\n        return;\r\n      }\r\n\r\n      props.date = dtime; // Check if a label was tapped\r\n\r\n      if (hasLabels && day.contains(target)) {\r\n        while (target != day) {\r\n          if ($target.hasClass('mbsc-cal-txt') || $target.hasClass('mbsc-cal-txt-more')) {\r\n            var index = $target.attr('data-index');\r\n            var labels = labelsObj[d];\r\n\r\n            if (trigger('onLabelTap', {\r\n              date: dtime,\r\n              domEvent: ev,\r\n              target: $target[0],\r\n              labels: labels,\r\n              label: labels[index]\r\n            }) === false) {\r\n              return;\r\n            }\r\n\r\n            break;\r\n          }\r\n\r\n          $target = $target.parent();\r\n          target = $target[0];\r\n        }\r\n      }\r\n\r\n      if (trigger('onDayChange', props) !== false && !s.readonly && !$day.hasClass('mbsc-disabled')) {\r\n        inst._selectDay($day, d, dtime, props.selected);\r\n      }\r\n    }\r\n\r\n    function selectMonth($month) {\r\n      hideCont($monthPicker);\r\n      setDate(s.getDate(s.getYear(dayScroll.first), $month.attr('data-val'), 1), true, true);\r\n    }\r\n\r\n    function selectYear($year) {\r\n      hideCont($yearPicker);\r\n      setDate(s.getDate($year.attr('data-val'), s.getMonth(dayScroll.first), 1), true, true);\r\n    }\r\n\r\n    function getFirstDay(d, isMonth, w) {\r\n      var y = s.getYear(d),\r\n          m = s.getMonth(d),\r\n          weekDay = d.getDay(),\r\n          offset = firstWeekDay - weekDay > 0 ? 7 : 0;\r\n      return isMonth ? s.getDate(y, m, 1) : s.getDate(y, m, (w === undefined ? firstWeekDay : w) - offset - weekDay + s.getDay(d));\r\n    }\r\n\r\n    function getPageDay(d, diff) {\r\n      var year = s.getYear(d),\r\n          month = s.getMonth(d),\r\n          day = s.getDay(d);\r\n      return isMonthView ? s.getDate(year, month + diff, 1) : s.getDate(year, month, day + diff * calRows * 7);\r\n    }\r\n\r\n    function getPageYear(d, diff) {\r\n      var year = Math.floor(s.getYear(d) / 12) * 12;\r\n      return s.getDate(year + diff * 12, 0, 1);\r\n    }\r\n\r\n    function changePageQueue(props, diff, anim, callback) {\r\n      if (!diff || !inst._isVisible) {\r\n        return;\r\n      }\r\n\r\n      props.queue.push(arguments);\r\n\r\n      if (props.queue.length == 1) {\r\n        changePage(props, diff, anim, callback);\r\n      }\r\n    }\r\n\r\n    function changePage(props, diff, anim, callback) {\r\n      var i,\r\n          inc,\r\n          html = '',\r\n          $scroller = props.$scroller,\r\n          pageBuffer = props.buffer,\r\n          pageOffset = props.offset,\r\n          pageNr = props.pages,\r\n          pageTotal = props.total,\r\n          firstDay = props.first,\r\n          genPage = props.genPage,\r\n          getFirst = props.getFirst,\r\n          move = diff > 0 ? Math.min(diff, pageBuffer) : Math.max(diff, -pageBuffer),\r\n          pos = props.pos * rtl + move - diff + pageOffset,\r\n          load = Math.abs(diff) > pageBuffer; // Call any pending callback\r\n\r\n      if (props.callback) {\r\n        props.load();\r\n        props.callback(true);\r\n      }\r\n\r\n      props.first = getFirst(firstDay, diff);\r\n      props.pos += move * rtl;\r\n      props.changing = true;\r\n\r\n      props.load = function () {\r\n        if (load) {\r\n          for (i = 0; i < pageNr; i++) {\r\n            inc = diff + i - pageOffset; // ???\r\n\r\n            html += genPage(getFirst(firstDay, inc), pos + inc);\r\n          }\r\n\r\n          if (diff > 0) {\r\n            $$1('.mbsc-cal-slide', $scroller).slice(-pageNr).remove();\r\n            $scroller.append(html);\r\n          } else if (diff < 0) {\r\n            $$1('.mbsc-cal-slide', $scroller).slice(0, pageNr).remove();\r\n            $scroller.prepend(html);\r\n          }\r\n        }\r\n      };\r\n\r\n      props.callback = function (forceStop) {\r\n        var nr = Math.abs(move),\r\n            html = '';\r\n\r\n        if (!inst._isVisible) {\r\n          return;\r\n        }\r\n\r\n        for (i = 0; i < nr; i++) {\r\n          inc = diff + i - pageOffset - pageBuffer + (diff > 0 ? pageTotal - nr : 0); // ???\r\n\r\n          html += genPage(getFirst(firstDay, inc), pos + inc);\r\n        }\r\n\r\n        if (diff > 0) {\r\n          $scroller.append(html);\r\n          $$1('.mbsc-cal-slide', $scroller).slice(0, move).remove();\r\n        } else if (diff < 0) {\r\n          $scroller.prepend(html);\r\n          $$1('.mbsc-cal-slide', $scroller).slice(move).remove();\r\n        }\r\n\r\n        if (load) {\r\n          html = '';\r\n\r\n          for (i = 0; i < nr; i++) {\r\n            inc = diff + i - pageOffset - pageBuffer + (diff > 0 ? 0 : pageTotal - nr); // ???\r\n\r\n            html += genPage(getFirst(firstDay, inc), pos + inc);\r\n          }\r\n\r\n          if (diff > 0) {\r\n            $$1('.mbsc-cal-slide', $scroller).slice(0, move).remove();\r\n            $scroller.prepend(html);\r\n          } else if (diff < 0) {\r\n            $$1('.mbsc-cal-slide', $scroller).slice(move).remove();\r\n            $scroller.append(html);\r\n          }\r\n        }\r\n\r\n        refreshScroller(props);\r\n\r\n        if (callback && !forceStop) {\r\n          callback();\r\n        }\r\n\r\n        props.callback = null;\r\n        props.load = null;\r\n        props.queue.shift();\r\n        load = false;\r\n\r\n        if (props.queue.length) {\r\n          changePage.apply(this, props.queue[0]);\r\n        } else {\r\n          props.changing = false;\r\n          props.onAfterChange(props.first);\r\n        }\r\n      };\r\n\r\n      props.onBeforeChange(props.first);\r\n\r\n      if (props.load) {\r\n        props.load();\r\n        props.scroller.scroll(-props.pos * props.size, anim ? 200 : 0, false, props.callback);\r\n      }\r\n    }\r\n\r\n    function createScroller(cont, min, max, buffer, offset, pages, total, first, onTap, onBeforeChange, onAfterChange, genPage, getFirst) {\r\n      var axis = isVertical ? 'Y' : 'X',\r\n          props = {\r\n        $scroller: $$1('.mbsc-cal-scroll', cont),\r\n        queue: [],\r\n        buffer: buffer,\r\n        offset: offset,\r\n        pages: pages,\r\n        first: first,\r\n        total: total,\r\n        pos: 0,\r\n        min: min,\r\n        max: max,\r\n        genPage: genPage,\r\n        getFirst: getFirst,\r\n        onBeforeChange: onBeforeChange,\r\n        onAfterChange: onAfterChange\r\n      };\r\n      props.scroller = new ScrollViewBase(cont, {\r\n        axis: axis,\r\n        easing: '',\r\n        contSize: 0,\r\n        maxSnapScroll: buffer,\r\n        mousewheel: s.mousewheel === undefined ? isVertical : s.mousewheel,\r\n        time: 200,\r\n        lock: true,\r\n        rtl: isRTL,\r\n        stopProp: false,\r\n        minScroll: 0,\r\n        maxScroll: 0,\r\n        onBtnTap: function onBtnTap(ev) {\r\n          if (ev.domEvent.type == 'touchend') {\r\n            preventClick();\r\n          }\r\n\r\n          onTap($$1(ev.target), ev.domEvent);\r\n        },\r\n        onStart: function onStart() {\r\n          clearTimeout(hoverTimer);\r\n        },\r\n        onGestureStart: function onGestureStart() {\r\n          isPageMove = true;\r\n        },\r\n        onAnimationStart: function onAnimationStart() {\r\n          props.changing = true;\r\n        },\r\n        onAnimationEnd: function onAnimationEnd(ev) {\r\n          isPageMove = false;\r\n\r\n          if (genPage) {\r\n            changePageQueue(props, Math.round((-props.pos * props.size - ev['pos' + axis]) / props.size) * rtl);\r\n          }\r\n        }\r\n      });\r\n\r\n      inst._scrollers.push(props.scroller);\r\n\r\n      return props;\r\n    }\r\n\r\n    function refreshScroller(props, check) {\r\n      var size,\r\n          plus = 0,\r\n          minus = 0,\r\n          firstDay = props.first;\r\n\r\n      if (props.changing && check) {\r\n        return;\r\n      }\r\n\r\n      if (props.getFirst) {\r\n        plus = props.buffer;\r\n        minus = props.buffer; //while (minus && s.getDate(y, m + minus + monthNr - moveMonth - 1, 1) > maxDate) { ???\r\n\r\n        while (minus && props.getFirst(firstDay, minus + props.pages - props.offset - 1) > props.max) {\r\n          minus--;\r\n        } //while (plus && s.getDate(y, m - plus - moveMonth, 1) < minDate) { ???\r\n\r\n\r\n        while (plus && props.getFirst(firstDay, 1 - plus - props.offset) <= props.min) {\r\n          plus--;\r\n        }\r\n      }\r\n\r\n      size = Math.round(calSize / props.pages); // Page size might be a fractional value in case of multiple months\r\n      // so we need to explicitly set the rounded value\r\n\r\n      if (isLiquid && size && props.size != size) {\r\n        props.$scroller[isVertical ? 'height' : 'width'](size);\r\n      }\r\n\r\n      extend$1(props.scroller.settings, {\r\n        snap: size,\r\n        minScroll: (-props.pos * rtl - minus) * size,\r\n        maxScroll: (-props.pos * rtl + plus) * size\r\n      });\r\n      props.size = size;\r\n      props.scroller.refresh();\r\n    }\r\n\r\n    function refresh(render) {\r\n      inst._onRefresh(render);\r\n\r\n      if (inst._isVisible && hasCal && calRows) {\r\n        if (dayScroll && dayScroll.changing) {\r\n          needsRefresh = render;\r\n        } else {\r\n          genAllMonths(currFirstDay, render, true);\r\n          focusDate(activeDate);\r\n        }\r\n      }\r\n    }\r\n\r\n    function onTouchStart(ev) {\r\n      wasTouched = ev.type === 'touchstart';\r\n    }\r\n\r\n    function attachEvents() {\r\n      if (hasCal && calRows) {\r\n        var $scrollers = $$1('.mbsc-cal-scroll-c', $markup); // Day selector\r\n\r\n        dayScroll = createScroller($scrollers[0], minDate, maxDate, pageBuffer, pageOffset, pageNr, pageTotal, currFirstDay, selectDay, onBeforeMonthChange, onAfterMonthChange, genMonth, getPageDay);\r\n\r\n        if (hasQuickNav) {\r\n          // Month selector\r\n          monthScroll = createScroller($scrollers[1], null, null, 1, 0, 1, 3, currFirstDay, selectMonth); // Year selector\r\n\r\n          yearScroll = createScroller($scrollers[2], minFirstYear, maxFirstYear, 1, 0, 1, 3, currFirstDay, selectYear, noop, noop, genYears, getPageYear); // Show / hide month picker\r\n\r\n          inst.tap($monthHdr, function () {\r\n            toggleCont($monthPicker);\r\n            hideCont($yearPicker);\r\n          }); // Show / hide year picker\r\n\r\n          inst.tap($yearHdr, function () {\r\n            toggleCont($yearPicker);\r\n            hideCont($monthPicker);\r\n          });\r\n        } // Init navigation arrows\r\n\r\n\r\n        createStepper($$1('.mbsc-cal-btn', $markup), function (i, diff, ev, next) {\r\n          changePageQueue(dayScroll, diff, true, next);\r\n        }); // Triggers onMonthLoaded on initial render\r\n\r\n        onAfterMonthChange(currFirstDay); // Focus on the selected date on show\r\n\r\n        if ((s.defaultValue !== null || inst._hasValue) && !inst._multiple) {\r\n          inst._activeElm = dayScroll.$active[0];\r\n        }\r\n\r\n        listen($calendar[0], 'touchstart', onTouchStart, {\r\n          passive: true\r\n        });\r\n        listen($calendar[0], 'mousedown', onTouchStart);\r\n        $calendar // Keyboard navigation\r\n        .on('keydown', function (ev) {\r\n          var year = s.getYear(activeDate),\r\n              month = s.getMonth(activeDate),\r\n              day = s.getDay(activeDate),\r\n              newDate;\r\n\r\n          switch (ev.keyCode) {\r\n            case 32:\r\n              //SPACE\r\n              selectDay(dayScroll.$active, ev);\r\n              break;\r\n\r\n            case 37:\r\n              //LEFT_ARROW:\r\n              newDate = s.getDate(year, month, day - 1 * rtl);\r\n              break;\r\n\r\n            case 39:\r\n              //RIGHT_ARROW:\r\n              newDate = s.getDate(year, month, day + 1 * rtl);\r\n              break;\r\n\r\n            case 38:\r\n              //UP_ARROW:\r\n              newDate = s.getDate(year, month, day - 7);\r\n              break;\r\n\r\n            case 40:\r\n              //DOWN_ARROW:\r\n              newDate = s.getDate(year, month, day + 7);\r\n              break;\r\n\r\n            case 36:\r\n              //HOME:\r\n              newDate = s.getDate(year, month, 1);\r\n              break;\r\n\r\n            case 35:\r\n              //END:\r\n              newDate = s.getDate(year, month + 1, 0);\r\n              break;\r\n\r\n            case 33:\r\n              //PAGE_UP:\r\n              newDate = ev.altKey ? s.getDate(year - 1, month, day) : isMonthView ? s.getDate(year, month - 1, day) : s.getDate(year, month, day - calRows * 7);\r\n              break;\r\n\r\n            case 34:\r\n              //PAGE_DOWN:\r\n              newDate = ev.altKey ? s.getDate(year + 1, month, day) : isMonthView ? s.getDate(year, month + 1, day) : s.getDate(year, month, day + calRows * 7);\r\n              break;\r\n          }\r\n\r\n          if (newDate) {\r\n            ev.preventDefault();\r\n            setDate(newDate, true, false, true);\r\n          }\r\n        });\r\n      } // Tabs\r\n\r\n\r\n      inst.tap($$1('.mbsc-cal-tab', $markup), function () {\r\n        inst.changeTab($$1(this).attr('data-control'));\r\n      });\r\n    }\r\n\r\n    preProcessSettings();\r\n    base = DateTime.call(this, inst);\r\n    postProcessSettings(); // Public functions\r\n    // ---\r\n\r\n    inst.refresh = function () {\r\n      refresh(false);\r\n    };\r\n\r\n    inst.redraw = function () {\r\n      refresh(true);\r\n    };\r\n\r\n    inst.navigate = function (d, anim) {\r\n      setDate(makeDate(d, displayFormat, s), true, anim);\r\n    };\r\n\r\n    inst.changeTab = function (tab) {\r\n      if (!inst._isVisible || !controls[tab] || visibleTab == tab) {\r\n        return;\r\n      }\r\n\r\n      visibleTab = tab;\r\n      $$1('.mbsc-cal-tab', $markup).removeClass(cssSelectedTab).removeAttr('aria-selected');\r\n      $$1('.mbsc-cal-tab[data-control=\"' + tab + '\"]', $markup).addClass(cssSelectedTab).attr('aria-selected', 'true');\r\n\r\n      if (hasTabs) {\r\n        $tabPanes.addClass('mbsc-cal-h');\r\n        controls[visibleTab].removeClass('mbsc-cal-h');\r\n      }\r\n\r\n      if (visibleTab == 'calendar') {\r\n        // Set the date of the calendar if date changed from the scroller\r\n        setDate(inst.getDate(true), false, true);\r\n      } // Hide\r\n\r\n\r\n      inst._showDayPicker();\r\n\r\n      inst.trigger('onTabChange', {\r\n        tab: visibleTab\r\n      });\r\n    }; // ---\r\n    // Protected functions\r\n    // ---\r\n\r\n\r\n    inst._checkSize = true;\r\n    inst._onGenMonth = noop;\r\n    inst._onSetDate = noop;\r\n    inst._onRefresh = noop;\r\n    inst._getDayProps = noop;\r\n    inst._prepareObj = prepareObj;\r\n\r\n    inst._showDayPicker = function () {\r\n      if (hasQuickNav) {\r\n        hideCont($yearPicker);\r\n        hideCont($monthPicker);\r\n      }\r\n    };\r\n\r\n    inst._selectDay = inst.__selectDay = function ($day, d, dtime) {\r\n      var fill = inst.live; // Prevents month slide in setDate\r\n\r\n      needsSlide = s.outerMonthChange;\r\n      isDayClick = true; // Set date on scroller\r\n\r\n      inst.setDate(dtime, fill, 1000, !fill, true);\r\n\r\n      if (fill) {\r\n        trigger('onSet', {\r\n          valueText: inst._value\r\n        });\r\n      }\r\n    };\r\n\r\n    inst._checkBtn = checkBtn; // ---\r\n\r\n    return extend$1(base, {\r\n      labels: null,\r\n      // Overrides labels coming from language files\r\n      compClass: 'mbsc-calendar mbsc-dt mbsc-sc',\r\n      onMarkupReady: function onMarkupReady(ev) {\r\n        var j = 0;\r\n        $markup = $$1(ev.target);\r\n        $tabPaneCont = $$1('.mbsc-fr-c', $markup);\r\n        activeDate = inst.getDate(true);\r\n        calSize = 0;\r\n\r\n        if (hasCal) {\r\n          hasMarks = !!(s.marked || s.data) && !s.labels && !s.multiLabel && !s.showEventCount; // hasText = s.showEventCount || !!(s.events || s.labels);\r\n\r\n          needsSlide = true;\r\n          visibleTab = 'calendar';\r\n          calcMonthNr();\r\n          currFirstDay = getFirstDay(constrain(activeDate), isMonthView);\r\n          $tabPaneCont.append(genCalMarkup());\r\n          $monthHdr = $$1('.mbsc-cal-month', $markup);\r\n          $yearHdr = $$1('.mbsc-cal-year', $markup);\r\n          $calendar = $$1('.mbsc-cal-day-scroll-c', $markup);\r\n        }\r\n\r\n        if (hasQuickNav) {\r\n          $yearPicker = $$1('.mbsc-cal-year-picker', $markup);\r\n          $monthPicker = $$1('.mbsc-cal-month-picker', $markup);\r\n        }\r\n\r\n        $tabPanes = $$1('.mbsc-w-p', $markup); // Insert tab markup\r\n\r\n        if (controlsArray.length > 1) {\r\n          $tabPaneCont.before(genTabMarkup());\r\n        } // Find markup for controls\r\n\r\n\r\n        ['date', 'time', 'calendar'].forEach(function (v) {\r\n          if (controls[v]) {\r\n            controls[v] = $tabPanes.eq(j);\r\n            j++;\r\n          } else if (v == 'date' && !controls.date && hasCal) {\r\n            $tabPanes.eq(j).remove();\r\n            j++;\r\n          }\r\n        }); // Insert controls in correct order\r\n\r\n        controlsArray.forEach(function (v) {\r\n          $tabPaneCont.append(controls[v]);\r\n        }); // TODO: this is an ugly solution\r\n\r\n        if (!hasCal && controls.date) {\r\n          controls.date.css('position', 'relative');\r\n        }\r\n\r\n        inst._scrollers = [];\r\n        attachEvents();\r\n      },\r\n      onShow: function onShow() {\r\n        if (hasCal && calRows) {\r\n          setTitle(currFirstDay);\r\n        }\r\n      },\r\n      onHide: function onHide() {\r\n        clearTimeout(hoverTimer);\r\n\r\n        inst._scrollers.forEach(function (v) {\r\n          v.destroy();\r\n        });\r\n\r\n        dayProps = null;\r\n        dayScroll = null;\r\n        monthScroll = null;\r\n        yearScroll = null;\r\n        visibleTab = null;\r\n      },\r\n      onValidated: function onValidated(ev) {\r\n        var ctrl,\r\n            d,\r\n            i = ev.index,\r\n            order = inst._order;\r\n        d = inst.getDate(true);\r\n        selectedDate = d; // Find out on which control was the selection made\r\n\r\n        if (isDayClick) {\r\n          ctrl = 'calendar';\r\n        } else if (i !== undefined) {\r\n          ctrl = order.dd == i || order.d == i || order.m == i || order.y == i ? 'date' : 'time';\r\n        }\r\n\r\n        trigger('onSetDate', {\r\n          date: d,\r\n          control: ctrl\r\n        }); // Set date on calendar\r\n\r\n        if (ctrl !== 'time') {\r\n          setDate(d, false, !!ev.time, isDayClick && !inst._multiple);\r\n        }\r\n\r\n        isDayClick = false;\r\n      },\r\n      onPosition: function onPosition(ev) {\r\n        var i,\r\n            y,\r\n            m,\r\n            doRefresh,\r\n            modalHeight,\r\n            newCalSize,\r\n            availableHeight,\r\n            oldHeight = ev.oldHeight,\r\n            windowHeight = ev.windowHeight;\r\n        hasTabs = (ev.hasTabs || s.tabs === true || s.tabs !== false && isLiquid) && controlsArray.length > 1;\r\n\r\n        if (isLiquid) {\r\n          if (ev.windowWidth >= s.breakPointMd) {\r\n            $$1(ev.target).addClass('mbsc-fr-md');\r\n          } else {\r\n            $$1(ev.target).removeClass('mbsc-fr-md');\r\n          }\r\n        } // Show/hide tabs\r\n\r\n\r\n        if (hasTabs) {\r\n          $markup.addClass('mbsc-cal-tabbed');\r\n          visibleTab = $$1('.mbsc-cal-tab.mbsc-selected', $markup).attr('data-control');\r\n          $tabPanes.addClass('mbsc-cal-h');\r\n          controls[visibleTab].removeClass('mbsc-cal-h');\r\n        } else {\r\n          // visibleTab = 'calendar';\r\n          $markup.removeClass('mbsc-cal-tabbed');\r\n          $tabPanes.removeClass('mbsc-cal-h');\r\n        } // Full screen mode\r\n\r\n\r\n        if (inst._isFullScreen) {\r\n          // Reset height\r\n          $calendar.height('');\r\n          modalHeight = ev.popup.offsetHeight; // Get available height\r\n\r\n          availableHeight = windowHeight - modalHeight + $calendar[0].offsetHeight; // Only set fixed height if calendar height is bigger than viewport height\r\n\r\n          if (windowHeight >= modalHeight) {\r\n            $calendar.height(availableHeight);\r\n          }\r\n        }\r\n\r\n        if (hasLabels && calRows && windowHeight != oldHeight) {\r\n          // Check how many labels can we display on a day\r\n          var calHeight = availableHeight || $calendar[0].offsetHeight;\r\n          var ph = $calendar.find('.mbsc-cal-txt,.mbsc-cal-txt-ph')[0];\r\n          var numberHeight = ph.offsetTop;\r\n          var txtHeight = ph.offsetHeight;\r\n          var newMaxLabels = Math.max(1, Math.floor((calHeight / calRows - numberHeight) / (txtHeight + 2))); // Redraw the calendar, if max labels changed\r\n\r\n          if (maxLabels != newMaxLabels) {\r\n            maxLabels = newMaxLabels;\r\n            inst.redraw();\r\n          }\r\n        } // Refresh scrollviews\r\n\r\n\r\n        if (hasCal && calRows) {\r\n          // Need to calculate size\r\n          if (isLiquid || isVertical || hasTabs) {\r\n            newCalSize = $calendar[0][isVertical ? 'offsetHeight' : 'offsetWidth'];\r\n          } else {\r\n            newCalSize = calWidth || pageNr * 280;\r\n          }\r\n\r\n          doRefresh = newCalSize != calSize;\r\n          calSize = newCalSize; // Use long or short month names\r\n\r\n          if (isLiquid && doRefresh) {\r\n            if (yearChange) {\r\n              monthNames = s.maxMonthWidth > $monthHdr[0].offsetWidth ? s.monthNamesShort : s.monthNames;\r\n              y = s.getYear(currFirstDay);\r\n              m = s.getMonth(currFirstDay);\r\n\r\n              for (i = 0; i < pageNr; i++) {\r\n                $monthHdr.eq(i).text(monthNames[s.getMonth(s.getDate(y, m - pageOffset + i, 1))]);\r\n              }\r\n            }\r\n          }\r\n\r\n          if (doRefresh) {\r\n            refreshScroller(dayScroll, true);\r\n          }\r\n        }\r\n\r\n        if (hasQuickNav && doRefresh) {\r\n          refreshScroller(monthScroll, true);\r\n          refreshScroller(yearScroll, true);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  var Calendar = Scroller;\r\n  var defaults$3 = {};\r\n\r\n  presets.calendar = function (inst) {\r\n    function getDateOnly(d) {\r\n      return adjustedDate(d.getFullYear(), d.getMonth(), d.getDate());\r\n    }\r\n\r\n    function setValues(values) {\r\n      var d,\r\n          i,\r\n          first = null;\r\n      selectedValues = {};\r\n\r\n      if (values && values.length) {\r\n        for (i = 0; i < values.length; i++) {\r\n          d = makeDate(values[i], displayFormat, s, s.isoParts);\r\n          first = first || d;\r\n          selectedValues[getDateOnly(d)] = d;\r\n        }\r\n      }\r\n\r\n      return first;\r\n    }\r\n\r\n    function redraw() {\r\n      inst.redraw();\r\n    } // ---\r\n\r\n\r\n    var base,\r\n        ctx,\r\n        displayFormat,\r\n        firstSelectDay,\r\n        origValues,\r\n        orig = extend$1({}, inst.settings),\r\n        s = extend$1(inst.settings, defaults$3, orig),\r\n        cssSelected = 'mbsc-selected ' + (s.selectedClass || ''),\r\n        defaultValue = s.defaultValue,\r\n        multi = s.select == 'multiple' || s.select > 1 || s.selectType == 'week',\r\n        maxSelect = isNumeric(s.select) ? s.select : Infinity,\r\n        selectedValues = {};\r\n    base = CalendarBase.call(this, inst);\r\n    firstSelectDay = s.firstSelectDay === undefined ? s.firstDay : s.firstSelectDay;\r\n    displayFormat = inst._format;\r\n\r\n    if (multi) {\r\n      setValues(defaultValue);\r\n    } // Extended methods\r\n    // ---\r\n\r\n\r\n    inst._multiple = multi;\r\n\r\n    inst._getDayProps = function (d) {\r\n      return {\r\n        selected: multi ? selectedValues[d] !== undefined : undefined\r\n      };\r\n    };\r\n\r\n    inst._selectDay = function ($day, d, dtime, selected) {\r\n      var isSingleSelect = s.select == 'single' || s.select == 1 || s.select === undefined; // Single select with instant close\r\n\r\n      if (s.setOnDayTap && isSingleSelect && s.display != 'inline') {\r\n        inst.setDate(dtime);\r\n        inst.select();\r\n        return;\r\n      }\r\n\r\n      if (multi) {\r\n        // Multiple day selection\r\n        if (s.selectType == 'week') {\r\n          // Select whole week\r\n          var i,\r\n              sel,\r\n              diff = d.getDay() - firstSelectDay;\r\n          diff = diff < 0 ? 7 + diff : diff;\r\n\r\n          if (isSingleSelect) {\r\n            // Only one week can be selected\r\n            selectedValues = {};\r\n          }\r\n\r\n          for (i = 0; i < 7; i++) {\r\n            sel = adjustedDate(d.getFullYear(), d.getMonth(), d.getDate() - diff + i);\r\n\r\n            if (selected) {\r\n              delete selectedValues[sel];\r\n            } else if (objectToArray(selectedValues).length / 7 < maxSelect) {\r\n              selectedValues[sel] = sel;\r\n            }\r\n          }\r\n\r\n          redraw();\r\n        } else {\r\n          // Select day only\r\n          var days = $$1('.mbsc-cal-day[data-full=\"' + $day.attr('data-full') + '\"]', ctx);\r\n\r\n          if (selected) {\r\n            days.removeClass(cssSelected).removeAttr('aria-selected');\r\n            delete selectedValues[d];\r\n          } else if (objectToArray(selectedValues).length < maxSelect) {\r\n            days.addClass(cssSelected).attr('aria-selected', 'true');\r\n            selectedValues[d] = d;\r\n          }\r\n        }\r\n      } // Standard selection\r\n\r\n\r\n      inst.__selectDay($day, d, dtime);\r\n    };\r\n\r\n    inst.setVal = function (val, fill, change, temp, time) {\r\n      if (multi) {\r\n        val = setValues(val);\r\n      }\r\n\r\n      inst._setVal(val, fill, change, temp, time);\r\n\r\n      if (multi) {\r\n        redraw();\r\n      }\r\n    };\r\n\r\n    inst.getVal = function (temp) {\r\n      var i,\r\n          ret = [];\r\n\r\n      if (multi) {\r\n        for (i in selectedValues) {\r\n          ret.push(returnDate(selectedValues[i], s, displayFormat));\r\n        }\r\n\r\n        return ret;\r\n      }\r\n\r\n      return returnDate(inst.getDate(temp), s, displayFormat);\r\n    }; // ---\r\n\r\n\r\n    return extend$1({}, base, {\r\n      highlight: !multi,\r\n      outerMonthChange: !multi,\r\n      parseValue: function parseValue(v) {\r\n        if (multi && v && typeof v === 'string') {\r\n          v = setValues(v.split(','));\r\n        }\r\n\r\n        if (multi && defaultValue && defaultValue.length) {\r\n          s.defaultValue = defaultValue[0];\r\n        }\r\n\r\n        return base.parseValue.call(this, v);\r\n      },\r\n      formatValue: function formatValue(d) {\r\n        var i,\r\n            ret = [];\r\n\r\n        if (multi) {\r\n          for (i in selectedValues) {\r\n            ret.push(formatDate(displayFormat, selectedValues[i], s));\r\n          }\r\n\r\n          return ret.join(', ');\r\n        }\r\n\r\n        return base.formatValue.call(this, d, inst);\r\n      },\r\n      onClear: function onClear() {\r\n        if (multi) {\r\n          selectedValues = {};\r\n          redraw();\r\n        }\r\n      },\r\n      onBeforeShow: function onBeforeShow() {\r\n        if (s.setOnDayTap === undefined && (!s.buttons || !s.buttons.length) && s.controls.length == 1) {\r\n          s.setOnDayTap = true;\r\n        }\r\n\r\n        if (s.setOnDayTap && s.display != 'inline') {\r\n          s.outerMonthChange = false;\r\n        }\r\n\r\n        if (s.counter && multi) {\r\n          s.headerText = function () {\r\n            var length = 0,\r\n                w = s.selectType == 'week' ? 7 : 1;\r\n            $$1.each(selectedValues, function () {\r\n              length++;\r\n            });\r\n            length = Math.round(length / w);\r\n            return (length > 1 ? s.selectedPluralText || s.selectedText : s.selectedText).replace(/{count}/, length);\r\n          };\r\n        }\r\n      },\r\n      onMarkupReady: function onMarkupReady(ev) {\r\n        base.onMarkupReady.call(this, ev);\r\n        ctx = $$1(ev.target);\r\n\r\n        if (multi) {\r\n          $$1('.mbsc-fr-hdr', ctx).attr('aria-live', 'off');\r\n          origValues = extend$1({}, selectedValues);\r\n        }\r\n      },\r\n      onCancel: function onCancel() {\r\n        if (!inst.live && multi) {\r\n          selectedValues = extend$1({}, origValues);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  var MbscDatetimeBase = (function (_super) {\r\n      __extends(MbscDatetimeBase, _super);\r\n      function MbscDatetimeBase(initialElem, zone, control, inputService, view) {\r\n          return _super.call(this, initialElem, zone, control, inputService, view) || this;\r\n      }\r\n      MbscDatetimeBase.decorators = [\r\n          { type: core.Directive, args: [{ selector: '[mbsc-dt-b' },] },\r\n      ];\r\n      MbscDatetimeBase.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, },\r\n          { type: MbscInputService, },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscDatetimeBase.propDecorators = {\r\n          'defaultValue': [{ type: core.Input },],\r\n          'invalid': [{ type: core.Input },],\r\n          'max': [{ type: core.Input },],\r\n          'min': [{ type: core.Input },],\r\n          'returnFormat': [{ type: core.Input },],\r\n          'steps': [{ type: core.Input },],\r\n          'valid': [{ type: core.Input },],\r\n          'calendarSystem': [{ type: core.Input },],\r\n          'ampmText': [{ type: core.Input },],\r\n          'amText': [{ type: core.Input },],\r\n          'dateFormat': [{ type: core.Input },],\r\n          'dateWheels': [{ type: core.Input },],\r\n          'dayNames': [{ type: core.Input },],\r\n          'dayNamesShort': [{ type: core.Input },],\r\n          'dayText': [{ type: core.Input },],\r\n          'hourText': [{ type: core.Input },],\r\n          'minuteText': [{ type: core.Input },],\r\n          'monthNames': [{ type: core.Input },],\r\n          'monthNamesShort': [{ type: core.Input },],\r\n          'monthSuffix': [{ type: core.Input },],\r\n          'monthText': [{ type: core.Input },],\r\n          'nowText': [{ type: core.Input },],\r\n          'pmText': [{ type: core.Input },],\r\n          'secText': [{ type: core.Input },],\r\n          'timeFormat': [{ type: core.Input },],\r\n          'timeWheels': [{ type: core.Input },],\r\n          'yearSuffix': [{ type: core.Input },],\r\n          'yearText': [{ type: core.Input },],\r\n      };\r\n      return MbscDatetimeBase;\r\n  }(MbscScrollerBase));\r\n  var MbscDatetimeBaseModule = (function () {\r\n      function MbscDatetimeBaseModule() {\r\n      }\r\n      MbscDatetimeBaseModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [common.CommonModule, MbscScrollerBaseModule],\r\n                      declarations: [MbscDatetimeBase],\r\n                  },] },\r\n      ];\r\n      MbscDatetimeBaseModule.ctorParameters = function () { return []; };\r\n      return MbscDatetimeBaseModule;\r\n  }());\r\n\r\n  var MbscCalBase = (function (_super) {\r\n      __extends(MbscCalBase, _super);\r\n      function MbscCalBase(initialElem, zone, control, inputService, view) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, view) || this;\r\n          _this.onTabChange = new core.EventEmitter();\r\n          _this.onLabelTap = new core.EventEmitter();\r\n          _this.onMonthChange = new core.EventEmitter();\r\n          _this.onMonthLoading = new core.EventEmitter();\r\n          _this.onMonthLoaded = new core.EventEmitter();\r\n          _this.onPageChange = new core.EventEmitter();\r\n          _this.onPageLoaded = new core.EventEmitter();\r\n          _this.onPageLoading = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      MbscCalBase.prototype.ngOnInit = function () {\r\n          this.cloneDictionary.colors = [];\r\n          this.cloneDictionary.labels = [];\r\n          this.cloneDictionary.marked = [];\r\n          _super.prototype.ngOnInit.call(this);\r\n      };\r\n      MbscCalBase.decorators = [\r\n          { type: core.Directive, args: [{ selector: '[mbsc-cal-b' },] },\r\n      ];\r\n      MbscCalBase.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, },\r\n          { type: MbscInputService, },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscCalBase.propDecorators = {\r\n          'calendarHeight': [{ type: core.Input },],\r\n          'calendarWidth': [{ type: core.Input },],\r\n          'calendarScroll': [{ type: core.Input },],\r\n          'colors': [{ type: core.Input },],\r\n          'counter': [{ type: core.Input },],\r\n          'defaultValue': [{ type: core.Input },],\r\n          'events': [{ type: core.Input },],\r\n          'labels': [{ type: core.Input },],\r\n          'marked': [{ type: core.Input },],\r\n          'months': [{ type: core.Input },],\r\n          'mousewheel': [{ type: core.Input },],\r\n          'outerMonthChange': [{ type: core.Input },],\r\n          'showOuterDays': [{ type: core.Input },],\r\n          'tabs': [{ type: core.Input },],\r\n          'weekCounter': [{ type: core.Input },],\r\n          'weekDays': [{ type: core.Input },],\r\n          'weeks': [{ type: core.Input },],\r\n          'yearChange': [{ type: core.Input },],\r\n          'dateText': [{ type: core.Input },],\r\n          'dayNamesMin': [{ type: core.Input },],\r\n          'firstDay': [{ type: core.Input },],\r\n          'timeText': [{ type: core.Input },],\r\n          'moreEventsPluralText': [{ type: core.Input },],\r\n          'moreEventsText': [{ type: core.Input },],\r\n          'onTabChange': [{ type: core.Output },],\r\n          'onLabelTap': [{ type: core.Output },],\r\n          'onMonthChange': [{ type: core.Output },],\r\n          'onMonthLoading': [{ type: core.Output },],\r\n          'onMonthLoaded': [{ type: core.Output },],\r\n          'onPageChange': [{ type: core.Output },],\r\n          'onPageLoaded': [{ type: core.Output },],\r\n          'onPageLoading': [{ type: core.Output },],\r\n      };\r\n      return MbscCalBase;\r\n  }(MbscDatetimeBase));\r\n  var MbscCalBaseModule = (function () {\r\n      function MbscCalBaseModule() {\r\n      }\r\n      MbscCalBaseModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [common.CommonModule, MbscDatetimeBaseModule],\r\n                      declarations: [MbscCalBase],\r\n                  },] },\r\n      ];\r\n      MbscCalBaseModule.ctorParameters = function () { return []; };\r\n      return MbscCalBaseModule;\r\n  }());\r\n\r\n  var MbscCalendar = (function (_super) {\r\n      __extends(MbscCalendar, _super);\r\n      function MbscCalendar(initialElement, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElement, zone, control, inputService, view) || this;\r\n          _this.optionService = optionService;\r\n          _this.onSetDate = new core.EventEmitter();\r\n          _this.onCellHoverIn = new core.EventEmitter();\r\n          _this.onCellHoverOut = new core.EventEmitter();\r\n          _this.onDayChange = new core.EventEmitter();\r\n          _this.options = {};\r\n          _this.isMulti = undefined;\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscCalendar.prototype, \"value\", {\r\n          set: function (v) {\r\n              if (!this.control) {\r\n                  this.setNewValueProxy(v);\r\n              }\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscCalendar.prototype.setNewValue = function (v) {\r\n          if (this.instance) {\r\n              var changed = void 0;\r\n              if (this.isMulti) {\r\n                  changed = !deepEqualsArray(v, this.instance.getVal());\r\n              }\r\n              else {\r\n                  var innerValue = this.instance.getVal();\r\n                  changed = ((!innerValue && v) ||\r\n                      (innerValue && !v) ||\r\n                      (innerValue && v && innerValue.toString() !== v.toString()));\r\n              }\r\n              if (changed) {\r\n                  this.instance.setVal(v, true, false);\r\n                  if (this._inputService && this._inputService.input) {\r\n                      this._inputService.input.innerValue = this.instance._value;\r\n                  }\r\n              }\r\n          }\r\n      };\r\n      MbscCalendar.prototype.initControl = function () {\r\n          var options = extend$1({ preset: 'calendar' }, this.optionService ? this.optionService.options : {}, this.options, this.inlineOptionsObj, this.optionExtensions);\r\n          this.instance = new Calendar(this.element, options);\r\n          if (this.initialValue !== undefined && this.initialValue !== \"\") {\r\n              this.instance.setVal(this.initialValue, true, false);\r\n          }\r\n      };\r\n      MbscCalendar.prototype.ngOnInit = function () {\r\n          this.isMulti = this.options && ((this.options.select && this.options.select !== 'single') || (this.options.selectType == 'week'));\r\n          this.cloneDictionary.marked = [];\r\n          this.cloneDictionary.invalid = [];\r\n          _super.prototype.ngOnInit.call(this);\r\n      };\r\n      MbscCalendar.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-calendar]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscCalendar.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscCalendar.propDecorators = {\r\n          'controls': [{ type: core.Input },],\r\n          'firstSelectDay': [{ type: core.Input },],\r\n          'selectType': [{ type: core.Input },],\r\n          'select': [{ type: core.Input },],\r\n          'setOnDayTap': [{ type: core.Input },],\r\n          'onSetDate': [{ type: core.Output },],\r\n          'onCellHoverIn': [{ type: core.Output },],\r\n          'onCellHoverOut': [{ type: core.Output },],\r\n          'onDayChange': [{ type: core.Output },],\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n          'value': [{ type: core.Input, args: ['mbsc-calendar',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['mbsc-calendarChange',] },],\r\n      };\r\n      return MbscCalendar;\r\n  }(MbscCalBase));\r\n  var MbscCalendarComponent = (function (_super) {\r\n      __extends(MbscCalendarComponent, _super);\r\n      function MbscCalendarComponent(initialElem, zone, control, inputService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, null) || this;\r\n          _this.placeholder = '';\r\n          _this.errorMessage = '';\r\n          return _this;\r\n      }\r\n      MbscCalendarComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscCalendarComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-calendar',\r\n                      exportAs: 'mobiscroll',\r\n                      template: INPUT_TEMPLATE\r\n                  },] },\r\n      ];\r\n      MbscCalendarComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscCalendarComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n      };\r\n      return MbscCalendarComponent;\r\n  }(MbscCalendar));\r\n  var MbscCalendarModule = (function () {\r\n      function MbscCalendarModule() {\r\n      }\r\n      MbscCalendarModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [common.CommonModule, MbscCalBaseModule, MbscInputModule],\r\n                      declarations: [MbscCalendar, MbscCalendarComponent],\r\n                      exports: [MbscCalendar, MbscCalendarComponent]\r\n                  },] },\r\n      ];\r\n      MbscCalendarModule.ctorParameters = function () { return []; };\r\n      return MbscCalendarModule;\r\n  }());\r\n\r\n  var Button =\r\n  /*#__PURE__*/\r\n  function (_FormControl) {\r\n    _inheritsLoose(Button, _FormControl);\r\n\r\n    function Button(elm, settings) {\r\n      var _this;\r\n\r\n      _this = _FormControl.call(this, elm, settings) || this;\r\n      var $elm = _this._$elm;\r\n      var hasIcon = $elm.attr('data-icon');\r\n      $elm.addClass('mbsc-btn mbsc-no-touch').find('.mbsc-btn-ic').remove();\r\n\r\n      if (hasIcon) {\r\n        $elm.prepend('<span class=\"mbsc-btn-ic mbsc-ic mbsc-ic-' + hasIcon + '\"></span>');\r\n\r\n        if ($elm.text() === \"\") {\r\n          $elm.addClass('mbsc-btn-icon-only');\r\n        }\r\n      }\r\n\r\n      _this._$rippleElm = $elm;\r\n      return _this;\r\n    }\r\n\r\n    var _proto = Button.prototype;\r\n\r\n    _proto.getClassElm = function getClassElm() {\r\n      return this._$elm;\r\n    };\r\n\r\n    return Button;\r\n  }(FormControl); // Init mbsc-button elements on page load\r\n\r\n  autoInit('[mbsc-button]', Button);\r\n\r\n  var CheckBox =\r\n  /*#__PURE__*/\r\n  function (_FormControl) {\r\n    _inheritsLoose(CheckBox, _FormControl);\r\n\r\n    function CheckBox(elm, settings) {\r\n      var _this;\r\n\r\n      _this = _FormControl.call(this, elm, settings) || this;\r\n\r\n      _this._$parent.prepend(_this._$elm).addClass('mbsc-checkbox mbsc-control-w').find('.mbsc-checkbox-box').remove();\r\n\r\n      _this._$elm.after('<span class=\"mbsc-checkbox-box\"></span>');\r\n\r\n      return _this;\r\n    }\r\n\r\n    return CheckBox;\r\n  }(FormControl); // Init mbsc-checkbox elements on page load\r\n\r\n  autoInit('[mbsc-checkbox]', CheckBox);\r\n\r\n  var Radio =\r\n  /*#__PURE__*/\r\n  function (_FormControl) {\r\n    _inheritsLoose(Radio, _FormControl);\r\n\r\n    function Radio(elm, settings) {\r\n      var _this;\r\n\r\n      _this = _FormControl.call(this, elm, settings) || this;\r\n\r\n      _this._$parent.addClass('mbsc-radio mbsc-control-w').find('.mbsc-radio-box').remove();\r\n\r\n      _this._$elm.after('<span class=\"mbsc-radio-box\"><span></span></span>');\r\n\r\n      return _this;\r\n    }\r\n\r\n    return Radio;\r\n  }(FormControl); // Init mbsc-radio elements on page load\r\n\r\n  autoInit('[mbsc-radio]', Radio);\r\n\r\n  var Select =\r\n  /*#__PURE__*/\r\n  function (_Input) {\r\n    _inheritsLoose(Select, _Input);\r\n\r\n    function Select(elm, settings) {\r\n      var _this;\r\n\r\n      _this = _Input.call(this, elm, settings) || this;\r\n      var $elm = _this._$elm;\r\n      var $parent = _this._$parent;\r\n      var $existing = $parent.find('.mbsc-select-input');\r\n      var $input = $existing.length ? $existing : $$1('<input tabindex=\"-1\" class=\"mbsc-select-input mbsc-control\" readonly>');\r\n      _this._$input = $input;\r\n      _this._delm = $input[0];\r\n      _this._setText = _this._setText.bind(_assertThisInitialized(_this));\r\n      $parent.addClass('mbsc-select' + (_this._$frame ? ' mbsc-select-inline' : ''));\r\n      $elm.after($input);\r\n      $input.after('<span class=\"mbsc-select-ic mbsc-ic mbsc-ic-arrow-down5\"></span>'); // Update dummy input text on change\r\n\r\n      $elm.on('change', _this._setText);\r\n\r\n      _this._setText();\r\n\r\n      return _this;\r\n    }\r\n\r\n    var _proto = Select.prototype;\r\n\r\n    _proto.destroy = function destroy() {\r\n      _Input.prototype.destroy.call(this);\r\n\r\n      this._$parent.find('.mbsc-select-ic').remove();\r\n\r\n      this._$elm.off('change', this._setText);\r\n    };\r\n\r\n    _proto._setText = function _setText() {\r\n      var elm = this._elm;\r\n      var $elm = $$1(elm); // Check if select and mobiscroll select was not initialized\r\n\r\n      if ($elm.is('select') && !$elm.hasClass('mbsc-comp')) {\r\n        this._$input.val(elm.selectedIndex != -1 ? elm.options[elm.selectedIndex].text : '');\r\n      } // Check floating label\r\n\r\n\r\n      this.refresh();\r\n    };\r\n\r\n    return Select;\r\n  }(Input); // Init mbsc-select elements on page load\r\n\r\n  autoInit('[mbsc-dropdown]', Select);\r\n\r\n  var events$2 = ['change', 'keydown', 'input', 'scroll'];\r\n  var sizeDebounce;\r\n\r\n  function sizeTextAreas() {\r\n    clearTimeout(sizeDebounce);\r\n    sizeDebounce = setTimeout(function () {\r\n      $$1('textarea.mbsc-control').each(function () {\r\n        sizeTextArea(this);\r\n      });\r\n    }, 100);\r\n  }\r\n\r\n  function sizeTextArea(control) {\r\n    var height,\r\n        lineNr,\r\n        line,\r\n        rowNr = $$1(control).attr('rows') || 6;\r\n\r\n    if (control.offsetHeight) {\r\n      control.style.height = '';\r\n      line = control.scrollHeight - control.offsetHeight;\r\n      height = control.offsetHeight + (line > 0 ? line : 0);\r\n      lineNr = Math.round(height / 24);\r\n\r\n      if (lineNr > rowNr) {\r\n        //control.scrollTop = height;\r\n        height = 24 * rowNr + (height - lineNr * 24);\r\n        $$1(control).addClass('mbsc-textarea-scroll');\r\n      } else {\r\n        $$1(control).removeClass('mbsc-textarea-scroll');\r\n      }\r\n\r\n      if (height) {\r\n        control.style.height = height + 'px';\r\n      }\r\n    }\r\n  }\r\n\r\n  function scrollTextArea(elm) {\r\n    var $elm = $$1(elm);\r\n\r\n    if (!$elm.hasClass('mbsc-textarea-scroll')) {\r\n      var line = elm.scrollHeight - elm.offsetHeight,\r\n          height = elm.offsetHeight + line,\r\n          lineNr = Math.round(height / 24),\r\n          rowNr = $elm.attr('rows') || 6;\r\n\r\n      if (lineNr <= rowNr) {\r\n        elm.scrollTop = 0;\r\n        elm.style.height = height + 'px';\r\n      }\r\n    }\r\n  }\r\n\r\n  if (isBrowser) {\r\n    // Set height of textareas on viewport size changes\r\n    $$1(window).on('resize orientationchange', sizeTextAreas);\r\n  }\r\n\r\n  var TextArea =\r\n  /*#__PURE__*/\r\n  function (_Input) {\r\n    _inheritsLoose(TextArea, _Input);\r\n\r\n    function TextArea(elm, settings) {\r\n      var _this;\r\n\r\n      _this = _Input.call(this, elm, settings) || this;\r\n\r\n      _this._$parent.addClass('mbsc-textarea');\r\n\r\n      events$2.forEach(function (ev) {\r\n        _this._$elm.on(ev, _this._handle);\r\n      });\r\n      sizeTextArea(elm);\r\n      return _this;\r\n    }\r\n\r\n    var _proto = TextArea.prototype;\r\n\r\n    _proto.destroy = function destroy() {\r\n      var _this2 = this;\r\n\r\n      _Input.prototype.destroy.call(this);\r\n\r\n      events$2.forEach(function (ev) {\r\n        _this2._$elm.off(ev, _this2._handle);\r\n      });\r\n    };\r\n\r\n    _proto.refresh = function refresh() {\r\n      _Input.prototype.refresh.call(this);\r\n\r\n      clearTimeout(this._debounce);\r\n      sizeTextArea(this._elm);\r\n    };\r\n\r\n    _proto._handle = function _handle(ev) {\r\n      _Input.prototype._handle.call(this, ev);\r\n\r\n      switch (ev.type) {\r\n        case 'change':\r\n          sizeTextArea(this._elm);\r\n          break;\r\n\r\n        case 'keydown':\r\n        case 'input':\r\n          this._onInput(ev);\r\n\r\n          break;\r\n\r\n        case 'scroll':\r\n          scrollTextArea(this._elm);\r\n      }\r\n    };\r\n\r\n    _proto._onInput = function _onInput() {\r\n      var _this3 = this;\r\n\r\n      clearTimeout(this._debounce);\r\n      this._debounce = setTimeout(function () {\r\n        sizeTextArea(_this3._elm);\r\n      }, 100);\r\n    };\r\n\r\n    return TextArea;\r\n  }(Input);\r\n\r\n  autoInit('[mbsc-textarea]', TextArea);\r\n\r\n  var SegmentedItem =\r\n  /*#__PURE__*/\r\n  function (_FormControl) {\r\n    _inheritsLoose(SegmentedItem, _FormControl);\r\n\r\n    function SegmentedItem(elm, settings) {\r\n      var _this;\r\n\r\n      _this = _FormControl.call(this, elm, settings) || this;\r\n      var $segmentCont;\r\n      var $segment;\r\n      var $elm = _this._$elm;\r\n      var $parent = _this._$parent;\r\n\r\n      if (!$parent.hasClass('mbsc-segmented-item-ready')) {\r\n        $segmentCont = $$1('<div class=\"mbsc-segmented mbsc-no-touch\"></div>');\r\n        $parent.after($segmentCont);\r\n        $parent.parent().find('input[name=\"' + $elm.attr('name') + '\"]').each(function () {\r\n          var $input = $$1(this);\r\n          $segment = $input.parent().addClass('mbsc-segmented-item mbsc-segmented-item-ready');\r\n          $$1('<span class=\"mbsc-segmented-content\">' + ($input.attr('data-icon') ? '<span class=\"mbsc-ic mbsc-ic-' + $input.attr('data-icon') + '\"></span>' : '') + '</span>').append($segment.contents()).appendTo($segment);\r\n          $segment.prepend($input);\r\n          $segmentCont.append($segment);\r\n        });\r\n      }\r\n\r\n      _this._$rippleElm = $elm.next();\r\n      return _this;\r\n    }\r\n\r\n    var _proto = SegmentedItem.prototype;\r\n\r\n    _proto.getClassElm = function getClassElm() {\r\n      return this._$elm.closest('.mbsc-segmented');\r\n    };\r\n\r\n    return SegmentedItem;\r\n  }(FormControl); // Init mbsc-segmented elements on page load\r\n\r\n  autoInit('[mbsc-segmented]', SegmentedItem);\r\n\r\n  var Stepper = function Stepper(control, settings) {\r\n    var $btnPlus,\r\n        $btnMinus,\r\n        $controls,\r\n        cssClass = '',\r\n        displayValue,\r\n        max,\r\n        min,\r\n        inputStyle,\r\n        ripple,\r\n        scale,\r\n        step,\r\n        stepper,\r\n        s,\r\n        theme,\r\n        val,\r\n        that = this,\r\n        $control = $$1(control),\r\n        ready,\r\n        $parent,\r\n        old = val;\r\n\r\n    function onChange() {\r\n      var v;\r\n\r\n      if (!control.disabled) {\r\n        v = parseFloat($$1(this).val());\r\n        setValue(isNaN(v) ? val : v);\r\n      }\r\n    }\r\n\r\n    function checkDisabled() {\r\n      return control.disabled;\r\n    }\r\n\r\n    function stepValue(index, dir) {\r\n      setValue(val + dir * step);\r\n    }\r\n\r\n    function setValue(v, fill, change) {\r\n      old = val;\r\n\r\n      if (fill === undefined) {\r\n        fill = true;\r\n      }\r\n\r\n      if (change === undefined) {\r\n        change = fill;\r\n      }\r\n\r\n      val = round(v);\r\n      $controls.removeClass('mbsc-disabled');\r\n\r\n      if (fill) {\r\n        $control.val(val);\r\n      }\r\n\r\n      if (val == min) {\r\n        $btnMinus.addClass('mbsc-disabled');\r\n      } else if (val == max) {\r\n        $btnPlus.addClass('mbsc-disabled');\r\n      }\r\n\r\n      if (val !== old && change) {\r\n        $control.trigger('change');\r\n      }\r\n    }\r\n\r\n    function getAttr(attr, def, str) {\r\n      var v = $control.attr(attr);\r\n      return v === undefined || v === '' ? def : str ? v : +v;\r\n    }\r\n\r\n    function round(v) {\r\n      return +Math.min(max, Math.max(Math.round(v / step) * step, min)).toFixed(scale);\r\n    } // Call the parent constructor\r\n\r\n\r\n    Base.call(this, control, settings, true);\r\n    /* TRIALFUNC */\r\n\r\n    that.getVal = function () {\r\n      var v = parseFloat($control.val());\r\n      v = isNaN(v) ? val : v;\r\n      return round(v);\r\n    };\r\n\r\n    that.setVal = function (v, fill, change) {\r\n      v = parseFloat(v);\r\n      setValue(isNaN(v) ? val : v, fill, change);\r\n    };\r\n\r\n    that._init = function () {\r\n      ready = $control.parent().hasClass('mbsc-stepper');\r\n      $parent = ready ? $control.closest('.mbsc-stepper-cont') : $control.parent();\r\n      s = that.settings;\r\n      min = settings.min === undefined ? getAttr('min', s.min) : settings.min;\r\n      max = settings.max === undefined ? getAttr('max', s.max) : settings.max;\r\n      step = settings.step === undefined ? getAttr('step', s.step) : settings.step;\r\n      scale = Math.abs(step) < 1 ? (step + '').split('.')[1].length : 0;\r\n      inputStyle = settings.inputStyle === undefined ? getAttr('data-input-style', s.inputStyle, true) : settings.inputStyle;\r\n      displayValue = $control.attr('data-val') || s.val;\r\n      val = round(+control.value || 0);\r\n      theme = mobiscroll.themes.form[s.theme];\r\n      ripple = theme && theme.addRipple ? theme : null;\r\n\r\n      if (!ready) {\r\n        $parent.addClass('mbsc-stepper-cont mbsc-no-touch mbsc-control-w').addClass(inputStyle == 'box' ? 'mbsc-input-box' : '').addClass(inputStyle == 'outline' ? 'mbsc-input-outline' : '').append('<span class=\"mbsc-segmented mbsc-stepper' + '\"></span>').find('.mbsc-stepper').append('<span class=\"mbsc-segmented-item mbsc-stepper-control mbsc-stepper-minus ' + (val == min ? 'mbsc-disabled' : '') + '\" data-step=\"-1\" tabindex=\"0\"><span class=\"mbsc-segmented-content\"><span class=\"mbsc-ic mbsc-ic-minus\"></span></span></span>').append('<span class=\"mbsc-segmented-item mbsc-stepper-control mbsc-stepper-plus ' + (val == max ? 'mbsc-disabled' : '') + '\"  data-step=\"1\" tabindex=\"0\"><span class=\"mbsc-segmented-content\"> <span class=\"mbsc-ic mbsc-ic-plus\"></span></span></span>').prepend($control);\r\n      }\r\n\r\n      if (cssClass) {\r\n        $parent.removeClass(cssClass).find('.mbsc-segmented').removeClass(cssClass);\r\n      }\r\n\r\n      cssClass = 'mbsc-' + s.theme + (theme.baseTheme ? ' mbsc-' + theme.baseTheme : '') + (s.rtl ? ' mbsc-rtl' : ' mbsc-ltr');\r\n      $parent.addClass(cssClass).find('.mbsc-segmented').addClass(cssClass);\r\n      $btnMinus = $$1('.mbsc-stepper-minus', $parent);\r\n      $btnPlus = $$1('.mbsc-stepper-plus', $parent);\r\n      $controls = $$1('.mbsc-stepper-control', $parent);\r\n\r\n      if (!ready) {\r\n        if (displayValue == 'left') {\r\n          $parent.addClass('mbsc-stepper-val-left');\r\n          $control.after('<span class=\"mbsc-segmented-item\"><span class=\"mbsc-segmented-content\"></span></span>');\r\n        } else if (displayValue == 'right') {\r\n          $parent.addClass('mbsc-stepper-val-right');\r\n          $btnPlus.after('<span class=\"mbsc-segmented-item\"><span class=\"mbsc-segmented-content\"></span></span>');\r\n        } else {\r\n          $btnMinus.after('<span class=\"mbsc-segmented-item\"><span class=\"mbsc-segmented-content mbsc-stepper-val\"></span></span>');\r\n        }\r\n      }\r\n\r\n      if (!stepper) {\r\n        $control.on('change', onChange);\r\n        stepper = createStepper($controls, stepValue, 150, checkDisabled, false, ripple);\r\n      }\r\n\r\n      $control.val(val).attr('data-role', 'stepper').attr('min', min).attr('max', max).attr('step', step).addClass('mbsc-control');\r\n      control.mbscInst = that;\r\n    };\r\n\r\n    that._destroy = function () {\r\n      $control.removeClass('mbsc-control').off('change', onChange);\r\n      stepper.destroy();\r\n      delete control.mbscInst;\r\n    };\r\n\r\n    that.init();\r\n  };\r\n  Stepper.prototype = {\r\n    _class: 'stepper',\r\n    _hasDef: true,\r\n    _hasTheme: true,\r\n    _hasLang: true,\r\n    _defaults: {\r\n      min: 0,\r\n      max: 100,\r\n      step: 1\r\n    }\r\n  };\r\n  classes.Stepper = Stepper; // Init mbsc-stepper elements on page load\r\n\r\n  autoInit('[mbsc-stepper]', Stepper);\r\n\r\n  var ProgressBase = function ProgressBase(elm, settings, inherit) {\r\n    var $elm,\r\n        $parent,\r\n        cssClass,\r\n        s,\r\n        that = this; // Call the parent constructor\r\n\r\n    Base.call(this, elm, settings, true);\r\n    that.__init = noop;\r\n    that.__destroy = noop;\r\n\r\n    that._init = function () {\r\n      var wasInit;\r\n      s = that.settings;\r\n      $elm = $$1(elm); // Check if the element was already initialized\r\n\r\n      wasInit = !!$parent;\r\n      $parent = $elm.parent();\r\n      $parent = $parent.hasClass('mbsc-input-wrap') ? $parent.parent() : $parent;\r\n      that._$parent = $parent;\r\n\r\n      if (cssClass) {\r\n        $parent.removeClass(cssClass);\r\n      }\r\n\r\n      cssClass = that._css + ' mbsc-progress-w mbsc-control-w ' + getCssClass(s);\r\n      $parent.addClass(cssClass);\r\n      $elm.addClass('mbsc-control');\r\n\r\n      that.__init();\r\n\r\n      if (!wasInit) {\r\n        that._attachChange();\r\n      } // Show initial value\r\n\r\n\r\n      that.refresh();\r\n      elm.mbscInst = that;\r\n    };\r\n\r\n    that._destroy = function () {\r\n      that.__destroy();\r\n\r\n      $parent.removeClass(cssClass);\r\n      $elm.removeClass('mbsc-control');\r\n      delete elm.mbscInst;\r\n    };\r\n\r\n    if (!inherit) {\r\n      that.init();\r\n    }\r\n  };\r\n\r\n  var SliderBase = function SliderBase(elm, settings, inherit) {\r\n    var $elm,\r\n        $handle,\r\n        $handleCont,\r\n        $handles,\r\n        $listeners,\r\n        $parent,\r\n        $track,\r\n        action,\r\n        base,\r\n        changed,\r\n        diffX,\r\n        diffY,\r\n        diff,\r\n        endX,\r\n        endY,\r\n        handleIndex,\r\n        isHover,\r\n        isPressed,\r\n        isRtl,\r\n        live,\r\n        max,\r\n        min,\r\n        moved,\r\n        multiple,\r\n        oldValue,\r\n        step,\r\n        s,\r\n        scale,\r\n        startX,\r\n        startY,\r\n        stepDecimal,\r\n        timer,\r\n        totalWidth,\r\n        value,\r\n        that = this,\r\n        lastUpdate = new Date();\r\n\r\n    function onStart(ev) {\r\n      if (ev.type === 'mousedown') {\r\n        ev.preventDefault();\r\n      }\r\n\r\n      if (testTouch(ev, this) && (!action || isHover) && !elm.disabled && !elm.readOnly\r\n      /* TRIALCOND */\r\n      ) {\r\n          if (s.stopProp) {\r\n            ev.stopPropagation();\r\n          }\r\n\r\n          action = true;\r\n          moved = false;\r\n          changed = false;\r\n          startX = getCoord(ev, 'X');\r\n          startY = getCoord(ev, 'Y');\r\n          endX = startX;\r\n          $track.removeClass('mbsc-progress-anim');\r\n          $handle = multiple ? $$1('.mbsc-slider-handle', this) : $handles;\r\n\r\n          if ($handleCont) {\r\n            $handleCont.removeClass('mbsc-handle-curr');\r\n          }\r\n\r\n          $handleCont = $handle.parent().addClass('mbsc-active mbsc-handle-curr');\r\n          $elm.addClass('mbsc-active');\r\n          handleIndex = +$handle.attr('data-index');\r\n          totalWidth = $track[0].offsetWidth;\r\n          diff = $track[0].getBoundingClientRect().left;\r\n\r\n          if (ev.type === 'mousedown') {\r\n            isPressed = true;\r\n            $$1(document).on('mousemove', onMove).on('mouseup', onEnd);\r\n          }\r\n\r\n          if (ev.type === 'mouseenter') {\r\n            isHover = true;\r\n            $$1(document).on('mousemove', onMove);\r\n          }\r\n        }\r\n    }\r\n\r\n    function onMove(ev) {\r\n      if (action) {\r\n        endX = getCoord(ev, 'X');\r\n        endY = getCoord(ev, 'Y');\r\n        diffX = endX - startX;\r\n        diffY = endY - startY;\r\n\r\n        if (Math.abs(diffX) > 5) {\r\n          moved = true;\r\n        }\r\n\r\n        if (moved || isPressed || isHover) {\r\n          if (Math.abs(lastUpdate - new Date()) > 50) {\r\n            lastUpdate = new Date();\r\n            updateSlider(endX, s.round, live && (!isHover || isPressed));\r\n          }\r\n        }\r\n\r\n        if (moved) {\r\n          ev.preventDefault();\r\n        } else if (Math.abs(diffY) > 7 && ev.type == 'touchmove') {\r\n          cleanUp();\r\n        }\r\n      }\r\n    }\r\n\r\n    function onEnd(ev) {\r\n      if (action) {\r\n        ev.preventDefault();\r\n\r\n        if (!multiple) {\r\n          $track.addClass('mbsc-progress-anim');\r\n        }\r\n\r\n        if (isHover && !isPressed) {\r\n          updateValue(value[handleIndex], handleIndex, false, false, true);\r\n        } else {\r\n          updateSlider(endX, true, true);\r\n        }\r\n\r\n        if (!moved && !changed) {\r\n          if (ev.type == 'touchend') {\r\n            // Prevent ghost click\r\n            preventClick();\r\n          }\r\n\r\n          that._onTap(value[handleIndex]);\r\n        }\r\n\r\n        if (ev.type == 'mouseup') {\r\n          isPressed = false;\r\n        }\r\n\r\n        if (ev.type == 'mouseleave') {\r\n          isHover = false;\r\n        }\r\n\r\n        if (!isHover) {\r\n          cleanUp();\r\n        }\r\n      }\r\n    }\r\n\r\n    function onCancel() {\r\n      if (action) {\r\n        cleanUp();\r\n      }\r\n    }\r\n\r\n    function onChange() {\r\n      var v = that._readValue($$1(this)),\r\n          i = +$$1(this).attr('data-index');\r\n\r\n      if (v !== value[i]) {\r\n        value[i] = v;\r\n        oldValue[i] = v;\r\n        updateValue(v, i);\r\n      }\r\n    }\r\n\r\n    function onClick(ev) {\r\n      // Prevent propagating click to label\r\n      ev.stopPropagation();\r\n    }\r\n\r\n    function onLabelClick(ev) {\r\n      // Prevent change on label click for swithes\r\n      ev.preventDefault();\r\n    }\r\n\r\n    function onKeyDown(ev) {\r\n      var dir;\r\n\r\n      if (!elm.disabled) {\r\n        switch (ev.keyCode) {\r\n          case 38:\r\n          case 39:\r\n            dir = 1;\r\n            break;\r\n\r\n          case 40:\r\n          case 37:\r\n            dir = -1;\r\n            break;\r\n        }\r\n\r\n        if (dir) {\r\n          ev.preventDefault();\r\n\r\n          if (!timer) {\r\n            handleIndex = +$$1(this).attr('data-index');\r\n            updateValue(value[handleIndex] + step * dir, handleIndex, true);\r\n            timer = setInterval(function () {\r\n              updateValue(value[handleIndex] + step * dir, handleIndex, true);\r\n            }, 200);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function onKeyUp(ev) {\r\n      ev.preventDefault();\r\n      clearInterval(timer);\r\n      timer = null;\r\n    }\r\n\r\n    function cleanUp() {\r\n      action = false;\r\n      $handleCont.removeClass('mbsc-active');\r\n      $elm.removeClass('mbsc-active'); // Detach document events\r\n\r\n      $$1(document).off('mousemove', onMove).off('mouseup', onEnd);\r\n    }\r\n\r\n    function updateSlider(pos, round, fill) {\r\n      var percent = round ? Math.min(Math[that._rounding || 'round'](Math.max((pos - diff) * 100 / totalWidth, 0) / scale / step) * step * 100 / (max - min + base), 100) : Math.max(0, Math.min((pos - diff) * 100 / totalWidth, 100));\r\n\r\n      if (isRtl) {\r\n        percent = 100 - percent;\r\n      }\r\n\r\n      updateValue(Math.round((min - base + percent / scale) * stepDecimal) / stepDecimal, handleIndex, fill, percent);\r\n    }\r\n\r\n    function updateValue(v, index, fill, percent, refresh, change) {\r\n      var $handle = $handles.eq(index),\r\n          $handleCont = $handle.parent();\r\n      v = Math.min(max, Math.max(v, min));\r\n\r\n      if (change === undefined) {\r\n        change = fill;\r\n      }\r\n\r\n      if (that._update) {\r\n        v = that._update(v, value, index, percent, multiple, refresh, $handleCont);\r\n      } else {\r\n        $handleCont.css({\r\n          left: isRtl ? 'auto' : (percent || getPercent(v, min, max)) + '%',\r\n          right: isRtl ? (percent || getPercent(v, min, max)) + '%' : 'auto'\r\n        });\r\n      }\r\n\r\n      if (v > min) {\r\n        $handleCont.removeClass('mbsc-slider-start');\r\n      } else if (value[index] > min || refresh) {\r\n        $handleCont.addClass('mbsc-slider-start');\r\n      } // Store new value\r\n\r\n\r\n      if (fill) {\r\n        value[index] = v;\r\n      } // Check if value changed\r\n\r\n\r\n      if (fill && oldValue[index] != v) {\r\n        changed = true;\r\n        oldValue[index] = v; // Set new value to the input\r\n\r\n        that._fillValue(v, index, change);\r\n      }\r\n\r\n      $handle.attr('aria-valuenow', v);\r\n    } // Call the parent constructor\r\n\r\n\r\n    ProgressBase.call(this, elm, settings, true);\r\n    that._onTap = noop;\r\n    that.___init = noop;\r\n    that.___destroy = noop;\r\n\r\n    that._attachChange = function () {\r\n      $elm.on(s.changeEvent, onChange);\r\n    };\r\n\r\n    that.__init = function () {\r\n      var wasInit;\r\n\r\n      if ($handles) {\r\n        wasInit = true;\r\n        $handles.parent().remove();\r\n      }\r\n\r\n      that.___init();\r\n\r\n      $parent = that._$parent;\r\n      $track = that._$track;\r\n      $elm = $parent.find('input');\r\n      s = that.settings;\r\n      min = that._min;\r\n      max = that._max;\r\n      base = that._base || 0;\r\n      step = that._step;\r\n      live = that._live;\r\n      stepDecimal = step % 1 !== 0 ? 100 / (+(step % 1).toFixed(2) * 100) : 1;\r\n      scale = 100 / (max - min + base) || 100;\r\n      multiple = $elm.length > 1;\r\n      isRtl = s.rtl;\r\n      value = [];\r\n      oldValue = []; // Read values\r\n\r\n      $elm.each(function (i) {\r\n        value[i] = that._readValue($$1(this));\r\n        $$1(this).attr('data-index', i);\r\n      });\r\n      $handles = $parent.find('.mbsc-slider-handle');\r\n      $listeners = $parent.find(multiple ? '.mbsc-slider-handle-cont' : '.mbsc-progress-cont'); // Attach events\r\n\r\n      $handles.on('keydown', onKeyDown).on('keyup', onKeyUp).on('blur', onKeyUp);\r\n      $listeners.each(function (i, listener) {\r\n        listen(listener, 'touchstart', onStart, {\r\n          passive: true\r\n        });\r\n        listen(listener, 'mousedown', onStart);\r\n        listen(listener, 'touchend', onEnd);\r\n        listen(listener, 'touchcancel', onEnd);\r\n        listen(listener, 'pointercancel', onCancel);\r\n\r\n        if (s.hover) {\r\n          listen(listener, 'mouseenter', onStart);\r\n          listen(listener, 'mouseleave', onEnd);\r\n        }\r\n      });\r\n\r\n      if (!wasInit) {\r\n        $elm.on('click', onClick);\r\n        $parent.on('click', onLabelClick); // Attach to document to avoid non-passive listener warnings\r\n\r\n        listen(document, 'touchmove', onMove, {\r\n          passive: false\r\n        });\r\n      }\r\n    };\r\n\r\n    that.__destroy = function () {\r\n      $parent.off('click', onLabelClick);\r\n      $elm.off(s.changeEvent, onChange).off('click', onClick);\r\n      $handles.off('keydown', onKeyDown).off('keyup', onKeyUp).off('blur', onKeyUp);\r\n      $listeners.each(function (i, listener) {\r\n        unlisten(listener, 'touchstart', onStart, {\r\n          passive: true\r\n        });\r\n        unlisten(listener, 'mousedown', onStart);\r\n        unlisten(listener, 'touchend', onEnd);\r\n        unlisten(listener, 'touchcancel', onEnd);\r\n        unlisten(listener, 'pointercancel', onCancel);\r\n        unlisten(listener, 'mouseenter', onStart);\r\n        unlisten(listener, 'mouseleave', onEnd);\r\n        unlisten(document, 'touchmove', onMove, {\r\n          passive: false\r\n        });\r\n      });\r\n\r\n      that.___destroy();\r\n    };\r\n\r\n    that.refresh = function () {\r\n      $elm.each(function (i) {\r\n        updateValue(that._readValue($$1(this)), i, true, false, true, false);\r\n      });\r\n    };\r\n\r\n    that.getVal = function () {\r\n      return multiple ? value.slice(0) : value[0];\r\n    };\r\n\r\n    that.setVal = that._setVal = function (val, fill, change) {\r\n      if (!$$1.isArray(val)) {\r\n        val = [val];\r\n      }\r\n\r\n      $$1.each(val, function (i, v) {\r\n        value[i] = v;\r\n      });\r\n      $$1.each(val, function (i, v) {\r\n        updateValue(v, i, true, false, true, change);\r\n      });\r\n    };\r\n\r\n    if (!inherit) {\r\n      that.init();\r\n    }\r\n  };\r\n\r\n  var Switch = function Switch(elm, settings) {\r\n    var $elm,\r\n        $parent,\r\n        s,\r\n        formControl,\r\n        that = this;\r\n    settings = settings || {};\r\n    extend$1(settings, {\r\n      changeEvent: 'click',\r\n      round: false\r\n    }); // Call the parent constructor\r\n\r\n    SliderBase.call(this, elm, settings, true);\r\n\r\n    that._readValue = function () {\r\n      return elm.checked ? 1 : 0;\r\n    };\r\n\r\n    that._fillValue = function (v, index, change) {\r\n      $elm.prop('checked', !!v);\r\n\r\n      if (change) {\r\n        $elm.trigger('change');\r\n      }\r\n    };\r\n\r\n    that._onTap = function (v) {\r\n      that._setVal(v ? 0 : 1);\r\n    };\r\n\r\n    that.___init = function () {\r\n      s = that.settings;\r\n      $elm = $$1(elm);\r\n      $parent = $elm.parent();\r\n      $parent.find('.mbsc-switch-track').remove();\r\n      $parent.prepend($elm);\r\n      $elm.attr('data-role', 'switch').after('<span class=\"mbsc-progress-cont mbsc-switch-track\">' + '<span class=\"mbsc-progress-track mbsc-progress-anim\">' + '<span class=\"mbsc-slider-handle-cont\">' + '<span class=\"mbsc-slider-handle mbsc-switch-handle\" data-index=\"0\">' + '<span class=\"mbsc-switch-txt-off\">' + s.offText + '</span>' + '<span class=\"mbsc-switch-txt-on\">' + s.onText + '</span>' + '</span></span></span></span>');\r\n\r\n      if (formControl) {\r\n        formControl.destroy();\r\n      }\r\n\r\n      formControl = new FormControl(elm, s);\r\n      that._$track = $parent.find('.mbsc-progress-track');\r\n      that._min = 0;\r\n      that._max = 1;\r\n      that._step = 1;\r\n    };\r\n\r\n    that.___destroy = function () {\r\n      formControl.destroy();\r\n    };\r\n\r\n    that.getVal = function () {\r\n      return elm.checked;\r\n    };\r\n\r\n    that.setVal = function (val, fill, change) {\r\n      that._setVal(val ? 1 : 0, fill, change);\r\n    };\r\n\r\n    that.init();\r\n  };\r\n  Switch.prototype = {\r\n    _class: 'switch',\r\n    _css: 'mbsc-switch',\r\n    _hasTheme: true,\r\n    _hasLang: true,\r\n    _hasDef: true,\r\n    _defaults: {\r\n      stopProp: true,\r\n      offText: 'Off',\r\n      onText: 'On'\r\n    }\r\n  };\r\n  classes.Switch = Switch; // Init mbsc-switch elements on page load\r\n\r\n  autoInit('[mbsc-switch]', Switch);\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  var Progress = function Progress(elm, settings, inherit) {\r\n    var $display,\r\n        $elm,\r\n        $parent,\r\n        $progress,\r\n        $target,\r\n        $track,\r\n        min,\r\n        max,\r\n        inputStyle,\r\n        labelStyle,\r\n        s,\r\n        template,\r\n        value,\r\n        valueText,\r\n        that = this;\r\n\r\n    function onChange() {\r\n      var v = getAttr('value', min);\r\n\r\n      if (v !== value) {\r\n        updateValue(v);\r\n      }\r\n    }\r\n\r\n    function getAttr(attr, def, str) {\r\n      var v = $elm.attr(attr);\r\n      return v === undefined || v === '' ? def : str ? v : +v;\r\n    }\r\n\r\n    function updateValue(v, refresh, fill, change) {\r\n      v =\r\n      /* TRIALCONDREV */\r\n      Math.min(max, Math.max(v, min));\r\n      $progress.css('width', (v - min) * 100 / (max - min) + '%');\r\n\r\n      if (fill === undefined) {\r\n        fill = true;\r\n      }\r\n\r\n      if (change === undefined) {\r\n        change = fill;\r\n      }\r\n\r\n      if (v !== value || refresh) {\r\n        // Display value\r\n        that._display(v);\r\n      }\r\n\r\n      if (v !== value) {\r\n        // Set new value\r\n        value = v; // Put new value in the progress element\r\n\r\n        if (fill) {\r\n          $elm.attr('value', value);\r\n        } // Trigger change on the element\r\n\r\n\r\n        if (change) {\r\n          $elm.trigger('change');\r\n        }\r\n      }\r\n    } // Call the parent constructor\r\n\r\n\r\n    ProgressBase.call(this, elm, settings, true);\r\n\r\n    that._display = function (v) {\r\n      valueText = template && s.returnAffix ? template.replace(/\\{value\\}/, v).replace(/\\{max\\}/, max) : v;\r\n\r\n      if ($target) {\r\n        $target.html(valueText);\r\n      }\r\n\r\n      if ($display) {\r\n        $display.html(valueText);\r\n      }\r\n    };\r\n\r\n    that._attachChange = function () {\r\n      $elm.on('change', onChange);\r\n    };\r\n\r\n    that.__init = function () {\r\n      var displayValue, i, stepLabels, wasInit;\r\n      s = that.settings;\r\n      $elm = $$1(elm); // Check if the element was already initialized\r\n\r\n      wasInit = !!$parent;\r\n      $parent = that._$parent; // Read settings from data attributes or settings object\r\n\r\n      min = that._min = settings.min === undefined ? getAttr('min', s.min) : settings.min;\r\n      max = that._max = settings.max === undefined ? getAttr('max', s.max) : settings.max;\r\n      inputStyle = settings.inputStyle === undefined ? getAttr('data-input-style', s.inputStyle, true) : settings.inputStyle;\r\n      labelStyle = settings.labelStyle === undefined ? getAttr('data-label-style', s.labelStyle, true) : settings.labelStyle;\r\n      value = getAttr('value', min);\r\n      displayValue = $elm.attr('data-val') || s.val;\r\n      stepLabels = $elm.attr('data-step-labels');\r\n      stepLabels = stepLabels ? JSON.parse(stepLabels) : s.stepLabels;\r\n      template = $elm.attr('data-template') || (max == 100 && !s.template ? '{value}%' : s.template);\r\n\r\n      if (!wasInit) {\r\n        wrapLabel($parent, null, inputStyle, labelStyle, elm);\r\n        addIcon($elm); // Generate track and progress\r\n\r\n        $parent.find('.mbsc-input-wrap').append('<span class=\"mbsc-progress-cont\"><span class=\"mbsc-progress-track mbsc-progress-anim\"><span class=\"mbsc-progress-bar\"></span></span></span>');\r\n        $progress = that._$progress = $parent.find('.mbsc-progress-bar');\r\n        $track = that._$track = $parent.find('.mbsc-progress-track');\r\n      } else {\r\n        if (displayValue) {\r\n          $display.remove();\r\n          $parent.removeClass('mbsc-progress-value-' + (displayValue == 'right' ? 'right' : 'left'));\r\n        }\r\n\r\n        if (stepLabels) {\r\n          $$1('.mbsc-progress-step-label', $track).remove();\r\n        }\r\n      } // Set attributes\r\n\r\n\r\n      $elm.attr('min', min).attr('max', max); // Generate value container on left or right side\r\n\r\n      if (displayValue) {\r\n        $display = $$1('<span class=\"mbsc-progress-value\"></span>');\r\n        $parent.addClass('mbsc-progress-value-' + (displayValue == 'right' ? 'right' : 'left')).find('.mbsc-input-wrap').append($display);\r\n      } // Generate step labels\r\n\r\n\r\n      if (stepLabels) {\r\n        for (i = 0; i < stepLabels.length; ++i) {\r\n          $track.append('<span class=\"mbsc-progress-step-label\" style=\"' + (s.rtl ? 'right' : 'left') + ': ' + (stepLabels[i] - min) * 100 / (max - min) + '%\" >' + stepLabels[i] + '</span>');\r\n        }\r\n      }\r\n\r\n      $target = $$1($elm.attr('data-target') || s.target);\r\n    };\r\n\r\n    that.__destroy = function () {\r\n      $parent.removeClass('mbsc-ic-left mbsc-ic-right').find('.mbsc-progress-cont').remove();\r\n      $parent.find('.mbsc-input-ic').remove();\r\n      $elm.off('change', onChange);\r\n    };\r\n\r\n    that.refresh = function () {\r\n      updateValue(getAttr('value', min), true, false);\r\n    };\r\n\r\n    that.getVal = function () {\r\n      return value;\r\n    };\r\n\r\n    that.setVal = function (v, fill, change) {\r\n      updateValue(v, true, fill, change);\r\n    };\r\n\r\n    if (!inherit) {\r\n      that.init();\r\n    }\r\n  };\r\n  Progress.prototype = {\r\n    _class: 'progress',\r\n    _css: 'mbsc-progress',\r\n    _hasTheme: true,\r\n    _hasLang: true,\r\n    _hasDef: true,\r\n    _defaults: {\r\n      min: 0,\r\n      max: 100,\r\n      returnAffix: true\r\n    }\r\n  };\r\n  classes.Progress = Progress; // Init mbsc-progress elements on page load\r\n\r\n  autoInit('[mbsc-progress]', Progress);\r\n\r\n  var Slider = function Slider(elm, settings, inherit) {\r\n    var $elm,\r\n        $parent,\r\n        $progress,\r\n        $tooltips,\r\n        $track,\r\n        hasProgress,\r\n        hasTooltip,\r\n        isRange,\r\n        isRtl,\r\n        max,\r\n        min,\r\n        step,\r\n        s,\r\n        that = this; // Call the parent constructor\r\n\r\n    Progress.call(this, elm, settings, true);\r\n    var progressInit = that.__init,\r\n        progressDestroy = that.__destroy;\r\n    SliderBase.call(this, elm, settings, true);\r\n    var sliderInit = that.__init,\r\n        sliderDestroy = that.__destroy; // ---\r\n\r\n    that.__init = function () {\r\n      progressInit();\r\n      sliderInit();\r\n    };\r\n\r\n    that.__destroy = function () {\r\n      progressDestroy();\r\n      sliderDestroy();\r\n    };\r\n\r\n    that._update = function (v, value, index, percent, multiple, refresh, $handleCont) {\r\n      if (isRange) {\r\n        if (index === 0) {\r\n          v = Math.min(v, value[1]);\r\n          $progress.css({\r\n            width: getPercent(value[1], min, max) - getPercent(v, min, max) + '%',\r\n            left: isRtl ? 'auto' : getPercent(v, min, max) + '%',\r\n            right: isRtl ? getPercent(v, min, max) + '%' : 'auto'\r\n          });\r\n        } else {\r\n          v = Math.max(v, value[0]);\r\n          $progress.css({\r\n            width: getPercent(v, min, max) - getPercent(value[0], min, max) + '%'\r\n          });\r\n        }\r\n      } else if (multiple || !hasProgress) {\r\n        $handleCont.css({\r\n          left: isRtl ? 'auto' : (percent || getPercent(v, min, max)) + '%',\r\n          right: isRtl ? (percent || getPercent(v, min, max)) + '%' : 'auto'\r\n        });\r\n      } else {\r\n        $progress.css('width', (percent || getPercent(v, min, max)) + '%');\r\n      }\r\n\r\n      if (hasTooltip) {\r\n        $tooltips.eq(index).html(v);\r\n      } // Display value in the specified container(s)\r\n\r\n\r\n      if (!multiple && (value[index] != v || refresh)) {\r\n        that._display(v);\r\n      } // Return validated value\r\n\r\n\r\n      return v;\r\n    };\r\n\r\n    that._readValue = function ($elm) {\r\n      return +$elm.val();\r\n    };\r\n\r\n    that._fillValue = function (v, index, change) {\r\n      $elm.eq(index).val(v);\r\n\r\n      if (change) {\r\n        $elm.eq(index).trigger('change');\r\n      }\r\n    };\r\n\r\n    that._markupReady = function () {\r\n      var i, stepNr;\r\n\r\n      if (hasTooltip) {\r\n        $parent.addClass('mbsc-slider-has-tooltip');\r\n      } // Generate step marks\r\n\r\n\r\n      if (step != 1) {\r\n        stepNr = (max - min) / step;\r\n\r\n        for (i = 0; i <= stepNr; ++i) {\r\n          $track.append('<span class=\"mbsc-slider-step\" style=\"' + (isRtl ? 'right' : 'left') + ':' + 100 / stepNr * i + '%\"></span>');\r\n        }\r\n      } // Generate slider handles\r\n\r\n\r\n      $elm.each(function (i) {\r\n        if (this.type == 'range') {\r\n          // Set min / max / step properties for all inputs\r\n          $$1(this).attr('min', min).attr('max', max).attr('step', step);\r\n        }\r\n\r\n        (hasProgress ? $progress : $track).append('<span class=\"mbsc-slider-handle-cont' + (isRange && !i ? ' mbsc-slider-handle-left' : '') + '\">' + '<span tabindex=\"0\" class=\"mbsc-slider-handle\" aria-valuemin=\"' + min + '\" aria-valuemax=\"' + max + '\" data-index=\"' + i + '\"></span>' + (hasTooltip ? '<span class=\"mbsc-slider-tooltip\"></span>' : '') + '</span>');\r\n      });\r\n      $tooltips = $parent.find('.mbsc-slider-tooltip');\r\n    };\r\n\r\n    that.___init = function () {\r\n      if ($parent) {\r\n        $parent.removeClass('mbsc-slider-has-tooltip');\r\n\r\n        if (step != 1) {\r\n          $$1('.mbsc-slider-step', $track).remove();\r\n        }\r\n      }\r\n\r\n      $parent = that._$parent;\r\n      $track = that._$track;\r\n      $progress = that._$progress;\r\n      $elm = $parent.find('input');\r\n      s = that.settings;\r\n      min = that._min;\r\n      max = that._max;\r\n      that._step = step = settings.step === undefined ? +$elm.attr('step') || s.step : settings.step;\r\n      that._live = getBoolAttr('data-live', s.live, $elm);\r\n      hasTooltip = getBoolAttr('data-tooltip', s.tooltip, $elm);\r\n      hasProgress = getBoolAttr('data-highlight', s.highlight, $elm) && $elm.length < 3;\r\n      isRange = hasProgress && $elm.length == 2;\r\n      isRtl = s.rtl;\r\n\r\n      that._markupReady();\r\n    };\r\n\r\n    if (!inherit) {\r\n      that.init();\r\n    }\r\n  };\r\n  Slider.prototype = {\r\n    _class: 'progress',\r\n    _css: 'mbsc-progress mbsc-slider',\r\n    _hasTheme: true,\r\n    _hasLang: true,\r\n    _hasDef: true,\r\n    _defaults: {\r\n      changeEvent: 'change',\r\n      stopProp: true,\r\n      min: 0,\r\n      max: 100,\r\n      step: 1,\r\n      live: true,\r\n      highlight: true,\r\n      round: true,\r\n      returnAffix: true\r\n    }\r\n  };\r\n  classes.Slider = Slider; // Init mbsc-slider elements on page load\r\n\r\n  autoInit('[mbsc-slider]', Slider);\r\n\r\n  var Rating = function Rating(elm, settings, inherit) {\r\n    var $progress,\r\n        $track,\r\n        max,\r\n        min,\r\n        empty,\r\n        filled,\r\n        s,\r\n        that = this,\r\n        $elm = $$1(elm); // Call the parent constructor\r\n\r\n    Slider.call(this, elm, settings, true);\r\n\r\n    that._update = function (v, value, index, percent, multiple, refresh) {\r\n      $progress.css('width', getPercent(v, 0, max) + '%'); // Display value in the specified container(s)\r\n\r\n      if (!multiple && (value[index] != v || refresh)) {\r\n        that._display(v);\r\n      } // Return validated value\r\n\r\n\r\n      return v;\r\n    };\r\n\r\n    that._markupReady = function () {\r\n      var i,\r\n          emptyString = '',\r\n          filledString = '';\r\n      $track = that._$track;\r\n      $progress = that._$progress;\r\n      s = that.settings;\r\n      min = that._min;\r\n      max = that._max;\r\n      that._base = min;\r\n      that._rounding = s.rtl ? 'floor' : 'ceil';\r\n      empty = $elm.attr('data-empty') || s.empty;\r\n      filled = $elm.attr('data-filled') || s.filled;\r\n\r\n      for (i = 0; i < max; ++i) {\r\n        emptyString += '<span class=\"mbsc-ic mbsc-ic-' + empty + '\"></span>';\r\n        filledString += '<span class=\"mbsc-ic mbsc-ic-' + filled + '\"></span>';\r\n      }\r\n\r\n      $track.html(emptyString);\r\n      $track.append($progress);\r\n      $progress.html(filledString);\r\n      $track.append('<span class=\"mbsc-rating-handle-cont' + '\">' + '<span tabindex=\"0\" class=\"mbsc-slider-handle\" aria-valuemin=\"' + min + '\" aria-valuemax=\"' + max + '\" data-index=\"0\"></span>' + '</span>');\r\n    };\r\n\r\n    if (!inherit) {\r\n      that.init();\r\n    }\r\n  };\r\n  Rating.prototype = {\r\n    _class: 'progress',\r\n    _css: 'mbsc-progress mbsc-rating',\r\n    _hasTheme: true,\r\n    _hasLang: true,\r\n    _hasDef: true,\r\n    _defaults: {\r\n      changeEvent: 'change',\r\n      stopProp: true,\r\n      min: 1,\r\n      max: 5,\r\n      step: 1,\r\n      live: true,\r\n      round: true,\r\n      hover: true,\r\n      highlight: true,\r\n      returnAffix: true,\r\n      empty: 'star',\r\n      filled: 'star3'\r\n    }\r\n  };\r\n  classes.Rating = Rating; // Init mbsc-rating elements on page load\r\n\r\n  autoInit('[mbsc-rating]', Rating);\r\n\r\n  var nr = 1;\r\n  var CollapsibleBase =\r\n  /*#__PURE__*/\r\n  function () {\r\n    function CollapsibleBase(elm, settings) {\r\n      var _this = this;\r\n\r\n      _defineProperty(this, \"onKeyDown\", function (ev) {\r\n        if (ev.which === 32 || ev.keyCode == 13) {\r\n          //space or enter \r\n          ev.preventDefault();\r\n\r\n          _this.collapse();\r\n        }\r\n      });\r\n\r\n      _defineProperty(this, \"onMouseDown\", function (ev) {\r\n        // prevent focus on mouse down\r\n        ev.preventDefault();\r\n      });\r\n\r\n      var content;\r\n      var $header;\r\n      var $content;\r\n      var $elm = $$1(elm);\r\n      this.settings = settings;\r\n      this._isOpen = settings.isOpen || false;\r\n      $elm.addClass('mbsc-collapsible ' + (this._isOpen ? 'mbsc-collapsible-open' : ''));\r\n\r\n      if ($elm.hasClass('mbsc-card')) {\r\n        // card enhance\r\n        $header = $elm.find('.mbsc-card-header').eq(0).addClass('mbsc-collapsible-header');\r\n        $content = $elm.find('.mbsc-card-content').eq(0).addClass('mbsc-collapsible-content');\r\n      } else if ($elm.hasClass('mbsc-form-group') || $elm.hasClass('mbsc-form-group-inset')) {\r\n        // form group enhance\r\n        $header = $elm.find('.mbsc-form-group-title').eq(0).addClass('mbsc-collapsible-header');\r\n        $content = $elm.find('.mbsc-form-group-content').eq(0).addClass('mbsc-collapsible-content');\r\n      } else {\r\n        // if it is used independently\r\n        $header = $elm.find('.mbsc-collapsible-header').eq(0);\r\n        $content = $elm.find('.mbsc-collapsible-content').eq(0);\r\n      }\r\n\r\n      content = $content[0];\r\n\r\n      if (content && !content.id) {\r\n        content.id = 'mbsc-collapsible-' + nr++;\r\n      }\r\n\r\n      if ($header.length && content) {\r\n        var $collapsibleIcon = $$1('<span class=\"mbsc-collapsible-icon mbsc-ic mbsc-ic-arrow-down5\"></span>');\r\n        tap(this, $header, function () {\r\n          _this.collapse();\r\n        });\r\n        $header.attr('role', 'button').attr('aria-expanded', this._isOpen).attr('aria-controls', content.id).attr('tabindex', '0').on('mousedown', this.onMouseDown).on('keydown', this.onKeyDown).append($collapsibleIcon);\r\n      }\r\n\r\n      elm.mbscInst = this;\r\n      this._$header = $header;\r\n      this._$content = $content;\r\n      this._$elm = $elm;\r\n      this._$accordionParent = $elm.parent('[mbsc-accordion], mbsc-accordion, .mbsc-accordion');\r\n      this.show = this.show.bind(this);\r\n      this.hide = this.hide.bind(this);\r\n      this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    var _proto = CollapsibleBase.prototype;\r\n\r\n    _proto.collapse = function collapse(show) {\r\n      var $elm = this._$elm;\r\n      var $content = this._$content;\r\n\r\n      var removeHeight = function removeHeight() {\r\n        $content.off('transitionend', removeHeight).css('height', '');\r\n      };\r\n\r\n      if (show === undefined) {\r\n        show = !this._isOpen;\r\n      }\r\n\r\n      if (show && this._isOpen || !show && !this._isOpen || !$content.length) {\r\n        return;\r\n      }\r\n\r\n      if (show) {\r\n        if (hasTransition) {\r\n          $content.on('transitionend', removeHeight).css('height', $content[0].scrollHeight);\r\n        }\r\n\r\n        $elm.addClass('mbsc-collapsible-open');\r\n      } else {\r\n        if (hasTransition) {\r\n          $content.css('height', getComputedStyle($content[0]).height);\r\n        }\r\n\r\n        setTimeout(function () {\r\n          $content.css('height', 0);\r\n          $elm.removeClass('mbsc-collapsible-open');\r\n        }, 50);\r\n      }\r\n\r\n      if (show && this._$accordionParent) {\r\n        this._$accordionParent.find('.mbsc-collapsible-open').each(function () {\r\n          if (this !== $elm[0]) {\r\n            this.mbscInst.hide();\r\n          }\r\n        });\r\n      }\r\n\r\n      this._isOpen = show;\r\n\r\n      this._$header.attr('aria-expanded', this._isOpen);\r\n    };\r\n\r\n    _proto.show = function show() {\r\n      this.collapse(true);\r\n    };\r\n\r\n    _proto.hide = function hide() {\r\n      this.collapse(false);\r\n    };\r\n\r\n    _proto.toggle = function toggle() {\r\n      this.collapse();\r\n    };\r\n\r\n    _proto.destroy = function destroy() {\r\n      this._$elm.removeClass('mbsc-collapsible mbsc-collapsible-open');\r\n\r\n      this._$content.removeClass('mbsc-collapsible-content');\r\n\r\n      this._$header.removeClass('mbsc-collapsible-header').off('mousedown', this.onMouseDown).off('keydown', this.onKeyDown).find('.mbsc-collapsible-icon').remove();\r\n\r\n      tapOff(this._$header);\r\n    };\r\n\r\n    return CollapsibleBase;\r\n  }();\r\n  classes.CollapsibleBase = CollapsibleBase;\r\n\r\n  var id$2 = 0;\r\n\r\n  function initControls($ctx, controls, s, shallow) {\r\n    $$1('input,select,textarea,progress,button', $ctx).each(function () {\r\n      var control = this,\r\n          $control = $$1(control),\r\n          //$parent = $control.parent(),\r\n      type = getControlType($control); // Skip elements with data-enhance=\"false\"\r\n\r\n      if ($control.attr('data-enhance') != 'false'\r\n      /* TRIALCOND */\r\n      ) {\r\n          if ($control.hasClass('mbsc-control')) {\r\n            if (control.mbscInst) {\r\n              control.mbscInst.option({\r\n                theme: s.theme,\r\n                lang: s.lang,\r\n                rtl: s.rtl,\r\n                onText: s.onText,\r\n                offText: s.offText,\r\n                stopProp: s.stopProp\r\n              });\r\n            }\r\n          } else {\r\n            if (!control.id) {\r\n              control.id = 'mbsc-form-control-' + ++id$2;\r\n            }\r\n\r\n            switch (type) {\r\n              case 'button':\r\n              case 'submit':\r\n                controls[control.id] = new Button(control, {\r\n                  theme: s.theme,\r\n                  rtl: s.rtl,\r\n                  tap: s.tap\r\n                });\r\n                break;\r\n\r\n              case 'switch':\r\n                controls[control.id] = new Switch(control, {\r\n                  theme: s.theme,\r\n                  lang: s.lang,\r\n                  rtl: s.rtl,\r\n                  tap: s.tap,\r\n                  onText: s.onText,\r\n                  offText: s.offText,\r\n                  stopProp: s.stopProp\r\n                });\r\n                break;\r\n\r\n              case 'checkbox':\r\n                controls[control.id] = new CheckBox(control, {\r\n                  tap: s.tap,\r\n                  theme: s.theme,\r\n                  rtl: s.rtl\r\n                });\r\n                break;\r\n\r\n              case 'range':\r\n                if (!$$1(control).parent().hasClass('mbsc-slider')) {\r\n                  controls[control.id] = new Slider(control, {\r\n                    theme: s.theme,\r\n                    lang: s.lang,\r\n                    rtl: s.rtl,\r\n                    stopProp: s.stopProp,\r\n                    labelStyle: s.labelStyle\r\n                  });\r\n                }\r\n\r\n                break;\r\n\r\n              case 'rating':\r\n                controls[control.id] = new Rating(control, {\r\n                  theme: s.theme,\r\n                  lang: s.lang,\r\n                  rtl: s.rtl,\r\n                  stopProp: s.stopProp\r\n                });\r\n                break;\r\n\r\n              case 'progress':\r\n                controls[control.id] = new Progress(control, {\r\n                  theme: s.theme,\r\n                  lang: s.lang,\r\n                  rtl: s.rtl,\r\n                  labelStyle: s.labelStyle\r\n                });\r\n                break;\r\n\r\n              case 'radio':\r\n                controls[control.id] = new Radio(control, {\r\n                  tap: s.tap,\r\n                  theme: s.theme,\r\n                  rtl: s.rtl\r\n                });\r\n                break;\r\n\r\n              case 'select':\r\n              case 'select-one':\r\n              case 'select-multiple':\r\n                controls[control.id] = new Select(control, {\r\n                  tap: s.tap,\r\n                  inputStyle: s.inputStyle,\r\n                  labelStyle: s.labelStyle,\r\n                  theme: s.theme,\r\n                  rtl: s.rtl\r\n                });\r\n                break;\r\n\r\n              case 'textarea':\r\n                controls[control.id] = new TextArea(control, {\r\n                  tap: s.tap,\r\n                  inputStyle: s.inputStyle,\r\n                  labelStyle: s.labelStyle,\r\n                  theme: s.theme,\r\n                  rtl: s.rtl\r\n                });\r\n                break;\r\n\r\n              case 'segmented':\r\n                controls[control.id] = new SegmentedItem(control, {\r\n                  theme: s.theme,\r\n                  rtl: s.rtl,\r\n                  tap: s.tap,\r\n                  inputStyle: s.inputStyle\r\n                });\r\n                break;\r\n\r\n              case 'stepper':\r\n                controls[control.id] = new Stepper(control, {\r\n                  theme: s.theme,\r\n                  rtl: s.rtl\r\n                });\r\n                break;\r\n\r\n              case 'hidden':\r\n                return;\r\n\r\n              default:\r\n                controls[control.id] = new Input(control, {\r\n                  tap: s.tap,\r\n                  inputStyle: s.inputStyle,\r\n                  labelStyle: s.labelStyle,\r\n                  theme: s.theme,\r\n                  rtl: s.rtl\r\n                });\r\n                break;\r\n            }\r\n          }\r\n        }\r\n    });\r\n    $$1('[data-collapsible]:not(.mbsc-collapsible)', $ctx).each(function () {\r\n      var control = this,\r\n          $control = $$1(control),\r\n          isOpen = $control.attr('data-open');\r\n\r\n      if (!control.id) {\r\n        control.id = 'mbsc-form-control-' + ++id$2;\r\n      }\r\n\r\n      controls[control.id] = new CollapsibleBase(control, {\r\n        isOpen: isOpen !== undefined && isOpen != 'false'\r\n      });\r\n      instances[control.id] = controls[control.id];\r\n    }); // Set initial height for textareas\r\n\r\n    if (!shallow) {\r\n      sizeTextAreas();\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  var Card = function Card(el, settings) {\r\n    var s,\r\n        collapsibleInst,\r\n        cssClass = '',\r\n        $elm = $$1(el),\r\n        controls = {},\r\n        that = this;\r\n\r\n    function touched() {\r\n      $elm.removeClass('mbsc-no-touch');\r\n    } // Call the parent constructor\r\n\r\n\r\n    Base.call(this, el, settings, true);\r\n\r\n    that.refresh = function (shallow) {\r\n      initControls($elm, controls, s, shallow);\r\n    };\r\n    /**\r\n     * Card initialization.\r\n     */\r\n\r\n\r\n    that._init = function () {\r\n      var isCollapsible = s.collapsible !== undefined || $elm.attr('data-collapsible') !== undefined;\r\n\r\n      if (!$elm.hasClass('mbsc-card')) {\r\n        $elm.show();\r\n        listen(el, 'touchstart', touched, {\r\n          passive: true\r\n        });\r\n      }\r\n\r\n      if (cssClass) {\r\n        $elm.removeClass(cssClass);\r\n      }\r\n      /*\r\n      cssClass = 'mbsc-card mbsc-form mbsc-no-touch mbsc-' + s.theme +\r\n          (halfBorder ? ' mbsc-form-hb' : '') +\r\n          (s.baseTheme ? ' mbsc-' + s.baseTheme : '') +\r\n          (s.rtl ? ' mbsc-rtl' : ' mbsc-ltr');\r\n      */\r\n      // --- REMOTE TRIAL CODE START ---\r\n\r\n\r\n      cssClass = that.remote.cards.cssClass; // --- REMOTE TRIAL CODE END ---\r\n\r\n      $elm.addClass(cssClass).removeClass('mbsc-cloak');\r\n\r\n      if (isCollapsible && !collapsibleInst) {\r\n        var isOpen = $elm.attr('data-open');\r\n        collapsibleInst = new CollapsibleBase(el, {\r\n          isOpen: isOpen !== undefined && isOpen != 'false' || s.collapsible === true\r\n        });\r\n      }\r\n\r\n      $elm.append(that._getText(mobiscroll, 0.5));\r\n      that.refresh();\r\n    };\r\n    /**\r\n     * Destroys the mobiscroll instance.\r\n     */\r\n\r\n\r\n    that._destroy = function () {\r\n      $elm.removeClass(cssClass);\r\n      unlisten(el, 'touchstart', touched, {\r\n        passive: true\r\n      });\r\n\r\n      for (var id in controls) {\r\n        controls[id].destroy();\r\n      }\r\n\r\n      if (collapsibleInst) {\r\n        collapsibleInst.destroy();\r\n      }\r\n    };\r\n\r\n    that.toggle = function () {\r\n      if (collapsibleInst) {\r\n        collapsibleInst.toggle();\r\n      }\r\n    };\r\n\r\n    that.hide = function () {\r\n      if (collapsibleInst) {\r\n        collapsibleInst.hide();\r\n      }\r\n    };\r\n\r\n    that.show = function () {\r\n      if (collapsibleInst) {\r\n        collapsibleInst.show();\r\n      }\r\n    }; // Constructor\r\n\r\n\r\n    s = that.settings;\r\n    that.init();\r\n  }; // Extend defaults\r\n\r\n  Card.prototype = {\r\n    _hasDef: true,\r\n    _hasTheme: true,\r\n    _hasLang: true,\r\n    _class: 'card',\r\n    _defaults: {\r\n      tap: hasGhostClick,\r\n      stopProp: true,\r\n      rtl: false\r\n    }\r\n  };\r\n  classes.Card = Card; // Init mbsc-card elements on page load or when mbsc-enhance event is triggeres\r\n\r\n  autoInit('[mbsc-card]', Card, true);\r\n\r\n  var SELECTED_CLASS = 'mbsc-selected';\r\n  var ACTIVE_CLASS = 'mbsc-lv-item-active';\r\n  var confirms,\r\n      guid = 1,\r\n      transp = 'transparent';\r\n  var ListView = function ListView(elem, settings) {\r\n    var action,\r\n        actionWidth,\r\n        activeTimer,\r\n        animPos,\r\n        cancel,\r\n        confirmItem,\r\n        confirmIndex,\r\n        cont,\r\n        cont0,\r\n        currIndex,\r\n        currList,\r\n        currPh,\r\n        currParent,\r\n        currSiblings,\r\n        currStage,\r\n        currStageIdx,\r\n        debounce,\r\n        demoMode,\r\n        disabled,\r\n        diffX,\r\n        diffY,\r\n        dropDown,\r\n        dropUp,\r\n        dragged,\r\n        dummyCont,\r\n        endTimer,\r\n        endX,\r\n        endY,\r\n        event,\r\n        fill,\r\n        found,\r\n        groupHeader,\r\n        hadEnhance,\r\n        handlePos,\r\n        hasContext,\r\n        handleDiv,\r\n        hoverDir,\r\n        hoverItem,\r\n        hoverItemOpened,\r\n        hoverTime,\r\n        hoverTimeout,\r\n        hoverTimer,\r\n        htmlLeft,\r\n        htmlRight,\r\n        icon,\r\n        iconc,\r\n        stagec,\r\n        isClick,\r\n        isLoading,\r\n        isTouch,\r\n        itemw,\r\n        item,\r\n        itemHeight,\r\n        itemIndex,\r\n        itemNode,\r\n        itemSelector,\r\n        itemTop,\r\n        listNode,\r\n        listSelector,\r\n        loading,\r\n        maxDrag,\r\n        minDrag,\r\n        multic,\r\n        multiple,\r\n        nextItem,\r\n        nextOffset,\r\n        nextStage,\r\n        nextItems,\r\n        onScrollThrottle,\r\n        onScrollDebounce,\r\n        prevClick,\r\n        preventHover,\r\n        preventTimer,\r\n        prevItems,\r\n        placeholder,\r\n        prevItem,\r\n        prevOffset,\r\n        prevStage,\r\n        quickSwipe,\r\n        rafID,\r\n        rafRunning,\r\n        s,\r\n        scroll,\r\n        selectable,\r\n        simulating,\r\n        slideCont,\r\n        stageNr,\r\n        stages,\r\n        startPos,\r\n        startTime,\r\n        startX,\r\n        startY,\r\n        style,\r\n        swipe,\r\n        swipeInterval,\r\n        swipeTimeout,\r\n        tapHighlight,\r\n        text,\r\n        timer,\r\n        type,\r\n        types,\r\n        undoRef,\r\n        undoAnim,\r\n        wnd,\r\n        wnd0,\r\n        wndHeight,\r\n        wndScroll,\r\n        wndTop,\r\n        that = this,\r\n        e = elem,\r\n        elm = $$1(e),\r\n        transition = 0,\r\n        slideLevel = 0,\r\n        startTop = 0,\r\n        stageObj = {},\r\n        actionQueue = {},\r\n        treeMap = {};\r\n\r\n    function onActionStart() {\r\n      quickSwipe = false;\r\n      prevClick = false;\r\n      animPos = 0;\r\n      startPos = 0;\r\n      startTime = new Date();\r\n      itemw = currList.width();\r\n      currSiblings = getChildren(currList);\r\n      itemIndex = currSiblings.index(item);\r\n      itemHeight = item[0].offsetHeight;\r\n      startTop = item[0].offsetTop;\r\n      type = types[item.attr('data-type') || 'defaults'];\r\n      stages = type.stages;\r\n    }\r\n\r\n    function onStart(ev) {\r\n      var itm;\r\n      var target = closest(cont0, ev.target, '.mbsc-lv-item');\r\n\r\n      if (!target || !cont0.contains(target)) {\r\n        return;\r\n      }\r\n\r\n      if (ev.type === 'touchstart') {\r\n        cont.removeClass('mbsc-no-touch');\r\n        preventHover = true;\r\n        clearTimeout(preventTimer);\r\n      }\r\n\r\n      if (testTouch(ev, target) && !action && !transition && !confirms && !undoing && mobiscroll.LIIiW) {\r\n        action = true;\r\n        cancel = true;\r\n        isClick = false;\r\n        isTouch = ev.type === 'touchstart';\r\n        startX = getCoord(ev, 'X');\r\n        startY = getCoord(ev, 'Y');\r\n        diffX = 0;\r\n        diffY = 0;\r\n        item = $$1(target);\r\n        itm = item; // Local reference\r\n\r\n        onActionStart();\r\n        tapHighlight = type.actionable || item.hasClass('mbsc-lv-parent') || item.hasClass('mbsc-lv-back');\r\n        itemTop = item.offset().top;\r\n\r\n        if (tapHighlight) {\r\n          activeTimer = setTimeout(function () {\r\n            itm.addClass(isTouch ? ACTIVE_CLASS : '');\r\n            event('onItemActivate', {\r\n              target: itm[0],\r\n              domEvent: ev\r\n            });\r\n          }, 120);\r\n        }\r\n\r\n        if (that.sortable && !item.hasClass('mbsc-lv-back')) {\r\n          if (!that.sortable.group) {\r\n            nextItems = item.nextUntil('.mbsc-lv-gr-title').filter('.mbsc-lv-item');\r\n            prevItems = item.prevUntil('.mbsc-lv-gr-title').filter('.mbsc-lv-item');\r\n          }\r\n\r\n          minDrag = (!that.sortable.group ? prevItems.length ? prevItems.eq(-1) : item : currList.children(itemSelector).eq(0))[0].offsetTop - startTop;\r\n          maxDrag = (!that.sortable.group ? nextItems.length ? nextItems.eq(-1) : item : currList.children(itemSelector).eq(-1))[0].offsetTop - startTop;\r\n\r\n          if (that.sortable.handle) {\r\n            if ($$1(ev.target).hasClass('mbsc-lv-handle')) {\r\n              clearTimeout(activeTimer);\r\n\r\n              if (jsPrefix === 'Moz') {\r\n                // On FF we need to prevent touchstart to disable scroll\r\n                ev.preventDefault();\r\n                onSortStart();\r\n              } else {\r\n                timer = setTimeout(function () {\r\n                  onSortStart();\r\n                }, 100);\r\n              }\r\n            }\r\n          } else {\r\n            timer = setTimeout(function () {\r\n              fill.appendTo(item);\r\n              fill[0].style[jsPrefix + 'Animation'] = 'mbsc-lv-fill ' + (s.sortDelay - 100) + 'ms linear';\r\n              clearTimeout(endTimer);\r\n              clearTimeout(activeTimer);\r\n              cancel = false;\r\n              timer = setTimeout(function () {\r\n                fill[0].style[jsPrefix + 'Animation'] = '';\r\n                onSortStart();\r\n              }, s.sortDelay - 80);\r\n            }, 80);\r\n          }\r\n        }\r\n\r\n        if (ev.type == 'mousedown') {\r\n          $$1(document).on('mousemove', onMove).on('mouseup', onEnd);\r\n        }\r\n      }\r\n    }\r\n\r\n    function onMove(ev) {\r\n      var sortChange = false,\r\n          dropChange = true,\r\n          prevPos = animPos;\r\n\r\n      if (action) {\r\n        endX = getCoord(ev, 'X');\r\n        endY = getCoord(ev, 'Y');\r\n        diffX = endX - startX;\r\n        diffY = endY - startY;\r\n        clearTimeout(endTimer);\r\n\r\n        if (!dragged && !swipe && !scroll && !item.hasClass('mbsc-lv-back')) {\r\n          if (Math.abs(diffY) > 10) {\r\n            // It's a scroll\r\n            scroll = true;\r\n            onEnd(extend$1({}, ev, {\r\n              type: ev.type == 'mousemove' ? 'mouseup' : 'touchend'\r\n            }));\r\n            clearTimeout(activeTimer);\r\n          } else if (Math.abs(diffX) > 7) {\r\n            // It's a swipe\r\n            onSwipeStart();\r\n          }\r\n        }\r\n\r\n        if (swipe) {\r\n          ev.preventDefault();\r\n          animPos = diffX / itemw * 100;\r\n          onSwipeMove(prevPos);\r\n        } else if (dragged) {\r\n          ev.preventDefault();\r\n          var scrolled,\r\n              st = wnd.scrollTop(),\r\n              diff = Math.max(minDrag, Math.min(diffY + wndScroll, maxDrag)),\r\n              top = hasContext ? itemTop - wndTop + st - wndScroll : itemTop; // Check if scroll is needed\r\n\r\n          if (wndHeight + st < top + diff + itemHeight) {\r\n            wnd.scrollTop(top + diff - wndHeight + itemHeight);\r\n            scrolled = true;\r\n          } else if (top + diff < st) {\r\n            wnd.scrollTop(top + diff);\r\n            scrolled = true;\r\n          } // Update scroll values if window was scrolled\r\n\r\n\r\n          if (scrolled) {\r\n            wndScroll += wnd.scrollTop() - st;\r\n          } // Check overlap with next item\r\n\r\n\r\n          if (nextOffset) {\r\n            // If subtree exists, drop element on subtree at 1/4, change sort order at 3/4 overlap\r\n            if (that.sortable.multiLevel && nextItem.hasClass('mbsc-lv-parent')) {\r\n              if (startTop + itemHeight / 4 + diff > nextOffset) {\r\n                sortChange = true;\r\n              } else if (startTop + itemHeight - itemHeight / 4 + diff > nextOffset) {\r\n                dropDown = nextItem.addClass('mbsc-lv-item-hl');\r\n                dropChange = false;\r\n              } // Check 1/2 overlap\r\n\r\n            } else if (startTop + itemHeight / 2 + diff > nextOffset) {\r\n              // If over back button, highlight to drop to parent level\r\n              if (nextItem.hasClass('mbsc-lv-back')) {\r\n                if (that.sortable.multiLevel) {\r\n                  dropUp = nextItem.addClass('mbsc-lv-item-hl');\r\n                  dropChange = false;\r\n                }\r\n              } else {\r\n                sortChange = true;\r\n              }\r\n            }\r\n\r\n            if (sortChange) {\r\n              placeholder.insertAfter(nextItem);\r\n              prevItem = nextItem;\r\n              nextItem = getNextPrev(nextItem, 'next');\r\n              prevOffset = nextOffset;\r\n              nextOffset = nextItem.length && nextItem[0].offsetTop;\r\n              currIndex++;\r\n            }\r\n          } // Check overlap with prev item\r\n\r\n\r\n          if (!sortChange && prevOffset) {\r\n            // If subtree exists, drop element on subtree at 1/3, change sort order at 2/3 overlap\r\n            if (that.sortable.multiLevel && prevItem.hasClass('mbsc-lv-parent')) {\r\n              if (startTop + itemHeight - itemHeight / 4 + diff < prevOffset) {\r\n                sortChange = true;\r\n              } else if (startTop + itemHeight / 4 + diff < prevOffset) {\r\n                dropDown = prevItem.addClass('mbsc-lv-item-hl');\r\n                dropChange = false;\r\n              } // Check 1/2 overlap\r\n\r\n            } else if (startTop + itemHeight / 2 + diff < prevOffset) {\r\n              // If over back button, highlight to drop to parent level\r\n              if (prevItem.hasClass('mbsc-lv-back')) {\r\n                if (that.sortable.multiLevel) {\r\n                  dropUp = prevItem.addClass('mbsc-lv-item-hl');\r\n                  dropChange = false;\r\n                }\r\n              } else {\r\n                sortChange = true;\r\n              }\r\n            }\r\n\r\n            if (sortChange) {\r\n              placeholder.insertBefore(prevItem);\r\n              nextItem = prevItem;\r\n              prevItem = getNextPrev(prevItem, 'prev');\r\n              nextOffset = prevOffset;\r\n              prevOffset = prevItem.length && prevItem[0].offsetTop + prevItem[0].offsetHeight;\r\n              currIndex--;\r\n            }\r\n          }\r\n\r\n          if (dropChange) {\r\n            if (dropDown) {\r\n              dropDown.removeClass('mbsc-lv-item-hl');\r\n              dropDown = false;\r\n            }\r\n\r\n            if (dropUp) {\r\n              dropUp.removeClass('mbsc-lv-item-hl');\r\n              dropUp = false;\r\n            }\r\n          }\r\n\r\n          if (sortChange) {\r\n            event('onSortChange', {\r\n              target: item[0],\r\n              index: currIndex\r\n            });\r\n          }\r\n\r\n          drag(item, diff);\r\n          event('onSort', {\r\n            target: item[0],\r\n            index: currIndex\r\n          });\r\n        } else if (Math.abs(diffX) > 5 || Math.abs(diffY) > 5) {\r\n          // Cancel dragstart if movement is > 5px\r\n          stopTimer();\r\n        }\r\n      }\r\n    }\r\n\r\n    function onEnd(ev) {\r\n      var dist,\r\n          map,\r\n          parent,\r\n          itm = item;\r\n\r\n      if (action) {\r\n        action = false;\r\n        stopTimer();\r\n\r\n        if (ev.type == 'mouseup') {\r\n          $$1(document).off('mousemove', onMove).off('mouseup', onEnd);\r\n        }\r\n\r\n        if (!scroll) {\r\n          preventTimer = setTimeout(function () {\r\n            preventHover = false;\r\n          }, 300);\r\n        }\r\n\r\n        if (swipe || scroll || dragged) {\r\n          prevClick = true;\r\n        }\r\n\r\n        if (swipe) {\r\n          onSwipeEnd();\r\n        } else if (dragged) {\r\n          // Sort end\r\n          parent = currList;\r\n\r\n          if (dropDown) {\r\n            resetItem(item.detach());\r\n            map = treeMap[dropDown.attr('data-ref')];\r\n            currIndex = getChildren(map.child).length;\r\n            dropDown.removeClass('mbsc-lv-item-hl');\r\n\r\n            if (s.navigateOnDrop) {\r\n              navigate(dropDown, function () {\r\n                that.add(null, item, null, null, dropDown, true);\r\n                scrollToItem(item);\r\n                onSortEnd(item, itemIndex, parent, true);\r\n              });\r\n            } else {\r\n              that.add(null, item, null, null, dropDown, true);\r\n              onSortEnd(item, itemIndex, parent, true);\r\n            }\r\n          } else if (dropUp) {\r\n            resetItem(item.detach());\r\n            map = treeMap[dropUp.attr('data-back')];\r\n            currIndex = getChildren(map.parent).index(map.item) + 1;\r\n            dropUp.removeClass('mbsc-lv-item-hl');\r\n\r\n            if (s.navigateOnDrop) {\r\n              navigate(dropUp, function () {\r\n                that.add(null, item, currIndex, null, currList, true);\r\n                scrollToItem(item);\r\n                onSortEnd(item, itemIndex, parent, true);\r\n              });\r\n            } else {\r\n              that.add(null, item, currIndex, null, map.parent, true);\r\n              onSortEnd(item, itemIndex, parent, true);\r\n            }\r\n          } else {\r\n            dist = placeholder[0].offsetTop - startTop; // Animate item to its place\r\n\r\n            drag(item, dist, Math.abs(dist - Math.max(minDrag, Math.min(diffY + wndScroll, maxDrag))) * 6, function () {\r\n              resetItem(item);\r\n              item.insertBefore(placeholder);\r\n              onSortEnd(item, itemIndex, parent, currIndex !== itemIndex);\r\n            });\r\n          }\r\n\r\n          dragged = false;\r\n        } else if (!scroll && Math.abs(diffX) < 5 && Math.abs(diffY) < 5) {\r\n          // Tap\r\n          isClick = true; // Trigger click and activate target, if it's a form control\r\n\r\n          if (ev.type === 'touchend' && s.tap) {\r\n            activateControl(ev.target, getControlType($$1(ev.target)), ev);\r\n          }\r\n        }\r\n\r\n        clearTimeout(activeTimer);\r\n        setTimeout(function () {\r\n          itm.removeClass(ACTIVE_CLASS);\r\n          event('onItemDeactivate', {\r\n            target: itm[0]\r\n          });\r\n        }, 100);\r\n        scroll = false;\r\n        currStage = null;\r\n      }\r\n    }\r\n\r\n    function onClick(ev) {\r\n      var isSelected, ret;\r\n\r\n      if (isClick) {\r\n        isSelected = item.attr('data-selected') == 'true';\r\n\r\n        if (type.tap) {\r\n          ret = type.tap.call(e, {\r\n            target: item,\r\n            index: itemIndex,\r\n            domEvent: ev\r\n          }, that);\r\n        }\r\n\r\n        if (tapHighlight && !item.hasClass(ACTIVE_CLASS)) {\r\n          item.addClass(isTouch ? ACTIVE_CLASS : '');\r\n          event('onItemActivate', {\r\n            target: item[0],\r\n            domEvent: ev\r\n          });\r\n        } // select or deselect item on tap\r\n\r\n\r\n        if (selectable) {\r\n          if (multiple) {\r\n            if (isSelected) {\r\n              deselectItem(item);\r\n            } else {\r\n              selectItem(item);\r\n            }\r\n          } else {\r\n            deselectItem($$1(itemSelector, cont).filter('.' + SELECTED_CLASS));\r\n            selectItem(item);\r\n          }\r\n        }\r\n\r\n        ret = event('onItemTap', {\r\n          target: item[0],\r\n          index: itemIndex,\r\n          domEvent: ev,\r\n          selected: isSelected\r\n        });\r\n\r\n        if (ret !== false) {\r\n          navigate(item);\r\n        }\r\n      }\r\n    }\r\n\r\n    function onIconStart(ev) {\r\n      var target = closest(cont0, ev.target, '.mbsc-lv-ic-m');\r\n\r\n      if (!target) {\r\n        return;\r\n      }\r\n\r\n      if (!demoMode) {\r\n        ev.stopPropagation();\r\n        ev.preventDefault();\r\n      }\r\n\r\n      startX = getCoord(ev, 'X');\r\n      startY = getCoord(ev, 'Y');\r\n    }\r\n\r\n    function onSwipeStart() {\r\n      swipe = valueOrFunc(type.swipe, {\r\n        target: item[0],\r\n        index: itemIndex,\r\n        direction: diffX > 0 ? 'right' : 'left'\r\n      });\r\n\r\n      if (swipe) {\r\n        stopTimer();\r\n        clearTimeout(activeTimer);\r\n\r\n        if (type.actions) {\r\n          // Get the width of the action menu from settings\r\n          // Numeric values are converted to string, because 0 is also accepted, we convert back to number at the end\r\n          actionWidth = getActionWidth(type, diffX); // Show action icons and set width\r\n\r\n          multic.html(type.icons).show().children().css('width', actionWidth + '%'); // Hide stage icons\r\n\r\n          iconc.hide(); // Set disabled actions\r\n\r\n          $$1('.mbsc-lv-ic-m', stagec).removeClass('mbsc-lv-ic-disabled');\r\n          $$1(type.leftMenu).each(disableActions);\r\n          $$1(type.rightMenu).each(disableActions);\r\n        } else {\r\n          iconc.show();\r\n          multic.hide();\r\n          currStageIdx = type.start;\r\n          currStage = stages[currStageIdx];\r\n          prevStage = stages[currStageIdx - 1];\r\n          nextStage = stages[currStageIdx + 1];\r\n        }\r\n\r\n        item.addClass('mbsc-lv-item-swiping').removeClass(ACTIVE_CLASS);\r\n        text.css('line-height', itemHeight + 'px');\r\n        stagec.css({\r\n          top: startTop,\r\n          height: itemHeight,\r\n          backgroundColor: getFirstColor(diffX)\r\n        }).addClass('mbsc-lv-stage-c-v').appendTo(currList.parent());\r\n\r\n        if (s.iconSlide) {\r\n          item.append(iconc);\r\n        }\r\n\r\n        event('onSlideStart', {\r\n          target: item[0],\r\n          index: itemIndex\r\n        });\r\n      }\r\n    }\r\n\r\n    function onSwipeMove(prevPos) {\r\n      var stageChanged = false;\r\n\r\n      if (!rafRunning) {\r\n        if (type.actions) {\r\n          stagec.attr('class', 'mbsc-lv-stage-c-v mbsc-lv-stage-c mbsc-lv-' + (animPos < 0 ? 'right' : 'left'));\r\n        } else {\r\n          if (prevStage && (animPos < 0 ? animPos <= prevStage.percent : animPos < currStage.percent)) {\r\n            currStageIdx--;\r\n            nextStage = currStage;\r\n            currStage = prevStage;\r\n            prevStage = stages[currStageIdx - 1];\r\n            stageChanged = true;\r\n          } else if (nextStage && (animPos < 0 ? animPos > currStage.percent : animPos >= nextStage.percent)) {\r\n            currStageIdx++;\r\n            prevStage = currStage;\r\n            currStage = nextStage;\r\n            nextStage = stages[currStageIdx + 1];\r\n            stageChanged = true;\r\n          }\r\n\r\n          if (currStage) {\r\n            if (stageChanged || animPos > 0 == prevPos <= 0) {\r\n              // Also need to update stage background if swipe direction changed\r\n              setStageProps(currStage, s.iconSlide);\r\n            }\r\n\r\n            if (stageChanged) {\r\n              event('onStageChange', {\r\n                target: item[0],\r\n                index: itemIndex,\r\n                stage: currStage\r\n              });\r\n            }\r\n          }\r\n        }\r\n\r\n        if (!simulating) {\r\n          rafRunning = true;\r\n          rafID = raf(slideMove);\r\n        }\r\n      }\r\n    }\r\n\r\n    function onSwipeEnd(callback) {\r\n      function onCloseActions(ev) {\r\n        var target = closest(cont0, ev.target, '.mbsc-lv-ic-m');\r\n\r\n        if (!target) {\r\n          ev.preventDefault();\r\n          slideEnd(item, true, callback);\r\n        }\r\n      }\r\n\r\n      var quickSwipeLeft,\r\n          quickSwipeRight,\r\n          timeDiff,\r\n          itm = item[0],\r\n          pending = false,\r\n          revert = true;\r\n      rafc(rafID);\r\n      rafRunning = false; // We need an additional call to set the position in case when\r\n      // requestAnimationFrame did not call it at least once\r\n      // E.g. in a case of a quick swipe animation frame is\r\n      // cancelled before the first call\r\n\r\n      if (!simulating) {\r\n        slideMove();\r\n      }\r\n\r\n      if (type.actions) {\r\n        if (Math.abs(animPos) > 10 && actionWidth) {\r\n          slide(item, animPos < 0 ? -actionWidth : actionWidth, 200);\r\n          pending = true;\r\n          confirms = true;\r\n          confirmItem = item;\r\n          confirmIndex = itemIndex;\r\n\r\n          if (itm.__mbscOff) {\r\n            itm.__mbscOff();\r\n          }\r\n\r\n          listen(document, 'touchstart', onCloseActions, {\r\n            passive: false\r\n          });\r\n          listen(document, 'mousedown', onCloseActions);\r\n\r\n          itm.__mbscOff = function () {\r\n            unlisten(document, 'touchstart', onCloseActions, {\r\n              passive: false\r\n            });\r\n            unlisten(document, 'mousedown', onCloseActions);\r\n            delete itm.__mbscOff;\r\n          };\r\n        }\r\n      } else if (animPos) {\r\n        if (s.quickSwipe && !simulating) {\r\n          timeDiff = new Date() - startTime;\r\n          quickSwipeLeft = timeDiff < 300 && diffX < -50;\r\n          quickSwipeRight = timeDiff < 300 && diffX > 50;\r\n\r\n          if (quickSwipeLeft) {\r\n            quickSwipe = true;\r\n            currStage = type.left;\r\n            setStageProps(currStage, s.iconSlide);\r\n          } else if (quickSwipeRight) {\r\n            quickSwipe = true;\r\n            currStage = type.right;\r\n            setStageProps(currStage, s.iconSlide);\r\n          }\r\n        }\r\n\r\n        if (currStage && currStage.action) {\r\n          disabled = valueOrFunc(currStage.disabled, {\r\n            target: item[0],\r\n            index: itemIndex\r\n          });\r\n\r\n          if (!disabled) {\r\n            pending = true;\r\n            confirms = simulating || valueOrFunc(currStage.confirm, {\r\n              target: item[0],\r\n              index: itemIndex\r\n            });\r\n\r\n            if (confirms) {\r\n              // Slide to text + icon width\r\n              slide(item, (animPos < 0 ? -1 : 1) * iconc[0].offsetWidth * 100 / itemw, 200, true); // Tap to confirm\r\n\r\n              setConfirm(currStage, item, itemIndex, false, callback);\r\n            } else {\r\n              runAction(currStage, item, itemIndex, callback);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!pending) {\r\n        slideEnd(item, revert, callback);\r\n      }\r\n\r\n      swipe = false;\r\n    }\r\n\r\n    function onSortStart() {\r\n      dragged = true;\r\n      dropDown = false;\r\n      dropUp = false;\r\n      wndScroll = 0;\r\n      currIndex = itemIndex;\r\n\r\n      if (s.vibrate) {\r\n        vibrate();\r\n      }\r\n\r\n      nextItem = getNextPrev(item, 'next');\r\n      nextOffset = nextItem.length && nextItem[0].offsetTop;\r\n      prevItem = getNextPrev(item, 'prev');\r\n      prevOffset = prevItem.length && prevItem[0].offsetTop + prevItem[0].offsetHeight;\r\n      placeholder.height(itemHeight).insertAfter(item); // Item is removed from original list, otherwise messes up striped layout\r\n\r\n      item.css({\r\n        top: startTop\r\n      }).addClass('mbsc-lv-item-dragging').removeClass(ACTIVE_CLASS).appendTo(dummyCont);\r\n      event('onSortStart', {\r\n        target: item[0],\r\n        index: currIndex\r\n      });\r\n    }\r\n\r\n    function onSortEnd(item, itemIndex, parent, update) {\r\n      item.removeClass('mbsc-lv-item-dragging');\r\n      placeholder.remove();\r\n      event('onSortEnd', {\r\n        target: item[0],\r\n        index: currIndex\r\n      });\r\n\r\n      if (s.vibrate) {\r\n        vibrate();\r\n      }\r\n\r\n      if (update) {\r\n        that.addUndoAction(function (next) {\r\n          that.move(item, itemIndex, null, next, parent, true);\r\n        }, true);\r\n        event('onSortUpdate', {\r\n          target: item[0],\r\n          index: currIndex\r\n        });\r\n      }\r\n    }\r\n\r\n    function onMouseLeave() {\r\n      if (!preventHover) {\r\n        clearTimeout(hoverTimer);\r\n\r\n        if (confirms) {\r\n          trigger(document, 'touchstart');\r\n        }\r\n\r\n        if (hoverItemOpened) {\r\n          that.close(hoverItem, hoverTime);\r\n          hoverItemOpened = false;\r\n          hoverItem = null;\r\n        }\r\n      }\r\n    }\r\n\r\n    function onResize() {\r\n      clearTimeout(debounce);\r\n      debounce = setTimeout(function () {\r\n        wndHeight = wnd0.innerHeight || wnd.innerHeight();\r\n        wndTop = hasContext ? wnd.offset().top : 0;\r\n\r\n        if (action) {\r\n          // Reposition stage background, icon and text\r\n          startTop = item[0].offsetTop;\r\n          itemHeight = item[0].offsetHeight;\r\n          stagec.css({\r\n            top: startTop,\r\n            height: itemHeight\r\n          });\r\n        }\r\n      }, 200);\r\n    }\r\n\r\n    function onListClick(ev) {\r\n      if (prevClick) {\r\n        ev.stopPropagation();\r\n        ev.preventDefault();\r\n        prevClick = false;\r\n      }\r\n    }\r\n\r\n    function onScrollBottom() {\r\n      if (!isLoading) {\r\n        clearTimeout(onScrollDebounce);\r\n        onScrollDebounce = setTimeout(function () {\r\n          var height = hasContext ? wnd0.getBoundingClientRect().top + wnd.innerHeight() : window.innerHeight,\r\n              reachedBottom = loading[0].getBoundingClientRect().top - 3 < height;\r\n\r\n          if (!isLoading && reachedBottom) {\r\n            event('onListEnd');\r\n          }\r\n        }, 250);\r\n      }\r\n    }\r\n\r\n    function onScroll() {\r\n      if (dragged || !action) {\r\n        var group,\r\n            st = wnd.scrollTop(),\r\n            elmTop = elm.offset().top,\r\n            elmHeight = elm[0].offsetHeight,\r\n            wndTop = hasContext ? wnd.offset().top : st;\r\n        $$1('.mbsc-lv-gr-title', elm).each(function (i, v) {\r\n          if ($$1(v).offset().top < wndTop) {\r\n            group = v;\r\n          }\r\n        });\r\n\r\n        if (elmTop < wndTop && elmTop + elmHeight > wndTop) {\r\n          groupHeader.show().empty().append($$1(group).clone());\r\n        } else {\r\n          groupHeader.hide();\r\n        }\r\n      }\r\n    }\r\n\r\n    function disableActions(i, v) {\r\n      if (valueOrFunc(v.disabled, {\r\n        target: item[0],\r\n        index: itemIndex\r\n      })) {\r\n        $$1('.mbsc-ic-' + v.icon, stagec).addClass('mbsc-lv-ic-disabled');\r\n      }\r\n    }\r\n\r\n    function runAction(stage, item, index, callback) {\r\n      var revert,\r\n          undoStage = {\r\n        icon: 'undo2',\r\n        text: s.undoText,\r\n        action: function action() {\r\n          that.undo();\r\n        }\r\n      };\r\n\r\n      if (stage.undo) {\r\n        that.startActionTrack(); // Add user defined undo\r\n\r\n        if ($$1.isFunction(stage.undo)) {\r\n          that.addUndoAction(function () {\r\n            stage.undo.call(e, {\r\n              target: item[0],\r\n              index: index\r\n            }, that);\r\n          });\r\n        } // Remember the item where the undo is displayed\r\n\r\n\r\n        undoRef = item.attr('data-ref');\r\n      }\r\n\r\n      revert = stage.action.call(e, {\r\n        target: item[0],\r\n        index: index\r\n      }, that);\r\n\r\n      if (stage.undo) {\r\n        that.endActionTrack();\r\n\r\n        if (revert !== false) {\r\n          slide(item, +item.attr('data-pos') < 0 ? -100 : 100, 200);\r\n        }\r\n\r\n        placeholder.height(itemHeight).insertAfter(item);\r\n        item.css('top', startTop).addClass('mbsc-lv-item-undo');\r\n        multic.hide();\r\n        iconc.show();\r\n        stagec.append(iconc);\r\n        setStageProps(undoStage);\r\n        setConfirm(undoStage, item, index, true, callback);\r\n      } else {\r\n        slideEnd(item, revert, callback);\r\n      }\r\n    }\r\n\r\n    function setConfirm(stage, item, index, ph, callback) {\r\n      function onActionCancel(ev) {\r\n        ev.preventDefault();\r\n\r\n        if (ph) {\r\n          cleanUndo(item);\r\n        }\r\n\r\n        slideEnd(item, true, callback);\r\n      }\r\n\r\n      function onActionConfirmStart(ev) {\r\n        ev.stopPropagation();\r\n        startX = getCoord(ev, 'X');\r\n        startY = getCoord(ev, 'Y');\r\n      }\r\n\r\n      function onActionConfirmEnd(ev) {\r\n        ev.preventDefault();\r\n\r\n        if (ev.type === 'touchend') {\r\n          preventClick();\r\n        } // If movement is less than 10px, it's a tap\r\n\r\n\r\n        if (Math.abs(getCoord(ev, 'X') - startX) < 10 && Math.abs(getCoord(ev, 'Y') - startY) < 10) {\r\n          runAction(stage, item, index, callback);\r\n\r\n          if (ph) {\r\n            undoAnim = null;\r\n            cleanUndo(item);\r\n          }\r\n        }\r\n      }\r\n\r\n      var startX,\r\n          startY,\r\n          itm = item[0];\r\n      confirms = true;\r\n\r\n      if (itm.__mbscOff) {\r\n        itm.__mbscOff();\r\n      }\r\n\r\n      listen(document, 'touchstart', onActionCancel, {\r\n        passive: false\r\n      });\r\n      listen(document, 'mousedown', onActionCancel);\r\n\r\n      if (!demoMode) {\r\n        listen(iconc[0], 'touchstart', onActionConfirmStart, {\r\n          passive: true\r\n        });\r\n        listen(iconc[0], 'mousedown', onActionConfirmStart);\r\n        listen(iconc[0], 'touchend', onActionConfirmEnd);\r\n        listen(iconc[0], 'mouseup', onActionConfirmEnd);\r\n      }\r\n\r\n      itm.__mbscOff = function () {\r\n        unlisten(document, 'touchstart', onActionCancel, {\r\n          passive: false\r\n        });\r\n        unlisten(document, 'mousedown', onActionCancel);\r\n        unlisten(iconc[0], 'touchstart', onActionConfirmStart, {\r\n          passive: true\r\n        });\r\n        unlisten(iconc[0], 'mousedown', onActionConfirmStart);\r\n        unlisten(iconc[0], 'touchend', onActionConfirmEnd);\r\n        unlisten(iconc[0], 'mouseup', onActionConfirmEnd);\r\n        delete itm.__mbscOff;\r\n      };\r\n    }\r\n\r\n    function slideMove() {\r\n      slide(item, startPos + diffX * 100 / itemw);\r\n      rafRunning = false;\r\n    }\r\n\r\n    function slideEnd(item, revert, callback) {\r\n      if (item[0].__mbscOff) {\r\n        item[0].__mbscOff();\r\n      }\r\n\r\n      if (revert !== false) {\r\n        slide(item, 0, item.attr('data-pos') !== '0' ? 200 : 0, false, function () {\r\n          cleanStage(item, callback);\r\n          resetItem(item);\r\n        });\r\n      } else {\r\n        cleanStage(item, callback);\r\n      }\r\n\r\n      confirms = false;\r\n    }\r\n\r\n    function slide(item, pos, time, px, callback) {\r\n      pos = Math.max(swipe == 'right' ? 0 : -100, Math.min(pos, swipe == 'left' ? 0 : 100));\r\n      style = item[0].style;\r\n      item.attr('data-pos', pos);\r\n      style[jsPrefix + 'Transform'] = 'translate3d(' + (px ? itemw * pos / 100 + 'px' : pos + '%') + ',0,0)';\r\n      style[jsPrefix + 'Transition'] = cssPrefix + 'transform ' + (time || 0) + 'ms';\r\n\r\n      if (callback) {\r\n        transition++;\r\n        setTimeout(function () {\r\n          callback();\r\n          transition--;\r\n        }, time);\r\n      }\r\n\r\n      animPos = pos;\r\n    }\r\n\r\n    function drag(item, top, time, callback) {\r\n      top = Math.max(minDrag, Math.min(top, maxDrag));\r\n      style = item[0].style;\r\n      style[jsPrefix + 'Transform'] = 'translate3d(0,' + top + 'px,0)';\r\n      style[jsPrefix + 'Transition'] = cssPrefix + 'transform ' + (time || 0) + 'ms ease-out';\r\n\r\n      if (callback) {\r\n        transition++;\r\n        setTimeout(function () {\r\n          callback();\r\n          transition--;\r\n        }, time);\r\n      }\r\n    }\r\n\r\n    function stopTimer() {\r\n      clearTimeout(timer);\r\n\r\n      if (!cancel && that.sortable) {\r\n        cancel = true;\r\n        fill.remove();\r\n      }\r\n    }\r\n\r\n    function setStageProps(stage, iconSlide) {\r\n      var txt = valueOrFunc(stage.text, {\r\n        target: item[0],\r\n        index: itemIndex\r\n      }) || '';\r\n\r\n      if (valueOrFunc(stage.disabled, {\r\n        target: item[0],\r\n        index: itemIndex\r\n      })) {\r\n        stagec.addClass('mbsc-lv-ic-disabled');\r\n      } else {\r\n        stagec.removeClass('mbsc-lv-ic-disabled');\r\n      }\r\n\r\n      stagec.css('background-color', stage.color || (stage.percent === 0 ? getFirstColor(animPos) : transp));\r\n      iconc.attr('class', 'mbsc-lv-ic-c mbsc-lv-ic-' + (iconSlide ? 'move-' : '') + (animPos < 0 ? 'right' : 'left'));\r\n      icon.attr('class', ' mbsc-lv-ic-s mbsc-lv-ic mbsc-ic mbsc-ic-' + (stage.icon || 'none'));\r\n      text.attr('class', 'mbsc-lv-ic-text' + (stage.icon ? '' : ' mbsc-lv-ic-text-only') + (txt ? '' : ' mbsc-lv-ic-only')).html(txt || '&nbsp;');\r\n\r\n      if (s.animateIcons) {\r\n        if (quickSwipe) {\r\n          icon.addClass('mbsc-lv-ic-v');\r\n        } else {\r\n          setTimeout(function () {\r\n            icon.addClass('mbsc-lv-ic-a');\r\n          }, 10);\r\n        }\r\n      }\r\n    }\r\n\r\n    function cleanStage(item, callback) {\r\n      if (!action) {\r\n        // Don't clean stages if another action started\r\n        icon.attr('class', 'mbsc-lv-ic-s mbsc-lv-ic mbsc-ic mbsc-ic-none');\r\n        stagec.attr('style', '').removeClass('mbsc-lv-stage-c-v');\r\n        text.html('');\r\n      }\r\n\r\n      stagec.removeClass('mbsc-lv-left mbsc-lv-right');\r\n\r\n      if (item) {\r\n        event('onSlideEnd', {\r\n          target: item[0],\r\n          index: itemIndex\r\n        });\r\n\r\n        if (callback) {\r\n          callback();\r\n        }\r\n      }\r\n    }\r\n\r\n    function cleanUndo(item) {\r\n      item.css('top', '').removeClass('mbsc-lv-item-undo'); // Remove placeholder\r\n\r\n      if (undoAnim) {\r\n        that.animate(placeholder, 'collapse', function () {\r\n          placeholder.remove();\r\n        });\r\n      } else {\r\n        placeholder.remove();\r\n      }\r\n\r\n      cleanStage();\r\n      undoRef = null;\r\n      undoAnim = null;\r\n    }\r\n\r\n    function resetItem(item) {\r\n      style = item[0].style;\r\n      style[jsPrefix + 'Transform'] = '';\r\n      style[jsPrefix + 'Transition'] = '';\r\n      style.top = '';\r\n      item.removeClass('mbsc-lv-item-swiping');\r\n    }\r\n\r\n    function valueOrFunc(val, args) {\r\n      return $$1.isFunction(val) ? val.call(this, args, that) : val;\r\n    }\r\n\r\n    function isSelectable(item) {\r\n      return selectable && !item.hasClass('mbsc-lv-parent') && !item.hasClass('mbsc-lv-back');\r\n    }\r\n\r\n    function initItem(item) {\r\n      var id = item.attr('data-ref'),\r\n          role = item.attr('data-role'),\r\n          type = types[item.attr('data-type') || 'defaults'],\r\n          selected = isSelectable(item) && item.attr('data-selected') == 'true';\r\n\r\n      if (!id) {\r\n        id = guid++;\r\n        item.attr('data-ref', id);\r\n      }\r\n\r\n      treeMap[id] = {\r\n        item: item,\r\n        child: item.children(listSelector),\r\n        parent: item.parent(),\r\n        ref: item.parent()[0] === e ? null : item.parent().parent().attr('data-ref')\r\n      };\r\n      item.addClass(role == 'list-divider' ? 'mbsc-lv-gr-title' : 'mbsc-lv-item' + (type.actionable ? ' mbsc-lv-item-actionable' : '') + (selected ? ' ' + SELECTED_CLASS : ''));\r\n      item.attr('aria-selected', selected ? 'true' : 'false'); // Add sort handle\r\n\r\n      if (that.sortable.handle && role != 'list-divider' && !item.children('.mbsc-lv-handle-c').length) {\r\n        item.append(handleDiv);\r\n      }\r\n\r\n      if (s.enhance && !item.hasClass('mbsc-lv-item-enhanced')) {\r\n        var itemIcon = item.attr('data-icon'),\r\n            itemImg = item.find('img').eq(0).addClass('mbsc-lv-img');\r\n\r\n        if (itemImg.is(':first-child')) {\r\n          item.addClass('mbsc-lv-img-' + (s.rtl ? 'right' : 'left'));\r\n        } else if (itemImg.length) {\r\n          item.addClass('mbsc-lv-img-' + (s.rtl ? 'left' : 'right'));\r\n        }\r\n\r\n        item.addClass('mbsc-lv-item-enhanced').children().each(function (i, v) {\r\n          v = $$1(v);\r\n\r\n          if (v.is('p, h1, h2, h3, h4, h5, h6')) {\r\n            v.addClass('mbsc-lv-txt');\r\n          }\r\n        });\r\n\r\n        if (itemIcon) {\r\n          item.addClass('mbsc-lv-item-ic-' + (item.attr('data-icon-align') || (s.rtl ? 'right' : 'left'))).append('<div class=\"mbsc-lv-item-ic mbsc-ic mbsc-ic-' + itemIcon + '\"></div>');\r\n        }\r\n      }\r\n\r\n      item.append(that._getText(mobiscroll, 0.2));\r\n    }\r\n\r\n    function initBranch(elm) {\r\n      // Create map object\r\n      $$1(itemSelector, elm).not('.mbsc-lv-back').each(function () {\r\n        initItem($$1(this));\r\n      }); // Add extra classes and markup (arrows and back items)\r\n\r\n      $$1(listSelector, elm).not('.mbsc-lv').addClass('mbsc-lv').prepend(htmlLeft).parent().addClass('mbsc-lv-parent mbsc-lv-item-actionable').prepend(htmlRight); // Add parent reference for back buttons\r\n\r\n      $$1('.mbsc-lv-back', elm).each(function () {\r\n        $$1(this).attr('data-back', $$1(this).parent().parent().attr('data-ref'));\r\n      });\r\n    }\r\n\r\n    function getChildren(list) {\r\n      return list.children(itemSelector).not('.mbsc-lv-back').not('.mbsc-lv-removed').not('.mbsc-lv-ph');\r\n    }\r\n\r\n    function getItemByID(item) {\r\n      if (typeof item !== 'object') {\r\n        item = $$1(itemSelector, cont).filter('[data-id=\"' + item + '\"]');\r\n      }\r\n\r\n      return $$1(item);\r\n    }\r\n\r\n    function getItemLevel(item) {\r\n      var level = 0,\r\n          map = treeMap[item.attr('data-ref')];\r\n\r\n      while (map && map.ref) {\r\n        level++;\r\n        map = treeMap[map.ref];\r\n      }\r\n\r\n      return level;\r\n    }\r\n\r\n    function getNextPrev(item, dir) {\r\n      item = item[dir](); // Returns next or previous item filtering out placeholder or currently dragged element\r\n\r\n      while (item.length && (!item.hasClass('mbsc-lv-item') || item.hasClass('mbsc-lv-ph') || item.hasClass('mbsc-lv-item-dragging'))) {\r\n        if (!that.sortable.group && item.hasClass('mbsc-lv-gr-title')) {\r\n          return false;\r\n        }\r\n\r\n        item = item[dir]();\r\n      }\r\n\r\n      return item;\r\n    }\r\n\r\n    function getFirstColor(pos) {\r\n      return (pos > 0 ? type.right : type.left).color || transp;\r\n    }\r\n\r\n    function getNumStr(s) {\r\n      return isNumeric(s) ? s + '' : 0;\r\n    }\r\n\r\n    function getActionWidth(type, diffX) {\r\n      return +(diffX < 0 ? getNumStr((type.actionsWidth || 0).right) || getNumStr(type.actionsWidth) || getNumStr(s.actionsWidth.right) || getNumStr(s.actionsWidth) : getNumStr((type.actionsWidth || 0).left) || getNumStr(type.actionsWidth) || getNumStr(s.actionsWidth.left) || getNumStr(s.actionsWidth));\r\n    }\r\n\r\n    function scrollToItem(item, scrollToTop) {\r\n      if (item) {\r\n        var scrollTop = wnd.scrollTop(),\r\n            itemHeight = item.is('.mbsc-lv-item') ? item[0].offsetHeight : 0,\r\n            itemTop = item.offset().top + (hasContext ? scrollTop - wndTop : 0);\r\n\r\n        if (scrollToTop) {\r\n          if (itemTop < scrollTop || itemTop + itemHeight > scrollTop + wndHeight) {\r\n            wnd.scrollTop(itemTop);\r\n          }\r\n        } else {\r\n          if (itemTop < scrollTop) {\r\n            wnd.scrollTop(itemTop);\r\n          } else if (itemTop + itemHeight > scrollTop + wndHeight) {\r\n            wnd.scrollTop(Math.min(itemTop, itemTop + itemHeight - wndHeight / 2));\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function drill(dir, list, item, callback, scrollToTop) {\r\n      var parent = list.parent(),\r\n          ph = list.prev();\r\n      callback = callback || noop;\r\n\r\n      if (ph[0] === iconc[0]) {\r\n        ph = iconc.prev();\r\n      }\r\n\r\n      if (s.rtl) {\r\n        dir = dir === 'l' ? 'r' : 'l';\r\n      }\r\n\r\n      if (currList[0] !== list[0]) {\r\n        event('onNavStart', {\r\n          level: slideLevel,\r\n          direction: dir,\r\n          list: list[0]\r\n        });\r\n        slideCont.prepend(list.addClass('mbsc-lv-v mbsc-lv-sl-new')); // If top of the list is not visible, scroll to top\r\n\r\n        scrollToItem(cont);\r\n        animate(slideCont, 'mbsc-lv-sl-' + dir, function () {\r\n          currList.removeClass('mbsc-lv-sl-curr');\r\n          list.removeClass('mbsc-lv-sl-new').addClass('mbsc-lv-sl-curr');\r\n\r\n          if (currPh && currPh.length) {\r\n            currList.removeClass('mbsc-lv-v').insertAfter(currPh);\r\n          } else {\r\n            currParent.append(currList.removeClass('mbsc-lv-v'));\r\n          } // Remember the previous element where we need to put back the list later\r\n          // We need this because some frameworks like ember js put additional elements (script tags)\r\n          // and appending to parent element is not ok\r\n\r\n\r\n          currPh = ph;\r\n          currParent = parent;\r\n          currList = list;\r\n          scrollToItem(item, scrollToTop);\r\n          callback.call(e, item);\r\n          event('onNavEnd', {\r\n            level: slideLevel,\r\n            direction: dir,\r\n            list: list[0]\r\n          });\r\n        });\r\n      } else {\r\n        scrollToItem(item, scrollToTop);\r\n        callback.call(e, item);\r\n      }\r\n    }\r\n\r\n    function navigate(item, callback) {\r\n      if (!transition) {\r\n        if (item.hasClass('mbsc-lv-parent')) {\r\n          slideLevel++;\r\n          drill('r', treeMap[item.attr('data-ref')].child, null, callback);\r\n        } else if (item.hasClass('mbsc-lv-back')) {\r\n          slideLevel--;\r\n          drill('l', treeMap[item.attr('data-back')].parent, treeMap[item.attr('data-back')].item, callback);\r\n        }\r\n      }\r\n    }\r\n\r\n    function animate(el, anim, callback) {\r\n      var timer;\r\n\r\n      function onAnimEnd() {\r\n        clearTimeout(timer);\r\n        transition--;\r\n        el.off(animEnd, onAnimEnd).removeClass(anim);\r\n        callback.call(e, el);\r\n      }\r\n\r\n      callback = callback || noop;\r\n\r\n      if (s.animation && anim !== 'mbsc-lv-item-none') {\r\n        transition++;\r\n        el.on(animEnd, onAnimEnd).addClass(anim); // animEnd event will not execute with some integration plugins, this is a workaround to make sure it's executed\r\n\r\n        timer = setTimeout(onAnimEnd, 250);\r\n      } else {\r\n        callback.call(e, el);\r\n      }\r\n    }\r\n\r\n    function doAction(el, action) {\r\n      var queue,\r\n          id = el.attr('data-ref');\r\n      queue = actionQueue[id] = actionQueue[id] || [];\r\n\r\n      if (action) {\r\n        queue.push(action);\r\n      }\r\n\r\n      if (el.attr('data-action')) {\r\n        return;\r\n      }\r\n\r\n      action = queue.shift(); // Check this for safety\r\n      // There was a case in angular were the data-ref attribute was lost,\r\n      // so the queue was empty\r\n\r\n      if (action) {\r\n        el.attr('data-action', 1);\r\n        action(function () {\r\n          el.removeAttr('data-action');\r\n\r\n          if (queue.length) {\r\n            doAction(el);\r\n          } else {\r\n            delete actionQueue[id];\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    function processStages(stages, dir, duplicate) {\r\n      var count, temp;\r\n\r\n      if (stages && stages.length) {\r\n        count = 100 / (stages.length + 2);\r\n        $$1.each(stages, function (i, stage) {\r\n          if (stage.key === undefined) {\r\n            stage.key = stageNr++;\r\n          }\r\n\r\n          if (stage.percent === undefined) {\r\n            // if no percent passed then generate to both sides\r\n            stage.percent = dir * count * (i + 1);\r\n\r\n            if (duplicate) {\r\n              temp = extend$1({}, stage);\r\n              temp.key = stageNr++;\r\n              temp.percent = -count * (i + 1);\r\n              stages.push(temp);\r\n              stageObj[temp.key] = temp;\r\n            }\r\n          }\r\n\r\n          stageObj[stage.key] = stage;\r\n        });\r\n      }\r\n    }\r\n\r\n    function selectItem($item) {\r\n      if (isSelectable($item)) {\r\n        $item.addClass(SELECTED_CLASS).attr('data-selected', 'true').attr('aria-selected', 'true');\r\n      }\r\n    }\r\n\r\n    function deselectItem($item) {\r\n      $item.removeClass(SELECTED_CLASS).removeAttr('data-selected').removeAttr('aria-selected');\r\n    } // Call the parent constructor\r\n\r\n\r\n    Base.call(this, elem, settings, true);\r\n    /**\r\n     * Animate a list item\r\n     */\r\n\r\n    that.animate = function (li, anim, callback) {\r\n      animate(li, 'mbsc-lv-item-' + anim, callback);\r\n    };\r\n    /**\r\n     * Add a new list item\r\n     */\r\n\r\n\r\n    that.add = function (id, markup, index, callback, p, isUndo) {\r\n      var backBtn,\r\n          length,\r\n          siblings,\r\n          sublevel,\r\n          map,\r\n          pref,\r\n          cssClass = '',\r\n          $parent = p === undefined ? elm : getItemByID(p),\r\n          $list = $parent,\r\n          $item = typeof markup !== 'object' ? $$1('<' + itemNode + ' data-ref=\"' + guid++ + '\" data-id=\"' + id + '\">' + markup + '</' + itemNode + '>') : $$1(markup),\r\n          item = $item[0],\r\n          style = item.style,\r\n          dir = $item.attr('data-pos') < 0 ? 'left' : 'right',\r\n          ref = $item.attr('data-ref');\r\n      callback = callback || noop;\r\n\r\n      if (!ref) {\r\n        ref = guid++;\r\n        $item.attr('data-ref', ref);\r\n      }\r\n\r\n      initItem($item); // Put action in undo stack\r\n\r\n      if (!isUndo) {\r\n        that.addUndoAction(function (next) {\r\n          if (sublevel) {\r\n            that.navigate($parent, function () {\r\n              $list.remove();\r\n              $parent.removeClass('mbsc-lv-parent').children('.mbsc-lv-arr').remove();\r\n              map.child = $parent.children(listSelector);\r\n              that.remove($item, null, next, true);\r\n            });\r\n          } else {\r\n            that.remove($item, null, next, true);\r\n          }\r\n        }, true);\r\n      }\r\n\r\n      doAction($item, function (next) {\r\n        resetItem($item.css('top', '').removeClass('mbsc-lv-item-undo')); // If parent is a list item, insert new element in the sublist\r\n\r\n        if ($parent.is(itemSelector)) {\r\n          pref = $parent.attr('data-ref'); // If there is no sublist yet, create it\r\n\r\n          if (!$parent.children(listSelector).length) {\r\n            sublevel = true;\r\n            $parent.append('<' + listNode + '></' + listNode + '>');\r\n          }\r\n        } else {\r\n          pref = $parent.children('.mbsc-lv-back').attr('data-back');\r\n        }\r\n\r\n        map = treeMap[pref];\r\n\r\n        if (map) {\r\n          if (!map.child.length) {\r\n            $parent.addClass('mbsc-lv-parent').prepend(htmlRight); // Set parent to be the sublist\r\n\r\n            $list = $parent.children(listSelector).prepend(htmlLeft).addClass('mbsc-lv');\r\n            map.child = $list;\r\n            $$1('.mbsc-lv-back', $parent).attr('data-back', pref);\r\n          } else {\r\n            $list = map.child;\r\n          }\r\n        }\r\n\r\n        treeMap[ref] = {\r\n          item: $item,\r\n          child: $item.children(listSelector),\r\n          parent: $list,\r\n          ref: pref\r\n        };\r\n        siblings = getChildren($list);\r\n        length = siblings.length;\r\n\r\n        if (index === undefined || index === null) {\r\n          index = length;\r\n        }\r\n\r\n        if (isUndo) {\r\n          cssClass = 'mbsc-lv-item-new-' + (isUndo ? dir : '');\r\n        }\r\n\r\n        initBranch($item.addClass(cssClass));\r\n\r\n        if (index !== false) {\r\n          if (!length) {\r\n            backBtn = $$1('.mbsc-lv-back', $list);\r\n\r\n            if (backBtn.length) {\r\n              $item.insertAfter(backBtn);\r\n            } else {\r\n              $list.append($item);\r\n            }\r\n          } else if (index < length) {\r\n            $item.insertBefore(siblings.eq(index));\r\n          } else {\r\n            $item.insertAfter(siblings.eq(length - 1));\r\n          }\r\n        }\r\n\r\n        cont.trigger('mbsc-refresh'); // If current level is visible\r\n\r\n        if (s.animateAddRemove && $list.hasClass('mbsc-lv-v')) {\r\n          // Don't run expand animation if add is running on the \"undo\" element\r\n          style.height = item.offsetHeight + 'px';\r\n          that.animate($item, isUndo && undoRef === ref ? 'none' : 'expand', function ($item) {\r\n            that.animate($item, isUndo ? 'add-' + dir : 'pop-in', function ($item) {\r\n              style.height = '';\r\n              callback.call(e, $item.removeClass(cssClass));\r\n              next();\r\n            });\r\n          });\r\n        } else {\r\n          callback.call(e, $item.removeClass(cssClass));\r\n          next();\r\n        }\r\n\r\n        event('onItemAdd', {\r\n          target: item\r\n        });\r\n      });\r\n    };\r\n    /**\r\n     * Swipe a list item programatically\r\n     */\r\n\r\n\r\n    that.swipe = function (li, percent, time, demo, callback) {\r\n      var prevPos;\r\n      li = getItemByID(li);\r\n      item = li;\r\n      demoMode = demo;\r\n      simulating = true;\r\n      action = true;\r\n      time = time === undefined ? 300 : time;\r\n      diffX = percent > 0 ? 1 : -1;\r\n      onActionStart();\r\n      onSwipeStart();\r\n      slide(li, percent, time);\r\n      clearTimeout(swipeTimeout);\r\n      clearInterval(swipeInterval);\r\n      swipeInterval = setInterval(function () {\r\n        prevPos = animPos;\r\n        animPos = getPosition(li) / itemw * 100;\r\n        onSwipeMove(prevPos);\r\n      }, 10);\r\n      swipeTimeout = setTimeout(function () {\r\n        clearInterval(swipeInterval);\r\n        prevPos = animPos;\r\n        animPos = percent; // We need one additional move with the final percent to get the correct stage\r\n\r\n        onSwipeMove(prevPos);\r\n        onSwipeEnd(callback);\r\n        demoMode = false;\r\n        simulating = false;\r\n        action = false;\r\n      }, time);\r\n    };\r\n\r\n    that.openStage = function (li, stage, time, demo) {\r\n      if (stageObj[stage]) {\r\n        that.swipe(li, stageObj[stage].percent, time, demo);\r\n      }\r\n    };\r\n\r\n    that.openActions = function (li, dir, time, demo) {\r\n      li = getItemByID(li);\r\n      var percent = getActionWidth(types[li.attr('data-type') || 'defaults'], dir == 'left' ? -1 : 1);\r\n      that.swipe(li, dir == 'left' ? -percent : percent, time, demo);\r\n    };\r\n\r\n    that.close = function (li, time) {\r\n      that.swipe(li, 0, time);\r\n    };\r\n    /**\r\n     * Remove a list item\r\n     */\r\n\r\n\r\n    that.remove = function (id, dir, callback, isUndo) {\r\n      var $item, $parent, anim, index, ref, shouldNavigate, style;\r\n\r\n      function deleteSubTree($child) {\r\n        if ($child) {\r\n          shouldNavigate = shouldNavigate || $child.hasClass('mbsc-lv-v');\r\n          $child.children('[data-ref]').each(function () {\r\n            var ref = $$1(this).attr('data-ref');\r\n\r\n            if (treeMap[ref]) {\r\n              deleteSubTree(treeMap[ref].child);\r\n              delete treeMap[ref];\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      callback = callback || noop;\r\n      $item = getItemByID(id);\r\n      ref = $item.attr('data-ref');\r\n\r\n      if ($item.length && treeMap[ref]) {\r\n        $parent = $item.parent();\r\n        index = getChildren($parent).index($item);\r\n        style = $item[0].style;\r\n        deleteSubTree(treeMap[ref].child);\r\n\r\n        if (shouldNavigate) {\r\n          anim = s.animation;\r\n          s.animation = false;\r\n          that.navigate($item);\r\n          s.animation = anim;\r\n        }\r\n\r\n        delete treeMap[ref]; // Put action in undo stack\r\n\r\n        if (!isUndo) {\r\n          // If undo element is removed, undo placeholder should be removed with animation\r\n          if ($item.attr('data-ref') === undoRef) {\r\n            undoAnim = true;\r\n          }\r\n\r\n          that.addUndoAction(function (next) {\r\n            that.add(null, $item, index, next, $parent, true);\r\n          }, true);\r\n        }\r\n\r\n        doAction($item, function (next) {\r\n          dir = dir || ($item.attr('data-pos') < 0 ? 'left' : 'right');\r\n\r\n          if (s.animateAddRemove && $parent.hasClass('mbsc-lv-v')) {\r\n            that.animate($item.addClass('mbsc-lv-removed'), isUndo ? 'pop-out' : 'remove-' + dir, function ($item) {\r\n              style.height = $item[0].offsetHeight + 'px';\r\n              that.animate($item, 'collapse', function ($item) {\r\n                style.height = '';\r\n                resetItem($item.removeClass('mbsc-lv-removed'));\r\n\r\n                if (callback.call(e, $item) !== false) {\r\n                  $item.remove();\r\n                }\r\n\r\n                next();\r\n              });\r\n            });\r\n          } else {\r\n            if (callback.call(e, $item) !== false) {\r\n              $item.remove();\r\n            }\r\n\r\n            next();\r\n          }\r\n\r\n          event('onItemRemove', {\r\n            target: $item[0]\r\n          });\r\n        });\r\n      }\r\n    };\r\n    /**\r\n     * Moves an item in the list\r\n     */\r\n\r\n\r\n    that.move = function (li, index, dir, callback, p, isUndo) {\r\n      li = getItemByID(li); //if (getChildren(li.parent()).index(li) !== index) {\r\n\r\n      if (!isUndo) {\r\n        that.startActionTrack();\r\n      }\r\n\r\n      stagec.append(iconc);\r\n      that.remove(li, dir, null, isUndo);\r\n      that.add(null, li, index, callback, p, isUndo);\r\n\r\n      if (!isUndo) {\r\n        that.endActionTrack();\r\n      } //}\r\n\r\n    };\r\n    /**\r\n     * Navigate and scroll to the given element\r\n     */\r\n\r\n\r\n    that.navigate = function (item, callback) {\r\n      var map, level;\r\n      item = getItemByID(item);\r\n      map = treeMap[item.attr('data-ref')];\r\n      level = getItemLevel(item);\r\n\r\n      if (map) {\r\n        drill(level >= slideLevel ? 'r' : 'l', map.parent, item, callback, true);\r\n        slideLevel = level;\r\n      }\r\n    };\r\n\r\n    that.showLoading = function () {\r\n      isLoading = true;\r\n      loading.addClass('mbsc-show-lv-loading');\r\n      wnd.scrollTop(hasContext ? wnd0.scrollHeight : $$1(s.context)[0].scrollHeight);\r\n    };\r\n\r\n    that.hideLoading = function () {\r\n      loading.removeClass('mbsc-show-lv-loading'); // Needs timeout to prevent triggering \r\n      // the onListEnd event from the scroll listener\r\n\r\n      setTimeout(function () {\r\n        isLoading = false;\r\n      }, 100);\r\n    };\r\n\r\n    that.select = function (item) {\r\n      if (!multiple) {\r\n        deselectItem($$1(itemSelector, cont).filter('.' + SELECTED_CLASS));\r\n      }\r\n\r\n      selectItem(getItemByID(item));\r\n    };\r\n\r\n    that.deselect = function (item) {\r\n      deselectItem(getItemByID(item));\r\n    };\r\n\r\n    that._processSettings = function () {\r\n      if (elm.is('[mbsc-enhance]')) {\r\n        hadEnhance = true;\r\n        elm.removeAttr('mbsc-enhance');\r\n      }\r\n    };\r\n    /**\r\n     * Listview initialization.\r\n     */\r\n\r\n\r\n    that._init = function () {\r\n      var contClass,\r\n          headerClass,\r\n          sortable,\r\n          //defSortHandle = elm.find(listSelector).length ? 'left' : 'right',\r\n      i = 0,\r\n          icons = '',\r\n          iconsLeft = '',\r\n          iconsRight = '';\r\n      listNode = s.listNode;\r\n      listSelector = s.listSelector;\r\n      itemNode = s.itemNode;\r\n      itemSelector = s.itemSelector;\r\n      multiple = s.select == 'multiple';\r\n      selectable = s.select != 'off';\r\n      /*\r\n      sortable = s.sort || s.sortable || false;\r\n        // Backward compatiblity for 'group' and sortHandle settings\r\n      // ---\r\n      if (sortable === 'group') {\r\n          sortable = {\r\n              group: false,\r\n              multiLevel: true\r\n          };\r\n      }\r\n        if (sortable === true) {\r\n          sortable = {\r\n              group: true,\r\n              multiLevel: true,\r\n              handle: s.sortHandle\r\n          };\r\n      }\r\n        if (sortable && sortable.handle === undefined) {\r\n          sortable.handle = s.sortHandle;\r\n      }\r\n      // ---\r\n        if (sortable.handle) {\r\n          handlePos = sortable.handle === true ? defSortHandle : sortable.handle;\r\n          handleDiv = '<div class=\"mbsc-lv-handle-c mbsc-lv-item-h-' + handlePos + ' mbsc-lv-handle\"><div class=\"' + s.handleClass + ' mbsc-lv-handle-bar-c mbsc-lv-handle\">' + s.handleMarkup + '</div></div>';\r\n      }\r\n        htmlLeft = '<' + itemNode + ' class=\"mbsc-lv-item mbsc-lv-back mbsc-lv-item-actionable\">' + s.backText + '<div class=\"mbsc-lv-arr mbsc-lv-ic mbsc-ic ' + s.leftArrowClass + '\"></div></' + itemNode + '>';\r\n      htmlRight = '<div class=\"mbsc-lv-arr mbsc-lv-ic mbsc-ic ' + s.rightArrowClass + '\"></div>';\r\n        contClass = 'mbsc-no-touch mbsc-lv-cont mbsc-lv-' + s.theme + ' mbsc-' + s.theme +\r\n          (halfBorder ? ' mbsc-lv-hb' : '') +\r\n          (s.rtl ? ' mbsc-lv-rtl mbsc-rtl' : ' mbsc-ltr') +\r\n          (s.baseTheme ? ' mbsc-lv-' + s.baseTheme + ' mbsc-' + s.baseTheme : '') +\r\n          (s.animateIcons ? ' mbsc-lv-ic-anim' : '') +\r\n          (s.striped ? ' mbsc-lv-alt-row' : '') +\r\n          (s.fixedHeader ? ' mbsc-lv-has-fixed-header' : '') +\r\n          (sortable.handle ? ' mbsc-lv-handle-' + handlePos : '');\r\n      */\r\n      // --- TRIAL SERVER CODE START ---\r\n\r\n      sortable = that.remote.listview.sortable;\r\n      handlePos = that.remote.listview.handlePos;\r\n      handleDiv = that.remote.listview.handleDiv;\r\n      htmlLeft = that.remote.listview.htmlLeft;\r\n      htmlRight = that.remote.listview.htmlRight;\r\n      contClass = that.remote.listview.contClass; // --- TRIAL SERVER CODE END ---\r\n\r\n      that.sortable = sortable || false;\r\n\r\n      if (!cont) {\r\n        // Icon menu container\r\n        icons += '<div class=\"mbsc-lv-multi-c\"></div>'; // Stage icons container\r\n\r\n        icons += '<div class=\"mbsc-lv-ic-c\"><div class=\"mbsc-lv-ic-s mbsc-lv-ic mbsc-ic mbsc-ic-none\"></div><div class=\"mbsc-lv-ic-text\"></div></div>'; // Add classes\r\n\r\n        elm.addClass('mbsc-lv mbsc-lv-v mbsc-lv-root').removeClass('mbsc-cloak').show();\r\n        stagec = $$1('<div class=\"mbsc-lv-stage-c\">' + icons + '</div>');\r\n        iconc = $$1('.mbsc-lv-ic-c', stagec);\r\n        multic = $$1('.mbsc-lv-multi-c', stagec);\r\n        icon = $$1('.mbsc-lv-ic-s', stagec);\r\n        text = $$1('.mbsc-lv-ic-text', stagec);\r\n        placeholder = $$1('<' + itemNode + ' class=\"mbsc-lv-item mbsc-lv-ph\"></' + itemNode + '>');\r\n        fill = $$1('<div class=\"mbsc-lv-fill-item\"></div>');\r\n        cont = $$1('<div class=\"' + contClass + '\"><' + listNode + ' class=\"mbsc-lv mbsc-lv-dummy\"></' + listNode + '><div class=\"mbsc-lv-sl-c\"></div>' + '<div class=\"mbsc-lv-loading\"><span class=\"mbsc-ic mbsc-ic-' + (s.loadingIcon || 'loop2') + '\"></span></div></div>');\r\n        cont0 = cont[0];\r\n        dummyCont = $$1('.mbsc-lv-dummy', cont);\r\n        loading = $$1('.mbsc-lv-loading', cont);\r\n        cont.insertAfter(elm);\r\n        onResize(); // Slide events\r\n\r\n        listen(cont0, 'mousedown', onStart);\r\n        listen(document, 'touchstart', onStart, {\r\n          passive: false\r\n        });\r\n        listen(document, 'touchmove', onMove, {\r\n          passive: false\r\n        });\r\n        cont.on('touchend touchcancel', '.mbsc-lv-item', onEnd).on('click', '.mbsc-lv-item', onClick); // Prevent click on swipe\r\n\r\n        listen(e, 'click', onListClick, true); // Init action icons\r\n        // ---\r\n\r\n        listen(cont0, 'mousedown', onIconStart);\r\n        listen(document, 'touchstart', onIconStart, {\r\n          passive: false\r\n        });\r\n        cont.on('touchend mouseup', '.mbsc-lv-ic-m', function (ev) {\r\n          if (!demoMode) {\r\n            if (ev.type === 'touchend') {\r\n              preventClick();\r\n            } // If movement is less than 10px, fire the click event handler\r\n\r\n\r\n            if (confirms && !$$1(this).hasClass('mbsc-lv-ic-disabled') && Math.abs(getCoord(ev, 'X') - startX) < 10 && Math.abs(getCoord(ev, 'Y') - startY) < 10) {\r\n              runAction((animPos < 0 ? type.rightMenu : type.leftMenu)[$$1(this).index()], confirmItem, confirmIndex);\r\n            }\r\n          }\r\n        }); // ---\r\n        // Init hierarchical navigation\r\n        // ---\r\n\r\n        slideCont = $$1('.mbsc-lv-sl-c', cont).append(elm.addClass('mbsc-lv-sl-curr')).attr('data-ref', guid++);\r\n        currList = elm;\r\n        currParent = cont; // ---\r\n      } else {\r\n        cont.attr('class', contClass); // reinit sort handles\r\n\r\n        $$1('.mbsc-lv-handle-c', cont).remove(); // remove to reinit list items\r\n\r\n        $$1(itemSelector, cont).not('.mbsc-lv-back').removeClass('mbsc-lv-item');\r\n        unlisten(wnd0, 'orientationchange', onResize);\r\n        unlisten(wnd0, 'resize', onResize);\r\n        unlisten(wnd0, 'scroll', onScrollBottom);\r\n        unlisten(wnd0, 'touchmove', onScrollBottom, {\r\n          passive: true\r\n        });\r\n\r\n        if (onScrollThrottle) {\r\n          unlisten(wnd0, 'scroll', onScrollThrottle);\r\n          unlisten(wnd0, 'touchmove', onScrollThrottle, {\r\n            passive: true\r\n          });\r\n        }\r\n      }\r\n\r\n      hasContext = s.context !== 'body';\r\n      wnd = $$1(hasContext ? s.context : window);\r\n      wnd0 = wnd[0]; // Recalculate sizes on resize / orientationchange\r\n\r\n      listen(wnd0, 'orientationchange', onResize);\r\n      listen(wnd0, 'resize', onResize);\r\n      listen(wnd0, 'scroll', onScrollBottom);\r\n      listen(wnd0, 'touchmove', onScrollBottom, {\r\n        passive: true\r\n      }); // Init stages and actions\r\n      // ---\r\n\r\n      stageNr = 0;\r\n      types = s.itemGroups || {};\r\n      types.defaults = {\r\n        swipeleft: s.swipeleft,\r\n        swiperight: s.swiperight,\r\n        stages: s.stages,\r\n        actions: s.actions,\r\n        actionsWidth: s.actionsWidth,\r\n        actionable: s.actionable\r\n      };\r\n      initBranch(elm);\r\n      $$1.each(types, function (n, v) {\r\n        v.swipe = v.swipe !== undefined ? v.swipe : s.swipe;\r\n        v.actionable = v.actionable !== undefined ? v.actionable : s.actionable;\r\n        v.stages = v.stages || []; // Init stages\r\n\r\n        processStages(v.stages, 1, true);\r\n        processStages(v.stages.left, 1);\r\n        processStages(v.stages.right, -1);\r\n\r\n        if (v.stages.left || v.stages.right) {\r\n          v.stages = [].concat(v.stages.left || [], v.stages.right || []);\r\n        }\r\n\r\n        found = false;\r\n\r\n        if (!v.stages.length) {\r\n          if (v.swipeleft) {\r\n            v.stages.push({\r\n              percent: -30,\r\n              action: v.swipeleft\r\n            });\r\n          }\r\n\r\n          if (v.swiperight) {\r\n            v.stages.push({\r\n              percent: 30,\r\n              action: v.swiperight\r\n            });\r\n          }\r\n        }\r\n\r\n        $$1.each(v.stages, function (i, v) {\r\n          // find the 0\r\n          if (v.percent === 0) {\r\n            found = true;\r\n            return false;\r\n          }\r\n        });\r\n\r\n        if (!found) {\r\n          v.stages.push({\r\n            percent: 0\r\n          });\r\n        }\r\n\r\n        v.stages.sort(function (a, b) {\r\n          return a.percent - b.percent;\r\n        });\r\n        $$1.each(v.stages, function (i, s) {\r\n          // find the 0\r\n          if (s.percent === 0) {\r\n            v.start = i;\r\n            return false;\r\n          }\r\n        });\r\n\r\n        if (found) {\r\n          v.left = v.right = v.stages[v.start];\r\n        } else {\r\n          v.left = v.stages[v.start - 1] || {};\r\n          v.right = v.stages[v.start + 1] || {};\r\n        } // Init actions\r\n\r\n\r\n        if (v.actions) {\r\n          v.leftMenu = v.actions.left || v.actions;\r\n          v.rightMenu = v.actions.right || v.leftMenu;\r\n          iconsLeft = '';\r\n          iconsRight = '';\r\n\r\n          for (i = 0; i < v.leftMenu.length; i++) {\r\n            iconsLeft += '<div ' + (v.leftMenu[i].color ? 'style=\"background-color: ' + v.leftMenu[i].color + '\"' : '') + ' class=\"mbsc-lv-ic-m mbsc-lv-ic mbsc-ic mbsc-ic-' + v.leftMenu[i].icon + '\">' + (v.leftMenu[i].text || '') + '</div>';\r\n          }\r\n\r\n          for (i = 0; i < v.rightMenu.length; ++i) {\r\n            iconsRight += '<div ' + (v.rightMenu[i].color ? 'style=\"background-color: ' + v.rightMenu[i].color + '\"' : '') + ' class=\"mbsc-lv-ic-m mbsc-lv-ic mbsc-ic mbsc-ic-' + v.rightMenu[i].icon + '\">' + (v.rightMenu[i].text || '') + '</div>';\r\n          }\r\n\r\n          if (v.actions.left) {\r\n            v.swipe = v.actions.right ? v.swipe : 'right';\r\n          }\r\n\r\n          if (v.actions.right) {\r\n            v.swipe = v.actions.left ? v.swipe : 'left';\r\n          }\r\n\r\n          v.icons = '<div class=\"mbsc-lv-multi mbsc-lv-multi-ic-left\">' + iconsLeft + '</div><div class=\"mbsc-lv-multi mbsc-lv-multi-ic-right\">' + iconsRight + '</div>';\r\n        }\r\n      }); // ---\r\n      // Init fixed header\r\n      // ---\r\n\r\n      if (s.fixedHeader) {\r\n        headerClass = 'mbsc-lv-fixed-header' + (hasContext ? ' mbsc-lv-fixed-header-ctx mbsc-lv-' + s.theme + ' mbsc-' + s.theme + (s.baseTheme ? ' mbsc-lv-' + s.baseTheme + ' mbsc-' + s.baseTheme : '') : '');\r\n\r\n        if (!groupHeader) {\r\n          groupHeader = $$1('<div class=\"' + headerClass + '\"></div>');\r\n        } else {\r\n          groupHeader.attr('class', headerClass);\r\n          onScroll();\r\n        }\r\n\r\n        if (hasContext) {\r\n          wnd.before(groupHeader);\r\n        } else {\r\n          cont.prepend(groupHeader);\r\n        }\r\n\r\n        onScrollThrottle = throttle(onScroll, 200);\r\n        listen(wnd0, 'scroll', onScrollThrottle);\r\n        listen(wnd0, 'touchmove', onScrollThrottle, {\r\n          passive: true\r\n        });\r\n      } // ---\r\n\r\n\r\n      if (s.hover) {\r\n        if (!hoverTime) {\r\n          cont.on('mouseover.mbsc-lv', '.mbsc-lv-item', function () {\r\n            if (!hoverItem || hoverItem[0] != this) {\r\n              onMouseLeave();\r\n              hoverItem = $$1(this);\r\n\r\n              if (types[hoverItem.attr('data-type') || 'defaults'].actions) {\r\n                hoverTimer = setTimeout(function () {\r\n                  if (!preventHover) {\r\n                    hoverItemOpened = true;\r\n                    that.openActions(hoverItem, hoverDir, hoverTime, false);\r\n                  } else {\r\n                    hoverItem = null;\r\n                  }\r\n                }, hoverTimeout);\r\n              }\r\n            }\r\n          }).on('mouseleave.mbsc-lv', onMouseLeave);\r\n        }\r\n\r\n        hoverTime = s.hover.time || 200;\r\n        hoverTimeout = s.hover.timeout || 200;\r\n        hoverDir = s.hover.direction || s.hover || 'right';\r\n      }\r\n\r\n      if (hadEnhance) {\r\n        cont.attr('mbsc-enhance', '');\r\n      }\r\n\r\n      cont.trigger('mbsc-enhance', [{\r\n        theme: s.theme,\r\n        lang: s.lang\r\n      }]);\r\n    };\r\n    /**\r\n     * Listview destroy: removes event handlers, classes and additional markup.\r\n     */\r\n\r\n\r\n    that._destroy = function () {\r\n      var form;\r\n      currParent.append(currList);\r\n\r\n      if (hasContext && groupHeader) {\r\n        groupHeader.remove();\r\n      }\r\n\r\n      if (hadEnhance) {\r\n        elm.attr('mbsc-enhance', ''); // Destroy form instance if any\r\n\r\n        form = instances[cont0.id];\r\n\r\n        if (form) {\r\n          form.destroy();\r\n        }\r\n      }\r\n\r\n      unlisten(document, 'touchstart', onStart, {\r\n        passive: false\r\n      });\r\n      unlisten(document, 'touchstart', onIconStart, {\r\n        passive: false\r\n      });\r\n      unlisten(document, 'touchmove', onMove, {\r\n        passive: false\r\n      });\r\n      unlisten(e, 'click', onListClick, true);\r\n      cont.find('.mbsc-lv-txt,.mbsc-lv-img').removeClass('mbsc-lv-txt mbsc-lv-img');\r\n      cont.find(listSelector).removeClass('mbsc-lv mbsc-lv-v mbsc-lv-root mbsc-lv-sl-curr').find(itemSelector).removeClass('mbsc-lv-gr-title mbsc-lv-item mbsc-lv-item-enhanced mbsc-lv-parent mbsc-lv-img-left mbsc-lv-img-right mbsc-lv-item-ic-left mbsc-lv-item-ic-right').removeAttr('data-ref');\r\n      $$1('.mbsc-lv-back,.mbsc-lv-handle-c,.mbsc-lv-arr,.mbsc-lv-item-ic', cont).remove();\r\n      elm.insertAfter(cont);\r\n      cont.remove();\r\n      stagec.remove();\r\n      unlisten(wnd0, 'orientationchange', onResize);\r\n      unlisten(wnd0, 'resize', onResize);\r\n      unlisten(wnd0, 'scroll', onScrollBottom);\r\n      unlisten(wnd0, 'touchmove', onScrollBottom, {\r\n        passive: true\r\n      });\r\n\r\n      if (onScrollThrottle) {\r\n        unlisten(wnd0, 'scroll', onScrollThrottle);\r\n        unlisten(wnd0, 'touchmove', onScrollThrottle, {\r\n          passive: true\r\n        });\r\n      }\r\n    }; // Undo manager, may be removed later in separate class\r\n    // ---\r\n\r\n\r\n    var undoing,\r\n        undoQueue = [],\r\n        undoStack = [],\r\n        undoGroup = [],\r\n        undoListener = 0;\r\n\r\n    that.startActionTrack = function () {\r\n      // Start a new undo group if not running\r\n      if (!undoListener) {\r\n        undoGroup = [];\r\n      }\r\n\r\n      undoListener++;\r\n    };\r\n\r\n    that.endActionTrack = function () {\r\n      // End undo group, if this the outermost listener (undoListener counter is 0);\r\n      undoListener--;\r\n\r\n      if (!undoListener) {\r\n        undoStack.push(undoGroup);\r\n      }\r\n    };\r\n\r\n    that.addUndoAction = function (action, async) {\r\n      var obj = {\r\n        action: action,\r\n        async: async\r\n      }; //if (!undoing) {\r\n\r\n      if (undoListener) {\r\n        // Add undo action in current group, if a listener is running\r\n        undoGroup.push(obj);\r\n      } else {\r\n        // Add undo action within a new group\r\n        undoStack.push([obj]);\r\n\r\n        if (undoStack.length > s.undoLimit) {\r\n          undoStack.shift();\r\n        }\r\n      } //}\r\n\r\n    };\r\n\r\n    that.undo = function () {\r\n      var action, i, group;\r\n\r\n      function run() {\r\n        if (i < 0) {\r\n          undoing = false; // If there is data in the queue, keep calling the undo\r\n\r\n          undo();\r\n        } else {\r\n          action = group[i];\r\n          i--;\r\n\r\n          if (action.async) {\r\n            // Run action, next action must be called inside the action\r\n            action.action(run);\r\n          } else {\r\n            // Run action\r\n            action.action(); // Run next action\r\n\r\n            run();\r\n          }\r\n        }\r\n      }\r\n\r\n      function undo() {\r\n        group = undoQueue.shift();\r\n\r\n        if (group) {\r\n          undoing = true;\r\n          i = group.length - 1; // Call actions from the group recoursively\r\n\r\n          run();\r\n        }\r\n      }\r\n\r\n      if (undoStack.length) {\r\n        undoQueue.push(undoStack.pop());\r\n      } // If undo is currently running, don't do anything (it will be called later from queue)\r\n\r\n\r\n      if (!undoing) {\r\n        undo();\r\n      }\r\n    }; // ---\r\n    // Constructor\r\n\r\n\r\n    s = that.settings;\r\n    event = that.trigger;\r\n    that.init();\r\n  }; // Defaults\r\n\r\n  ListView.prototype = {\r\n    _class: 'listview',\r\n    _hasDef: true,\r\n    _hasTheme: true,\r\n    _hasLang: true,\r\n    _defaults: {\r\n      context: 'body',\r\n      actionsWidth: 90,\r\n      sortDelay: 250,\r\n      undoLimit: 10,\r\n      tap: hasGhostClick,\r\n      swipe: true,\r\n      quickSwipe: true,\r\n      animateAddRemove: true,\r\n      animateIcons: true,\r\n      animation: true,\r\n      revert: true,\r\n      vibrate: true,\r\n      actionable: true,\r\n      handleClass: '',\r\n      handleMarkup: '<div class=\"mbsc-lv-handle-bar mbsc-lv-handle\"></div><div class=\"mbsc-lv-handle-bar mbsc-lv-handle\"></div><div class=\"mbsc-lv-handle-bar mbsc-lv-handle\"></div>',\r\n      listNode: 'ul',\r\n      listSelector: 'ul,ol',\r\n      itemNode: 'li',\r\n      itemSelector: 'li',\r\n      leftArrowClass: 'mbsc-ic-arrow-left4',\r\n      rightArrowClass: 'mbsc-ic-arrow-right4',\r\n      backText: 'Back',\r\n      undoText: 'Undo',\r\n      stages: [],\r\n      select: 'off'\r\n    }\r\n  };\r\n  classes.ListView = ListView;\r\n  mobiscroll.themes.listview.mobiscroll = {\r\n    leftArrowClass: 'mbsc-ic-arrow-left5',\r\n    rightArrowClass: 'mbsc-ic-arrow-right5'\r\n  };\r\n\r\n  var MbscListviewService = (function () {\r\n      function MbscListviewService() {\r\n          this.addObservable = new Observable();\r\n          this.removeObservable = new Observable();\r\n          this.cardObservable = new Observable();\r\n          this.instanceObservable = new Observable();\r\n          this.inst = null;\r\n      }\r\n      MbscListviewService.prototype.notifyInstanceReady = function (instance) {\r\n          this.inst = instance;\r\n          this.instanceObservable.next(instance);\r\n      };\r\n      MbscListviewService.prototype.onInstanceReady = function () {\r\n          return this.instanceObservable;\r\n      };\r\n      MbscListviewService.prototype.notifyAdded = function (item, parent) {\r\n          this.addObservable.next({ item: item, parent: parent });\r\n      };\r\n      MbscListviewService.prototype.notifyRemoved = function (item) {\r\n          this.removeObservable.next(item);\r\n      };\r\n      MbscListviewService.prototype.notifyCardPresence = function (isCard) {\r\n          this.cardObservable.next(isCard);\r\n      };\r\n      MbscListviewService.prototype.onCardContent = function () {\r\n          return this.cardObservable;\r\n      };\r\n      MbscListviewService.prototype.onItemAdded = function () {\r\n          return this.addObservable;\r\n      };\r\n      MbscListviewService.prototype.onItemRemoved = function () {\r\n          return this.removeObservable;\r\n      };\r\n      MbscListviewService.decorators = [\r\n          { type: core.Injectable },\r\n      ];\r\n      MbscListviewService.ctorParameters = function () { return []; };\r\n      return MbscListviewService;\r\n  }());\r\n  var MbscSublistService = (function () {\r\n      function MbscSublistService() {\r\n          this.addObservable = new Observable();\r\n          this.removeObserable = new Observable();\r\n      }\r\n      MbscSublistService.prototype.notifyAdded = function (item) {\r\n          this.addObservable.next(item);\r\n      };\r\n      MbscSublistService.prototype.notifyRemoved = function (item) {\r\n          this.removeObserable.next(item);\r\n      };\r\n      MbscSublistService.prototype.onItemAdded = function () {\r\n          return this.addObservable;\r\n      };\r\n      MbscSublistService.prototype.onItemRemoved = function () {\r\n          return this.removeObserable;\r\n      };\r\n      MbscSublistService.decorators = [\r\n          { type: core.Injectable },\r\n      ];\r\n      MbscSublistService.ctorParameters = function () { return []; };\r\n      return MbscSublistService;\r\n  }());\r\n  var MbscListitemService = (function () {\r\n      function MbscListitemService() {\r\n          this.sublistSubject = new Observable();\r\n          this.inst = null;\r\n      }\r\n      MbscListitemService.prototype.notifySublistCreated = function (item) {\r\n          this.sublistSubject.next(item);\r\n      };\r\n      MbscListitemService.prototype.onSublistCreated = function () {\r\n          return this.sublistSubject;\r\n      };\r\n      MbscListitemService.decorators = [\r\n          { type: core.Injectable },\r\n      ];\r\n      MbscListitemService.ctorParameters = function () { return []; };\r\n      return MbscListitemService;\r\n  }());\r\n  var MbscListviewSublist = (function () {\r\n      function MbscListviewSublist(parentServ, subServ, itemService) {\r\n          this.parentServ = parentServ;\r\n          this.subServ = subServ;\r\n          this.itemService = itemService;\r\n      }\r\n      MbscListviewSublist.prototype.ngOnInit = function () {\r\n          this.itemService.notifySublistCreated(this);\r\n      };\r\n      MbscListviewSublist.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-listview-sublist',\r\n                      template: '<ng-content></ng-content>',\r\n                      providers: [MbscSublistService]\r\n                  },] },\r\n      ];\r\n      MbscListviewSublist.ctorParameters = function () { return [\r\n          { type: MbscListviewService, },\r\n          { type: MbscSublistService, },\r\n          { type: MbscListitemService, },\r\n      ]; };\r\n      return MbscListviewSublist;\r\n  }());\r\n  var MbscListviewItem = (function () {\r\n      function MbscListviewItem(elem, lvService, lvItemService, subService) {\r\n          var _this = this;\r\n          this.elem = elem;\r\n          this.lvService = lvService;\r\n          this.lvItemService = lvItemService;\r\n          this.subService = subService;\r\n          this.clone = null;\r\n          this.mounted = false;\r\n          this.isParent = false;\r\n          this._instance = undefined;\r\n          this.subitemObserver = null;\r\n          this.selectedChange = new core.EventEmitter();\r\n          this.sublistObserver = lvItemService.onSublistCreated().subscribe(function (sublist) {\r\n              _this.isParent = true;\r\n              _this.sublist = sublist;\r\n              _this.subitemObserver = sublist.subServ.onItemAdded().subscribe(function (subItem) {\r\n                  if (_this.mounted) {\r\n                      _this.lvService.notifyAdded(subItem, _this);\r\n                  }\r\n              });\r\n          });\r\n          this.instanceObserver = this.lvService.onInstanceReady().subscribe(function (instance) {\r\n              _this._instance = instance;\r\n          });\r\n          if (lvService.inst) {\r\n              this._instance = lvService.inst;\r\n          }\r\n      }\r\n      Object.defineProperty(MbscListviewItem.prototype, \"Index\", {\r\n          get: function () {\r\n              var thisElem = $$1(this.elem.nativeElement);\r\n              var index = thisElem.parent().children('mbsc-listview-item, mbsc-listview-header').not('.mbsc-lv-back').index(thisElem);\r\n              return index;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscListviewItem.prototype, \"Element\", {\r\n          get: function () {\r\n              return this.clone || $$1(this.elem.nativeElement);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscListviewItem.prototype.ngAfterViewInit = function () {\r\n          if (this.subService) {\r\n              this.subService.notifyAdded(this);\r\n          }\r\n          else {\r\n              this.lvService.notifyAdded(this);\r\n          }\r\n          this.mounted = true;\r\n      };\r\n      MbscListviewItem.prototype.ngOnDestroy = function () {\r\n          this.lvItemService.onSublistCreated().unsubscribe(this.sublistObserver);\r\n          this.lvService.onInstanceReady().unsubscribe(this.instanceObserver);\r\n          if (this.subitemObserver !== null) {\r\n              this.sublist.subServ.onItemAdded().unsubscribe(this.subitemObserver);\r\n              this.sublist = null;\r\n          }\r\n          var $elm = this.Element, $clone = $elm.clone();\r\n          if ($elm.parent().length) {\r\n              $clone.insertBefore($elm);\r\n              this.clone = $clone;\r\n          }\r\n          if (this.subService) {\r\n              this.subService.notifyRemoved(this);\r\n          }\r\n          else {\r\n              this.lvService.notifyRemoved(this);\r\n          }\r\n      };\r\n      Object.defineProperty(MbscListviewItem.prototype, \"selected\", {\r\n          get: function () {\r\n              return this._selected;\r\n          },\r\n          set: function (v) {\r\n              this._selected = v;\r\n              if (this._instance) {\r\n                  if (this._selected) {\r\n                      this._instance.select(this.elem.nativeElement);\r\n                  }\r\n                  else {\r\n                      this._instance.deselect(this.elem.nativeElement);\r\n                  }\r\n              }\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscListviewItem.prototype.toggle = function () {\r\n          this._selected = !this._selected;\r\n          this.selectedChange.emit(this._selected);\r\n      };\r\n      MbscListviewItem.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-listview-item',\r\n                      template: '<ng-content></ng-content>',\r\n                      providers: [MbscListitemService],\r\n                      host: {\r\n                          '[attr.data-id]': 'id',\r\n                          '[attr.data-icon]': 'icon',\r\n                          '[attr.data-icon-align]': 'iconAlign',\r\n                          '[attr.data-selected]': 'selected',\r\n                          '[attr.data-type]': 'type'\r\n                      }\r\n                  },] },\r\n      ];\r\n      MbscListviewItem.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: MbscListviewService, },\r\n          { type: MbscListitemService, },\r\n          { type: MbscSublistService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscListviewItem.propDecorators = {\r\n          'id': [{ type: core.Input },],\r\n          'icon': [{ type: core.Input },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'type': [{ type: core.Input },],\r\n          'selected': [{ type: core.Input },],\r\n          'selectedChange': [{ type: core.Output },],\r\n      };\r\n      return MbscListviewItem;\r\n  }());\r\n  var MbscListviewHeader = (function (_super) {\r\n      __extends(MbscListviewHeader, _super);\r\n      function MbscListviewHeader(elem, lvService, itemService, subService) {\r\n          return _super.call(this, elem, lvService, itemService, subService) || this;\r\n      }\r\n      MbscListviewHeader.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-listview-header',\r\n                      template: '<ng-content></ng-content>',\r\n                      providers: [MbscListitemService],\r\n                      host: {\r\n                          '[attr.data-id]': 'id',\r\n                          'data-role': 'list-divider'\r\n                      }\r\n                  },] },\r\n      ];\r\n      MbscListviewHeader.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: MbscListviewService, },\r\n          { type: MbscListitemService, },\r\n          { type: MbscSublistService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      return MbscListviewHeader;\r\n  }(MbscListviewItem));\r\n  var MbscListview = (function (_super) {\r\n      __extends(MbscListview, _super);\r\n      function MbscListview(elem, zone, lvService, optionService) {\r\n          var _this = _super.call(this, elem, zone) || this;\r\n          _this.elem = elem;\r\n          _this.lvService = lvService;\r\n          _this.optionService = optionService;\r\n          _this.onItemTap = new core.EventEmitter();\r\n          _this.onItemAdd = new core.EventEmitter();\r\n          _this.onItemRemove = new core.EventEmitter();\r\n          _this.onListEnd = new core.EventEmitter();\r\n          _this.onNavEnd = new core.EventEmitter();\r\n          _this.onNavStart = new core.EventEmitter();\r\n          _this.onSlideEnd = new core.EventEmitter();\r\n          _this.onSlideStart = new core.EventEmitter();\r\n          _this.onSort = new core.EventEmitter();\r\n          _this.onSortChange = new core.EventEmitter();\r\n          _this.onSortStart = new core.EventEmitter();\r\n          _this.onSortEnd = new core.EventEmitter();\r\n          _this.onSortUpdate = new core.EventEmitter();\r\n          _this.onStageChange = new core.EventEmitter();\r\n          _this.cardContent = false;\r\n          _this.addObserver = lvService.onItemAdded().subscribe(function (t) {\r\n              var item = t.item, parent = t.parent;\r\n              if (_this.instance) {\r\n                  _this.instance.add(null, item.Element, item.Index, undefined, parent && parent.Element);\r\n              }\r\n          });\r\n          _this.removeObserver = lvService.onItemRemoved().subscribe(function (item) {\r\n              if (_this.instance) {\r\n                  _this.instance.remove(item.Element, undefined);\r\n              }\r\n          });\r\n          _this.cardObserver = lvService.onCardContent().subscribe(function (isCard) {\r\n              _this.cardContent = isCard;\r\n          });\r\n          return _this;\r\n      }\r\n      MbscListview.prototype.tapHandler = function (event, inst) {\r\n          var selection = this.select || (inst && inst.settings.select);\r\n          switch (selection) {\r\n              case 'multiple': {\r\n                  var item = this._getItem(event.target);\r\n                  if (item && !item.isParent) {\r\n                      item.toggle();\r\n                  }\r\n                  break;\r\n              }\r\n              case 'single': {\r\n                  var item = this._getItem(event.target);\r\n                  if (item && !item.selected) {\r\n                      this.items.forEach(function (item) {\r\n                          if (item.selected) {\r\n                              item.toggle();\r\n                          }\r\n                      });\r\n                      item.toggle();\r\n                  }\r\n              }\r\n          }\r\n          event.inst = inst;\r\n          this.onItemTap.emit(event);\r\n      };\r\n      MbscListview.prototype._getItem = function (nativeEl) {\r\n          return this.items.find(function (item) {\r\n              return item.elem.nativeElement === nativeEl;\r\n          });\r\n      };\r\n      MbscListview.prototype.initControl = function () {\r\n          var _this = this;\r\n          var onItemTap = this.tapHandler.bind(this);\r\n          var onItemTapUser = this.options && this.options.onItemTap;\r\n          if (onItemTapUser) {\r\n              onItemTap = function (event, inst) {\r\n                  _this.tapHandler(event, inst);\r\n                  return onItemTapUser(event, inst);\r\n              };\r\n          }\r\n          var options = extend$1({\r\n              listNode: 'mbsc-listview',\r\n              listSelector: 'mbsc-listview, mbsc-listview-sublist',\r\n              itemNode: 'mbsc-listview-item',\r\n              itemSelector: 'mbsc-listview-item, mbsc-listview-header'\r\n          }, this.optionService ? this.optionService.options : {}, this.options, this.inlineOptionsObj, { onItemTap: onItemTap });\r\n          this.instance = new ListView(this.elem.nativeElement, options);\r\n          this.lvService.notifyInstanceReady(this.instance);\r\n      };\r\n      MbscListview.prototype.ngOnDestroy = function () {\r\n          this.lvService.onCardContent().unsubscribe(this.cardObserver);\r\n          this.lvService.onItemAdded().unsubscribe(this.addObserver);\r\n          this.lvService.onItemRemoved().unsubscribe(this.removeObserver);\r\n          _super.prototype.ngOnDestroy.call(this);\r\n      };\r\n      MbscListview.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-listview',\r\n                      template: \"<ng-content></ng-content>\",\r\n                      providers: [MbscListviewService],\r\n                      exportAs: 'mobiscroll',\r\n                      host: {\r\n                          'class': 'mbsc-cloak',\r\n                          '[class.mbsc-card-list]': 'cardContent'\r\n                      }\r\n                  },] },\r\n      ];\r\n      MbscListview.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: MbscListviewService, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscListview.propDecorators = {\r\n          'actions': [{ type: core.Input },],\r\n          'actionsWidth': [{ type: core.Input },],\r\n          'context': [{ type: core.Input },],\r\n          'striped': [{ type: core.Input },],\r\n          'animateAddRemove': [{ type: core.Input },],\r\n          'actionable': [{ type: core.Input },],\r\n          'animateIcons': [{ type: core.Input },],\r\n          'enhance': [{ type: core.Input },],\r\n          'fillAnimation': [{ type: core.Input },],\r\n          'fixedHeader': [{ type: core.Input },],\r\n          'hover': [{ type: core.Input },],\r\n          'iconSlide': [{ type: core.Input },],\r\n          'itemGroups': [{ type: core.Input },],\r\n          'loadingIcon': [{ type: core.Input },],\r\n          'navigateOnDrop': [{ type: core.Input },],\r\n          'quickSwipe': [{ type: core.Input },],\r\n          'select': [{ type: core.Input },],\r\n          'sortable': [{ type: core.Input },],\r\n          'sortDelay': [{ type: core.Input },],\r\n          'stages': [{ type: core.Input },],\r\n          'swipe': [{ type: core.Input },],\r\n          'swipeleft': [{ type: core.Input },],\r\n          'swiperight': [{ type: core.Input },],\r\n          'vibrate': [{ type: core.Input },],\r\n          'undoText': [{ type: core.Input },],\r\n          'backText': [{ type: core.Input },],\r\n          'onItemTap': [{ type: core.Output },],\r\n          'onItemAdd': [{ type: core.Output },],\r\n          'onItemRemove': [{ type: core.Output },],\r\n          'onListEnd': [{ type: core.Output },],\r\n          'onNavEnd': [{ type: core.Output },],\r\n          'onNavStart': [{ type: core.Output },],\r\n          'onSlideEnd': [{ type: core.Output },],\r\n          'onSlideStart': [{ type: core.Output },],\r\n          'onSort': [{ type: core.Output },],\r\n          'onSortChange': [{ type: core.Output },],\r\n          'onSortStart': [{ type: core.Output },],\r\n          'onSortEnd': [{ type: core.Output },],\r\n          'onSortUpdate': [{ type: core.Output },],\r\n          'onStageChange': [{ type: core.Output },],\r\n          'options': [{ type: core.Input, args: ['options',] },],\r\n          'items': [{ type: core.ContentChildren, args: [MbscListviewItem, { descendants: true },] },],\r\n      };\r\n      return MbscListview;\r\n  }(MbscBase));\r\n  var comp = [\r\n      MbscListview,\r\n      MbscListviewItem,\r\n      MbscListviewHeader,\r\n      MbscListviewSublist\r\n  ];\r\n  var MbscListviewModule = (function () {\r\n      function MbscListviewModule() {\r\n      }\r\n      MbscListviewModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [MbscBaseModule],\r\n                      declarations: comp,\r\n                      exports: comp\r\n                  },] },\r\n      ];\r\n      MbscListviewModule.ctorParameters = function () { return []; };\r\n      return MbscListviewModule;\r\n  }());\r\n\r\n  var MbscCard = (function (_super) {\r\n      __extends(MbscCard, _super);\r\n      function MbscCard(host, optionsService, lvService, zone) {\r\n          var _this = _super.call(this, host, zone) || this;\r\n          _this.optionsService = optionsService;\r\n          _this.lvService = lvService;\r\n          _this._collapsibleInput = null;\r\n          _this._open = false;\r\n          if (_this.lvService) {\r\n              _this.lvService.notifyCardPresence(true);\r\n          }\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscCard.prototype, \"collapsibleInput\", {\r\n          set: function (v) {\r\n              this._collapsibleInput = v;\r\n              this.inlineOptionsObj.collapsible = this._open;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscCard.prototype, \"open\", {\r\n          set: function (v) {\r\n              if (this._open != v && this.instance) {\r\n                  if (v) {\r\n                      this.instance.show();\r\n                  }\r\n                  else {\r\n                      this.instance.hide();\r\n                  }\r\n              }\r\n              this._open = !!v;\r\n              if (this._collapsibleInput !== null) {\r\n                  this.inlineOptionsObj.collapsible = this._open;\r\n              }\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscCard.prototype.initControl = function () {\r\n          var options = extend$1({}, this.optionsService ? this.optionsService.options : {}, this.options, this.inlineOptionsObj);\r\n          this.instance = new Card(this.initialElem.nativeElement, options);\r\n      };\r\n      MbscCard.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-card]',\r\n                      exportAs: 'mobiscroll',\r\n                      host: { 'class': 'mbsc-cloak' }\r\n                  },] },\r\n      ];\r\n      MbscCard.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscListviewService, decorators: [{ type: core.Optional },] },\r\n          { type: core.NgZone, },\r\n      ]; };\r\n      MbscCard.propDecorators = {\r\n          'collapsibleInput': [{ type: core.Input, args: ['collapsible',] },],\r\n          'open': [{ type: core.Input },],\r\n      };\r\n      return MbscCard;\r\n  }(MbscBase));\r\n  var MbscCardComponent = (function (_super) {\r\n      __extends(MbscCardComponent, _super);\r\n      function MbscCardComponent(host, optionsService, lvService, zone) {\r\n          var _this = _super.call(this, host, optionsService, lvService, zone) || this;\r\n          _this.optionsService = optionsService;\r\n          return _this;\r\n      }\r\n      MbscCardComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-card',\r\n                      template: '<ng-content></ng-content>',\r\n                      exportAs: 'mobiscroll',\r\n                      styles: [':host { display: block }']\r\n                  },] },\r\n      ];\r\n      MbscCardComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscListviewService, decorators: [{ type: core.Optional },] },\r\n          { type: core.NgZone, },\r\n      ]; };\r\n      MbscCardComponent.propDecorators = {\r\n          'options': [{ type: core.Input },],\r\n      };\r\n      return MbscCardComponent;\r\n  }(MbscCard));\r\n  var MbscCardHeader = (function () {\r\n      function MbscCardHeader() {\r\n      }\r\n      MbscCardHeader.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-card-header',\r\n                      template: '<ng-content></ng-content>',\r\n                      styles: [':host { display: block; }'],\r\n                      host: {\r\n                          'class': 'mbsc-card-header'\r\n                      }\r\n                  },] },\r\n      ];\r\n      MbscCardHeader.ctorParameters = function () { return []; };\r\n      return MbscCardHeader;\r\n  }());\r\n  var MbscCardContent = (function () {\r\n      function MbscCardContent() {\r\n      }\r\n      MbscCardContent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-card-content',\r\n                      template: '<ng-content></ng-content>',\r\n                      styles: [':host { display: block; }'],\r\n                      host: {\r\n                          'class': 'mbsc-card-content'\r\n                      }\r\n                  },] },\r\n      ];\r\n      MbscCardContent.ctorParameters = function () { return []; };\r\n      return MbscCardContent;\r\n  }());\r\n  var MbscCardFooter = (function () {\r\n      function MbscCardFooter() {\r\n      }\r\n      MbscCardFooter.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-card-footer',\r\n                      template: '<ng-content></ng-content>',\r\n                      styles: [':host { display: block; }'],\r\n                      host: {\r\n                          'class': 'mbsc-card-footer'\r\n                      }\r\n                  },] },\r\n      ];\r\n      MbscCardFooter.ctorParameters = function () { return []; };\r\n      return MbscCardFooter;\r\n  }());\r\n  var MbscCardTitle = (function () {\r\n      function MbscCardTitle() {\r\n      }\r\n      MbscCardTitle.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-card-title',\r\n                      template: '<ng-content></ng-content>',\r\n                      styles: [':host { display: block; }'],\r\n                      host: {\r\n                          'class': 'mbsc-card-title'\r\n                      }\r\n                  },] },\r\n      ];\r\n      MbscCardTitle.ctorParameters = function () { return []; };\r\n      return MbscCardTitle;\r\n  }());\r\n  var MbscCardSubtitle = (function () {\r\n      function MbscCardSubtitle() {\r\n      }\r\n      MbscCardSubtitle.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-card-subtitle',\r\n                      template: '<ng-content></ng-content>',\r\n                      styles: [':host { display: block; }'],\r\n                      host: {\r\n                          'class': 'mbsc-card-subtitle'\r\n                      }\r\n                  },] },\r\n      ];\r\n      MbscCardSubtitle.ctorParameters = function () { return []; };\r\n      return MbscCardSubtitle;\r\n  }());\r\n  var comp$1 = [\r\n      MbscCard, MbscCardComponent,\r\n      MbscCardHeader, MbscCardContent, MbscCardFooter,\r\n      MbscCardTitle, MbscCardSubtitle\r\n  ];\r\n  var MbscCardModule = (function () {\r\n      function MbscCardModule() {\r\n      }\r\n      MbscCardModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [MbscBaseModule],\r\n                      declarations: comp$1,\r\n                      exports: comp$1\r\n                  },] },\r\n      ];\r\n      MbscCardModule.ctorParameters = function () { return []; };\r\n      return MbscCardModule;\r\n  }());\r\n\r\n  /**\r\n   * Convert rgb color to hex\r\n   */\r\n\r\n  function rgb2hex(rgb) {\r\n    var hex = [Math.round(rgb.r).toString(16), Math.round(rgb.g).toString(16), Math.round(rgb.b).toString(16)];\r\n    $$1.each(hex, function (nr, val) {\r\n      if (val.length == 1) {\r\n        hex[nr] = '0' + val;\r\n      }\r\n    });\r\n    return '#' + hex.join('');\r\n  }\r\n  /**\r\n   * Convert hex color to rgb\r\n   */\r\n\r\n\r\n  function hex2rgb(hex) {\r\n    hex = parseInt(hex.indexOf('#') > -1 ? hex.substring(1) : hex, 16);\r\n    return {\r\n      r: hex >> 16,\r\n      g: (hex & 0x00FF00) >> 8,\r\n      b: hex & 0x0000FF,\r\n      toString: function toString() {\r\n        return 'rgb(' + this.r + ',' + this.g + ',' + this.b + ')';\r\n      }\r\n    };\r\n  }\r\n  /**\r\n   * Convert hsv color to rgb\r\n   */\r\n\r\n\r\n  function hsv2rgb(hsv) {\r\n    var r,\r\n        g,\r\n        b,\r\n        h = hsv.h,\r\n        s = hsv.s * 255 / 100,\r\n        v = hsv.v * 255 / 100;\r\n\r\n    if (s === 0) {\r\n      r = g = b = v;\r\n    } else {\r\n      var t1 = v,\r\n          t2 = (255 - s) * v / 255,\r\n          t3 = (t1 - t2) * (h % 60) / 60;\r\n\r\n      if (h == 360) {\r\n        h = 0;\r\n      }\r\n\r\n      if (h < 60) {\r\n        r = t1;\r\n        b = t2;\r\n        g = t2 + t3;\r\n      } else if (h < 120) {\r\n        g = t1;\r\n        b = t2;\r\n        r = t1 - t3;\r\n      } else if (h < 180) {\r\n        g = t1;\r\n        r = t2;\r\n        b = t2 + t3;\r\n      } else if (h < 240) {\r\n        b = t1;\r\n        r = t2;\r\n        g = t1 - t3;\r\n      } else if (h < 300) {\r\n        b = t1;\r\n        g = t2;\r\n        r = t2 + t3;\r\n      } else if (h < 360) {\r\n        r = t1;\r\n        g = t2;\r\n        b = t1 - t3;\r\n      } else {\r\n        r = g = b = 0;\r\n      }\r\n    }\r\n\r\n    return {\r\n      r: r,\r\n      g: g,\r\n      b: b,\r\n      toString: function toString() {\r\n        return 'rgb(' + this.r + ',' + this.g + ',' + this.b + ')';\r\n      }\r\n    };\r\n  }\r\n  /**\r\n   * Convert rgb color to hsv\r\n   */\r\n\r\n\r\n  function rgb2hsv(rgb) {\r\n    var h = 0,\r\n        s,\r\n        v,\r\n        min = Math.min(rgb.r, rgb.g, rgb.b),\r\n        max = Math.max(rgb.r, rgb.g, rgb.b),\r\n        delta = max - min;\r\n    v = max;\r\n    s = max ? 255 * delta / max : 0;\r\n\r\n    if (s) {\r\n      if (rgb.r == max) {\r\n        h = (rgb.g - rgb.b) / delta;\r\n      } else if (rgb.g == max) {\r\n        h = 2 + (rgb.b - rgb.r) / delta;\r\n      } else {\r\n        h = 4 + (rgb.r - rgb.g) / delta;\r\n      }\r\n    } else {\r\n      h = -1;\r\n    }\r\n\r\n    h *= 60;\r\n\r\n    if (h < 0) {\r\n      h += 360;\r\n    }\r\n\r\n    s *= 100 / 255;\r\n    v *= 100 / 255;\r\n    return {\r\n      h: h,\r\n      s: s,\r\n      v: v,\r\n      toString: function toString() {\r\n        return 'hsv(' + Math.round(this.h) + ',' + Math.round(this.s) + '%,' + Math.round(this.v) + '%)';\r\n      }\r\n    };\r\n  }\r\n  /**\r\n   * Convert rgb color to hsl\r\n   */\r\n\r\n\r\n  function rgb2hsl(rgb) {\r\n    var r = rgb.r / 255,\r\n        g = rgb.g / 255,\r\n        b = rgb.b / 255,\r\n        max = Math.max(r, g, b),\r\n        min = Math.min(r, g, b),\r\n        l = (max + min) / 2,\r\n        h,\r\n        s;\r\n\r\n    if (max == min) {\r\n      h = s = 0; // achromatic\r\n    } else {\r\n      var d = max - min;\r\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n      switch (max) {\r\n        case r:\r\n          h = (g - b) / d + (g < b ? 6 : 0);\r\n          break;\r\n\r\n        case g:\r\n          h = (b - r) / d + 2;\r\n          break;\r\n\r\n        case b:\r\n          h = (r - g) / d + 4;\r\n          break;\r\n      }\r\n\r\n      h /= 6;\r\n    }\r\n\r\n    return {\r\n      h: Math.round(h * 360),\r\n      s: Math.round(s * 100),\r\n      l: Math.round(l * 100),\r\n      toString: function toString() {\r\n        return 'hsl(' + this.h + ',' + this.s + '%,' + this.l + '%)';\r\n      }\r\n    };\r\n  }\r\n  /**\r\n   * Convert hsl color to rgb\r\n   */\r\n\r\n\r\n  function hsl2rgb(hsl) {\r\n    var r,\r\n        g,\r\n        b,\r\n        m,\r\n        c,\r\n        x,\r\n        h = hsl.h,\r\n        s = hsl.s,\r\n        l = hsl.l;\r\n\r\n    if (!isFinite(h)) {\r\n      h = 0;\r\n    }\r\n\r\n    if (!isFinite(s)) {\r\n      s = 0;\r\n    }\r\n\r\n    if (!isFinite(l)) {\r\n      l = 0;\r\n    }\r\n\r\n    h /= 60;\r\n\r\n    if (h < 0) {\r\n      h = 6 - -h % 6;\r\n    }\r\n\r\n    h %= 6;\r\n    s = Math.max(0, Math.min(1, s / 100));\r\n    l = Math.max(0, Math.min(1, l / 100));\r\n    c = (1 - Math.abs(2 * l - 1)) * s;\r\n    x = c * (1 - Math.abs(h % 2 - 1));\r\n\r\n    if (h < 1) {\r\n      r = c;\r\n      g = x;\r\n      b = 0;\r\n    } else if (h < 2) {\r\n      r = x;\r\n      g = c;\r\n      b = 0;\r\n    } else if (h < 3) {\r\n      r = 0;\r\n      g = c;\r\n      b = x;\r\n    } else if (h < 4) {\r\n      r = 0;\r\n      g = x;\r\n      b = c;\r\n    } else if (h < 5) {\r\n      r = x;\r\n      g = 0;\r\n      b = c;\r\n    } else {\r\n      r = c;\r\n      g = 0;\r\n      b = x;\r\n    }\r\n\r\n    m = l - c / 2;\r\n    return {\r\n      r: Math.round((r + m) * 255),\r\n      g: Math.round((g + m) * 255),\r\n      b: Math.round((b + m) * 255),\r\n      toString: function toString() {\r\n        return 'rgb(' + this.r + ',' + this.g + ',' + this.b + ')';\r\n      }\r\n    };\r\n  }\r\n  /**\r\n   * Convert hex color to hsl\r\n   */\r\n\r\n\r\n  function hex2hsl(hex) {\r\n    return rgb2hsl(hex2rgb(hex));\r\n  }\r\n  /**\r\n   * Convert hsl color to hex\r\n   */\r\n\r\n\r\n  function hsl2hex(hsl) {\r\n    return rgb2hex(hsl2rgb(hsl));\r\n  }\r\n  /**\r\n   * Convert hsv color to hex\r\n   */\r\n\r\n\r\n  function hsv2hex(hsv) {\r\n    return rgb2hex(hsv2rgb(hsv));\r\n  }\r\n  /**\r\n   * Convert hex color to hsv\r\n   */\r\n\r\n\r\n  function hex2hsv(hex) {\r\n    return rgb2hsv(hex2rgb(hex));\r\n  }\r\n\r\n  var Color = function Color(el, settings, inherit) {\r\n    var s,\r\n        def,\r\n        tempColors,\r\n        trigger,\r\n        scrollView,\r\n        previewScrollView,\r\n        hasClear,\r\n        currValue,\r\n        currHslValue,\r\n        isHorizontalScroll,\r\n        hasPreview,\r\n        sliderTrack,\r\n        refineMode,\r\n        rowItems,\r\n        slider,\r\n        colorIndex,\r\n        enhanceInput,\r\n        singleSelect,\r\n        maxSelect,\r\n        returnObj,\r\n        $input,\r\n        $colorItems,\r\n        $colorPreviewItems,\r\n        $currItem,\r\n        $sliderElm,\r\n        that = this,\r\n        $elm = $$1(el),\r\n        colorPreviewInd = 0,\r\n        previewValues = {},\r\n        tempPreviewValues = {};\r\n\r\n    function setValue(fill, change, temp) {\r\n      if (!temp) {\r\n        that._value = that._hasValue ? that._tempValue.slice(0) : null;\r\n\r\n        for (var i = 0; i < tempColors.length; ++i) {\r\n          if (tempColors[i].tempChangedColor && that._value && that._value.indexOf(tempColors[i].tempChangedColor) != -1) {\r\n            // set changed color if was set\r\n            tempColors[i].changedColor = tempColors[i].tempChangedColor;\r\n          } // else if (tempColors[i].changedColor && that._value.indexOf(tempColors[i].changedColor) == -1) { // delete changed color if was unset\r\n          //    delete tempColors[i].changedColor;\r\n          //}\r\n\r\n\r\n          delete tempColors[i].tempChangedColor;\r\n        }\r\n      }\r\n\r\n      if (fill) {\r\n        if (that._isInput) {\r\n          $elm.val(that._hasValue ? that._tempValue : '');\r\n        }\r\n\r\n        trigger('onFill', {\r\n          valueText: that._hasValue ? that._tempValue : '',\r\n          change: change\r\n        });\r\n\r\n        if (change) {\r\n          previewValues = extend$1(true, {}, tempPreviewValues);\r\n          that._preventChange = true;\r\n          $elm.trigger('change');\r\n        }\r\n\r\n        refreshSelectedValues(that._value, true);\r\n      }\r\n    }\r\n\r\n    function getInputColorItem(value, index) {\r\n      index = index !== undefined ? index : getColorIndex(value);\r\n      return '<div class=\"mbsc-color-input-item\" data-color=\"' + (index !== undefined ? index : value) + '\" style=\"background: ' + value + ';\">' + (singleSelect ? '' : '<div class=\"mbsc-color-input-item-close mbsc-ic mbsc-ic-material-close\"></div>') + '</div>';\r\n    }\r\n\r\n    function changeSliderStepsColor(color) {\r\n      sliderTrack[0].style.background = color ? cssPrefix + 'linear-gradient(left, ' + (s.rtl ? '#000000' : '#FFFFFF') + ' 0%, ' + color + ' 50%, ' + (s.rtl ? '#FFFFFF' : '#000000') + ' 100%)' : '';\r\n    }\r\n\r\n    function getColorIndex(color) {\r\n      if (Object.keys(tempPreviewValues).length && !isNaN(color)) {\r\n        return color;\r\n      }\r\n\r\n      for (var c in tempColors) {\r\n        if (color == tempColors[c].color || color == tempColors[c].changedColor) {\r\n          return c;\r\n        }\r\n      }\r\n    }\r\n\r\n    function generateInputItems() {\r\n      if (enhanceInput) {\r\n        var i,\r\n            inputColorItems = '';\r\n        $input.empty();\r\n\r\n        if (that._hasValue) {\r\n          if (singleSelect) {\r\n            inputColorItems += getInputColorItem(that._value, colorIndex);\r\n          } else {\r\n            for (i = 0; i < that._value.length; ++i) {\r\n              inputColorItems += getInputColorItem(that._value[i], Object.keys(tempPreviewValues).length && tempPreviewValues[i].colorIndex ? tempPreviewValues[i].colorIndex : getColorIndex(that._value[i]));\r\n            }\r\n          }\r\n\r\n          $input.append(inputColorItems);\r\n          that.tap($$1('.mbsc-color-input-item', $input), function (ev) {\r\n            if ($$1(ev.target).hasClass('mbsc-color-input-item-close')) {\r\n              var indx = $$1(this).index();\r\n              ev.stopPropagation();\r\n              ev.preventDefault();\r\n\r\n              if (colorIndex === undefined) {\r\n                colorIndex = $$1(ev.target).parent().attr('data-color');\r\n              }\r\n\r\n              if (hasPreview && tempColors[colorIndex]) {\r\n                colorPreviewInd = tempColors[colorIndex].previewInd;\r\n                $colorPreviewItems.eq(colorPreviewInd).parent().removeClass('mbsc-color-active');\r\n                previewValues[indx] = {};\r\n                tempPreviewValues[indx] = {};\r\n              }\r\n\r\n              that._value.splice(indx, 1);\r\n\r\n              that.setVal(that._value, true, true);\r\n            } else if (refineMode && s.display !== 'inline') {\r\n              colorIndex = $$1(ev.target).attr('data-color');\r\n\r\n              if (isNaN(colorIndex)) {\r\n                colorIndex = getColorIndex(colorIndex);\r\n              }\r\n\r\n              if (colorIndex && tempColors[colorIndex]) {\r\n                tempColors[colorIndex].selected = true;\r\n                colorPreviewInd = tempColors[colorIndex].previewInd; // scroll to view, if the selected color is not resent in the view\r\n\r\n                setTimeout(function () {\r\n                  scrollView.scroll($colorItems.eq(colorIndex), 400);\r\n\r\n                  if (hasPreview) {\r\n                    previewScrollView.scroll($colorPreviewItems.eq(colorPreviewInd), 400);\r\n                  }\r\n                }, 200);\r\n              }\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    function convertToFormat(color, type) {\r\n      var colorHex,\r\n          colorValues = color.match(/\\d+/gmi);\r\n\r\n      switch (true) {\r\n        case color.indexOf('rgb') > -1:\r\n          colorHex = rgb2hex({\r\n            r: colorValues[0],\r\n            g: colorValues[1],\r\n            b: colorValues[2]\r\n          });\r\n          break;\r\n\r\n        case color.indexOf('hsl') > -1:\r\n          colorHex = hsl2hex({\r\n            h: colorValues[0],\r\n            s: colorValues[1],\r\n            l: colorValues[2]\r\n          });\r\n          break;\r\n\r\n        case color.indexOf('hsv') > -1:\r\n          colorHex = hsv2hex({\r\n            h: colorValues[0],\r\n            s: colorValues[1],\r\n            v: colorValues[2]\r\n          });\r\n          break;\r\n\r\n        case color.indexOf('#') > -1:\r\n          colorHex = color;\r\n          break;\r\n      }\r\n\r\n      return convertFromHex(colorHex, type || s.format);\r\n    }\r\n\r\n    function convertFromHex(color, type) {\r\n      switch (type) {\r\n        case 'rgb':\r\n          return hex2rgb(color);\r\n\r\n        case 'hsl':\r\n          return hex2hsl(color);\r\n\r\n        case 'hsv':\r\n          return hex2hsv(color);\r\n\r\n        default:\r\n          return color;\r\n      }\r\n    }\r\n\r\n    function getFirstEmptyPreviewIndex() {\r\n      var i;\r\n\r\n      for (i = 0; i < s.select; ++i) {\r\n        if (tempPreviewValues[i].colorIndex === undefined) {\r\n          return i;\r\n        }\r\n      }\r\n    }\r\n\r\n    function highlightActiveColor($color, ctx) {\r\n      $$1('.mbsc-color-active', ctx).removeClass('mbsc-color-active');\r\n\r\n      if (refineMode) {\r\n        $color.parent().addClass('mbsc-color-active');\r\n\r\n        if (hasPreview && $color) {\r\n          if (colorPreviewInd !== undefined) {\r\n            $colorPreviewItems.eq(colorPreviewInd).parent().addClass('mbsc-color-active');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function refreshSelectedValues(newtempColors, updateInput) {\r\n      var i,\r\n          temp,\r\n          indexes = [],\r\n          prevInd = 0,\r\n          colorValues = $$1.map(tempColors, function (v) {\r\n        return v.changedColor || v.color;\r\n      }); // check the indexes in the tempColors\r\n\r\n      if (singleSelect) {\r\n        newtempColors = $$1.isArray(newtempColors) ? newtempColors[0] : newtempColors;\r\n        temp = colorValues.indexOf(newtempColors);\r\n\r\n        if (temp > -1) {\r\n          indexes.push(temp);\r\n        }\r\n\r\n        if (newtempColors && !indexes.length && refineMode) {\r\n          var inputIndex = +$$1('.mbsc-color-input-item', $input).attr('data-color');\r\n\r\n          if (isNaN(inputIndex)) {\r\n            inputIndex = undefined;\r\n          } else {\r\n            indexes.push(inputIndex);\r\n          }\r\n\r\n          colorIndex = inputIndex;\r\n        }\r\n      } else if (newtempColors) {\r\n        if (hasPreview && refineMode) {\r\n          for (var c in previewValues) {\r\n            if (previewValues[c].colorIndex !== undefined) {\r\n              indexes.push(+previewValues[c].colorIndex);\r\n            }\r\n          }\r\n        } else {\r\n          for (i = 0; i < newtempColors.length; ++i) {\r\n            temp = colorValues.indexOf(newtempColors[i]);\r\n\r\n            if (temp > -1) {\r\n              indexes.push(temp);\r\n              colorValues[temp] = 'temp' + i;\r\n            }\r\n          }\r\n        }\r\n      } // loop trough new color indexes and check the colors\r\n\r\n\r\n      for (i = 0; i < indexes.length; ++i) {\r\n        if (tempColors[indexes[i]]) {\r\n          toggleColor(true, indexes[i], prevInd++, tempColors[indexes[i]].changedColor || tempColors[indexes[i]].color, true);\r\n        }\r\n      } // loop trough other color indexes and uncheck the colors\r\n\r\n\r\n      for (i = 0; i < tempColors.length; ++i) {\r\n        if (indexes.indexOf(i) == -1) {\r\n          toggleColor(false, i, undefined, tempColors[i].changedColor || tempColors[i].color, false);\r\n        }\r\n      } // generate new preview object\r\n\r\n\r\n      if (hasPreview) {\r\n        for (i = prevInd; i < s.select; ++i) {\r\n          tempPreviewValues[i] = {};\r\n\r\n          if ($colorPreviewItems) {\r\n            $colorPreviewItems.eq(i).addClass('mbsc-color-preview-item-empty').css({\r\n              background: 'transparent'\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n      previewValues = extend$1(true, {}, tempPreviewValues);\r\n\r\n      if (updateInput !== false) {\r\n        generateInputItems();\r\n      }\r\n    }\r\n\r\n    function toggleColor(add, colorIndex, colorPreviewInd, currValue, updatePreview, updateValue) {\r\n      if (hasPreview && updatePreview) {\r\n        tempPreviewValues[colorPreviewInd].colorIndex = add ? colorIndex : undefined;\r\n        tempPreviewValues[colorPreviewInd].color = add ? currValue : undefined;\r\n\r\n        if ($colorPreviewItems) {\r\n          var colorPrevItem = $colorPreviewItems.eq(colorPreviewInd);\r\n          colorPrevItem.removeClass('mbsc-color-preview-item-empty').css({\r\n            background: add ? currValue : 'transparent'\r\n          });\r\n\r\n          if (!add) {\r\n            colorPrevItem.addClass('mbsc-color-preview-item-empty').parent().removeClass('mbsc-color-active');\r\n          }\r\n        }\r\n      }\r\n\r\n      if (updateValue) {\r\n        if (add) {\r\n          that._tempValue.splice(colorPreviewInd, 0, currValue);\r\n        } else {\r\n          that._tempValue.splice(that._tempValue.indexOf(currValue), 1);\r\n        }\r\n      }\r\n\r\n      if ($colorItems) {\r\n        if (add) {\r\n          $colorItems.eq(colorIndex).addClass('mbsc-color-selected');\r\n        } else {\r\n          $colorItems.eq(colorIndex).removeClass('mbsc-color-selected').parent().removeClass('mbsc-color-active');\r\n        }\r\n      }\r\n\r\n      tempColors[colorIndex].previewInd = add ? colorPreviewInd : undefined;\r\n      tempColors[colorIndex].selected = add;\r\n    }\r\n\r\n    function setDefaultValues(colorInd, ctx) {\r\n      if (colorInd !== undefined && (singleSelect || tempColors[colorInd] && tempColors[colorInd].selected)) {\r\n        colorIndex = colorInd;\r\n\r\n        if (tempColors[colorInd]) {\r\n          currValue = tempColors[colorInd].changedColor || tempColors[colorInd].color;\r\n          $currItem = $colorItems.eq(colorInd); // refresh slider tempColors\r\n\r\n          if (refineMode) {\r\n            highlightActiveColor($colorItems.eq(colorInd), ctx || '');\r\n            currHslValue = convertToFormat(tempColors[colorInd].color, 'hsl');\r\n            currHslValue.l = convertToFormat(currValue, 'hsl').l;\r\n            changeSliderStepsColor(tempColors[colorInd].color);\r\n            slider.setVal(100 - currHslValue.l, false, false);\r\n          }\r\n        }\r\n      } else if (refineMode) {\r\n        changeSliderStepsColor();\r\n      }\r\n    }\r\n\r\n    function getColorObjects() {\r\n      var i,\r\n          arr = [];\r\n\r\n      for (i = 0; i < tempColors.length; ++i) {\r\n        if (tempColors[i].selected) {\r\n          arr.push(tempColors[i]);\r\n        }\r\n      }\r\n\r\n      return arr;\r\n    }\r\n\r\n    function colorPreviewTap(ev, $m) {\r\n      var index = $$1(ev.target).index();\r\n      colorIndex = tempPreviewValues[index].colorIndex;\r\n      $currItem = $colorItems.eq(colorIndex); // refresh values\r\n\r\n      colorPreviewInd = index;\r\n      setDefaultValues(colorIndex, $m);\r\n      scrollView.scroll($currItem, 250);\r\n      trigger('onPreviewItemTap', {\r\n        target: ev.target,\r\n        value: tempPreviewValues[index].color,\r\n        index: index\r\n      });\r\n    }\r\n\r\n    function colorTap(ev, $m) {\r\n      var hasSelect = false,\r\n          $selectedtempColors = $$1('.mbsc-color-selected', $m);\r\n      $currItem = $$1(ev.target);\r\n\r\n      if ($currItem.hasClass('mbsc-color-clear-item')) {\r\n        currValue = '';\r\n        that.clear();\r\n        return;\r\n      }\r\n\r\n      if ((singleSelect || maxSelect > +$selectedtempColors.length || $currItem.hasClass('mbsc-color-selected')) && mobiscroll.LIIiW) {\r\n        colorIndex = $currItem.attr('data-index');\r\n\r\n        if (hasPreview) {\r\n          colorPreviewInd = tempColors[colorIndex].previewInd !== undefined ? tempColors[colorIndex].previewInd : getFirstEmptyPreviewIndex();\r\n          hasSelect = refineMode && $currItem.hasClass('mbsc-color-selected') && !$currItem.parent().hasClass('mbsc-color-active'); // scroll to the preview color\r\n\r\n          if ($colorPreviewItems.length > 6) {\r\n            previewScrollView.scroll($colorPreviewItems.eq(colorPreviewInd));\r\n          }\r\n        }\r\n\r\n        currValue = tempColors[colorIndex].changedColor || tempColors[colorIndex].color;\r\n\r\n        if (singleSelect) {\r\n          $selectedtempColors.removeClass('mbsc-color-selected');\r\n          that._tempValue = currValue;\r\n\r\n          if (currValue) {\r\n            $currItem.toggleClass('mbsc-color-selected');\r\n          }\r\n\r\n          highlightActiveColor($currItem, $m);\r\n        } else {\r\n          highlightActiveColor($currItem, $m);\r\n\r\n          if (!hasSelect) {\r\n            toggleColor(!tempColors[colorIndex].selected, colorIndex, colorPreviewInd, currValue, true, true);\r\n          }\r\n        }\r\n\r\n        setDefaultValues(colorIndex, $m);\r\n\r\n        if (that.live) {\r\n          that._fillValue();\r\n\r\n          trigger('onSet', {\r\n            value: that._value\r\n          });\r\n        }\r\n\r\n        trigger('onItemTap', {\r\n          target: ev.target,\r\n          value: currValue,\r\n          selected: tempColors[colorIndex].selected,\r\n          index: colorIndex\r\n        });\r\n\r\n        that._updateHeader();\r\n      }\r\n    } // Call the parent constructor\r\n\r\n\r\n    Frame.call(this, el, settings, true); // Public functions\r\n\r\n    /**\r\n     * Sets the value\r\n     */\r\n\r\n    that.setVal = that._setVal = function (val, fill, change, temp) {\r\n      that._hasValue = val !== null && val !== undefined;\r\n      that._tempValue = singleSelect ? $$1.isArray(val) ? val[0] : val : $$1.isArray(val) ? val : val ? [val] : [];\r\n      setValue(fill, change === undefined ? fill : change, temp);\r\n    };\r\n    /**\r\n     * Returns the selected value\r\n     */\r\n\r\n\r\n    that.getVal = that._getVal = function (temp) {\r\n      return that._hasValue || temp ? returnObj ? getColorObjects() : that[temp ? '_tempValue' : '_value'] : null;\r\n    };\r\n\r\n    that._readValue = function () {\r\n      var v = $elm.val() || '';\r\n      that._hasValue = false;\r\n\r\n      if (v.length !== 0 && v !== '') {\r\n        that._hasValue = true;\r\n      }\r\n\r\n      if (that._hasValue) {\r\n        that._tempValue = singleSelect ? v : s.format == 'hex' ? v.split(',') : v.match(/[a-z]{3}\\((\\d+\\.?\\d{0,}?),\\s*([\\d.]+)%{0,},\\s*([\\d.]+)%{0,}\\)/gmi);\r\n        setValue(true);\r\n      } else {\r\n        that._tempValue = [];\r\n      }\r\n\r\n      refreshSelectedValues(that._tempValue, that._hasValue);\r\n    };\r\n\r\n    that._fillValue = function () {\r\n      that._hasValue = true;\r\n      setValue(true, true);\r\n    };\r\n\r\n    that._generateContent = function () {\r\n      var i,\r\n          html,\r\n          currColor,\r\n          colorOffset = hasClear ? 1 : 0;\r\n      rowItems = isHorizontalScroll ? Math.ceil((tempColors.length + colorOffset) / s.rows) : s.rows; // generate color content\r\n\r\n      html = '<div class=\"mbsc-color-scroll-cont mbsc-w-p ' + (isHorizontalScroll ? '' : 'mbsc-color-vertical') + '\"><div class=\"mbsc-color-cont\">' + (isHorizontalScroll ? '<div class=\"mbsc-color-row\">' : '');\r\n\r\n      for (i = 0; i < tempColors.length; ++i) {\r\n        currColor = tempColors[i].changedColor || tempColors[i].color;\r\n\r\n        if (hasClear && i === 0) {\r\n          html += '<div class=\"mbsc-color-item-c\"><div tabindex=\"0\" class=\"mbsc-color-clear-item mbsc-btn-e mbsc-color-selected\"><div class=\"mbsc-color-clear-cross\"></div></div></div>';\r\n        }\r\n\r\n        if (i !== 0 && (i + colorOffset) % rowItems === 0) {\r\n          html += isHorizontalScroll ? '</div><div class=\"mbsc-color-row\">' : '';\r\n        }\r\n\r\n        html += '<div class=\"mbsc-color-item-c\"><div tabindex=\"0\" data-index=\"' + i + '\" class=\"mbsc-color-item mbsc-btn-e mbsc-ic mbsc-ic-material-check mbsc-color-btn-e ' + (tempColors[i].selected ? 'mbsc-color-selected' : '') + '\"  style=\"background:' + currColor + '\"></div>' + that._getText(mobiscroll, 0.2) + '</div>';\r\n      }\r\n\r\n      html += '</div></div>' + (isHorizontalScroll ? '</div>' : '');\r\n\r\n      if (refineMode) {\r\n        // add refine slider \r\n        html += '<div class=\"mbsc-color-slider-cont\"><input class=\"mbsc-color-slider\" type=\"range\" data-highlight=\"false\" value=\"50\" min=\"0\" max=\"100\"/></div>';\r\n      } // add preview container \r\n\r\n\r\n      if (hasPreview) {\r\n        html += '<div class=\"mbsc-color-preview-cont\"><div class=\"mbsc-color-refine-preview\">';\r\n\r\n        for (var c in previewValues) {\r\n          html += '<div class=\"mbsc-color-preview-item-c mbsc-btn-e mbsc-color-btn-e\" tabindex=\"0\"><div class=\"mbsc-color-preview-item ' + (previewValues[c].color ? '' : 'mbsc-color-preview-item-empty') + '\" style=\"background: ' + (previewValues[c].color || 'initial') + ';\"></div></div>';\r\n        }\r\n\r\n        html += '</div></div>';\r\n      }\r\n\r\n      return html;\r\n    };\r\n\r\n    that._position = function ($m) {\r\n      var colorCont, colorItemWidth;\r\n\r\n      if (!isHorizontalScroll) {\r\n        colorCont = $m.find('.mbsc-color-cont');\r\n        colorItemWidth = Math.ceil(colorCont.find('.mbsc-color-item-c')[0].offsetWidth);\r\n        colorCont.width(Math.min(Math.floor($m.find('.mbsc-fr-c').width() / colorItemWidth), Math.round(tempColors.length / s.rows)) * colorItemWidth + 1);\r\n      }\r\n\r\n      if (scrollView) {\r\n        scrollView.refresh();\r\n      }\r\n\r\n      if (previewScrollView) {\r\n        previewScrollView.refresh();\r\n      }\r\n    };\r\n\r\n    that._markupInserted = function ($markup) {\r\n      if (!isHorizontalScroll) {\r\n        $markup.find('.mbsc-color-scroll-cont').css('max-height', $markup.find('.mbsc-color-item-c')[0].offsetHeight * s.rows);\r\n      } // init color scrollView\r\n\r\n\r\n      scrollView = new ScrollViewBase($markup.find('.mbsc-color-scroll-cont')[0], {\r\n        axis: isHorizontalScroll ? 'X' : 'Y',\r\n        rtl: s.rtl,\r\n        elastic: 60,\r\n        stopProp: false,\r\n        mousewheel: s.mousewheel,\r\n        onBtnTap: function onBtnTap(ev) {\r\n          colorTap(ev, $markup);\r\n        }\r\n      });\r\n    };\r\n\r\n    that._attachEvents = function ($markup) {\r\n      var modifiedColor;\r\n      $colorItems = $$1('.mbsc-color-item', $markup); // handle color selection with space\r\n\r\n      $markup.on('keydown', '.mbsc-color-btn-e', function (ev) {\r\n        ev.stopPropagation();\r\n\r\n        if (ev.keyCode == 32) {\r\n          // Space \r\n          if (ev.target.classList.contains('mbsc-color-item')) {\r\n            colorTap(ev, $markup);\r\n          } else {\r\n            colorPreviewTap(ev, $markup);\r\n          }\r\n        }\r\n      });\r\n\r\n      if (hasPreview) {\r\n        $colorPreviewItems = $$1('.mbsc-color-preview-item', $markup);\r\n      } // refine mode \r\n\r\n\r\n      if (refineMode) {\r\n        $markup.addClass('mbsc-color-refine');\r\n        $sliderElm = $$1('.mbsc-color-slider', $markup);\r\n        slider = new Slider($sliderElm[0], {\r\n          theme: s.theme,\r\n          rtl: s.rtl\r\n        });\r\n        sliderTrack = $markup.find('.mbsc-progress-track'); // change slider track step color\r\n\r\n        if (colorIndex && that._value) {\r\n          setDefaultValues(colorIndex, $markup);\r\n        }\r\n\r\n        $sliderElm.on('change', function () {\r\n          if (colorIndex !== undefined && (singleSelect || tempColors[colorIndex] && tempColors[colorIndex].selected)) {\r\n            currHslValue.l = 100 - this.value;\r\n            modifiedColor = convertToFormat(currHslValue.toString()).toString();\r\n\r\n            if (singleSelect) {\r\n              that._tempValue = modifiedColor;\r\n            } else {\r\n              that._tempValue[colorPreviewInd !== undefined ? colorPreviewInd : that._tempValue.length] = modifiedColor;\r\n            }\r\n\r\n            tempColors[colorIndex].tempChangedColor = modifiedColor;\r\n            $colorItems.eq(colorIndex).css('background', modifiedColor);\r\n\r\n            if (hasPreview) {\r\n              tempPreviewValues[colorPreviewInd].color = modifiedColor;\r\n              $colorPreviewItems.eq(colorPreviewInd).removeClass('mbsc-color-preview-item-empty').css({\r\n                'background': modifiedColor\r\n              });\r\n            }\r\n\r\n            if (that.live) {\r\n              throttle(that._fillValue());\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      if (hasPreview) {\r\n        // init colorprevirew scrollview\r\n        previewScrollView = new ScrollViewBase($markup.find('.mbsc-color-preview-cont')[0], {\r\n          axis: 'X',\r\n          rtl: s.rtl,\r\n          stopProp: false,\r\n          mousewheel: s.mousewheel,\r\n          onBtnTap: function onBtnTap(ev) {\r\n            colorPreviewTap(ev, $markup);\r\n          }\r\n        });\r\n      }\r\n\r\n      that._updateHeader();\r\n    };\r\n\r\n    that._markupRemove = function () {\r\n      if (scrollView) {\r\n        scrollView.destroy();\r\n      }\r\n\r\n      if (slider) {\r\n        slider.destroy();\r\n      }\r\n\r\n      if (previewScrollView) {\r\n        previewScrollView.destroy();\r\n      }\r\n    };\r\n\r\n    that.__processSettings = function () {\r\n      var i, data;\r\n      s = that.settings;\r\n      trigger = that.trigger;\r\n      isHorizontalScroll = s.navigation == 'horizontal';\r\n      that._value = [];\r\n      that._tempValue = [];\r\n      singleSelect = s.select == 'single';\r\n      hasClear = s.clear !== undefined ? s.clear : singleSelect;\r\n      data = s.data || [];\r\n\r\n      if (!data.length) {\r\n        switch (s.format) {\r\n          case 'rgb':\r\n            data = [\"rgb(255,235,60)\", \"rgb(255,153,0)\", \"rgb(244,68,55)\", \"rgb(234,30,99)\", \"rgb(156,38,176)\", \"rgb(104,58,183)\", \"rgb(63,81,181)\", \"rgb(33,150,243)\", \"rgb(0,151,136)\", \"rgb(75,175,79)\", \"rgb(126,93,78)\", \"rgb(158,158,158)\"];\r\n\r\n            if (hasClear) {\r\n              data.splice(10, 0, 'rgb(83, 71, 65)');\r\n            }\r\n\r\n            break;\r\n\r\n          case 'hsl':\r\n            data = [\"hsl(54,100%,62%)\", \"hsl(36,100%,50%)\", \"hsl(4,90%,59%)\", \"hsl(340,83%,52%)\", \"hsl(291,64%,42%)\", \"hsl(262,52%,47%)\", \"hsl(231,48%,48%)\", \"hsl(207,90%,54%)\", \"hsl(174,100%,30%)\", \"hsl(122,40%,49%)\", \"hsl(19,24%,40%)\", \"hsl(0,0%,62%)\"];\r\n\r\n            if (hasClear) {\r\n              data.splice(10, 0, 'hsl(20, 12%, 29%)');\r\n            }\r\n\r\n            break;\r\n\r\n          default:\r\n            data = ['#ffeb3c', '#ff9900', '#f44437', '#ea1e63', '#9c26b0', '#683ab7', '#3f51b5', '#2196f3', '#009788', '#4baf4f', '#7e5d4e', '#9e9e9e'];\r\n\r\n            if (hasClear) {\r\n              data.splice(10, 0, '#534741');\r\n            }\r\n\r\n        }\r\n      }\r\n\r\n      refineMode = s.mode == 'refine';\r\n      hasPreview = !isNaN(s.select);\r\n      maxSelect = isNaN(s.select) ? singleSelect ? 2 : data.length : s.select;\r\n      returnObj = $$1.isPlainObject(data[0]); // generate preview object\r\n\r\n      if (hasPreview && !Object.keys(previewValues).length) {\r\n        for (i = 0; i < s.select; ++i) {\r\n          previewValues[i] = {};\r\n          tempPreviewValues[i] = {};\r\n        }\r\n      }\r\n\r\n      tempColors = data.slice(0); // convert tempColors into objects\r\n\r\n      for (i = 0; i < tempColors.length; ++i) {\r\n        if (!$$1.isPlainObject(data[i])) {\r\n          data[i] = data[i].toLowerCase();\r\n          tempColors[i] = {\r\n            key: i,\r\n            name: data[i],\r\n            color: data[i]\r\n          };\r\n        } else {\r\n          tempColors[i].color = data[i].color;\r\n        }\r\n      }\r\n\r\n      def = s.defaultValue || tempColors[0].color;\r\n      currValue = def;\r\n      currHslValue = convertToFormat(currValue, 'hsl');\r\n      enhanceInput = s.enhance && $elm.is('input'); // Create dummy input\r\n\r\n      if (enhanceInput) {\r\n        if ($elm.hasClass('mbsc-color-input-hdn')) {\r\n          $input = $elm.prev();\r\n        } else {\r\n          $input = $$1('<div ' + (el.placeholder ? 'data-placeholder=\"' + el.placeholder + '\"' : '') + ' class=\"mbsc-control mbsc-color-input ' + (s.inputClass || '') + '\" readonly ></div>');\r\n          $input.insertBefore($elm);\r\n          $elm.addClass('mbsc-color-input-hdn').attr('tabindex', -1);\r\n        }\r\n\r\n        s.anchor = $input;\r\n        that.attachShow($input);\r\n      }\r\n    };\r\n\r\n    that.__destroy = function () {\r\n      if (enhanceInput) {\r\n        $elm.removeClass('mbsc-color-input-hdn');\r\n        $input.remove();\r\n      }\r\n    };\r\n\r\n    that._checkSize = true; // Constructor\r\n\r\n    if (!inherit) {\r\n      that.init();\r\n    }\r\n  }; // Extend defaults\r\n\r\n  Color.prototype = {\r\n    _hasDef: true,\r\n    _hasTheme: true,\r\n    _hasLang: true,\r\n    _class: 'color',\r\n    _defaults: extend$1({}, Frame.prototype._defaults, {\r\n      headerText: false,\r\n      validate: noop,\r\n      parseValue: noop,\r\n      enhance: true,\r\n      rows: 2,\r\n      select: 'single',\r\n      format: 'hex',\r\n      navigation: 'horizontal',\r\n      compClass: 'mbsc-color'\r\n    })\r\n  };\r\n  classes.Color = Color;\r\n  mobiscroll.themes.color = mobiscroll.themes.frame; // Expose utility functions\r\n\r\n  util.color = {\r\n    hsv2hex: hsv2hex,\r\n    hsv2rgb: hsv2rgb,\r\n    rgb2hsv: rgb2hsv,\r\n    rgb2hex: rgb2hex,\r\n    rgb2hsl: rgb2hsl,\r\n    hex2rgb: hex2rgb,\r\n    hex2hsv: hex2hsv,\r\n    hex2hsl: hex2hsl\r\n  };\r\n\r\n  var MbscColor = (function (_super) {\r\n      __extends(MbscColor, _super);\r\n      function MbscColor(initialElem, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, view) || this;\r\n          _this.optionService = optionService;\r\n          _this.enhance = false;\r\n          _this.onSet = new core.EventEmitter();\r\n          _this.onClear = new core.EventEmitter();\r\n          _this.onItemTap = new core.EventEmitter();\r\n          _this.onPreviewItemTap = new core.EventEmitter();\r\n          _this.options = {};\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscColor.prototype, \"value\", {\r\n          set: function (v) {\r\n              this.setNewValueProxy(v);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscColor.prototype.refreshData = function (newData) {\r\n          this.instance.option('data', newData);\r\n      };\r\n      MbscColor.prototype.initControl = function () {\r\n          var options = extend$1({}, this.optionService ? this.optionService.options : {}, this.options, this.inlineOptionsObj, this.optionExtensions);\r\n          this.instance = new Color(this.element, options);\r\n          if (this.initialValue !== undefined) {\r\n              this.instance.setVal(this.initialValue, true, false);\r\n          }\r\n      };\r\n      MbscColor.prototype.setNewValue = function (v) {\r\n          if (this.instance) {\r\n              var changed = void 0;\r\n              if (this.isMulti) {\r\n                  changed = !deepEqualsArray(v, this.instance.getVal());\r\n              }\r\n              else {\r\n                  var innerValue = this.instance.getVal();\r\n                  changed = innerValue !== v;\r\n              }\r\n              if (changed) {\r\n                  this.instance.setVal(v, true, false);\r\n                  if (this._inputService && this._inputService.input) {\r\n                      this._inputService.input.innerValue = this.instance._value;\r\n                  }\r\n              }\r\n          }\r\n      };\r\n      MbscColor.prototype.ngOnInit = function () {\r\n          this.isMulti = this.options && this.options.select && this.options.select !== 'single';\r\n          this.cloneDictionary.data = [];\r\n          _super.prototype.ngOnInit.call(this);\r\n      };\r\n      MbscColor.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-color]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscColor.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscColor.propDecorators = {\r\n          'clear': [{ type: core.Input },],\r\n          'data': [{ type: core.Input, args: ['mbsc-data',] },],\r\n          'defaultValue': [{ type: core.Input },],\r\n          'enhance': [{ type: core.Input },],\r\n          'format': [{ type: core.Input },],\r\n          'inputClass': [{ type: core.Input },],\r\n          'mode': [{ type: core.Input },],\r\n          'navigation': [{ type: core.Input },],\r\n          'preview': [{ type: core.Input },],\r\n          'previewText': [{ type: core.Input },],\r\n          'rows': [{ type: core.Input },],\r\n          'valueText': [{ type: core.Input },],\r\n          'select': [{ type: core.Input },],\r\n          'onSet': [{ type: core.Output },],\r\n          'onClear': [{ type: core.Output },],\r\n          'onItemTap': [{ type: core.Output },],\r\n          'onPreviewItemTap': [{ type: core.Output },],\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n          'value': [{ type: core.Input, args: ['mbsc-color',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['mbsc-colorChange',] },],\r\n      };\r\n      return MbscColor;\r\n  }(MbscFrameBase));\r\n  var MbscColorComponent = (function (_super) {\r\n      __extends(MbscColorComponent, _super);\r\n      function MbscColorComponent(initialElem, zone, control, inputService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, null) || this;\r\n          _this.errorMessage = '';\r\n          _this.placeholder = '';\r\n          _this.enhance = true;\r\n          return _this;\r\n      }\r\n      MbscColorComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscColorComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-color',\r\n                      exportAs: 'mobiscroll',\r\n                      template: INPUT_TEMPLATE\r\n                  },] },\r\n      ];\r\n      MbscColorComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscColorComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n          'data': [{ type: core.Input },],\r\n          'enhance': [{ type: core.Input },],\r\n      };\r\n      return MbscColorComponent;\r\n  }(MbscColor));\r\n  var MbscColorModule = (function () {\r\n      function MbscColorModule() {\r\n      }\r\n      MbscColorModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [common.CommonModule, MbscFrameBaseModule, MbscInputModule],\r\n                      declarations: [MbscColor, MbscColorComponent],\r\n                      exports: [MbscColor, MbscColorComponent]\r\n                  },] },\r\n      ];\r\n      MbscColorModule.ctorParameters = function () { return []; };\r\n      return MbscColorModule;\r\n  }());\r\n\r\n  var DateTime$1 = Scroller;\r\n  presets.date = DateTime;\r\n  presets.time = DateTime;\r\n  presets.datetime = DateTime;\r\n\r\n  var MbscDateBase = (function (_super) {\r\n      __extends(MbscDateBase, _super);\r\n      function MbscDateBase(initialElem, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, view) || this;\r\n          _this.optionService = optionService;\r\n          _this.options = {};\r\n          _this.preset = 'date';\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscDateBase.prototype, \"value\", {\r\n          set: function (v) {\r\n              this.setNewValueProxy(v);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscDateBase.prototype.setNewValue = function (v) {\r\n          if (this.instance) {\r\n              var innerValue = this.instance.getVal();\r\n              if ((!innerValue && v) ||\r\n                  (innerValue && !v) ||\r\n                  (innerValue && v && innerValue.toString() !== v.toString())) {\r\n                  this.instance.setVal(v, true, false);\r\n                  if (this._inputService && this._inputService.input) {\r\n                      this._inputService.input.innerValue = this.instance._value;\r\n                  }\r\n              }\r\n          }\r\n      };\r\n      MbscDateBase.prototype.initControl = function () {\r\n          var options = extend$1({ preset: this.preset }, this.optionService ? this.optionService.options : {}, this.options, this.inlineOptionsObj, this.optionExtensions);\r\n          this.instance = new DateTime$1(this.element, options);\r\n          if (this.initialValue !== undefined && this.initialValue !== \"\") {\r\n              this.instance.setVal(this.initialValue, true, false);\r\n          }\r\n      };\r\n      MbscDateBase.decorators = [\r\n          { type: core.Directive, args: [{ selector: '[mbsc-dt-b]' },] },\r\n      ];\r\n      MbscDateBase.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, },\r\n          { type: MbscInputService, },\r\n          { type: MbscOptionsService, },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscDateBase.propDecorators = {\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n          'value': [{ type: core.Input, args: ['mbsc-date',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['mbsc-dateChange',] },],\r\n      };\r\n      return MbscDateBase;\r\n  }(MbscDatetimeBase));\r\n  var MbscDate = (function (_super) {\r\n      __extends(MbscDate, _super);\r\n      function MbscDate(initialElem, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, view) || this;\r\n          _this.preset = 'date';\r\n          return _this;\r\n      }\r\n      MbscDate.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-date]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscDate.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      return MbscDate;\r\n  }(MbscDateBase));\r\n  var MbscDateComponent = (function (_super) {\r\n      __extends(MbscDateComponent, _super);\r\n      function MbscDateComponent(initialElem, zone, control, inputService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, null) || this;\r\n          _this.errorMessage = '';\r\n          _this.placeholder = '';\r\n          return _this;\r\n      }\r\n      MbscDateComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscDateComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-date',\r\n                      exportAs: 'mobiscroll',\r\n                      template: INPUT_TEMPLATE\r\n                  },] },\r\n      ];\r\n      MbscDateComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscDateComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n      };\r\n      return MbscDateComponent;\r\n  }(MbscDate));\r\n  var MbscTime = (function (_super) {\r\n      __extends(MbscTime, _super);\r\n      function MbscTime(initialElem, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, view) || this;\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          _this.preset = 'time';\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscTime.prototype, \"value\", {\r\n          set: function (v) {\r\n              this.setNewValueProxy(v);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscTime.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-time]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscTime.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscTime.propDecorators = {\r\n          'value': [{ type: core.Input, args: ['mbsc-time',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['mbsc-timeChange',] },],\r\n      };\r\n      return MbscTime;\r\n  }(MbscDateBase));\r\n  var MbscTimeComponent = (function (_super) {\r\n      __extends(MbscTimeComponent, _super);\r\n      function MbscTimeComponent(initialElem, zone, control, inputService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, null) || this;\r\n          _this.errorMessage = '';\r\n          _this.placeholder = '';\r\n          return _this;\r\n      }\r\n      MbscTimeComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscTimeComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-time',\r\n                      exportAs: 'mobiscroll',\r\n                      template: INPUT_TEMPLATE\r\n                  },] },\r\n      ];\r\n      MbscTimeComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscTimeComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n      };\r\n      return MbscTimeComponent;\r\n  }(MbscTime));\r\n  var MbscDatetime = (function (_super) {\r\n      __extends(MbscDatetime, _super);\r\n      function MbscDatetime(initialElem, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, view) || this;\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          _this.preset = 'datetime';\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscDatetime.prototype, \"value\", {\r\n          set: function (v) {\r\n              this.setNewValueProxy(v);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscDatetime.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-datetime]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscDatetime.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscDatetime.propDecorators = {\r\n          'value': [{ type: core.Input, args: ['mbsc-datetime',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['mbsc-datetimeChange',] },],\r\n      };\r\n      return MbscDatetime;\r\n  }(MbscDateBase));\r\n  var MbscDatetimeComponent = (function (_super) {\r\n      __extends(MbscDatetimeComponent, _super);\r\n      function MbscDatetimeComponent(initialElem, zone, control, inputService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, null) || this;\r\n          _this.errorMessage = '';\r\n          _this.placeholder = '';\r\n          return _this;\r\n      }\r\n      MbscDatetimeComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscDatetimeComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-datetime',\r\n                      exportAs: 'mobiscroll',\r\n                      template: INPUT_TEMPLATE\r\n                  },] },\r\n      ];\r\n      MbscDatetimeComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscDatetimeComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n      };\r\n      return MbscDatetimeComponent;\r\n  }(MbscDatetime));\r\n  var comp$2 = [MbscDateBase, MbscDate, MbscDateComponent, MbscTime, MbscTimeComponent, MbscDatetime, MbscDatetimeComponent];\r\n  var MbscDatetimeModule = (function () {\r\n      function MbscDatetimeModule() {\r\n      }\r\n      MbscDatetimeModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [common.CommonModule, MbscDatetimeBaseModule, MbscInputModule],\r\n                      declarations: comp$2,\r\n                      exports: comp$2\r\n                  },] },\r\n      ];\r\n      MbscDatetimeModule.ctorParameters = function () { return []; };\r\n      return MbscDatetimeModule;\r\n  }());\r\n\r\n  var Popup = function Popup(el, settings, inherit) {\r\n    function addContent($m) {\r\n      $$1('.mbsc-fr-c', $m).append(that._getText(mobiscroll, 0.7));\r\n\r\n      if (!$$1('.mbsc-fr-c', $m).hasClass('mbsc-wdg-c') && mobiscroll.LIIiW) {\r\n        $$1('.mbsc-fr-c', $m).addClass('mbsc-wdg-c').append($elm.show());\r\n\r\n        if (!$$1('.mbsc-w-p', $m).length) {\r\n          $$1('.mbsc-fr-c', $m).addClass('mbsc-w-p');\r\n        }\r\n      }\r\n    }\r\n\r\n    var s,\r\n        $prev,\r\n        $elm = $$1(el),\r\n        that = this; // Call the parent constructor\r\n\r\n    Frame.call(this, el, settings, true);\r\n\r\n    that._generateContent = function () {\r\n      return '';\r\n    };\r\n\r\n    that._markupReady = function ($m) {\r\n      if (s.display != 'inline') {\r\n        addContent($m);\r\n      }\r\n    };\r\n\r\n    that._markupInserted = function ($m) {\r\n      if (s.display == 'inline') {\r\n        addContent($m);\r\n      }\r\n\r\n      $m.trigger('mbsc-enhance', [{\r\n        theme: s.theme,\r\n        lang: s.lang\r\n      }]);\r\n    };\r\n\r\n    that._markupRemove = function () {\r\n      $elm.hide();\r\n\r\n      if ($prev && $prev.parent().length) {\r\n        $prev.after($elm);\r\n      }\r\n    };\r\n\r\n    that.__processSettings = function () {\r\n      s = that.settings;\r\n      that.buttons.ok = {\r\n        text: s.okText,\r\n        icon: s.okIcon,\r\n        handler: 'set'\r\n      };\r\n      s.buttons = s.buttons || (s.display == 'inline' ? [] : ['ok']);\r\n\r\n      if (!$prev && $elm.parent().length) {\r\n        $prev = $$1(document.createComment('popup'));\r\n        $elm.before($prev);\r\n      }\r\n\r\n      $elm.hide();\r\n    }; // Constructor\r\n\r\n\r\n    if (!inherit) {\r\n      that.init();\r\n    }\r\n  };\r\n  Popup.prototype = {\r\n    _hasDef: true,\r\n    _hasTheme: true,\r\n    _hasContent: true,\r\n    _hasLang: true,\r\n    _responsive: true,\r\n    _class: 'popup',\r\n    _defaults: extend$1({}, Frame.prototype._defaults, {\r\n      compClass: 'mbsc-wdg',\r\n      okText: 'OK',\r\n      headerText: false\r\n    })\r\n  };\r\n  classes.Popup = Popup;\r\n  classes.Widget = Popup;\r\n  mobiscroll.themes.popup = mobiscroll.themes.frame;\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  var Eventcalendar = Scroller;\r\n\r\n  function getHeight(el) {\r\n    var style = getComputedStyle(el);\r\n    return el.innerHeight || el.clientHeight - parseFloat(style.paddingTop) - parseFloat(style.paddingBottom);\r\n  }\r\n\r\n  var defaults$4 = {\r\n    view: {\r\n      calendar: {\r\n        type: 'month',\r\n        popover: true\r\n      }\r\n    },\r\n    // Localization\r\n    allDayText: 'All-day',\r\n    labelsShort: ['Yrs', 'Mths', 'Days', 'Hrs', 'Mins', 'Secs'],\r\n    eventText: 'event',\r\n    eventsText: 'events',\r\n    noEventsText: 'No events'\r\n  },\r\n      overrides = {\r\n    yearChange: false,\r\n    weekDays: 'short'\r\n  };\r\n\r\n  presets.eventcalendar = function (inst, settings) {\r\n    // Private functions\r\n    // ---\r\n    function processSettings() {\r\n      var view = s.view,\r\n          calendar = view.calendar,\r\n          list = view.eventList,\r\n          months = s.months,\r\n          weeks = s.weeks;\r\n\r\n      if (calendar) {\r\n        if (calendar.type == 'week') {\r\n          weeks = calendar.size || 1;\r\n        } else if (calendar.size) {\r\n          months = calendar.size;\r\n        }\r\n\r\n        isListOnly = false;\r\n      } else {\r\n        weeks = 0;\r\n        isListOnly = true;\r\n      }\r\n\r\n      if (list) {\r\n        listType = list.type;\r\n        listSize = list.size || 1;\r\n      }\r\n\r\n      multiLabel = calendar && calendar.labels;\r\n      scrollEventList = list && list.scrollable;\r\n      showEventList = view.eventList;\r\n      showEventBubble = s.eventBubble === undefined ? calendar && calendar.popover : s.eventBubble;\r\n      s.weeks = weeks;\r\n      s.months = months;\r\n    }\r\n\r\n    function updateTitle(firstDay, lastDay) {\r\n      var title,\r\n          monthIndex = (s.dateWheels || s.dateFormat).search(/m/i),\r\n          yearIndex = (s.dateWheels || s.dateFormat).search(/y/i),\r\n          firstYear = s.getYear(firstDay),\r\n          firstMonth = s.getMonth(firstDay),\r\n          lastYear = s.getYear(lastDay),\r\n          lastMonth = s.getMonth(lastDay);\r\n\r\n      inst._checkBtn($$1('.mbsc-cal-prev-m', $ctx), getDateOnly(firstDay) <= inst._minDate);\r\n\r\n      inst._checkBtn($$1('.mbsc-cal-next-m', $ctx), getDateOnly(lastDay) >= inst._maxDate);\r\n\r\n      if (listType == 'day') {\r\n        title = formatDate(s.dateFormat, firstDay, s) + (listSize > 1 ? ' - ' + formatDate(s.dateFormat, lastDay, s) : '');\r\n      } else if (listType == 'week') {\r\n        title = formatDate(s.dateFormat, firstDay, s) + ' - ' + formatDate(s.dateFormat, lastDay, s);\r\n      } else if (listType == 'month') {\r\n        if (listSize == 1) {\r\n          title = yearIndex < monthIndex ? firstYear + ' ' + s.monthNames[firstMonth] : s.monthNames[firstMonth] + ' ' + firstYear;\r\n        } else {\r\n          title = yearIndex < monthIndex ? firstYear + ' ' + s.monthNamesShort[firstMonth] + ' - ' + lastYear + ' ' + s.monthNamesShort[lastMonth] : s.monthNamesShort[firstMonth] + ' ' + firstYear + ' - ' + s.monthNamesShort[lastMonth] + ' ' + lastYear;\r\n        }\r\n      } else if (listType == 'year') {\r\n        title = firstYear + (listSize > 1 ? \" - \" + lastYear : '');\r\n      }\r\n\r\n      $viewTitle.html(title);\r\n    }\r\n\r\n    function createEventList(firstDay, lastDay, eventObj) {\r\n      var d,\r\n          i,\r\n          j,\r\n          ev,\r\n          $items,\r\n          count = 0,\r\n          allEvents = [],\r\n          eventHtml = '',\r\n          events = [];\r\n\r\n      if (!eventObj) {\r\n        eventObj = inst._prepareObj(eventList, firstDay, lastDay);\r\n      }\r\n\r\n      for (d = getDateOnly(firstDay); d <= lastDay; d.setDate(d.getDate() + 1)) {\r\n        ev = eventObj[getDateOnly(d)];\r\n\r\n        if (ev && ev.length) {\r\n          events.push({\r\n            d: new Date(d),\r\n            list: sortEvents(ev)\r\n          });\r\n        }\r\n      }\r\n\r\n      if (events.length > 0) {\r\n        for (i = 0; i < events.length; i++) {\r\n          ev = events[i];\r\n          eventHtml += '<div><div class=\"mbsc-lv-gr-title mbsc-event-day\" data-full=\"' + getDateStr(ev.d) + '\">' + formatDate(s.dateFormat, ev.d, s) + '</div>';\r\n\r\n          for (j = 0; j < ev.list.length; j++) {\r\n            var event = ev.list[j],\r\n                start = event.start ? makeDate(event.start) : null,\r\n                end = event.end ? makeDate(event.end) : null,\r\n                color = event.color,\r\n                isRepeating = DAY_OF_WEEK.test(event.d) || DAY_OF_MONTH.test(event.d),\r\n                isMultiDay = start && end && !isSameDay(start, end),\r\n                isFirstDay = isMultiDay ? isSameDay(start, ev.d) : true,\r\n                isLastDay = isMultiDay ? isSameDay(end, ev.d) : true,\r\n                dt = event.d ? isRepeating ? event.d : makeDate(event.d) : start,\r\n                allDay = event.allDay || isRepeating || isMultiDay && !isFirstDay && !isLastDay;\r\n            allEvents.push({\r\n              d: ev.d,\r\n              e: event\r\n            });\r\n            eventHtml += '<div tabindex=\"0\" role=\"button\" class=\"mbsc-lv-item mbsc-lv-item-actionable\" data-index=\"' + count + '\"><div class=\"mbsc-event-time\">' + (allDay ? s.allDayText : isFirstDay && dt && dt.getTime ? formatDate(s.timeFormat, dt) : isMultiDay && isLastDay ? s.toText : '') + (!allDay && isLastDay && end && end.getTime ? '<br/>' + formatDate(s.timeFormat, end) : '') + '</div>' + '<div class=\"mbsc-event-color\"' + (color ? ' style=\"background:' + color + ';\"' : '') + '></div>' + '<div class=\"mbsc-event-txt\">' + event.text + '</div>' + inst._getText(mobiscroll, 0.3) + '</div>';\r\n            count++;\r\n          }\r\n\r\n          eventHtml += '</div>';\r\n        }\r\n      } else {\r\n        eventHtml += '<div class=\"mbsc-lv-gr-title mbsc-event-empty\"><div class=\"mbsc-empty\"><h3>' + s.noEventsText + '</h3></div></div>';\r\n      }\r\n\r\n      preventScrollWatch++;\r\n      $eventListCont.html('<div class=\"mbsc-lv mbsc-lv-v\">' + eventHtml + '</div>').scrollTop(0);\r\n      setTimeout(function () {\r\n        // Need setTimeout since scroll listener is throtteled\r\n        preventScrollWatch--;\r\n      }, 150);\r\n      $items = $$1('.mbsc-lv-item', $eventListCont); // Assign event click\r\n\r\n      inst.tap($items, function (e) {\r\n        var data = allEvents[$$1(this).attr('data-index')];\r\n        trigger('onEventSelect', {\r\n          domEvent: e,\r\n          event: data.e,\r\n          date: data.d\r\n        });\r\n      });\r\n      handleFocus($items);\r\n    }\r\n\r\n    function handleFocus($items) {\r\n      $items.on('keydown', function (ev) {\r\n        if (ev.keyCode === 13 || ev.keyCode === 32) {\r\n          this.click();\r\n        }\r\n      }).on('focus', function () {\r\n        if (window.__mbscFocusVisible) {\r\n          $$1(this).addClass('mbsc-focus');\r\n        }\r\n      }).on('blur', function () {\r\n        $$1(this).removeClass('mbsc-focus');\r\n      });\r\n    }\r\n\r\n    function createEventPopover() {\r\n      if (popoverData) {\r\n        var d = getDateOnly(popoverData.d),\r\n            events = popoverData.events || eventObj[d],\r\n            cell = popoverData.cell || $$1('.mbsc-cal-slide-a .mbsc-cal-day[data-full=\"' + getDateStr(d) + '\"]', inst._markup)[0];\r\n        showEvents(events, d, cell);\r\n        popoverData = null;\r\n      }\r\n    }\r\n\r\n    function formatDuration(start, end) {\r\n      var lbl = s.labelsShort,\r\n          time = end - start,\r\n          seconds = Math.abs(time) / 1000,\r\n          minutes = seconds / 60,\r\n          hours = minutes / 60,\r\n          days = hours / 24,\r\n          years = days / 365;\r\n      return seconds < 45 && Math.round(seconds) + ' ' + lbl[5].toLowerCase() || //seconds < 90 && '1 minute' ||\r\n      minutes < 45 && Math.round(minutes) + ' ' + lbl[4].toLowerCase() || //minutes < 90 && '1 hour' ||\r\n      hours < 24 && Math.round(hours) + ' ' + lbl[3].toLowerCase() || //hours < 42 && '1 day' ||\r\n      days < 30 && Math.round(days) + ' ' + lbl[2].toLowerCase() || //days < 45 && '1 month' ||\r\n      days < 365 && Math.round(days / 30) + ' ' + lbl[1].toLowerCase() || //years < 1.5 && '1 year' ||\r\n      Math.round(years) + ' ' + lbl[0].toLowerCase();\r\n    }\r\n\r\n    function sortEvents(events) {\r\n      return events.slice(0).sort(function (a, b) {\r\n        var start1 = a.start ? makeDate(a.start) : null,\r\n            start2 = b.start ? makeDate(b.start) : null,\r\n            end1 = a.end ? makeDate(a.end) : null,\r\n            end2 = b.end ? makeDate(b.end) : null,\r\n            isRepeating1 = DAY_OF_WEEK.test(a.d) || DAY_OF_MONTH.test(a.d),\r\n            isRepeating2 = DAY_OF_WEEK.test(b.d) || DAY_OF_MONTH.test(b.d),\r\n            dt1 = a.d ? isRepeating1 ? a.d : makeDate(a.d) : start1,\r\n            dt2 = b.d ? isRepeating2 ? b.d : makeDate(b.d) : start2,\r\n            weight1 = !dt1.getTime ? 0 : start1 && end1 && start1.toDateString() !== end1.toDateString() ? 1 : a.allDay ? 2 : dt1.getTime(),\r\n            weight2 = !dt2.getTime ? 0 : start2 && end2 && start2.toDateString() !== end2.toDateString() ? 1 : b.allDay ? 2 : dt2.getTime();\r\n\r\n        if (weight1 == weight2) {\r\n          return a.text > b.text ? 1 : -1;\r\n        }\r\n\r\n        return weight1 - weight2;\r\n      });\r\n    }\r\n\r\n    function showEvents(events, d, cell) {\r\n      if (events) {\r\n        var $eventCont,\r\n            $eventContInner,\r\n            $eventScroller,\r\n            eventScroller,\r\n            $items,\r\n            html = '<div class=\"mbsc-cal-event-list\">';\r\n        $eventCont = $$1('<div class=\"mbsc-cal-events ' + (s.eventBubbleClass || '') + '\">' + '<div class=\"mbsc-cal-events-i\"><div class=\"mbsc-cal-events-sc\">' + '</div><div class=\"mbsc-sc-bar-c\"><div class=\"mbsc-sc-bar\"></div></div></div></div>');\r\n        $eventContInner = $$1('.mbsc-cal-events-i', $eventCont);\r\n        $eventScroller = $$1('.mbsc-cal-events-sc', $eventCont);\r\n        inst.tap($eventContInner, function () {\r\n          if (!eventScroller.scrolled) {\r\n            hideEvents();\r\n          }\r\n        });\r\n        popup = new Popup($eventCont[0], {\r\n          display: 'bubble',\r\n          theme: s.theme,\r\n          lang: s.lang,\r\n          context: s.context,\r\n          buttons: [],\r\n          anchor: cell,\r\n          showOverlay: false,\r\n          cssClass: 'mbsc-no-padding mbsc-cal-events-popup',\r\n          onShow: function onShow() {\r\n            eventScroller = new ScrollViewBase($eventContInner[0], {\r\n              scrollbar: $$1('.mbsc-sc-bar-c', $eventCont),\r\n              stopProp: false\r\n            });\r\n            $$1(document).on('click', hideEventsOnClick);\r\n          },\r\n          onClose: function onClose(event, inst) {\r\n            inst.destroy();\r\n\r\n            if (eventScroller) {\r\n              eventScroller.destroy();\r\n            }\r\n\r\n            $$1(document).off('click', hideEventsOnClick);\r\n          }\r\n        }); // Store the popup on the instance, we need to destroy it in case of an option call or re-init\r\n\r\n        inst._popup = popup;\r\n        eventDay = cell;\r\n        events = sortEvents(events);\r\n        $$1.each(events, function (i, e) {\r\n          var start = e.start ? makeDate(e.start) : null,\r\n              end = e.end ? makeDate(e.end) : null,\r\n              isRepeating = DAY_OF_WEEK.test(e.d) || DAY_OF_MONTH.test(e.d),\r\n              dt = e.d ? isRepeating ? e.d : makeDate(e.d) : start,\r\n              isMultiDay = start && end && !isSameDay(start, end),\r\n              isFirstDay = isMultiDay ? isSameDay(start, d) : true,\r\n              isLastDay = isMultiDay ? isSameDay(end, d) : true,\r\n              allDay = e.allDay || isRepeating || isMultiDay && !isFirstDay && !isLastDay,\r\n              bg = e.color,\r\n              ariaFrom = '',\r\n              ariaTo = '',\r\n              ariaLabel = $$1('<div>' + e.text + '</div>').text();\r\n\r\n          if (dt.getTime) {\r\n            ariaFrom = formatDate((isMultiDay ? 'MM d yy ' : '') + s.timeFormat, dt);\r\n          }\r\n\r\n          if (end) {\r\n            ariaTo = formatDate((isMultiDay ? 'MM d yy ' : '') + s.timeFormat, end);\r\n          }\r\n\r\n          html += '<div tabindex=\"0\" role=\"button\" title=\"' + ariaLabel + '\" aria-label=\"' + ariaLabel + (ariaFrom ? ', ' + s.fromText + ': ' + ariaFrom : '') + (ariaTo ? ', ' + s.toText + ': ' + ariaTo : '') + '\" class=\"mbsc-cal-event mbsc-lv-item mbsc-lv-item-actionable\">' + '<div class=\"mbsc-cal-event-color\" style=\"' + (bg ? 'background:' + bg + ';' : '') + '\"></div>' + '<div class=\"mbsc-cal-event-text\">' + '<div class=\"mbsc-cal-event-time\">' + (allDay ? s.allDayText : isFirstDay && dt.getTime ? formatDate(s.timeFormat, dt) : '') + '</div>' + e.text + '</div>' + (start && end && !e.allDay ? '<div class=\"mbsc-cal-event-dur\">' + s.formatDuration(start, end, e) + '</div>' : '') + '</div>';\r\n        });\r\n        html += '</div>';\r\n        $eventScroller.html(html);\r\n        popup.show();\r\n        trigger('onEventBubbleShow', {\r\n          target: eventDay,\r\n          eventList: $eventCont[0]\r\n        });\r\n        $items = $$1('.mbsc-cal-event', $eventScroller); // Assign event click\r\n\r\n        inst.tap($items, function (e) {\r\n          if (!eventScroller.scrolled) {\r\n            trigger('onEventSelect', {\r\n              domEvent: e,\r\n              event: events[$$1(this).index()],\r\n              date: d\r\n            });\r\n          }\r\n        });\r\n        handleFocus($items);\r\n        hasEventBubble = true;\r\n      }\r\n    }\r\n\r\n    function onScroll() {\r\n      var d, top, parts;\r\n\r\n      if (!preventScrollWatch) {\r\n        $$1('.mbsc-event-day', this).each(function () {\r\n          top = this.offsetTop - eventListCont.scrollTop;\r\n\r\n          if (top >= 0 && top < 35) {\r\n            parts = $$1(this).attr('data-full').split('-');\r\n            d = adjustedDate(parts[0], parts[1] - 1, parts[2]);\r\n\r\n            if (!isSameDay(d, currDay)) {\r\n              preventEventScroll = true;\r\n              inst.setVal(d);\r\n            }\r\n\r\n            return false;\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    function hideEvents() {\r\n      if (popup && hasEventBubble) {\r\n        popup.hide();\r\n      }\r\n\r\n      eventDay = null;\r\n      hasEventBubble = false;\r\n    }\r\n\r\n    function hideEventsOnClick(e) {\r\n      if ($$1(e.target).closest('.mbsc-cal-day').length == 0) {\r\n        hideEvents();\r\n      }\r\n    }\r\n\r\n    function refresh() {\r\n      hideEvents();\r\n      inst.redraw();\r\n    }\r\n\r\n    function getFirstLast(day) {\r\n      var y = s.getYear(day),\r\n          m = s.getMonth(day),\r\n          d = s.getDay(day);\r\n      currFirstDay = day;\r\n\r\n      if (listType == 'day') {\r\n        currLastDay = s.getDate(y, m, d + listSize - 1);\r\n      } else if (listType == 'week') {\r\n        // get first day of week\r\n        var diff,\r\n            weekDay = currFirstDay.getDay();\r\n        diff = d + s.firstDay - (s.firstDay - weekDay > 0 ? 7 : 0) - weekDay;\r\n        currFirstDay = s.getDate(y, m, diff);\r\n        currLastDay = s.getDate(y, m, diff + listSize * 7 - 1);\r\n      } else if (listType == 'month') {\r\n        currFirstDay = s.getDate(y, m, 1);\r\n        currLastDay = s.getDate(y, m + listSize, 0);\r\n      } else if (listType == 'year') {\r\n        currFirstDay = s.getDate(y, 0, 1);\r\n        currLastDay = s.getDate(y + listSize, 0, 0);\r\n      }\r\n    }\r\n\r\n    function scrollToDay(d, prevAnim) {\r\n      // Scroll to the day in the list, if any\r\n      if (showEventList && !preventEventScroll) {\r\n        var $day = $$1('.mbsc-event-day[data-full=\"' + getDateStr(d) + '\"]', $eventListCont);\r\n\r\n        if ($day.length) {\r\n          preventScrollWatch++;\r\n          smoothScroll(eventListCont, $day.parent()[0].offsetTop, prevAnim, function () {\r\n            // Need setTimeout since scroll listener is throtteled\r\n            setTimeout(function () {\r\n              preventScrollWatch--;\r\n            }, 150);\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    function triggerLoading(change, render) {\r\n      if (change) {\r\n        trigger('onPageChange', {\r\n          firstDay: currFirstDay,\r\n          lastDay: currLastDay\r\n        });\r\n      }\r\n\r\n      if (!render) {\r\n        trigger('onPageLoading', {\r\n          firstDay: currFirstDay,\r\n          lastDay: currLastDay\r\n        });\r\n      }\r\n\r\n      trigger('onPageLoaded', {\r\n        firstDay: currFirstDay,\r\n        lastDay: currLastDay\r\n      });\r\n    } // ---\r\n\r\n\r\n    var base,\r\n        $ctx,\r\n        $eventListCont,\r\n        $viewTitle,\r\n        currDay,\r\n        currFirstDay,\r\n        currLastDay,\r\n        eventDay,\r\n        eventListCont,\r\n        eventObj,\r\n        hasEventBubble,\r\n        isChanging,\r\n        isLabelTap,\r\n        isListOnly,\r\n        listType,\r\n        listSize,\r\n        multiLabel,\r\n        popoverData,\r\n        popup,\r\n        preventEventScroll,\r\n        preventScrollAnim,\r\n        prevFirstDay,\r\n        prevLastDay,\r\n        scrollEventList,\r\n        showEventList,\r\n        showEventBubble,\r\n        showMore,\r\n        elm = this,\r\n        orig = extend$1({}, inst.settings),\r\n        s = extend$1(inst.settings, defaults$4, orig, overrides, settings),\r\n        preventScrollWatch = 0,\r\n        eventID = 0,\r\n        eventList = extend$1(true, [], s.data),\r\n        firstLoad = true,\r\n        trigger = inst.trigger; // Keep tracking events in settings,\r\n    // otherwise changes will be lost on an eventual option call\r\n\r\n    s.data = eventList;\r\n    $$1.each(eventList, function (i, e) {\r\n      if (e._id === undefined) {\r\n        e._id = eventID++;\r\n      }\r\n    });\r\n    processSettings();\r\n    base = CalendarBase.call(this, inst); // Extended methods\r\n    // ---\r\n\r\n    inst._onGenMonth = function (start, end) {\r\n      eventObj = inst._prepareObj(eventList, start, end);\r\n      inst._labels = multiLabel ? eventObj : null;\r\n    };\r\n\r\n    inst._onRefresh = function (render) {\r\n      preventScrollAnim = true; // Will re-create the list\r\n\r\n      prevFirstDay = null;\r\n      prevLastDay = null;\r\n\r\n      if (isListOnly) {\r\n        triggerLoading(false, render);\r\n      }\r\n    };\r\n\r\n    inst._onSetDate = function (d, diff) {\r\n      currDay = d;\r\n\r\n      if (isListOnly) {\r\n        if (!preventEventScroll && !isChanging) {\r\n          getFirstLast(d);\r\n\r\n          if (!prevFirstDay || !prevLastDay || !isSameDay(prevFirstDay, currFirstDay) || !isSameDay(prevLastDay, currLastDay)) {\r\n            triggerLoading(true);\r\n          }\r\n        }\r\n      } else if (!diff && !isChanging) {\r\n        hideEvents();\r\n\r\n        if (showEventList && listType == 'day') {\r\n          // List events for the day\r\n          createEventList(d, d, eventObj);\r\n        }\r\n\r\n        if ((showEventBubble || showMore) && !isLabelTap) {\r\n          // Show event popover\r\n          createEventPopover();\r\n        }\r\n\r\n        scrollToDay(d);\r\n      }\r\n\r\n      preventEventScroll = false;\r\n      showMore = false;\r\n      isLabelTap = false;\r\n    };\r\n\r\n    inst._getDayProps = function (d) {\r\n      var events = eventObj[d],\r\n          ret = {\r\n        events: events\r\n      };\r\n\r\n      if (!s.marked && !s.labels && !multiLabel) {\r\n        if (events) {\r\n          ret.background = events[0] && events[0].background;\r\n          ret.marked = events; // For backward compatibility\r\n\r\n          ret.markup = s.showEventCount ? '<div class=\"mbsc-cal-txt\">' + events.length + ' ' + (events.length > 1 ? s.eventsText : s.eventText) + '</div>' : '<div class=\"mbsc-cal-marks\"><div class=\"mbsc-cal-mark\"></div></div>';\r\n        } else {\r\n          ret.markup = s.showEventCount ? '<div class=\"mbsc-cal-txt-ph\"></div>' : '';\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    };\r\n\r\n    inst.addEvent = function (events) {\r\n      var ret = [];\r\n      events = extend$1(true, [], $$1.isArray(events) ? events : [events]);\r\n      $$1.each(events, function (i, e) {\r\n        if (e._id === undefined) {\r\n          e._id = eventID++;\r\n        }\r\n\r\n        eventList.push(e);\r\n        ret.push(e._id);\r\n      });\r\n      refresh();\r\n      return ret;\r\n    };\r\n\r\n    inst.updateEvent = function (event) {\r\n      $$1.each(eventList, function (j, e) {\r\n        if (e._id === event._id) {\r\n          eventList.splice(j, 1, event);\r\n          return false;\r\n        }\r\n      });\r\n      refresh();\r\n    };\r\n\r\n    inst.removeEvent = function (eids) {\r\n      eids = $$1.isArray(eids) ? eids : [eids];\r\n      $$1.each(eids, function (i, eid) {\r\n        $$1.each(eventList, function (j, e) {\r\n          if (e._id === eid) {\r\n            eventList.splice(j, 1);\r\n            return false;\r\n          }\r\n        });\r\n      });\r\n      refresh();\r\n    };\r\n\r\n    inst.getEvents = function (d) {\r\n      var obj;\r\n\r\n      if (d) {\r\n        d.setHours(0, 0, 0, 0);\r\n        obj = inst._prepareObj(eventList, d, d);\r\n        return obj[d] ? sortEvents(obj[d]) : [];\r\n      }\r\n\r\n      return extend$1(true, [], eventList);\r\n    };\r\n\r\n    inst.setEvents = function (events) {\r\n      var ret = [];\r\n      s.data = eventList = extend$1(true, [], events);\r\n      $$1.each(eventList, function (i, e) {\r\n        if (e._id === undefined) {\r\n          e._id = eventID++;\r\n        }\r\n\r\n        ret.push(e._id);\r\n      });\r\n      refresh();\r\n      return ret;\r\n    };\r\n\r\n    inst.navigate = function (d, anim, pop) {\r\n      d = makeDate(d, inst._format, s);\r\n      popoverData = pop ? {\r\n        d: d\r\n      } : null;\r\n      inst.setVal(d, true, true, false, anim ? 200 : 0);\r\n    }; // ---\r\n\r\n\r\n    return extend$1({}, base, {\r\n      multiLabel: multiLabel,\r\n      headerText: false,\r\n      buttons: s.display !== 'inline' ? ['close'] : s.buttons,\r\n      compClass: 'mbsc-ev-cal mbsc-calendar mbsc-dt mbsc-sc',\r\n      formatDuration: formatDuration,\r\n      onMarkupReady: function onMarkupReady(ev, inst) {\r\n        $ctx = $$1(ev.target);\r\n        currDay = inst.getDate(true);\r\n\r\n        if (showEventList) {\r\n          $eventListCont = $$1('<div class=\"mbsc-lv-cont mbsc-lv-' + s.theme + (s.baseTheme ? ' mbsc-lv-' + s.baseTheme : '') + (scrollEventList ? ' mbsc-event-list-h' : '') + ' mbsc-event-list\"></div>').appendTo($$1('.mbsc-fr-w', $ctx));\r\n          $eventListCont.on('scroll', throttle(onScroll));\r\n          eventListCont = $eventListCont[0];\r\n        }\r\n\r\n        base.onMarkupReady.call(this, ev);\r\n        $viewTitle = $$1('.mbsc-cal-month', $ctx);\r\n        hasEventBubble = false;\r\n        getFirstLast(currDay);\r\n\r\n        if (showEventList && isListOnly) {\r\n          triggerLoading(); // Init navigation arrows\r\n\r\n          createStepper($$1('.mbsc-cal-btn', $ctx), function (i, diff) {\r\n            var y = s.getYear(currFirstDay),\r\n                m = s.getMonth(currFirstDay),\r\n                d = s.getDay(currFirstDay);\r\n\r\n            if (listType == 'day') {\r\n              currFirstDay = s.getDate(y, m, d + diff * listSize);\r\n              currLastDay = s.getDate(y, m, d + (diff + 1) * listSize - 1);\r\n            } else if (listType == 'week') {\r\n              currFirstDay = s.getDate(y, m, d + diff * listSize * 7);\r\n              currLastDay = s.getDate(y, m, d + (diff + 1) * listSize * 7 - 1);\r\n            } else if (listType == 'month') {\r\n              currFirstDay = s.getDate(y, m + diff * listSize, 1);\r\n              currLastDay = s.getDate(y, m + (diff + 1) * listSize, 0);\r\n            } else if (listType == 'year') {\r\n              currFirstDay = s.getDate(y + diff * listSize, 0, 1);\r\n              currLastDay = s.getDate(y + (diff + 1) * listSize, 0, 0);\r\n            }\r\n\r\n            triggerLoading(true);\r\n          }, 200);\r\n        }\r\n\r\n        addWindowFocus();\r\n      },\r\n      onDayChange: function onDayChange(day) {\r\n        var cell = day.target,\r\n            show = cell !== eventDay;\r\n\r\n        if (show) {\r\n          showMore = showEventBubble !== false && $$1('.mbsc-cal-txt-more', cell).length;\r\n          popoverData = {\r\n            d: day.date,\r\n            cell: s.outerMonthChange && $$1(cell).hasClass('mbsc-cal-day-diff') ? null : cell,\r\n            events: day.events\r\n          };\r\n        }\r\n      },\r\n      onLabelTap: function onLabelTap(ev) {\r\n        if (ev.label) {\r\n          trigger('onEventSelect', {\r\n            domEvent: ev.domEvent,\r\n            event: ev.label,\r\n            date: ev.date\r\n          });\r\n          isLabelTap = true;\r\n        }\r\n      },\r\n      onPageChange: function onPageChange(ev) {\r\n        hideEvents();\r\n        isChanging = true;\r\n\r\n        if (!inst._isSetDate) {\r\n          inst.setVal(ev.firstDay);\r\n        }\r\n      },\r\n      onPageLoaded: function onPageLoaded(ev) {\r\n        var firstDay = ev.firstDay,\r\n            lastDay = ev.lastDay;\r\n\r\n        if (showEventList) {\r\n          if (isListOnly) {\r\n            if (!prevFirstDay || !prevLastDay || !isSameDay(prevFirstDay, firstDay) || !isSameDay(prevLastDay, lastDay)) {\r\n              prevFirstDay = firstDay;\r\n              prevLastDay = lastDay;\r\n              createEventList(firstDay, lastDay);\r\n              updateTitle(firstDay, lastDay);\r\n            }\r\n          } else {\r\n            if (listType == 'month') {\r\n              // month view\r\n              lastDay = s.getDate(s.getYear(firstDay), s.getMonth(firstDay) + listSize, 0);\r\n            } else if (listType == 'week') {\r\n              // week view\r\n              lastDay = s.getDate(s.getYear(firstDay), s.getMonth(firstDay), s.getDay(firstDay) + listSize * 7 - 1);\r\n            } else {\r\n              firstDay = inst.getVal(true);\r\n              lastDay = firstDay;\r\n            }\r\n\r\n            createEventList(firstDay, lastDay, eventObj);\r\n          }\r\n\r\n          if (!firstLoad && !isSameDay(currDay, firstDay)) {\r\n            scrollToDay(currDay, preventScrollAnim);\r\n            preventScrollAnim = false;\r\n          }\r\n        }\r\n\r\n        if (showEventBubble) {\r\n          createEventPopover();\r\n        }\r\n\r\n        isChanging = false;\r\n      },\r\n      onPosition: function onPosition(ev) {\r\n        base.onPosition.call(this, ev);\r\n\r\n        if (popup) {\r\n          popup.position();\r\n        }\r\n\r\n        if (showEventList && scrollEventList) {\r\n          $eventListCont.addClass('mbsc-event-list-h');\r\n          var context = s.display == 'inline' ? elm.parentNode : window,\r\n              availableHeight = getHeight(context),\r\n              listHeight = availableHeight - ev.popup.offsetHeight;\r\n          eventListCont.style.height = listHeight > 200 ? listHeight + 'px' : '';\r\n          $eventListCont.removeClass('mbsc-event-list-h');\r\n\r\n          if (firstLoad && listHeight) {\r\n            scrollToDay(currDay, true);\r\n            firstLoad = false;\r\n          }\r\n        }\r\n      },\r\n      onHide: function onHide() {\r\n        base.onHide.call(this); // Destroy the popup stored on the instance,\r\n        // the local variable is lost in case of option call or re-init\r\n\r\n        if (inst._popup) {\r\n          inst._popup.destroy();\r\n        }\r\n\r\n        removeWindowFocus();\r\n      }\r\n    });\r\n  };\r\n\r\n  var MbscEventcalendar = (function (_super) {\r\n      __extends(MbscEventcalendar, _super);\r\n      function MbscEventcalendar(initialElem, zone, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, null, null, null) || this;\r\n          _this.optionService = optionService;\r\n          _this.onEventSelect = new core.EventEmitter();\r\n          _this.onCellHoverIn = new core.EventEmitter();\r\n          _this.onCellHoverOut = new core.EventEmitter();\r\n          _this.onDayChange = new core.EventEmitter();\r\n          _this.onSetDate = new core.EventEmitter();\r\n          _this.options = {};\r\n          return _this;\r\n      }\r\n      MbscEventcalendar.prototype.refreshData = function (newData) {\r\n          this.instance.setEvents(newData);\r\n      };\r\n      MbscEventcalendar.prototype.initControl = function () {\r\n          var options = extend$1({ preset: 'eventcalendar' }, this.optionService ? this.optionService.options : {}, this.options, this.inlineOptionsObj, this.optionExtensions);\r\n          this.instance = new Eventcalendar(this.element, options);\r\n      };\r\n      MbscEventcalendar.prototype.ngOnInit = function () {\r\n          this.cloneDictionary.data = [];\r\n          _super.prototype.ngOnInit.call(this);\r\n      };\r\n      MbscEventcalendar.prototype.setNewValue = function () { };\r\n      MbscEventcalendar.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-eventcalendar]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscEventcalendar.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscEventcalendar.propDecorators = {\r\n          'data': [{ type: core.Input, args: ['mbsc-data',] },],\r\n          'layout': [{ type: core.Input },],\r\n          'showEventCount': [{ type: core.Input },],\r\n          'eventBubble': [{ type: core.Input },],\r\n          'formatDuration': [{ type: core.Input },],\r\n          'view': [{ type: core.Input },],\r\n          'allDayText': [{ type: core.Input },],\r\n          'eventText': [{ type: core.Input },],\r\n          'eventsText': [{ type: core.Input },],\r\n          'labelsShort': [{ type: core.Input },],\r\n          'noEventsText': [{ type: core.Input },],\r\n          'onEventSelect': [{ type: core.Output },],\r\n          'onCellHoverIn': [{ type: core.Output },],\r\n          'onCellHoverOut': [{ type: core.Output },],\r\n          'onDayChange': [{ type: core.Output },],\r\n          'onSetDate': [{ type: core.Output },],\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n      };\r\n      return MbscEventcalendar;\r\n  }(MbscCalBase));\r\n  var MbscEventcalendarComponent = (function (_super) {\r\n      __extends(MbscEventcalendarComponent, _super);\r\n      function MbscEventcalendarComponent(initialElem, zone, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, optionService) || this;\r\n          _this.options = {};\r\n          return _this;\r\n      }\r\n      MbscEventcalendarComponent.prototype.ngOnInit = function () {\r\n          var display = this.options && this.options.display || this.display;\r\n          if (!display) {\r\n              this.display = 'inline';\r\n              this.inlineOptionsObj.display = 'inline';\r\n          }\r\n          _super.prototype.ngOnInit.call(this);\r\n      };\r\n      MbscEventcalendarComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscEventcalendarComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-eventcalendar',\r\n                      exportAs: 'mobiscroll',\r\n                      template: '<div></div>'\r\n                  },] },\r\n      ];\r\n      MbscEventcalendarComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscEventcalendarComponent.propDecorators = {\r\n          'data': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n      };\r\n      return MbscEventcalendarComponent;\r\n  }(MbscEventcalendar));\r\n  var MbscEventcalendarModule = (function () {\r\n      function MbscEventcalendarModule() {\r\n      }\r\n      MbscEventcalendarModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [MbscCalBaseModule],\r\n                      declarations: [MbscEventcalendar, MbscEventcalendarComponent],\r\n                      exports: [MbscEventcalendar, MbscEventcalendarComponent]\r\n                  },] },\r\n      ];\r\n      MbscEventcalendarModule.ctorParameters = function () { return []; };\r\n      return MbscEventcalendarModule;\r\n  }());\r\n\r\n  var hasPromise = isBrowser && !!window.Promise;\r\n  var popupQueue = [];\r\n  var notificationQueue = [];\r\n  var activeNotification;\r\n\r\n  function showPopup(popup) {\r\n    if (!popupQueue.length) {\r\n      popup.show();\r\n    }\r\n\r\n    popupQueue.push(popup);\r\n  }\r\n\r\n  function showNotification(notification) {\r\n    var isAny = notificationQueue.length;\r\n    notificationQueue.push(notification); // Only show notification if no popup is visible\r\n    // otherwise postpone it until popup is closed\r\n\r\n    if (!popupQueue.length) {\r\n      // If there's a visible notification, hide it.\r\n      // The notification will be shown after hide animation is complete\r\n      if (isAny) {\r\n        notificationQueue[0].hide();\r\n      } else {\r\n        // Prevent focus on show for notifications\r\n        notification.show(false, true);\r\n      }\r\n    }\r\n  }\r\n\r\n  function getSettings(queue, settings, resolve, more) {\r\n    //const active = mobiscroll.activeInstance;\r\n    return extend$1({\r\n      display: settings.display || 'center',\r\n      cssClass: 'mbsc-alert',\r\n      okText: settings.okText,\r\n      cancelText: settings.cancelText,\r\n      context: settings.context,\r\n      theme: settings.theme,\r\n      closeOnOverlayTap: false,\r\n      onBeforeClose: function onBeforeClose() {\r\n        queue.shift();\r\n      },\r\n      onHide: function onHide(ev, inst) {\r\n        //mobiscroll.activeInstance = active;\r\n        if (resolve) {\r\n          resolve(inst._resolve);\r\n        }\r\n\r\n        if (settings.callback) {\r\n          settings.callback(inst._resolve);\r\n        }\r\n\r\n        if (inst) {\r\n          inst.destroy();\r\n        } // Show next\r\n\r\n\r\n        if (popupQueue.length) {\r\n          popupQueue[0].show();\r\n        } else if (notificationQueue.length) {\r\n          // Prevent focus on show for notifications\r\n          notificationQueue[0].show(false, true);\r\n        }\r\n      }\r\n    }, more);\r\n  }\r\n\r\n  function getMessage(settings) {\r\n    return (settings.title ? '<h2>' + settings.title + '</h2>' : '') + '<p>' + (settings.message || '') + '</p>';\r\n  }\r\n\r\n  function showAlert(popup, settings, resolve) {\r\n    var inst = new Popup(popup, getSettings(popupQueue, settings, resolve));\r\n    showPopup(inst);\r\n  }\r\n\r\n  function showConfirm(popup, settings, resolve) {\r\n    var inst = new Popup(popup, getSettings(popupQueue, settings, resolve, {\r\n      buttons: ['cancel', 'ok'],\r\n      onSet: function onSet() {\r\n        inst._resolve = true;\r\n      }\r\n    }));\r\n    inst._resolve = false;\r\n    showPopup(inst);\r\n  }\r\n\r\n  function showPrompt(popup, settings, resolve) {\r\n    var input, label;\r\n    var inst = new Popup(popup, getSettings(popupQueue, settings, resolve, {\r\n      buttons: ['cancel', 'ok'],\r\n      onMarkupReady: function onMarkupReady(event, inst) {\r\n        var s = inst.settings;\r\n        label = inst._markup.find('label');\r\n        label.addClass('mbsc-' + s.theme + (s.baseTheme ? ' mbsc-' + s.baseTheme : ''));\r\n        input = inst._markup.find('input')[0];\r\n        setTimeout(function () {\r\n          input.focus();\r\n          input.setSelectionRange(0, input.value.length);\r\n        }, 300);\r\n      },\r\n      onSet: function onSet() {\r\n        inst._resolve = input.value;\r\n      }\r\n    }));\r\n    inst._resolve = null;\r\n    showPopup(inst);\r\n  }\r\n\r\n  function showSnackbar(popup, settings, resolve, cssClass, animation) {\r\n    var notificationTimer;\r\n    var inst = new Popup(popup, getSettings(notificationQueue, settings, resolve, {\r\n      display: settings.display || 'bottom',\r\n      animate: animation,\r\n      cssClass: (cssClass || 'mbsc-snackbar') + (settings.color ? ' mbsc-' + settings.color : ''),\r\n      scrollLock: false,\r\n      focusTrap: false,\r\n      buttons: [],\r\n      onMarkupReady: function onMarkupReady(event, inst) {\r\n        var s = inst.settings;\r\n\r\n        var button = inst._markup.find('button');\r\n\r\n        button.addClass('mbsc-' + s.theme + (s.baseTheme ? ' mbsc-' + s.baseTheme : ''));\r\n      },\r\n      onShow: function onShow(ev, inst) {\r\n        activeNotification = inst;\r\n\r\n        if (settings.duration !== false) {\r\n          notificationTimer = setTimeout(function () {\r\n            if (inst) {\r\n              inst.hide();\r\n            }\r\n          }, settings.duration || 3000);\r\n        }\r\n\r\n        if (settings.button) {\r\n          inst.tap($$1('.mbsc-snackbar-btn', ev.target), function () {\r\n            inst.hide();\r\n\r\n            if (settings.button.action) {\r\n              settings.button.action.call(this);\r\n            }\r\n          });\r\n        }\r\n      },\r\n      onClose: function onClose() {\r\n        activeNotification = null;\r\n        clearTimeout(notificationTimer);\r\n      }\r\n    }));\r\n    showNotification(inst);\r\n  }\r\n\r\n  function showToast(popup, settings, resolve) {\r\n    showSnackbar(popup, settings, resolve, 'mbsc-toast', 'fade');\r\n  }\r\n\r\n  function show(func, popup, settings) {\r\n    var p;\r\n\r\n    if (hasPromise) {\r\n      p = new Promise(function (resolve) {\r\n        func(popup, settings, resolve);\r\n      });\r\n    } else {\r\n      func(popup, settings);\r\n    }\r\n\r\n    return p;\r\n  }\r\n\r\n  mobiscroll.alert = function (settings) {\r\n    var popup = document.createElement('div');\r\n    popup.innerHTML = getMessage(settings);\r\n    return show(showAlert, popup, settings);\r\n  };\r\n\r\n  mobiscroll.confirm = function (settings) {\r\n    var popup = document.createElement('div');\r\n    popup.innerHTML = getMessage(settings);\r\n    return show(showConfirm, popup, settings);\r\n  };\r\n\r\n  mobiscroll.prompt = function (settings) {\r\n    var popup = document.createElement('div');\r\n    popup.innerHTML = getMessage(settings) + '<label class=\"mbsc-input\">' + (settings.label ? '<span class=\"mbsc-label\">' + settings.label + '</span>' : '') + '<input class=\"mbsc-control\" tabindex=\"0\" type=\"' + (settings.inputType || 'text') + '\" placeholder=\"' + (settings.placeholder || '') + '\" value=\"' + (settings.value || '') + '\">' + '</label>';\r\n    return show(showPrompt, popup, settings);\r\n  };\r\n\r\n  mobiscroll.snackbar = function (settings) {\r\n    var popup = document.createElement('div'),\r\n        btn = settings.button;\r\n    popup.innerHTML = '<div class=\"mbsc-snackbar-cont\"><div class=\"mbsc-snackbar-msg\">' + (settings.message || '') + '</div>' + (btn ? '<button class=\"mbsc-snackbar-btn mbsc-btn mbsc-btn-flat\">' + (btn.icon ? '<span class=\"mbsc-ic ' + (btn.text ? 'mbsc-btn-ic ' : '') + 'mbsc-ic-' + btn.icon + '\"></span>' : '') + (btn.text || '') + '</button>' : '') + '</div>';\r\n    return show(showSnackbar, popup, settings);\r\n  };\r\n\r\n  mobiscroll.toast = function (settings) {\r\n    var popup = document.createElement('div');\r\n    popup.innerHTML = '<div class=\"mbsc-toast-msg\">' + (settings.message || '') + '</div>';\r\n    return show(showToast, popup, settings);\r\n  };\r\n\r\n  mobiscroll.notification = {\r\n    dismiss: function dismiss() {\r\n      if (activeNotification) {\r\n        activeNotification.hide();\r\n      }\r\n    }\r\n  };\r\n\r\n  var halfBorder$1 = os == 'ios' && majorVersion > 7;\r\n  var Form = function Form(el, settings) {\r\n    var s,\r\n        cssClass = '',\r\n        $ctx = $$1(el),\r\n        controls = {},\r\n        that = this;\r\n\r\n    function touched() {\r\n      $ctx.removeClass('mbsc-no-touch');\r\n    } // Call the parent constructor\r\n\r\n\r\n    Base.call(this, el, settings, true);\r\n\r\n    that.refresh = function (shallow) {\r\n      if (s.enhance) {\r\n        initControls($ctx, controls, s, shallow);\r\n      }\r\n    };\r\n    /**\r\n     * Form initialization.\r\n     */\r\n\r\n\r\n    that._init = function () {\r\n      if (!mobiscroll.themes.form[s.theme]) {\r\n        s.theme = 'mobiscroll';\r\n      }\r\n\r\n      if (!$ctx.hasClass('mbsc-form')) {\r\n        $ctx.show();\r\n        listen($ctx[0], 'touchstart', touched, {\r\n          passive: true\r\n        });\r\n      }\r\n\r\n      if (cssClass) {\r\n        $ctx.removeClass(cssClass);\r\n      } // --- TRIAL SERVER CODE START ---\r\n\r\n\r\n      cssClass = 'mbsc-form mbsc-no-touch mbsc-' + s.theme + (halfBorder$1 ? ' mbsc-form-hb' : '') + (s.baseTheme ? ' mbsc-' + s.baseTheme : '') + (s.rtl ? ' mbsc-rtl' : ' mbsc-ltr') + (s.inputStyle == 'box' ? ' mbsc-form-box' : '') + (s.inputStyle == 'outline' ? ' mbsc-form-outline' : ''); // --- TRIAL SERVER CODE END ---\r\n\r\n      $ctx.addClass(cssClass).removeClass('mbsc-cloak');\r\n      that.refresh();\r\n    };\r\n    /**\r\n     * Destroys the mobiscroll instance.\r\n     */\r\n\r\n\r\n    that._destroy = function () {\r\n      $ctx.removeClass(cssClass);\r\n      unlisten($ctx[0], 'touchstart', touched, {\r\n        passive: true\r\n      });\r\n\r\n      for (var id in controls) {\r\n        controls[id].destroy();\r\n      }\r\n    };\r\n    /**\r\n     * Object with the underlying form control instances\r\n     * keys are the element id's\r\n     */\r\n\r\n\r\n    that.controls = controls; // Constructor\r\n\r\n    s = that.settings;\r\n    that.init();\r\n  }; // Extend defaults\r\n\r\n  Form.prototype = {\r\n    _hasDef: true,\r\n    _hasTheme: true,\r\n    _hasLang: true,\r\n    _class: 'form',\r\n    _defaults: {\r\n      tap: hasGhostClick,\r\n      stopProp: true,\r\n      rtl: false,\r\n      enhance: true\r\n    }\r\n  };\r\n  classes.Form = Form; // Init mbsc-form elements on page load\r\n\r\n  autoInit('[mbsc-enhance],[mbsc-form]', Form, true);\r\n\r\n  var MbscForm = (function (_super) {\r\n      __extends(MbscForm, _super);\r\n      function MbscForm(initialElem, _formService, zone) {\r\n          var _this = _super.call(this, initialElem, zone) || this;\r\n          _this._formService = _formService;\r\n          _this.enhance = false;\r\n          return _this;\r\n      }\r\n      MbscForm.prototype.ngOnInit = function () {\r\n          this.optionsObj = extend$1({}, this.options, this.inlineOptionsObj);\r\n          this._formService.options = this.optionsObj;\r\n      };\r\n      MbscForm.prototype.initControl = function () {\r\n          var opt = this.options;\r\n          if (opt && opt.enhance === undefined) {\r\n              opt.enhance = false;\r\n          }\r\n          var options = extend$1({}, opt, this.inlineOptionsObj);\r\n          this.instance = new Form(this.rootElem.nativeElement, options);\r\n      };\r\n      MbscForm.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-form',\r\n                      template: \"<div #rootElement><ng-content></ng-content></div>\",\r\n                      providers: [MbscOptionsService],\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscForm.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: MbscOptionsService, },\r\n          { type: core.NgZone, },\r\n      ]; };\r\n      MbscForm.propDecorators = {\r\n          'options': [{ type: core.Input, args: ['options',] },],\r\n          'enhance': [{ type: core.Input },],\r\n          'context': [{ type: core.Input },],\r\n          'inputStyle': [{ type: core.Input, args: ['input-style',] },],\r\n          'labelStyle': [{ type: core.Input, args: ['label-style',] },],\r\n          'rootElem': [{ type: core.ViewChild, args: ['rootElement', { static: false },] },],\r\n      };\r\n      return MbscForm;\r\n  }(MbscBase));\r\n  var MbscTextarea = (function (_super) {\r\n      __extends(MbscTextarea, _super);\r\n      function MbscTextarea(initialElem, _formService, _inputService, _control, zone) {\r\n          var _this = _super.call(this, initialElem, _formService, _inputService, _control, zone) || this;\r\n          _this._inputService = _inputService;\r\n          _inputService.input = _this;\r\n          return _this;\r\n      }\r\n      MbscTextarea.prototype.initControl = function () {\r\n          var options = extend$1({}, this._inheritedOptions, this.options, this.inlineOptionsObj);\r\n          this.instance = new TextArea(this._initElem.nativeElement, options);\r\n      };\r\n      MbscTextarea.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-textarea',\r\n                      host: { 'class': 'mbsc-control-ng' },\r\n                      template: \"\\n            <label \\n                [class.mbsc-err]=\\\"error\\\"\\n                [class.mbsc-input-box]=\\\"inputStyle == 'box'\\\"\\n                [class.mbsc-input-outline]=\\\"inputStyle == 'outline'\\\"\\n                [class.mbsc-label-stacked]=\\\"labelStyle == 'stacked'\\\"\\n                [class.mbsc-label-inline]=\\\"labelStyle == 'inline'\\\"\\n                [class.mbsc-label-floating]=\\\"labelStyle == 'floating'\\\"\\n            >\\n            <ng-content></ng-content>\\n            <span class=\\\"mbsc-input-wrap\\\">\\n                <textarea #initElement [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"innerValue\\\" (blur)=\\\"onTouch($event)\\\"\\n                    [attr.name]=\\\"name\\\"\\n                    [attr.rows]=\\\"rows\\\"\\n                    [attr.wrap]=\\\"wrap\\\"\\n                    [attr.minlength]=\\\"minlength\\\"\\n                    [attr.maxlength]=\\\"maxlength\\\"\\n                    [attr.autocomplete]=\\\"autocomplete\\\" \\n                    [attr.autocapitalize]=\\\"autocapitalize\\\"\\n                    [attr.autocorrect]=\\\"autocorrect\\\"\\n                    [attr.spellcheck]=\\\"spellcheck\\\"\\n                    [attr.autofocus]=\\\"autofocus\\\"\\n                    [attr.required]=\\\"required\\\"\\n                    [attr.data-icon]=\\\"icon ? icon : null\\\"\\n                    [attr.data-icon-align]=\\\"iconAlign ? iconAlign : null\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [readonly]=\\\"_readonly\\\"></textarea>\\n                <span *ngIf=\\\"error && errorMessage\\\" class=\\\"mbsc-err-msg\\\">{{errorMessage}}</span>\\n            </span>\\n        </label>\\n    \",\r\n                      providers: [MbscInputService]\r\n                  },] },\r\n      ];\r\n      MbscTextarea.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: core.NgZone, },\r\n      ]; };\r\n      MbscTextarea.propDecorators = {\r\n          'rows': [{ type: core.Input },],\r\n          'wrap': [{ type: core.Input },],\r\n      };\r\n      return MbscTextarea;\r\n  }(MbscInputBase));\r\n  var MbscDropdown = (function (_super) {\r\n      __extends(MbscDropdown, _super);\r\n      function MbscDropdown(hostElem, formService, _inputService, control, zone) {\r\n          var _this = _super.call(this, hostElem, formService, _inputService, control, zone) || this;\r\n          _this._inputService = _inputService;\r\n          _inputService.input = _this;\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscDropdown.prototype, \"value\", {\r\n          set: function (v) {\r\n              var _this = this;\r\n              this._value = v;\r\n              setTimeout(function () {\r\n                  _this.instance._setText();\r\n              });\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscDropdown.prototype.initControl = function () {\r\n          var options = extend$1({}, this._inheritedOptions, this.options, this.inlineOptionsObj);\r\n          this.instance = new Select(this._initElem.nativeElement, options);\r\n          var that = this;\r\n          setTimeout(function () {\r\n              that.instance._setText();\r\n          });\r\n      };\r\n      MbscDropdown.prototype.writeValue = function (v) {\r\n          this._value = v;\r\n          if (this.instance) {\r\n              var that_1 = this;\r\n              setTimeout(function () {\r\n                  that_1.instance._setText();\r\n              });\r\n          }\r\n      };\r\n      MbscDropdown.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-dropdown',\r\n                      host: { 'class': 'mbsc-control-ng' },\r\n                      template: \"\\n            <label \\n                [class.mbsc-err]=\\\"error\\\"\\n                [class.mbsc-input-box]=\\\"inputStyle == 'box'\\\"\\n                [class.mbsc-input-outline]=\\\"inputStyle == 'outline'\\\"\\n                [class.mbsc-label-stacked]=\\\"labelStyle == 'stacked'\\\"\\n                [class.mbsc-label-inline]=\\\"labelStyle == 'inline'\\\"\\n                [class.mbsc-label-floating]=\\\"labelStyle == 'floating'\\\"\\n            >\\n            {{label}}\\n            <span class=\\\"mbsc-input-wrap\\\">\\n                <select #initElement\\n                    [(ngModel)]=\\\"innerValue\\\" \\n                    [attr.name]=\\\"name\\\"\\n                    [attr.data-icon]=\\\"icon ? icon : null\\\"\\n                    [attr.data-icon-align]=\\\"iconAlign ? iconAlign : null\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    (blur)=\\\"onTouch($event)\\\">\\n                    <ng-content></ng-content>\\n                </select>\\n                <span *ngIf=\\\"error && errorMessage\\\" class=\\\"mbsc-err-msg\\\">{{errorMessage}}</span>\\n            </span>\\n        </label>\\n    \",\r\n                      providers: [MbscInputService]\r\n                  },] },\r\n      ];\r\n      MbscDropdown.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: core.NgZone, },\r\n      ]; };\r\n      MbscDropdown.propDecorators = {\r\n          'label': [{ type: core.Input },],\r\n          'icon': [{ type: core.Input },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'value': [{ type: core.Input },],\r\n          'inputStyle': [{ type: core.Input, args: ['input-style',] },],\r\n          'labelStyle': [{ type: core.Input, args: ['label-style',] },],\r\n      };\r\n      return MbscDropdown;\r\n  }(MbscFormValueBase));\r\n  var MbscButton = (function (_super) {\r\n      __extends(MbscButton, _super);\r\n      function MbscButton(hostElem, formService, zone) {\r\n          var _this = _super.call(this, hostElem, formService, zone) || this;\r\n          _this._flat = false;\r\n          _this._block = false;\r\n          _this._outline = false;\r\n          _this._classesObj = {};\r\n          _this.type = 'button';\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscButton.prototype, \"cssClasses\", {\r\n          get: function () {\r\n              for (var k in this._classesObj) {\r\n                  delete this._classesObj[k];\r\n              }\r\n              this._classesObj['mbsc-btn-flat'] = this._flat;\r\n              this._classesObj['mbsc-btn-block'] = this._block;\r\n              this._classesObj['mbsc-btn-outline'] = this._outline;\r\n              if (this.classes) {\r\n                  var cssClasses = this.classes.split(' ');\r\n                  if (cssClasses.length) {\r\n                      for (var i = 0; i < cssClasses.length; i++) {\r\n                          if (cssClasses[i]) {\r\n                              this._classesObj[cssClasses[i]] = true;\r\n                          }\r\n                      }\r\n                  }\r\n              }\r\n              if (this.color) {\r\n                  this._classesObj['mbsc-btn-' + this.color] = true;\r\n              }\r\n              return this._classesObj;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscButton.prototype, \"flat\", {\r\n          set: function (val) {\r\n              this._flat = emptyOrTrue(val);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscButton.prototype, \"block\", {\r\n          set: function (val) {\r\n              this._block = emptyOrTrue(val);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscButton.prototype, \"outline\", {\r\n          set: function (val) {\r\n              this._outline = emptyOrTrue(val);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscButton.prototype.initControl = function () {\r\n          var options = extend$1({}, this._inheritedOptions, this.options, this.inlineOptionsObj);\r\n          this.instance = new Button(this._initElem.nativeElement, options);\r\n      };\r\n      MbscButton.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-button',\r\n                      template: \"\\n        <button #initElement \\n            [type]=\\\"type\\\"\\n            [ngClass]=\\\"cssClasses\\\"\\n            [attr.name]=\\\"name\\\"\\n            [attr.data-icon]=\\\"icon ? icon : null\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <ng-content></ng-content>\\n        </button>\\n    \",\r\n                      changeDetection: core.ChangeDetectionStrategy.OnPush\r\n                  },] },\r\n      ];\r\n      MbscButton.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.NgZone, },\r\n      ]; };\r\n      MbscButton.propDecorators = {\r\n          'classes': [{ type: core.Input, args: ['class',] },],\r\n          'type': [{ type: core.Input },],\r\n          'icon': [{ type: core.Input },],\r\n          'flat': [{ type: core.Input },],\r\n          'block': [{ type: core.Input },],\r\n          'outline': [{ type: core.Input },],\r\n      };\r\n      return MbscButton;\r\n  }(MbscFormBase));\r\n  var MbscCheckbox = (function (_super) {\r\n      __extends(MbscCheckbox, _super);\r\n      function MbscCheckbox(hostElem, cdr, formService, _inputService, control, zone) {\r\n          var _this = _super.call(this, hostElem, formService, _inputService, control, zone) || this;\r\n          _this.cdr = cdr;\r\n          _this._colorClass = {};\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscCheckbox.prototype, \"colorClass\", {\r\n          get: function () {\r\n              for (var k in this._colorClass) {\r\n                  delete this._colorClass[k];\r\n              }\r\n              if (this.color) {\r\n                  this._colorClass['mbsc-checkbox-' + this.color] = true;\r\n              }\r\n              if (this.error) {\r\n                  this._colorClass['mbsc-err'] = true;\r\n              }\r\n              return this._colorClass;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscCheckbox.prototype.initControl = function () {\r\n          var options = extend$1({}, this._inheritedOptions, this.options, this.inlineOptionsObj);\r\n          this.instance = new CheckBox(this._initElem.nativeElement, options);\r\n      };\r\n      MbscCheckbox.prototype.writeValue = function (v) {\r\n          this._value = v;\r\n          this.cdr.detectChanges();\r\n      };\r\n      MbscCheckbox.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-checkbox',\r\n                      host: { 'class': 'mbsc-control-ng' },\r\n                      template: \"\\n        <label [ngClass]=\\\"colorClass\\\">\\n            <input #initElement \\n                type=\\\"checkbox\\\"\\n                [attr.name]=\\\"name\\\"\\n                [disabled]=\\\"disabled\\\"\\n                [attr.data-label-style]=\\\"labelStyle\\\"\\n                [attr.data-input-style]=\\\"inputStyle\\\"\\n                [(ngModel)]=\\\"innerValue\\\"\\n                (blur)=\\\"onTouch($event)\\\" />\\n            <ng-content></ng-content>\\n            <span *ngIf=\\\"error && errorMessage\\\" class=\\\"mbsc-err-msg\\\">{{errorMessage}}</span>\\n        </label>\\n    \",\r\n                      changeDetection: core.ChangeDetectionStrategy.OnPush\r\n                  },] },\r\n      ];\r\n      MbscCheckbox.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.ChangeDetectorRef, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: core.NgZone, },\r\n      ]; };\r\n      MbscCheckbox.propDecorators = {\r\n          'color': [{ type: core.Input },],\r\n          'inputStyle': [{ type: core.Input, args: ['input-style',] },],\r\n          'labelStyle': [{ type: core.Input, args: ['label-style',] },],\r\n      };\r\n      return MbscCheckbox;\r\n  }(MbscFormValueBase));\r\n  var MbscSwitch = (function (_super) {\r\n      __extends(MbscSwitch, _super);\r\n      function MbscSwitch(hostElem, zone, _formService, control) {\r\n          var _this = _super.call(this, hostElem, zone, control, null, null) || this;\r\n          _this._formService = _formService;\r\n          _this.disabled = false;\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          _this._colorClass = {};\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscSwitch.prototype, \"value\", {\r\n          set: function (v) {\r\n              this.setNewValueProxy(v);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscSwitch.prototype, \"colorClass\", {\r\n          get: function () {\r\n              for (var k in this._colorClass) {\r\n                  delete this._colorClass[k];\r\n              }\r\n              if (this.color) {\r\n                  this._colorClass['mbsc-switch-' + this.color] = true;\r\n              }\r\n              if (this.error) {\r\n                  this._colorClass['mbsc-err'] = true;\r\n              }\r\n              return this._colorClass;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscSwitch.prototype.setNewValue = function (v) {\r\n          if (this.instance) {\r\n              if (this.instance.getVal() !== v) {\r\n                  this.instance.setVal(v, true, false);\r\n              }\r\n          }\r\n      };\r\n      MbscSwitch.prototype.ngOnInit = function () {\r\n          this._inheritedOptions = this._formService ? this._formService.options : {};\r\n          _super.prototype.ngOnInit.call(this);\r\n      };\r\n      MbscSwitch.prototype.initControl = function () {\r\n          var options = extend$1({}, this._inheritedOptions, this.options, this.inlineOptionsObj);\r\n          this.instance = new Switch(this._initElem.nativeElement, options);\r\n          if (this.initialValue !== undefined) {\r\n              this.instance.setVal(this.initialValue, true, false);\r\n          }\r\n      };\r\n      MbscSwitch.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-switch',\r\n                      host: { 'class': 'mbsc-control-ng' },\r\n                      template: \"\\n        <label [ngClass]=\\\"colorClass\\\">\\n            <ng-content></ng-content>\\n            <span *ngIf=\\\"error && errorMessage\\\" class=\\\"mbsc-err-msg\\\">{{errorMessage}}</span>\\n            <input #initElement \\n                type=\\\"checkbox\\\"\\n                data-role=\\\"switch\\\"\\n                [attr.name]=\\\"name\\\"\\n                [attr.data-label-style]=\\\"labelStyle\\\"\\n                [attr.data-input-style]=\\\"inputStyle\\\"\\n                [disabled]=\\\"disabled\\\"\\n                (blur)=\\\"onTouch($event)\\\" />\\n        </label>\\n    \",\r\n                      exportAs: 'mobiscroll',\r\n                      changeDetection: core.ChangeDetectionStrategy.OnPush\r\n                  },] },\r\n      ];\r\n      MbscSwitch.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscSwitch.propDecorators = {\r\n          'options': [{ type: core.Input, args: ['options',] },],\r\n          'disabled': [{ type: core.Input },],\r\n          'name': [{ type: core.Input },],\r\n          'color': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'value': [{ type: core.Input, args: ['value',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['valueChange',] },],\r\n          '_initElem': [{ type: core.ViewChild, args: ['initElement', { static: false },] },],\r\n      };\r\n      return MbscSwitch;\r\n  }(MbscControlBase));\r\n  var MbscStepper = (function (_super) {\r\n      __extends(MbscStepper, _super);\r\n      function MbscStepper(hostElement, zone, _formService, control) {\r\n          var _this = _super.call(this, hostElement, zone, control, null, null) || this;\r\n          _this._formService = _formService;\r\n          _this.min = undefined;\r\n          _this.max = undefined;\r\n          _this.step = undefined;\r\n          _this.val = undefined;\r\n          _this.disabled = false;\r\n          _this._colorClass = {};\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscStepper.prototype, \"readonly\", {\r\n          set: function (val) {\r\n              this._readonly = emptyOrTrue(val);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscStepper.prototype, \"value\", {\r\n          set: function (v) {\r\n              this.setNewValueProxy(v);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscStepper.prototype, \"colorClass\", {\r\n          get: function () {\r\n              for (var k in this._colorClass) {\r\n                  delete this._colorClass[k];\r\n              }\r\n              if (this.color) {\r\n                  this._colorClass['mbsc-stepper-' + this.color] = true;\r\n              }\r\n              return this._colorClass;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscStepper.prototype.setNewValue = function (v) {\r\n          if (this.instance && this.instance.getVal() !== v) {\r\n              this.instance.setVal(v, true, false);\r\n          }\r\n      };\r\n      MbscStepper.prototype.ngOnInit = function () {\r\n          this._inheritedOptions = this._formService ? this._formService.options : {};\r\n          _super.prototype.ngOnInit.call(this);\r\n      };\r\n      MbscStepper.prototype.initControl = function () {\r\n          var options = extend$1({}, this._inheritedOptions, this.options, this.inlineOptionsObj);\r\n          this.instance = new Stepper(this._initElem.nativeElement, options);\r\n          if (this.initialValue !== undefined) {\r\n              this.instance.setVal(this.initialValue, true, false);\r\n          }\r\n      };\r\n      MbscStepper.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-stepper',\r\n                      host: { 'class': 'mbsc-control-ng' },\r\n                      template: \"\\n        <div [ngClass]=\\\"colorClass\\\">\\n            <ng-content></ng-content>\\n            <input #initElement\\n                data-role=\\\"stepper\\\"\\n                [attr.name]=\\\"name\\\"\\n                [attr.min]=\\\"min !== undefined ? min : null\\\"\\n                [attr.max]=\\\"max !== undefined ? max : null\\\"\\n                [attr.step]=\\\"step !== undefined ? step : null\\\"\\n                [attr.data-val]=\\\"val ? val : null\\\"\\n                [attr.data-label-style]=\\\"labelStyle\\\"\\n                [attr.data-input-style]=\\\"inputStyle\\\"\\n                [disabled]=\\\"disabled\\\" \\n                [readonly]=\\\"_readonly\\\"/>\\n        </div>\\n    \",\r\n                      exportAs: 'mobiscroll',\r\n                      changeDetection: core.ChangeDetectionStrategy.OnPush\r\n                  },] },\r\n      ];\r\n      MbscStepper.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscStepper.propDecorators = {\r\n          'readonly': [{ type: core.Input },],\r\n          'options': [{ type: core.Input, args: ['options',] },],\r\n          'value': [{ type: core.Input },],\r\n          'name': [{ type: core.Input },],\r\n          'min': [{ type: core.Input },],\r\n          'max': [{ type: core.Input },],\r\n          'step': [{ type: core.Input },],\r\n          'val': [{ type: core.Input },],\r\n          'disabled': [{ type: core.Input },],\r\n          'color': [{ type: core.Input },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['valueChange',] },],\r\n          '_initElem': [{ type: core.ViewChild, args: ['initElement', { static: false },] },],\r\n      };\r\n      return MbscStepper;\r\n  }(MbscControlBase));\r\n  var MbscProgress = (function (_super) {\r\n      __extends(MbscProgress, _super);\r\n      function MbscProgress(hostElement, zone, _formService, control) {\r\n          var _this = _super.call(this, hostElement, zone, control, null, null) || this;\r\n          _this._formService = _formService;\r\n          _this.max = undefined;\r\n          _this.icon = undefined;\r\n          _this.iconAlign = undefined;\r\n          _this.val = undefined;\r\n          _this.disabled = false;\r\n          _this._colorClass = {};\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscProgress.prototype, \"value\", {\r\n          set: function (v) {\r\n              this.setNewValueProxy(v);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscProgress.prototype, \"dataStepLabels\", {\r\n          get: function () {\r\n              if (typeof (this.stepLabels) === 'string') {\r\n                  return this.stepLabels;\r\n              }\r\n              else {\r\n                  return null;\r\n              }\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscProgress.prototype, \"colorClass\", {\r\n          get: function () {\r\n              for (var k in this._colorClass) {\r\n                  delete this._colorClass[k];\r\n              }\r\n              if (this.color) {\r\n                  this._colorClass['mbsc-progress-' + this.color] = true;\r\n              }\r\n              return this._colorClass;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscProgress.prototype.setNewValue = function (v) {\r\n          if (this.instance && this.instance.getVal() !== v) {\r\n              this.instance.setVal(v, true, false);\r\n          }\r\n      };\r\n      MbscProgress.prototype.ngOnInit = function () {\r\n          this._inheritedOptions = this._formService ? this._formService.options : {};\r\n          _super.prototype.ngOnInit.call(this);\r\n      };\r\n      MbscProgress.prototype.initControl = function () {\r\n          var options = extend$1({}, this._inheritedOptions, this.options, this.inlineOptionsObj);\r\n          this.instance = new Progress(this._initElem.nativeElement, options);\r\n          if (this.initialValue !== undefined) {\r\n              this.instance.setVal(this.initialValue, true, false);\r\n          }\r\n      };\r\n      MbscProgress.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-progress',\r\n                      host: { 'class': 'mbsc-control-ng' },\r\n                      template: \"\\n        <label [ngClass]=\\\"colorClass\\\">\\n            <ng-content></ng-content>\\n            <progress #initElement\\n                [attr.data-step-labels]=\\\"dataStepLabels\\\"\\n                [attr.data-icon]=\\\"icon ? icon : null\\\"\\n                [attr.data-icon-align]=\\\"iconAlign ? iconAlign : null\\\"\\n                [attr.data-label-style]=\\\"labelStyle\\\"\\n                [attr.data-input-style]=\\\"inputStyle\\\"\\n                [attr.max]=\\\"max !== undefined ? max : null\\\"\\n                [attr.data-val]=\\\"val !== undefined ? val : null\\\"\\n            >\\n            </progress>\\n        </label>\\n    \",\r\n                      exportAs: 'mobiscroll',\r\n                      changeDetection: core.ChangeDetectionStrategy.OnPush\r\n                  },] },\r\n      ];\r\n      MbscProgress.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscProgress.propDecorators = {\r\n          'options': [{ type: core.Input, args: ['options',] },],\r\n          'value': [{ type: core.Input },],\r\n          'max': [{ type: core.Input },],\r\n          'icon': [{ type: core.Input },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'val': [{ type: core.Input },],\r\n          'disabled': [{ type: core.Input },],\r\n          'stepLabels': [{ type: core.Input, args: ['step-labels',] },],\r\n          'color': [{ type: core.Input },],\r\n          '_initElem': [{ type: core.ViewChild, args: ['initElement', { static: false },] },],\r\n      };\r\n      return MbscProgress;\r\n  }(MbscControlBase));\r\n  var groupName = 1;\r\n  var MbscRadioService = (function () {\r\n      function MbscRadioService() {\r\n          this._lastValue = null;\r\n          this._valueObservable = new Observable();\r\n      }\r\n      Object.defineProperty(MbscRadioService.prototype, \"name\", {\r\n          get: function () {\r\n              if (!this._name) {\r\n                  this._name = 'mbsc-radio-group-' + (groupName++);\r\n              }\r\n              return this._name;\r\n          },\r\n          set: function (n) {\r\n              this._name = n;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscRadioService.prototype, \"multiSelect\", {\r\n          get: function () {\r\n              return this._multiSelect;\r\n          },\r\n          set: function (v) {\r\n              this._multiSelect = v;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscRadioService.prototype.onValueChanged = function () {\r\n          return this._valueObservable;\r\n      };\r\n      MbscRadioService.prototype.changeValue = function (v) {\r\n          this._valueObservable.next(v);\r\n          this._lastValue = v;\r\n      };\r\n      Object.defineProperty(MbscRadioService.prototype, \"getLastValue\", {\r\n          get: function () {\r\n              return this._lastValue;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscRadioService.prototype, \"color\", {\r\n          get: function () {\r\n              return this._color;\r\n          },\r\n          set: function (v) {\r\n              this._color = v;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscRadioService.decorators = [\r\n          { type: core.Injectable },\r\n      ];\r\n      MbscRadioService.ctorParameters = function () { return []; };\r\n      return MbscRadioService;\r\n  }());\r\n  var MbscRadioGroupBase = (function (_super) {\r\n      __extends(MbscRadioGroupBase, _super);\r\n      function MbscRadioGroupBase(hostElement, formService, _inputService, _radioService, control, zone) {\r\n          var _this = _super.call(this, hostElement, formService, _inputService, control, zone) || this;\r\n          _this._radioService = _radioService;\r\n          _this.valueObserver = _this._radioService.onValueChanged().subscribe(function (v) {\r\n              _this.innerValue = v;\r\n              _this.onTouch();\r\n          });\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscRadioGroupBase.prototype, \"value\", {\r\n          set: function (v) {\r\n              this._value = v;\r\n              this._radioService.changeValue(v);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscRadioGroupBase.prototype.ngOnInit = function () {\r\n          _super.prototype.ngOnInit.call(this);\r\n          if (this.name) {\r\n              this._radioService.name = this.name;\r\n          }\r\n          if (this.color) {\r\n              this._radioService.color = this.color;\r\n          }\r\n      };\r\n      MbscRadioGroupBase.prototype.writeValue = function (v) {\r\n          this._value = v;\r\n          this._radioService.changeValue(v);\r\n      };\r\n      MbscRadioGroupBase.prototype.updateOptions = function () { };\r\n      MbscRadioGroupBase.prototype.ngOnDestroy = function () {\r\n          this._radioService.onValueChanged().unsubscribe(this.valueObserver);\r\n          _super.prototype.ngOnDestroy.call(this);\r\n      };\r\n      MbscRadioGroupBase.decorators = [\r\n          { type: core.Directive, args: [{ selector: '[mbsc-rg-b]' },] },\r\n      ];\r\n      MbscRadioGroupBase.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscRadioService, },\r\n          { type: forms.NgControl, },\r\n          { type: core.NgZone, },\r\n      ]; };\r\n      MbscRadioGroupBase.propDecorators = {\r\n          'name': [{ type: core.Input },],\r\n          'value': [{ type: core.Input },],\r\n      };\r\n      return MbscRadioGroupBase;\r\n  }(MbscFormValueBase));\r\n  var MbscRadioGroup = (function (_super) {\r\n      __extends(MbscRadioGroup, _super);\r\n      function MbscRadioGroup(hostElement, formService, _inputService, radioService, control, zone) {\r\n          return _super.call(this, hostElement, formService, _inputService, radioService, control, zone) || this;\r\n      }\r\n      MbscRadioGroup.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-radio-group',\r\n                      template: \"<ng-content></ng-content>\",\r\n                      providers: [MbscRadioService]\r\n                  },] },\r\n      ];\r\n      MbscRadioGroup.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscRadioService, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: core.NgZone, },\r\n      ]; };\r\n      return MbscRadioGroup;\r\n  }(MbscRadioGroupBase));\r\n  var MbscRadio = (function (_super) {\r\n      __extends(MbscRadio, _super);\r\n      function MbscRadio(hostElement, formService, _radioService, zone) {\r\n          var _this = _super.call(this, hostElement, formService, zone) || this;\r\n          _this._radioService = _radioService;\r\n          _this._colorClass = {};\r\n          var v = _this._radioService.getLastValue;\r\n          if (v !== null) {\r\n              _this.modelValue = v;\r\n          }\r\n          _this.valueObserver = _this._radioService.onValueChanged().subscribe(function (v) {\r\n              _this.modelValue = v;\r\n          });\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscRadio.prototype, \"checked\", {\r\n          get: function () {\r\n              return this.value == this.modelValue;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscRadio.prototype, \"colorClass\", {\r\n          get: function () {\r\n              for (var k in this._colorClass) {\r\n                  delete this._colorClass[k];\r\n              }\r\n              if (this.color) {\r\n                  this._colorClass['mbsc-radio-' + this.color] = true;\r\n              }\r\n              if (this.error) {\r\n                  this._colorClass['mbsc-err'] = true;\r\n              }\r\n              return this._colorClass;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscRadio.prototype.clicked = function (e) {\r\n          this._radioService.changeValue(this.value);\r\n      };\r\n      MbscRadio.prototype.initControl = function () {\r\n          var options = extend$1({}, this._inheritedOptions, this.options, this.inlineOptionsObj);\r\n          this.instance = new Radio(this._initElem.nativeElement, options);\r\n      };\r\n      MbscRadio.prototype.ngOnInit = function () {\r\n          _super.prototype.ngOnInit.call(this);\r\n          this.name = this._radioService.name;\r\n          this.color = this._radioService.color;\r\n      };\r\n      MbscRadio.prototype.ngOnDestroy = function () {\r\n          this._radioService.onValueChanged().unsubscribe(this.valueObserver);\r\n          _super.prototype.ngOnDestroy.call(this);\r\n      };\r\n      MbscRadio.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-radio',\r\n                      host: { 'class': 'mbsc-control-ng' },\r\n                      template: \"\\n        <label [ngClass]=\\\"colorClass\\\">\\n            <input #initElement \\n                type=\\\"radio\\\" \\n                [attr.name]=\\\"name\\\" \\n                [attr.value]=\\\"value\\\"\\n                [value]=\\\"value\\\" \\n                [checked]=\\\"checked\\\"\\n                [disabled]=\\\"disabled\\\"\\n                (click)=\\\"clicked($event)\\\" />\\n            <ng-content></ng-content>\\n            <span *ngIf=\\\"error && errorMessage\\\" class=\\\"mbsc-err-msg\\\">{{errorMessage}}</span>\\n        </label>\\n    \"\r\n                  },] },\r\n      ];\r\n      MbscRadio.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscRadioService, },\r\n          { type: core.NgZone, },\r\n      ]; };\r\n      MbscRadio.propDecorators = {\r\n          'value': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n      };\r\n      return MbscRadio;\r\n  }(MbscFormBase));\r\n  var MbscSegmentedGroup = (function (_super) {\r\n      __extends(MbscSegmentedGroup, _super);\r\n      function MbscSegmentedGroup(hostElement, formService, _inputService, radioService, control, zone) {\r\n          var _this = _super.call(this, hostElement, formService, _inputService, radioService, control, zone) || this;\r\n          _this.select = 'single';\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscSegmentedGroup.prototype, \"multiSelect\", {\r\n          get: function () {\r\n              return this.select == 'multiple';\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscSegmentedGroup.prototype.ngOnInit = function () {\r\n          _super.prototype.ngOnInit.call(this);\r\n          this._radioService.multiSelect = this.multiSelect;\r\n          if (this.color) {\r\n              this._radioService.color = this.color;\r\n          }\r\n      };\r\n      MbscSegmentedGroup.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-segmented-group',\r\n                      template: \"<div class=\\\"mbsc-segmented mbsc-no-touch\\\"><ng-content></ng-content></div>\",\r\n                      providers: [MbscRadioService]\r\n                  },] },\r\n      ];\r\n      MbscSegmentedGroup.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscRadioService, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: core.NgZone, },\r\n      ]; };\r\n      MbscSegmentedGroup.propDecorators = {\r\n          'select': [{ type: core.Input },],\r\n      };\r\n      return MbscSegmentedGroup;\r\n  }(MbscRadioGroupBase));\r\n  var MbscSegmented = (function (_super) {\r\n      __extends(MbscSegmented, _super);\r\n      function MbscSegmented(hostElement, formService, _radioService, zone) {\r\n          var _this = _super.call(this, hostElement, formService, zone) || this;\r\n          _this._radioService = _radioService;\r\n          _this.checkedChange = new core.EventEmitter();\r\n          var v = _this._radioService.getLastValue;\r\n          if (v !== null) {\r\n              _this.modelValue = v;\r\n          }\r\n          _this.valueObserver = _this._radioService.onValueChanged().subscribe(function (v) {\r\n              _this.modelValue = v;\r\n          });\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscSegmented.prototype, \"isChecked\", {\r\n          get: function () {\r\n              if (this.multiSelect) {\r\n                  if (this.checked !== undefined) {\r\n                      return this.checked;\r\n                  }\r\n                  else {\r\n                      return this.modelValue && this.modelValue.includes(this.value);\r\n                  }\r\n              }\r\n              else {\r\n                  return this.value == this.modelValue;\r\n              }\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscSegmented.prototype.clicked = function (e) {\r\n          if (this.multiSelect && this.checked !== undefined) {\r\n              this.checkedChange.emit(!(!!this.checked));\r\n          }\r\n          else {\r\n              if (this.multiSelect) {\r\n                  if (this.modelValue.includes(this.value)) {\r\n                      var i = this.modelValue.indexOf(this.value);\r\n                      this.modelValue.splice(i, 1);\r\n                  }\r\n                  else {\r\n                      this.modelValue.push(this.value);\r\n                  }\r\n                  this._radioService.changeValue(this.modelValue);\r\n              }\r\n              else {\r\n                  this._radioService.changeValue(this.value);\r\n              }\r\n          }\r\n      };\r\n      Object.defineProperty(MbscSegmented.prototype, \"cssClass\", {\r\n          get: function () {\r\n              var cl = 'mbsc-segmented-item';\r\n              if (this.color) {\r\n                  cl += ' mbsc-segmented-' + this.color;\r\n              }\r\n              return cl;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscSegmented.prototype.initControl = function () {\r\n          var options = extend$1({}, this._inheritedOptions, this.options, this.inlineOptionsObj);\r\n          this.instance = new SegmentedItem(this._initElem.nativeElement, options);\r\n      };\r\n      MbscSegmented.prototype.ngOnInit = function () {\r\n          _super.prototype.ngOnInit.call(this);\r\n          this.name = this._radioService.name;\r\n          this.multiSelect = this._radioService.multiSelect;\r\n          this.color = this._radioService.color;\r\n      };\r\n      MbscSegmented.prototype.ngOnDestroy = function () {\r\n          this._radioService.onValueChanged().unsubscribe(this.valueObserver);\r\n          _super.prototype.ngOnDestroy.call(this);\r\n      };\r\n      MbscSegmented.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-segmented',\r\n                      host: { '[class]': 'cssClass' },\r\n                      template: \"\\n        <label class=\\\"mbsc-segmented-item-ready\\\">\\n            <input #initElement \\n                data-role=\\\"segmented\\\"\\n                [type]=\\\"multiSelect ? 'checkbox' : 'radio'\\\" \\n                [value]=\\\"value\\\" \\n                [checked]=\\\"isChecked\\\"\\n                [disabled]=\\\"disabled\\\"\\n                [attr.name]=\\\"name\\\" \\n                [attr.value]=\\\"value\\\"\\n                [attr.data-icon]=\\\"icon ? icon : null\\\"\\n                (click)=\\\"clicked($event)\\\" />\\n            <span class=\\\"mbsc-segmented-content\\\">\\n                <span *ngIf=\\\"icon\\\" class=\\\"{{'mbsc-ic mbsc-ic-' + icon }}\\\"></span>\\n                <ng-content></ng-content>\\n            </span>\\n        </label>\\n    \"\r\n                  },] },\r\n      ];\r\n      MbscSegmented.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscRadioService, },\r\n          { type: core.NgZone, },\r\n      ]; };\r\n      MbscSegmented.propDecorators = {\r\n          'icon': [{ type: core.Input },],\r\n          'value': [{ type: core.Input },],\r\n          'checked': [{ type: core.Input },],\r\n          'checkedChange': [{ type: core.Output },],\r\n      };\r\n      return MbscSegmented;\r\n  }(MbscFormBase));\r\n  var MbscSlider = (function (_super) {\r\n      __extends(MbscSlider, _super);\r\n      function MbscSlider(hostElement, _formService, zone, control) {\r\n          var _this = _super.call(this, hostElement, zone, control, null, null) || this;\r\n          _this._formService = _formService;\r\n          _this._dummy = undefined;\r\n          _this._needsTimeout = false;\r\n          _this.disabled = false;\r\n          _this._colorClass = {};\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscSlider.prototype, \"isMulti\", {\r\n          get: function () {\r\n              return this._lastValue instanceof Array;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscSlider.prototype, \"dummyArray\", {\r\n          get: function () {\r\n              if (!this._dummy || (this.isMulti && this._lastValue && this._lastValue.length && this._dummy.length !== this._lastValue.length)) {\r\n                  this._dummy = Array(this.isMulti ? this._lastValue.length : 1).fill(0).map(function (x, i) { return i; });\r\n              }\r\n              return this._dummy;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscSlider.prototype, \"dataStepLabels\", {\r\n          get: function () {\r\n              if (typeof (this.stepLabels) === 'string') {\r\n                  return this.stepLabels;\r\n              }\r\n              else {\r\n                  return null;\r\n              }\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscSlider.prototype, \"value\", {\r\n          set: function (v) {\r\n              this.setNewValueProxy(v);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscSlider.prototype, \"colorClass\", {\r\n          get: function () {\r\n              for (var k in this._colorClass) {\r\n                  delete this._colorClass[k];\r\n              }\r\n              if (this.color) {\r\n                  this._colorClass['mbsc-slider-' + this.color] = true;\r\n              }\r\n              return this._colorClass;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscSlider.prototype.reInitialize = function () {\r\n          var _this = this;\r\n          this.instance.destroy();\r\n          this.setElement();\r\n          this.inputElements.forEach(function (input, index) {\r\n              if (index) {\r\n                  _this.handleChange(input.nativeElement);\r\n              }\r\n          });\r\n          var options = extend$1({}, this._inheritedOptions, this.options, this.inlineOptionsObj);\r\n          this.instance = new Slider(this.inputElements.first.nativeElement, options);\r\n      };\r\n      MbscSlider.prototype.setNewValue = function (v) {\r\n          var _this = this;\r\n          this._lastValue = v;\r\n          if (this.instance) {\r\n              var innerValue = this.instance.getVal();\r\n              if (this.isMulti && (!innerValue || innerValue.length != v.length)) {\r\n                  setTimeout(function () {\r\n                      _this.reInitialize();\r\n                      _this.instance.setVal(_this._lastValue, true, false);\r\n                  });\r\n              }\r\n              else {\r\n                  var changed = (this.isMulti && !deepEqualsArray(innerValue, v)) || (!this.isMulti && innerValue !== v);\r\n                  if (changed) {\r\n                      this.instance.setVal(v, true, false);\r\n                  }\r\n              }\r\n          }\r\n      };\r\n      MbscSlider.prototype.ngOnInit = function () {\r\n          this._inheritedOptions = this._formService ? this._formService.options : {};\r\n          _super.prototype.ngOnInit.call(this);\r\n      };\r\n      MbscSlider.prototype.initControl = function () {\r\n          var _this = this;\r\n          this.inputElements.forEach(function (input, index) {\r\n              if (index) {\r\n                  _this.handleChange(input.nativeElement);\r\n              }\r\n          });\r\n          var options = extend$1({}, this._inheritedOptions, this.options, this.inlineOptionsObj);\r\n          this.instance = new Slider(this.inputElements.first.nativeElement, options);\r\n          if (this.initialValue !== undefined && this.initialValue !== null) {\r\n              this.instance.setVal(this.initialValue, true, false);\r\n          }\r\n      };\r\n      MbscSlider.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-slider',\r\n                      host: { 'class': 'mbsc-control-ng' },\r\n                      template: \"\\n        <label [ngClass]=\\\"colorClass\\\">\\n            <ng-content></ng-content>\\n            <input #inputElements *ngFor=\\\"let v of dummyArray\\\" \\n                type=\\\"range\\\"\\n                [disabled]=\\\"disabled\\\"\\n                [attr.value]=\\\"dummyArray.length > 1 && initialValue ? initialValue[v]: initialValue\\\"\\n                [attr.data-step-labels]=\\\"dataStepLabels\\\"\\n                [attr.data-template]=\\\"valueTemplate\\\"\\n                [attr.data-tooltip]=\\\"tooltip ? 'true' : null\\\"\\n                [attr.data-highlight]=\\\"highlight\\\"\\n                [attr.data-live]=\\\"live\\\"\\n                [attr.data-icon]=\\\"icon ? icon : null\\\"\\n                [attr.data-val]=\\\"val ? val : null\\\"\\n                [attr.data-label-style]=\\\"labelStyle\\\"\\n                [attr.data-input-style]=\\\"inputStyle\\\"\\n                [attr.name]=\\\"name\\\"\\n                [attr.max]=\\\"max !== undefined ? max : null\\\"\\n                [attr.min]=\\\"min !== undefined ? min : null\\\"\\n                [attr.step]=\\\"step !== undefined ? step : null\\\"\\n                (blur)=\\\"onTouch($event)\\\" />\\n        </label>\\n    \",\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscSlider.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscSlider.propDecorators = {\r\n          'options': [{ type: core.Input, args: ['options',] },],\r\n          'name': [{ type: core.Input },],\r\n          'tooltip': [{ type: core.Input },],\r\n          'highlight': [{ type: core.Input },],\r\n          'live': [{ type: core.Input },],\r\n          'valueTemplate': [{ type: core.Input, args: ['value-template',] },],\r\n          'icon': [{ type: core.Input },],\r\n          'val': [{ type: core.Input },],\r\n          'max': [{ type: core.Input },],\r\n          'min': [{ type: core.Input },],\r\n          'step': [{ type: core.Input },],\r\n          'disabled': [{ type: core.Input },],\r\n          'stepLabels': [{ type: core.Input, args: ['step-labels',] },],\r\n          'value': [{ type: core.Input, args: ['value',] },],\r\n          'color': [{ type: core.Input },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['valueChange',] },],\r\n          'inputElements': [{ type: core.ViewChildren, args: ['inputElements',] },],\r\n      };\r\n      return MbscSlider;\r\n  }(MbscControlBase));\r\n  var MbscRating = (function (_super) {\r\n      __extends(MbscRating, _super);\r\n      function MbscRating(hostElem, zone, formService, control) {\r\n          var _this = _super.call(this, hostElem, zone, control, null, null) || this;\r\n          _this.formService = formService;\r\n          _this.min = undefined;\r\n          _this.max = undefined;\r\n          _this.step = undefined;\r\n          _this.disabled = false;\r\n          _this.val = undefined;\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          _this._colorClass = {};\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscRating.prototype, \"readonly\", {\r\n          set: function (val) {\r\n              this._readonly = emptyOrTrue(val);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscRating.prototype, \"value\", {\r\n          set: function (v) {\r\n              this.setNewValueProxy(v);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscRating.prototype, \"colorClass\", {\r\n          get: function () {\r\n              for (var k in this._colorClass) {\r\n                  delete this._colorClass[k];\r\n              }\r\n              if (this.color) {\r\n                  this._colorClass['mbsc-rating-' + this.color] = true;\r\n              }\r\n              return this._colorClass;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscRating.prototype.setNewValue = function (v) {\r\n          if (this.instance) {\r\n              if (this.instance.getVal() !== v) {\r\n                  this.instance.setVal(v, true, false);\r\n              }\r\n          }\r\n      };\r\n      MbscRating.prototype.ngOnInit = function () {\r\n          this._inheritedOptions = this.formService ? this.formService.options : {};\r\n          _super.prototype.ngOnInit.call(this);\r\n      };\r\n      MbscRating.prototype.initControl = function () {\r\n          var options = extend$1({}, this._inheritedOptions, this.options, this.inlineOptionsObj);\r\n          this.instance = new Rating(this.element, options);\r\n          if (this.initialValue !== undefined) {\r\n              this.instance.setVal(this.initialValue, true, false);\r\n          }\r\n      };\r\n      MbscRating.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-rating',\r\n                      host: { 'class': 'mbsc-control-ng' },\r\n                      template: \"<label [ngClass]=\\\"colorClass\\\">\\n        <ng-content></ng-content>\\n        <input type=\\\"rating\\\" data-role=\\\"rating\\\" \\n            [attr.name]=\\\"name\\\"\\n            [attr.min]=\\\"min !== undefined ? min : null\\\"\\n            [attr.max]=\\\"max !== undefined ? max : null\\\"\\n            [attr.step]=\\\"step !== undefined ? step : null\\\"\\n            [attr.data-val]=\\\"val ? val : null\\\"\\n            [attr.data-template]=\\\"template ? template : null\\\"\\n            [attr.data-empty]=\\\"empty\\\"\\n            [attr.data-filled]=\\\"filled\\\"\\n            [attr.data-label-style]=\\\"labelStyle\\\"\\n            [attr.data-input-style]=\\\"inputStyle\\\"\\n            [disabled]=\\\"disabled\\\"\\n            [readonly]=\\\"_readonly\\\"\\n            (blur)=\\\"onTouch($event)\\\" />\\n    </label>\"\r\n                  },] },\r\n      ];\r\n      MbscRating.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscRating.propDecorators = {\r\n          'options': [{ type: core.Input },],\r\n          'name': [{ type: core.Input },],\r\n          'min': [{ type: core.Input },],\r\n          'max': [{ type: core.Input },],\r\n          'step': [{ type: core.Input },],\r\n          'disabled': [{ type: core.Input },],\r\n          'empty': [{ type: core.Input },],\r\n          'filled': [{ type: core.Input },],\r\n          'readonly': [{ type: core.Input },],\r\n          'val': [{ type: core.Input },],\r\n          'template': [{ type: core.Input },],\r\n          'value': [{ type: core.Input, args: ['value',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['valueChange',] },],\r\n          'color': [{ type: core.Input },],\r\n      };\r\n      return MbscRating;\r\n  }(MbscControlBase));\r\n  var MbscFormGroup = (function () {\r\n      function MbscFormGroup(initialElem) {\r\n          this.initialElem = initialElem;\r\n          this.collapsible = null;\r\n          this._open = false;\r\n          this.instance = null;\r\n          this.element = null;\r\n          this.element = initialElem;\r\n      }\r\n      Object.defineProperty(MbscFormGroup.prototype, \"open\", {\r\n          set: function (v) {\r\n              if (this._open != v && this.instance) {\r\n                  if (v) {\r\n                      this.instance.show();\r\n                  }\r\n                  else {\r\n                      this.instance.hide();\r\n                  }\r\n              }\r\n              this._open = v;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscFormGroup.prototype.emptyOrTrue = function (v) {\r\n          return emptyOrTrue(v);\r\n      };\r\n      MbscFormGroup.prototype.ngAfterViewInit = function () {\r\n          if (this.collapsible !== null) {\r\n              this.instance = new CollapsibleBase(this.element.nativeElement, { isOpen: this._open !== false });\r\n          }\r\n      };\r\n      MbscFormGroup.prototype.ngOnDestroy = function () {\r\n          if (this.instance) {\r\n              this.instance.destroy();\r\n          }\r\n      };\r\n      MbscFormGroup.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-form-group',\r\n                      template: '<ng-content></ng-content>',\r\n                      host: {\r\n                          '[class.mbsc-form-group-inset]': 'emptyOrTrue(inset)',\r\n                          '[class.mbsc-form-group]': '!emptyOrTrue(inset)'\r\n                      },\r\n                      styles: [':host { display: block; }']\r\n                  },] },\r\n      ];\r\n      MbscFormGroup.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n      ]; };\r\n      MbscFormGroup.propDecorators = {\r\n          'collapsible': [{ type: core.Input },],\r\n          'open': [{ type: core.Input },],\r\n          'inset': [{ type: core.Input },],\r\n      };\r\n      return MbscFormGroup;\r\n  }());\r\n  var MbscFormGroupTitle = (function () {\r\n      function MbscFormGroupTitle() {\r\n      }\r\n      MbscFormGroupTitle.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-form-group-title',\r\n                      template: '<ng-content></ng-content>',\r\n                      host: {\r\n                          '[class.mbsc-form-group-title]': 'true'\r\n                      },\r\n                      styles: [':host { display: block; }']\r\n                  },] },\r\n      ];\r\n      MbscFormGroupTitle.ctorParameters = function () { return []; };\r\n      return MbscFormGroupTitle;\r\n  }());\r\n  var MbscFormGroupContent = (function () {\r\n      function MbscFormGroupContent() {\r\n      }\r\n      MbscFormGroupContent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-form-group-content',\r\n                      template: '<ng-content></ng-content>',\r\n                      host: {\r\n                          '[class.mbsc-form-group-content]': 'true'\r\n                      },\r\n                      styles: [':host { display: block; }']\r\n                  },] },\r\n      ];\r\n      MbscFormGroupContent.ctorParameters = function () { return []; };\r\n      return MbscFormGroupContent;\r\n  }());\r\n  var MbscAccordion = (function () {\r\n      function MbscAccordion() {\r\n      }\r\n      MbscAccordion.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-accordion',\r\n                      template: '<ng-content></ng-content>',\r\n                      host: {\r\n                          '[class.mbsc-accordion]': 'true'\r\n                      },\r\n                      styles: [':host { display: block; }']\r\n                  },] },\r\n      ];\r\n      MbscAccordion.ctorParameters = function () { return []; };\r\n      return MbscAccordion;\r\n  }());\r\n  var comp$3 = [\r\n      MbscForm,\r\n      MbscTextarea,\r\n      MbscDropdown,\r\n      MbscButton,\r\n      MbscCheckbox,\r\n      MbscSwitch,\r\n      MbscStepper,\r\n      MbscProgress,\r\n      MbscRadioGroup,\r\n      MbscRadioGroupBase,\r\n      MbscRadio,\r\n      MbscSegmentedGroup,\r\n      MbscSegmented,\r\n      MbscSlider,\r\n      MbscRating,\r\n      MbscFormGroup,\r\n      MbscFormGroupTitle,\r\n      MbscFormGroupContent,\r\n      MbscAccordion\r\n  ];\r\n  var MbscFormsModule = (function () {\r\n      function MbscFormsModule() {\r\n      }\r\n      MbscFormsModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [forms.FormsModule, common.CommonModule, MbscBaseModule, MbscInputModule],\r\n                      declarations: comp$3,\r\n                      exports: [comp$3, MbscInputModule, MbscInput]\r\n                  },] },\r\n      ];\r\n      MbscFormsModule.ctorParameters = function () { return []; };\r\n      return MbscFormsModule;\r\n  }());\r\n\r\n  var defaults$5 = {\r\n    invalid: [],\r\n    showInput: true,\r\n    inputClass: '',\r\n    itemSelector: 'li'\r\n  };\r\n  var List = function List(inst) {\r\n    var currLevel,\r\n        input,\r\n        prevent,\r\n        w,\r\n        orig = extend$1({}, inst.settings),\r\n        s = extend$1(inst.settings, defaults$5, orig),\r\n        layout = s.layout || (/top|bottom/.test(s.display) ? 'liquid' : ''),\r\n        isLiquid = layout == 'liquid',\r\n        origReadOnly = s.readonly,\r\n        elm = $$1(this),\r\n        id = this.id + '_dummy',\r\n        lvl = 0,\r\n        currWheelVector = [],\r\n        wa = s.wheelArray || createWheelArray(elm),\r\n        fwv = firstWheelVector(wa);\r\n\r\n    function getDepth(tree, l) {\r\n      var i;\r\n      lvl = l > lvl ? l : lvl;\r\n\r\n      for (i = 0; i < tree.length; i++) {\r\n        if (tree[i].children) {\r\n          getDepth(tree[i].children, l + 1);\r\n        }\r\n      }\r\n    }\r\n    /**\r\n     * Disables the invalid items on the wheels\r\n     * @param {Object} dw - the jQuery mobiscroll object\r\n     * @param {Number} nrWheels - the number of the current wheels\r\n     * @param {Array} whArray - The wheel array objects containing the wheel tree\r\n     * @param {Array} whVector - the wheel vector containing the current keys\r\n     */\r\n\r\n\r\n    function getDisabled(nrWheels, whArray, whVector) {\r\n      var i = 0,\r\n          disabled = [];\r\n\r\n      while (i < nrWheels) {\r\n        disabled[i] = getInvalidKeys(whVector, i, whArray);\r\n        i++;\r\n      }\r\n\r\n      return disabled;\r\n    }\r\n    /**\r\n     * Returns the invalid keys of one wheel as an array\r\n     * @param {Array} whVector - the wheel vector used to search for the wheel in the wheel array\r\n     * @param {Number} index - index of the wheel in the wheel vector, that we are interested in\r\n     * @param {Array} whArray - the wheel array we are searching in\r\n     * @return {Array} - list of invalid keys\r\n     */\r\n\r\n\r\n    function getInvalidKeys(whVector, index, whArray) {\r\n      var i = 0,\r\n          n,\r\n          whObjA = whArray,\r\n          invalids = [];\r\n\r\n      while (i < index) {\r\n        var ii = whVector[i];\r\n\r\n        for (n in whObjA) {\r\n          if (whObjA[n].key == ii) {\r\n            whObjA = whObjA[n].children;\r\n            break;\r\n          }\r\n        }\r\n\r\n        i++;\r\n      }\r\n\r\n      i = 0;\r\n\r\n      while (i < whObjA.length) {\r\n        if (whObjA[i].invalid) {\r\n          invalids.push(whObjA[i].key);\r\n        }\r\n\r\n        i++;\r\n      }\r\n\r\n      return invalids;\r\n    }\r\n    /**\r\n     * Creates a Boolean vector with true values (except one) that can be used as the readonly vector\r\n     * n - the length of the vector\r\n     * i - the index of the value that's going to be false\r\n     */\r\n\r\n\r\n    function createROVector(n, i) {\r\n      var a = [];\r\n\r\n      while (n) {\r\n        a[--n] = true;\r\n      }\r\n\r\n      a[i] = false;\r\n      return a;\r\n    }\r\n    /**\r\n     * Creates the wheel array from the vector provided\r\n     * wv - wheel vector containing the values that should be selected on the wheels\r\n     * l - the length of the wheel array\r\n     */\r\n\r\n\r\n    function generateWheelsFromVector(wv, l, index) {\r\n      var nextLevel,\r\n          j,\r\n          i = 0,\r\n          hasChildren = true,\r\n          w = [[]],\r\n          wtObjA = wa;\r\n\r\n      if (l) {\r\n        // if length is defined we need to generate that many wheels (even if they are empty)\r\n        for (j = 0; j < l; j++) {\r\n          if (isLiquid) {\r\n            w[0][j] = {};\r\n          } else {\r\n            w[j] = [{}];\r\n          }\r\n        }\r\n      }\r\n\r\n      while (hasChildren) {\r\n        if (isLiquid) {\r\n          w[0][i] = getWheelFromObjA(wtObjA, i);\r\n        } else {\r\n          w[i] = [getWheelFromObjA(wtObjA, i)];\r\n        }\r\n\r\n        j = 0;\r\n        nextLevel = null;\r\n\r\n        while (j < wtObjA.length && !nextLevel) {\r\n          if (wtObjA[j].key == wv[i] && (index !== undefined && i <= index || index === undefined)) {\r\n            nextLevel = wtObjA[j];\r\n          }\r\n\r\n          j++;\r\n        }\r\n\r\n        if (!nextLevel) {\r\n          nextLevel = getFirstValidItemObjOrInd(wtObjA);\r\n        }\r\n\r\n        if (nextLevel && nextLevel.children) {\r\n          wtObjA = nextLevel.children;\r\n          i++;\r\n        } else {\r\n          hasChildren = false;\r\n        }\r\n      }\r\n\r\n      return w;\r\n    }\r\n    /**\r\n     * Returns the first valid Wheel Node Object or its index from a Wheel Node Object Array\r\n     * getInd - if it is true then the return value is going to be the index, otherwise the object itself\r\n     */\r\n\r\n\r\n    function getFirstValidItemObjOrInd(wtObjA, getInd) {\r\n      if (!wtObjA) {\r\n        return false;\r\n      }\r\n\r\n      var i = 0,\r\n          obj;\r\n\r\n      while (i < wtObjA.length) {\r\n        if (!(obj = wtObjA[i++]).invalid) {\r\n          return getInd ? i - 1 : obj;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    function getWheelFromObjA(objA, i) {\r\n      var wheel = {\r\n        data: [],\r\n        label: s.labels && s.labels[i] ? s.labels[i] : i\r\n      },\r\n          j = 0;\r\n\r\n      while (j < objA.length) {\r\n        wheel.data.push({\r\n          value: objA[j].key,\r\n          display: objA[j].value\r\n        });\r\n        j++;\r\n      }\r\n\r\n      return wheel;\r\n    }\r\n    /**\r\n     * Hides the last i number of wheels\r\n     * i - the last number of wheels that has to be hidden\r\n     */\r\n\r\n\r\n    function hideWheels(i) {\r\n      if (inst._isVisible) {\r\n        $$1('.mbsc-sc-whl-w', inst._markup).css('display', '').slice(i).hide();\r\n      }\r\n    }\r\n    /**\r\n     * Generates the first wheel vector from the wheeltree\r\n     * wt - the wheel tree object\r\n     * uses the lvl global variable to determine the length of the vector\r\n     */\r\n\r\n\r\n    function firstWheelVector(wa) {\r\n      var t = [],\r\n          ndObjA = wa,\r\n          obj,\r\n          ok = true,\r\n          i = 0;\r\n\r\n      while (ok) {\r\n        obj = getFirstValidItemObjOrInd(ndObjA);\r\n        t[i++] = obj.key;\r\n        ok = obj.children;\r\n\r\n        if (ok) {\r\n          ndObjA = ok;\r\n        }\r\n      }\r\n\r\n      return t;\r\n    }\r\n    /**\r\n     * Calculates the level of a wheel vector and the new wheel vector, depending on current wheel vector and the index of the changed wheel\r\n     * wv - current wheel vector\r\n     * index - index of the changed wheel\r\n     */\r\n\r\n\r\n    function calcLevelOfVector2(wv, index) {\r\n      var childIdx,\r\n          childName,\r\n          i,\r\n          level = 0,\r\n          ndObjA = wa,\r\n          next = true,\r\n          t = [];\r\n\r\n      while (next) {\r\n        if (wv[level] !== undefined && level <= index) {\r\n          i = 0;\r\n          childName = wv[level];\r\n          childIdx = undefined;\r\n\r\n          while (i < ndObjA.length && childIdx === undefined) {\r\n            if (ndObjA[i].key == wv[level] && !ndObjA[i].invalid) {\r\n              childIdx = i;\r\n            }\r\n\r\n            i++;\r\n          }\r\n        } else {\r\n          childIdx = getFirstValidItemObjOrInd(ndObjA, true);\r\n          childName = ndObjA[childIdx] && ndObjA[childIdx].key;\r\n        }\r\n\r\n        t[level] = childName;\r\n        level++;\r\n        next = ndObjA[childIdx] ? ndObjA[childIdx].children : false;\r\n        ndObjA = ndObjA[childIdx] && ndObjA[childIdx].children;\r\n      } // return the calculated level and the wheel vector as an object\r\n\r\n\r\n      return {\r\n        lvl: level,\r\n        nVector: t\r\n      };\r\n    }\r\n\r\n    function createWheelArray(ul) {\r\n      var wheelArray = [];\r\n      var children = ul.length > 1 ? ul : ul.children(s.itemSelector);\r\n      children.each(function (index) {\r\n        var that = $$1(this),\r\n            c = that.clone();\r\n        c.children('ul,ol').remove();\r\n        c.children(s.itemSelector).remove();\r\n        var v = inst._processMarkup ? inst._processMarkup(c) : c.html().replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, ''),\r\n            inv = that.attr('data-invalid') ? true : false,\r\n            wheelObj = {\r\n          key: that.attr('data-val') === undefined || that.attr('data-val') === null ? index : that.attr('data-val'),\r\n          value: v,\r\n          invalid: inv,\r\n          children: null\r\n        },\r\n            nest = s.itemSelector === 'li' ? that.children('ul,ol') : that.children(s.itemSelector);\r\n\r\n        if (nest.length) {\r\n          wheelObj.children = createWheelArray(nest);\r\n        }\r\n\r\n        wheelArray.push(wheelObj);\r\n      });\r\n      return wheelArray;\r\n    }\r\n\r\n    function changeWheels(values, index, o) {\r\n      var j,\r\n          i = (index || 0) + 1,\r\n          args = [],\r\n          w = {},\r\n          wheels = {};\r\n      w = generateWheelsFromVector(values, null, index);\r\n\r\n      for (j = 0; j < values.length; j++) {\r\n        inst._tempWheelArray[j] = values[j] = o.nVector[j] || 0;\r\n      }\r\n\r\n      while (i < o.lvl) {\r\n        wheels[i] = isLiquid ? w[0][i] : w[i][0];\r\n        args.push(i++);\r\n      }\r\n\r\n      hideWheels(o.lvl);\r\n      currWheelVector = values.slice(0);\r\n\r\n      if (args.length) {\r\n        prevent = true;\r\n        inst.changeWheel(wheels);\r\n      }\r\n    } // Calculate the maximum depth of the tree\r\n\r\n\r\n    getDepth(wa, 1);\r\n    w = generateWheelsFromVector(fwv, lvl); // Remove input if exists\r\n\r\n    $$1('#' + id).remove();\r\n\r\n    if (s.input) {\r\n      input = $$1(s.input);\r\n    } else if (s.showInput) {\r\n      input = $$1('<input type=\"text\" id=\"' + id + '\" value=\"\" class=\"' + s.inputClass + '\" placeholder=\"' + (s.placeholder || '') + '\" readonly />').insertBefore(elm);\r\n    }\r\n\r\n    if (input) {\r\n      inst.attachShow(input);\r\n    }\r\n\r\n    if (!s.wheelArray) {\r\n      elm.hide();\r\n    }\r\n\r\n    return {\r\n      wheels: w,\r\n      anchor: input,\r\n      layout: layout,\r\n      headerText: false,\r\n      setOnTap: lvl == 1,\r\n      formatValue: function formatValue(d) {\r\n        if (currLevel === undefined) {\r\n          currLevel = calcLevelOfVector2(d, d.length).lvl;\r\n        }\r\n\r\n        return d.slice(0, currLevel).join(' ');\r\n      },\r\n      parseValue: function parseValue(value) {\r\n        return value ? (value + '').split(' ') : (s.defaultValue || fwv).slice(0);\r\n      },\r\n      onBeforeShow: function onBeforeShow() {\r\n        var t = inst.getArrayVal(true);\r\n        currWheelVector = t.slice(0);\r\n        s.wheels = generateWheelsFromVector(t, lvl, lvl);\r\n        prevent = true;\r\n      },\r\n      onWheelGestureStart: function onWheelGestureStart(ev) {\r\n        s.readonly = createROVector(lvl, ev.index);\r\n      },\r\n      onWheelAnimationEnd: function onWheelAnimationEnd(ev) {\r\n        var index = ev.index,\r\n            values = inst.getArrayVal(true),\r\n            o = calcLevelOfVector2(values, index);\r\n        currLevel = o.lvl;\r\n        s.readonly = origReadOnly;\r\n\r\n        if (values[index] != currWheelVector[index]) {\r\n          changeWheels(values, index, o);\r\n        }\r\n      },\r\n      onFill: function onFill(ev) {\r\n        currLevel = undefined;\r\n\r\n        if (input) {\r\n          input.val(ev.valueText);\r\n        }\r\n      },\r\n      validate: function validate(data) {\r\n        var values = data.values,\r\n            index = data.index,\r\n            o = calcLevelOfVector2(values, values.length);\r\n        currLevel = o.lvl;\r\n\r\n        if (index === undefined) {\r\n          hideWheels(o.lvl);\r\n\r\n          if (!prevent) {\r\n            changeWheels(values, index, o);\r\n          }\r\n        }\r\n\r\n        prevent = false;\r\n        return {\r\n          disabled: getDisabled(currLevel, wa, values)\r\n        };\r\n      },\r\n      onDestroy: function onDestroy() {\r\n        if (input) {\r\n          $$1('#' + id).remove();\r\n        }\r\n\r\n        elm.show();\r\n      }\r\n    };\r\n  };\r\n\r\n  var ImageScroller = Scroller;\r\n\r\n  presets.image = function (inst) {\r\n    if (inst.settings.enhance) {\r\n      inst._processMarkup = function (li) {\r\n        var hasIcon = li.attr('data-icon');\r\n        li.children().each(function (i, v) {\r\n          v = $$1(v);\r\n\r\n          if (v.is('img')) {\r\n            $$1('<div class=\"mbsc-img-c\"></div>').insertAfter(v).append(v.addClass('mbsc-img'));\r\n          } else if (v.is('p')) {\r\n            v.addClass('mbsc-img-txt');\r\n          }\r\n        });\r\n\r\n        if (hasIcon) {\r\n          li.prepend('<div class=\"mbsc-ic mbsc-ic-' + hasIcon + '\"></div');\r\n        }\r\n\r\n        li.html('<div class=\"mbsc-img-w\">' + li.html() + '</div>');\r\n        return li.html();\r\n      };\r\n    }\r\n\r\n    return List.call(this, inst);\r\n  };\r\n\r\n  var MbscImage = (function (_super) {\r\n      __extends(MbscImage, _super);\r\n      function MbscImage(initialElement, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElement, zone, control, inputService, view) || this;\r\n          _this.optionService = optionService;\r\n          _this.enhance = true;\r\n          _this.placeholder = '';\r\n          _this.options = {};\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscImage.prototype, \"value\", {\r\n          set: function (v) {\r\n              this.setNewValueProxy(v);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscImage.prototype.initControl = function () {\r\n          var _this = this;\r\n          var target = this.target;\r\n          if (target) {\r\n              if (typeof target !== 'string') {\r\n                  if (target._elementRef && target._elementRef.nativeElement) {\r\n                      target = target._elementRef.nativeElement;\r\n                  }\r\n                  else if (target.getInputElement) {\r\n                      target.getInputElement().then(function (inp) {\r\n                          _this.updateOptions({ input: inp }, true, false, false);\r\n                      });\r\n                  }\r\n                  else if (target.element) {\r\n                      target = target.element;\r\n                  }\r\n              }\r\n          }\r\n          var options = extend$1({ preset: 'image', input: target }, this.optionService ? this.optionService.options : {}, this.options, this.inlineOptionsObj, this.optionExtensions);\r\n          this.instance = new ImageScroller(this.element, options);\r\n          if (this.initialValue !== undefined) {\r\n              this.instance.setVal(this.initialValue, true, false);\r\n          }\r\n      };\r\n      MbscImage.prototype.setNewValue = function (v) {\r\n          if (this.instance && this.instance.getVal() !== v) {\r\n              this.instance.setVal(v, true, false);\r\n              if (this._inputService && this._inputService.input) {\r\n                  this._inputService.input.innerValue = this.instance._value;\r\n              }\r\n          }\r\n      };\r\n      MbscImage.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-image]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscImage.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscImage.propDecorators = {\r\n          'defaultValue': [{ type: core.Input },],\r\n          'enhance': [{ type: core.Input },],\r\n          'inputClass': [{ type: core.Input },],\r\n          'invalid': [{ type: core.Input },],\r\n          'labels': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n          'showInput': [{ type: core.Input },],\r\n          'wheelArray': [{ type: core.Input, args: ['mbsc-data',] },],\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n          'target': [{ type: core.Input, args: ['mbsc-target',] },],\r\n          'value': [{ type: core.Input, args: ['mbsc-image',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['mbsc-imageChange',] },],\r\n      };\r\n      return MbscImage;\r\n  }(MbscScrollerBase));\r\n  var MbscImageComponent = (function (_super) {\r\n      __extends(MbscImageComponent, _super);\r\n      function MbscImageComponent(initialElem, zone, listService, control, inputService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, null) || this;\r\n          _this.listService = listService;\r\n          _this.errorMessage = '';\r\n          _this.label = '';\r\n          _this.placeholder = '';\r\n          _this.showInput = false;\r\n          _this.inlineOptionsObj = {\r\n              itemSelector: 'mbsc-image-item',\r\n              showInput: false\r\n          };\r\n          return _this;\r\n      }\r\n      MbscImageComponent.prototype.setElement = function () {\r\n          if (this.itemWrapper) {\r\n              this.element = this.itemWrapper.nativeElement;\r\n          }\r\n          else {\r\n              this.element = this.initialElem.nativeElement;\r\n          }\r\n      };\r\n      MbscImageComponent.prototype.ngOnInit = function () {\r\n          var _this = this;\r\n          _super.prototype.ngOnInit.call(this);\r\n          this.addRemoveHandler = this.listService.onAddRemove().subscribe(function (item) {\r\n              if (_this.instance) {\r\n                  _this.instance.option({});\r\n              }\r\n          });\r\n      };\r\n      MbscImageComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscImageComponent.prototype.initControl = function () {\r\n          if (!this.target) {\r\n              this.target = $$1('mbsc-input', this.initialElem.nativeElement)[0];\r\n          }\r\n          _super.prototype.initControl.call(this);\r\n      };\r\n      MbscImageComponent.prototype.ngOnDestroy = function () {\r\n          this.listService.onAddRemove().unsubscribe(this.addRemoveHandler);\r\n          _super.prototype.ngOnDestroy.call(this);\r\n      };\r\n      MbscImageComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-image',\r\n                      exportAs: 'mobiscroll',\r\n                      template: \"<mbsc-input *ngIf=\\\"!inline || showInput\\\" \\n        [name]=\\\"name\\\" \\n        [theme]=\\\"theme\\\" \\n        [disabled]=\\\"disabled\\\" \\n        [error]=\\\"error\\\" \\n        [errorMessage]=\\\"errorMessage\\\" \\n        [icon]=\\\"inputIcon\\\" \\n        [icon-align]=\\\"iconAlign\\\"\\n        [placeholder]=\\\"placeholder\\\"\\n        [controlNg]=\\\"false\\\">{{label}}\\n        </mbsc-input>\\n        <span #itemWrapper><ng-content></ng-content></span>\",\r\n                      providers: [MbscListService]\r\n                  },] },\r\n      ];\r\n      MbscImageComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: MbscListService, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscImageComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n          'wheelArray': [{ type: core.Input, args: ['data',] },],\r\n          'label': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n          'itemWrapper': [{ type: core.ViewChild, args: ['itemWrapper', { static: false },] },],\r\n          'showInput': [{ type: core.Input },],\r\n      };\r\n      return MbscImageComponent;\r\n  }(MbscImage));\r\n  var MbscImageItem = (function () {\r\n      function MbscImageItem(listService) {\r\n          this.listService = listService;\r\n      }\r\n      MbscImageItem.prototype.ngAfterViewInit = function () {\r\n          this.listService.notifyAddRemove(this);\r\n      };\r\n      MbscImageItem.prototype.ngOnDestroy = function () {\r\n          this.listService.notifyAddRemove(this);\r\n      };\r\n      MbscImageItem.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-image-item',\r\n                      template: '<ng-content></ng-content>',\r\n                      host: {\r\n                          '[attr.data-val]': 'value',\r\n                          '[attr.data-icon]': 'icon'\r\n                      }\r\n                  },] },\r\n      ];\r\n      MbscImageItem.ctorParameters = function () { return [\r\n          { type: MbscListService, },\r\n      ]; };\r\n      MbscImageItem.propDecorators = {\r\n          'value': [{ type: core.Input },],\r\n          'icon': [{ type: core.Input },],\r\n      };\r\n      return MbscImageItem;\r\n  }());\r\n  var MbscImageModule = (function () {\r\n      function MbscImageModule() {\r\n      }\r\n      MbscImageModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [common.CommonModule, MbscScrollerBaseModule, MbscInputModule],\r\n                      declarations: [MbscImage, MbscImageComponent, MbscImageItem],\r\n                      exports: [MbscImage, MbscImageComponent, MbscImageItem]\r\n                  },] },\r\n      ];\r\n      MbscImageModule.ctorParameters = function () { return []; };\r\n      return MbscImageModule;\r\n  }());\r\n\r\n  var Measurement = Scroller;\r\n  var defaults$6 = {\r\n    batch: 50,\r\n    min: 0,\r\n    max: 100,\r\n    defaultUnit: '',\r\n    units: null,\r\n    unitNames: null,\r\n    invalid: [],\r\n    sign: false,\r\n    step: 0.05,\r\n    scale: 2,\r\n    convert: function convert(val) {\r\n      return val;\r\n    },\r\n    // Localization\r\n    decimalSeparator: '.',\r\n    signText: '&nbsp;',\r\n    wholeText: 'Whole',\r\n    fractionText: 'Fraction',\r\n    unitText: 'Unit'\r\n  };\r\n\r\n  presets.measurement = function (inst) {\r\n    var orig = extend$1({}, inst.settings),\r\n        s = extend$1(inst.settings, defaults$6, orig),\r\n        wheel = {},\r\n        w = [[]],\r\n        wholeInvalids = {},\r\n        wholeWheel = {},\r\n        fractionWheel = {},\r\n        fractions = [],\r\n        useSign = s.sign,\r\n        useUnits = s.units && s.units.length,\r\n        baseUnit = useUnits ? s.defaultUnit || s.units[0] : '',\r\n        units = [],\r\n        useFract = s.step < 1,\r\n        wholeStep = s.step > 1 ? s.step : 1,\r\n        fractLength = useFract ? Math.max(s.scale, (s.step + '').split('.')[1].length) : 1,\r\n        one = Math.pow(10, fractLength),\r\n        steps = Math.round(useFract ? s.step * one : s.step),\r\n        fractNr,\r\n        realValue,\r\n        oldUnit,\r\n        idxFract,\r\n        idxWhole,\r\n        idxUnit,\r\n        minVal,\r\n        maxVal,\r\n        minWhole,\r\n        maxWhole,\r\n        minFract,\r\n        maxFract,\r\n        wholeOffset = 0,\r\n        fractOffset = 0,\r\n        v,\r\n        j,\r\n        i = 0;\r\n\r\n    function getWhole(k) {\r\n      return Math.max(minWhole, Math.min(maxWhole, useFract ? k < 0 ? Math.ceil(k) : Math.floor(k) : step(Math.round(k - wholeOffset), steps) + wholeOffset));\r\n    }\r\n\r\n    function getFract(k) {\r\n      return useFract ? step((Math.abs(k) - Math.abs(getWhole(k))) * one - fractOffset, steps) + fractOffset : 0;\r\n    }\r\n\r\n    function getParts(v) {\r\n      var whole = getWhole(v),\r\n          fract = getFract(v),\r\n          sign = v < 0 ? '-' : '+';\r\n\r\n      if (fract >= one) {\r\n        if (v < 0) {\r\n          whole--;\r\n        } else {\r\n          whole++;\r\n        }\r\n\r\n        fract = 0;\r\n      }\r\n\r\n      return [sign, whole, fract];\r\n    }\r\n\r\n    function getNr(d) {\r\n      var whole = +d[idxWhole],\r\n          fract = useFract ? d[idxFract] / one * (whole < 0 ? -1 : 1) : 0;\r\n      return (useSign && d[0] == '-' ? -1 : 1) * (whole + fract);\r\n    }\r\n\r\n    function step(v, st) {\r\n      return Math.round(v / st) * st;\r\n    }\r\n\r\n    function convert(v, u1, u2) {\r\n      if (u1 === u2 || !s.convert) {\r\n        return v;\r\n      }\r\n\r\n      return s.convert.call(this, v, u1, u2);\r\n    }\r\n\r\n    function setMinMax(unit) {\r\n      var minv, maxv;\r\n      minVal = convert(s.min, baseUnit, unit);\r\n      maxVal = convert(s.max, baseUnit, unit);\r\n\r\n      if (useFract) {\r\n        minWhole = minVal < 0 ? Math.ceil(minVal) : Math.floor(minVal);\r\n        maxWhole = maxVal < 0 ? Math.ceil(maxVal) : Math.floor(maxVal);\r\n        minFract = getFract(minVal);\r\n        maxFract = getFract(maxVal);\r\n      } else {\r\n        minWhole = Math.round(minVal);\r\n        maxWhole = Math.round(maxVal);\r\n        maxWhole = minWhole + Math.floor((maxWhole - minWhole) / steps) * steps;\r\n        wholeOffset = minWhole % steps;\r\n      }\r\n\r\n      minv = minWhole;\r\n      maxv = maxWhole;\r\n\r\n      if (useSign) {\r\n        maxv = Math.abs(minv) > Math.abs(maxv) ? Math.abs(minv) : Math.abs(maxv);\r\n        minv = minv < 0 ? 0 : minv;\r\n      }\r\n\r\n      wholeWheel.min = minv < 0 ? Math.ceil(minv / wholeStep) : Math.floor(minv / wholeStep);\r\n      wholeWheel.max = maxv < 0 ? Math.ceil(maxv / wholeStep) : Math.floor(maxv / wholeStep);\r\n    }\r\n\r\n    function format(d) {\r\n      return getNr(d).toFixed(useFract ? fractLength : 0) + (useUnits ? ' ' + units[d[idxUnit]] : '');\r\n    } // Extended methods\r\n    // ---\r\n\r\n\r\n    inst.setVal = function (val, fill, change, temp, time) {\r\n      // Force parse if value is passed as an array\r\n      inst._setVal($$1.isArray(val) ? format(val) : val, fill, change, temp, time);\r\n    }; // ---\r\n    // Inits\r\n    // generate array from unitNames\r\n\r\n\r\n    if (s.units) {\r\n      for (j = 0; j < s.units.length; ++j) {\r\n        v = s.units[j];\r\n        units.push(s.unitNames ? s.unitNames[v] || v : v);\r\n      }\r\n    } // Check if sign is needed\r\n\r\n\r\n    if (useSign) {\r\n      useSign = false;\r\n\r\n      if (useUnits) {\r\n        for (j = 0; j < s.units.length; j++) {\r\n          if (convert(s.min, baseUnit, s.units[j]) < 0) {\r\n            useSign = true;\r\n          }\r\n        }\r\n      } else {\r\n        useSign = s.min < 0;\r\n      }\r\n    } // Sign wheel (if enabled)\r\n\r\n\r\n    if (useSign) {\r\n      w[0].push({\r\n        data: ['-', '+'],\r\n        label: s.signText\r\n      });\r\n      i++;\r\n    } // Whole wheel (later generated)\r\n\r\n\r\n    wholeWheel = {\r\n      label: s.wholeText,\r\n      data: function data(i) {\r\n        return minWhole % wholeStep + i * wholeStep;\r\n      },\r\n      getIndex: function getIndex(i) {\r\n        return Math.round((i - minWhole % wholeStep) / wholeStep);\r\n      }\r\n    };\r\n    w[0].push(wholeWheel);\r\n    idxWhole = i++;\r\n    setMinMax(baseUnit); // Fraction wheel\r\n\r\n    if (useFract) {\r\n      w[0].push(fractionWheel);\r\n      fractionWheel.data = [];\r\n      fractionWheel.label = s.fractionText;\r\n\r\n      for (j = fractOffset; j < one; j += steps) {\r\n        fractions.push(j);\r\n        fractionWheel.data.push({\r\n          value: j,\r\n          display: s.decimalSeparator + pad(j, fractLength)\r\n        });\r\n      }\r\n\r\n      idxFract = i++;\r\n      fractNr = Math.ceil(100 / steps);\r\n\r\n      if (s.invalid && s.invalid.length) {\r\n        // Calculate whole invalids\r\n        $$1.each(s.invalid, function (i, v) {\r\n          var w = v > 0 ? Math.floor(v) : Math.ceil(v);\r\n\r\n          if (w === 0) {\r\n            // We need to track +0 and -0 sepparately\r\n            w = v <= 0 ? -0.001 : 0.001;\r\n          }\r\n\r\n          wholeInvalids[w] = (wholeInvalids[w] || 0) + 1;\r\n\r\n          if (v === 0) {\r\n            w = 0.001;\r\n            wholeInvalids[w] = (wholeInvalids[w] || 0) + 1;\r\n          }\r\n        });\r\n        $$1.each(wholeInvalids, function (i, v) {\r\n          if (v < fractNr) {\r\n            delete wholeInvalids[i];\r\n          } else {\r\n            wholeInvalids[i] = i;\r\n          }\r\n        });\r\n      }\r\n    } // Unit wheel\r\n\r\n\r\n    if (useUnits) {\r\n      wheel = {\r\n        data: [],\r\n        label: s.unitText,\r\n        cssClass: 'mbsc-msr-whl-unit',\r\n        circular: false\r\n      };\r\n\r\n      for (j = 0; j < s.units.length; j++) {\r\n        wheel.data.push({\r\n          value: j,\r\n          display: units[j]\r\n        });\r\n      }\r\n\r\n      w[0].push(wheel);\r\n    }\r\n\r\n    idxUnit = i;\r\n    return {\r\n      wheels: w,\r\n      minWidth: useSign && useFract ? 70 : 80,\r\n      showLabel: false,\r\n      formatValue: format,\r\n      compClass: 'mbsc-msr mbsc-sc',\r\n      parseValue: function parseValue(v) {\r\n        var vv = (typeof v === 'number' ? v + '' : v) || s.defaultValue,\r\n            d = (vv + '').split(' '),\r\n            val = +d[0],\r\n            ret = [],\r\n            parts,\r\n            unit = '';\r\n\r\n        if (useUnits) {\r\n          unit = $$1.inArray(d[1], units);\r\n          unit = unit == -1 ? $$1.inArray(baseUnit, s.units) : unit;\r\n          unit = unit == -1 ? 0 : unit;\r\n        }\r\n\r\n        oldUnit = useUnits ? s.units[unit] : '';\r\n        setMinMax(oldUnit);\r\n        val = isNaN(val) ? 0 : val;\r\n        val = constrain(val, minVal, maxVal);\r\n        parts = getParts(val);\r\n        parts[1] = constrain(parts[1], minWhole, maxWhole);\r\n        realValue = val;\r\n\r\n        if (useSign) {\r\n          ret[0] = parts[0];\r\n          parts[1] = Math.abs(parts[1]);\r\n        }\r\n\r\n        ret[idxWhole] = parts[1];\r\n\r\n        if (useFract) {\r\n          ret[idxFract] = parts[2];\r\n        }\r\n\r\n        if (useUnits) {\r\n          ret[idxUnit] = unit;\r\n        }\r\n\r\n        return ret;\r\n      },\r\n      onCancel: function onCancel() {\r\n        realValue = undefined;\r\n      },\r\n      validate: function validate(data) {\r\n        var minus,\r\n            parts,\r\n            whole,\r\n            iparts,\r\n            from,\r\n            values = data.values,\r\n            index = data.index,\r\n            dir = data.direction,\r\n            dis = {},\r\n            disabled = [],\r\n            wheels = {},\r\n            newUnit = useUnits ? s.units[values[idxUnit]] : ''; // Sign changed\r\n\r\n        if (useSign && index === 0) {\r\n          realValue = Math.abs(realValue) * (values[0] == '-' ? -1 : 1);\r\n        } // Set real value if numbers changed\r\n\r\n\r\n        if (index === idxWhole || index === idxFract && useFract || realValue === undefined || index === undefined) {\r\n          realValue = getNr(values);\r\n          oldUnit = newUnit;\r\n        } // Convert value if unit changed\r\n\r\n\r\n        if (useUnits && index === idxUnit && oldUnit !== newUnit || index === undefined) {\r\n          setMinMax(newUnit);\r\n          realValue = convert(realValue, oldUnit, newUnit);\r\n          oldUnit = newUnit;\r\n          parts = getParts(realValue);\r\n\r\n          if (index !== undefined) {\r\n            //wholeWheel._refresh();\r\n            wheels[idxWhole] = wholeWheel;\r\n            inst.changeWheel(wheels);\r\n          }\r\n\r\n          if (useSign) {\r\n            values[0] = parts[0];\r\n          }\r\n        } // Disable invalid values\r\n\r\n\r\n        disabled[idxWhole] = [];\r\n\r\n        if (useSign) {\r\n          // Disable +/- signs\r\n          disabled[0] = [];\r\n\r\n          if (minVal > 0) {\r\n            disabled[0].push('-');\r\n            values[0] = '+';\r\n          }\r\n\r\n          if (maxVal < 0) {\r\n            disabled[0].push('+');\r\n            values[0] = '-';\r\n          }\r\n\r\n          from = Math.abs(values[0] == '-' ? minWhole : maxWhole);\r\n\r\n          for (i = from + wholeStep; i < from + 20 * wholeStep; i += wholeStep) {\r\n            disabled[idxWhole].push(i);\r\n            dis[i] = true;\r\n          }\r\n        }\r\n\r\n        realValue = constrain(realValue, minVal, maxVal);\r\n        parts = getParts(realValue);\r\n        whole = useSign ? Math.abs(parts[1]) : parts[1];\r\n        minus = useSign ? values[0] == '-' : realValue < 0;\r\n        values[idxWhole] = whole;\r\n\r\n        if (minus) {\r\n          // Need this for 0\r\n          parts[0] = '-';\r\n        }\r\n\r\n        if (useFract) {\r\n          values[idxFract] = parts[2];\r\n        } // Disable invalid values on whole wheel\r\n\r\n\r\n        $$1.each(useFract ? wholeInvalids : s.invalid, function (i, v) {\r\n          // disable whole user values\r\n          if (useSign && minus) {\r\n            if (v <= 0) {\r\n              v = Math.abs(v);\r\n            } else {\r\n              return;\r\n            }\r\n          }\r\n\r\n          v = step(convert(v, baseUnit, newUnit), useFract ? 1 : steps);\r\n          dis[v] = true;\r\n          disabled[idxWhole].push(v);\r\n        }); // Find nearest valid whole value\r\n\r\n        values[idxWhole] = inst.getValidValue(idxWhole, whole, dir, dis);\r\n        parts[1] = values[idxWhole] * (useSign && minus ? -1 : 1); // Validate fraction wheel values\r\n\r\n        if (useFract) {\r\n          disabled[idxFract] = []; // We need to make difference between +0 and -0, so we compare the strings instead of numbers\r\n\r\n          var p1 = useSign ? values[0] + values[1] : (realValue < 0 ? '-' : '+') + Math.abs(parts[1]),\r\n              p2 = (minVal < 0 ? '-' : '+') + Math.abs(minWhole),\r\n              p3 = (maxVal < 0 ? '-' : '+') + Math.abs(maxWhole); // Disable out of range fraction values\r\n\r\n          if (p1 === p2) {\r\n            $$1(fractions).each(function (i, v) {\r\n              if (minus ? v > minFract : v < minFract) {\r\n                disabled[idxFract].push(v);\r\n              }\r\n            });\r\n          }\r\n\r\n          if (p1 === p3) {\r\n            $$1(fractions).each(function (i, v) {\r\n              if (minus ? v < maxFract : v > maxFract) {\r\n                disabled[idxFract].push(v);\r\n              }\r\n            });\r\n          } // Disable invalid fraction values\r\n\r\n\r\n          $$1.each(s.invalid, function (i, v) {\r\n            iparts = getParts(convert(v, baseUnit, newUnit)); // Sign and whole part matches\r\n\r\n            if ((parts[0] === iparts[0] || parts[1] === 0 && iparts[1] === 0 && iparts[2] === 0) && parts[1] === iparts[1]) {\r\n              disabled[idxFract].push(iparts[2]);\r\n            }\r\n          });\r\n        }\r\n\r\n        return {\r\n          disabled: disabled,\r\n          valid: values\r\n        };\r\n      }\r\n    };\r\n  };\r\n\r\n  var defaults$7 = {\r\n    min: -20,\r\n    max: 40,\r\n    defaultUnit: 'c',\r\n    units: ['c', 'k', 'f', 'r'],\r\n    unitNames: {\r\n      c: '°C',\r\n      k: 'K',\r\n      f: '°F',\r\n      r: '°R'\r\n    }\r\n  },\r\n      cobj = {\r\n    c2k: function c2k(c) {\r\n      return c + 273.15;\r\n    },\r\n    c2f: function c2f(c) {\r\n      return c * 9 / 5 + 32;\r\n    },\r\n    c2r: function c2r(c) {\r\n      return (c + 273.15) * 9 / 5;\r\n    },\r\n    k2c: function k2c(k) {\r\n      return k - 273.15;\r\n    },\r\n    k2f: function k2f(k) {\r\n      return k * 9 / 5 - 459.67;\r\n    },\r\n    k2r: function k2r(k) {\r\n      return k * 9 / 5;\r\n    },\r\n    f2c: function f2c(f) {\r\n      return (f - 32) * 5 / 9;\r\n    },\r\n    f2k: function f2k(f) {\r\n      return (f + 459.67) * 5 / 9;\r\n    },\r\n    f2r: function f2r(f) {\r\n      return f + 459.67;\r\n    },\r\n    r2c: function r2c(r) {\r\n      return (r - 491.67) * 5 / 9;\r\n    },\r\n    r2k: function r2k(r) {\r\n      return r * 5 / 9;\r\n    },\r\n    r2f: function r2f(r) {\r\n      return r - 459.67;\r\n    }\r\n  };\r\n\r\n  presets.temperature = function (inst) {\r\n    var s = extend$1({}, defaults$7, inst.settings);\r\n    extend$1(inst.settings, s, {\r\n      sign: true,\r\n      convert: function convert(val, unit1, unit2) {\r\n        return cobj[unit1 + '2' + unit2](val);\r\n      }\r\n    });\r\n    return presets.measurement.call(this, inst);\r\n  };\r\n\r\n  var defaults$8 = {\r\n    min: 0,\r\n    max: 100,\r\n    defaultUnit: 'km',\r\n    units: ['m', 'km', 'in', 'ft', 'yd', 'mi']\r\n  },\r\n      cobj$1 = {\r\n    mm: 0.001,\r\n    cm: 0.01,\r\n    dm: 0.1,\r\n    m: 1,\r\n    dam: 10,\r\n    hm: 100,\r\n    km: 1000,\r\n    'in': 0.0254,\r\n    ft: 0.3048,\r\n    yd: 0.9144,\r\n    ch: 20.1168,\r\n    fur: 201.168,\r\n    mi: 1609.344,\r\n    lea: 4828.032\r\n  };\r\n\r\n  presets.distance = function (inst) {\r\n    var s = extend$1({}, defaults$8, inst.settings);\r\n    extend$1(inst.settings, s, {\r\n      sign: false,\r\n      convert: function convert(val, unit1, unit2) {\r\n        return val * cobj$1[unit1] / cobj$1[unit2];\r\n      }\r\n    });\r\n    return presets.measurement.call(this, inst);\r\n  };\r\n\r\n  var defaults$9 = {\r\n    min: 0,\r\n    max: 100,\r\n    defaultUnit: 'kph',\r\n    units: ['kph', 'mph', 'mps', 'fps', 'knot'],\r\n    unitNames: {\r\n      kph: 'km/h',\r\n      mph: 'mi/h',\r\n      mps: 'm/s',\r\n      fps: 'ft/s',\r\n      knot: 'knot'\r\n    }\r\n  },\r\n      cobj$2 = {\r\n    kph: 1,\r\n    mph: 1.60934,\r\n    mps: 3.6,\r\n    fps: 1.09728,\r\n    knot: 1.852\r\n  };\r\n\r\n  presets.speed = function (inst) {\r\n    var s = extend$1({}, defaults$9, inst.settings);\r\n    extend$1(inst.settings, s, {\r\n      sign: false,\r\n      convert: function convert(val, unit1, unit2) {\r\n        return val * cobj$2[unit1] / cobj$2[unit2];\r\n      }\r\n    });\r\n    return presets.measurement.call(this, inst);\r\n  };\r\n\r\n  var defaults$a = {\r\n    min: 0,\r\n    max: 100,\r\n    defaultUnit: 'N',\r\n    units: ['N', 'kp', 'lbf', 'pdl']\r\n  },\r\n      cobj$3 = {\r\n    N: 1,\r\n    kp: 9.80665,\r\n    lbf: 4.448222,\r\n    pdl: 0.138255\r\n  };\r\n\r\n  presets.force = function (inst) {\r\n    var s = extend$1({}, defaults$a, inst.settings);\r\n    extend$1(inst.settings, s, {\r\n      sign: false,\r\n      convert: function convert(val, unit1, unit2) {\r\n        return val * cobj$3[unit1] / cobj$3[unit2];\r\n      }\r\n    });\r\n    return presets.measurement.call(this, inst);\r\n  };\r\n\r\n  var defaults$b = {\r\n    min: 0,\r\n    max: 1000,\r\n    defaultUnit: 'kg',\r\n    units: ['g', 'kg', 'oz', 'lb'],\r\n    unitNames: {\r\n      tlong: 't (long)',\r\n      tshort: 't (short)'\r\n    }\r\n  },\r\n      cobj$4 = {\r\n    mg: 0.001,\r\n    cg: 0.01,\r\n    dg: 0.1,\r\n    g: 1,\r\n    dag: 10,\r\n    hg: 100,\r\n    kg: 1000,\r\n    t: 1000000,\r\n    drc: 1.7718452,\r\n    oz: 28.3495,\r\n    lb: 453.59237,\r\n    st: 6350.29318,\r\n    qtr: 12700.58636,\r\n    cwt: 50802.34544,\r\n    tlong: 1016046.9088,\r\n    tshort: 907184.74\r\n  };\r\n\r\n  presets.mass = function (inst) {\r\n    var s = extend$1({}, defaults$b, inst.settings);\r\n    extend$1(inst.settings, s, {\r\n      sign: false,\r\n      convert: function convert(val, unit1, unit2) {\r\n        return val * cobj$4[unit1] / cobj$4[unit2];\r\n      }\r\n    });\r\n    return presets.measurement.call(this, inst);\r\n  };\r\n\r\n  var MbscMeasurementBase = (function (_super) {\r\n      __extends(MbscMeasurementBase, _super);\r\n      function MbscMeasurementBase(initialElement, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElement, zone, control, inputService, view) || this;\r\n          _this.optionService = optionService;\r\n          _this.preset = 'measurement';\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscMeasurementBase.prototype, \"value\", {\r\n          set: function (v) {\r\n              this.setNewValueProxy(v);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscMeasurementBase.prototype.setNewValue = function (v) {\r\n          if (this.instance) {\r\n              var innerValue = this.instance.getVal();\r\n              if (innerValue !== v) {\r\n                  this.instance.setVal(v, true, false);\r\n                  if (this._inputService && this._inputService.input) {\r\n                      this._inputService.input.innerValue = this.instance._value;\r\n                  }\r\n              }\r\n          }\r\n      };\r\n      MbscMeasurementBase.prototype.initControl = function () {\r\n          var options = extend$1({ preset: this.preset }, this.optionService ? this.optionService.options : {}, this.options, this.inlineOptionsObj, this.optionExtensions);\r\n          this.instance = new Scroller(this.element, options);\r\n          if (this.initialValue !== undefined) {\r\n              this.instance.setVal(this.initialValue, true, false);\r\n          }\r\n      };\r\n      MbscMeasurementBase.decorators = [\r\n          { type: core.Directive, args: [{ selector: '[mbsc-m-b]' },] },\r\n      ];\r\n      MbscMeasurementBase.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, },\r\n          { type: MbscInputService, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscMeasurementBase.propDecorators = {\r\n          'max': [{ type: core.Input },],\r\n          'min': [{ type: core.Input },],\r\n          'decimalSeparator': [{ type: core.Input },],\r\n          'defaultValue': [{ type: core.Input },],\r\n          'invalid': [{ type: core.Input },],\r\n          'scale': [{ type: core.Input },],\r\n          'step': [{ type: core.Input },],\r\n          'defaultUnit': [{ type: core.Input },],\r\n          'unitNames': [{ type: core.Input },],\r\n          'units': [{ type: core.Input },],\r\n          'wholeText': [{ type: core.Input },],\r\n          'fractionText': [{ type: core.Input },],\r\n          'signText': [{ type: core.Input },],\r\n          'value': [{ type: core.Input, args: ['mbsc-measurement',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['mbsc-measurementChange',] },],\r\n      };\r\n      return MbscMeasurementBase;\r\n  }(MbscScrollerBase));\r\n  var MbscMeasurementChild = (function (_super) {\r\n      __extends(MbscMeasurementChild, _super);\r\n      function MbscMeasurementChild(initialElement, zone, control, inputService, optionService, view) {\r\n          return _super.call(this, initialElement, zone, control, inputService, optionService, view) || this;\r\n      }\r\n      MbscMeasurementChild.decorators = [\r\n          { type: core.Directive, args: [{ selector: '[mbsc-m-c]' },] },\r\n      ];\r\n      MbscMeasurementChild.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, },\r\n          { type: MbscInputService, },\r\n          { type: MbscOptionsService, },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscMeasurementChild.propDecorators = {\r\n          'convert': [{ type: core.Input },],\r\n      };\r\n      return MbscMeasurementChild;\r\n  }(MbscMeasurementBase));\r\n  var MbscMeasurement = (function (_super) {\r\n      __extends(MbscMeasurement, _super);\r\n      function MbscMeasurement(initialElem, zone, control, inputService, optionService, view) {\r\n          return _super.call(this, initialElem, zone, control, inputService, optionService, view) || this;\r\n      }\r\n      MbscMeasurement.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-measurement]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscMeasurement.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscMeasurement.propDecorators = {\r\n          'convert': [{ type: core.Input },],\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n      };\r\n      return MbscMeasurement;\r\n  }(MbscMeasurementBase));\r\n  var MbscMeasurementComponent = (function (_super) {\r\n      __extends(MbscMeasurementComponent, _super);\r\n      function MbscMeasurementComponent(initialElem, zone, control, inputService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, null) || this;\r\n          _this.errorMessage = '';\r\n          _this.placeholder = '';\r\n          return _this;\r\n      }\r\n      MbscMeasurementComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscMeasurementComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-measurement',\r\n                      exportAs: 'mobiscroll',\r\n                      template: INPUT_TEMPLATE\r\n                  },] },\r\n      ];\r\n      MbscMeasurementComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscMeasurementComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n      };\r\n      return MbscMeasurementComponent;\r\n  }(MbscMeasurement));\r\n  var MbscTemperature = (function (_super) {\r\n      __extends(MbscTemperature, _super);\r\n      function MbscTemperature(initialElem, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, view) || this;\r\n          _this.options = {};\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          _this.preset = 'temperature';\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscTemperature.prototype, \"value\", {\r\n          set: function (v) {\r\n              this.setNewValueProxy(v);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscTemperature.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-temperature]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscTemperature.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscTemperature.propDecorators = {\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n          'value': [{ type: core.Input, args: ['mbsc-temperature',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['mbsc-temperatureChange',] },],\r\n      };\r\n      return MbscTemperature;\r\n  }(MbscMeasurementChild));\r\n  var MbscTemperatureComponent = (function (_super) {\r\n      __extends(MbscTemperatureComponent, _super);\r\n      function MbscTemperatureComponent(initialElem, zone, control, inputService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, null) || this;\r\n          _this.errorMessage = '';\r\n          _this.placeholder = '';\r\n          return _this;\r\n      }\r\n      MbscTemperatureComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscTemperatureComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-temperature',\r\n                      exportAs: 'mobiscroll',\r\n                      template: INPUT_TEMPLATE\r\n                  },] },\r\n      ];\r\n      MbscTemperatureComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscTemperatureComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n      };\r\n      return MbscTemperatureComponent;\r\n  }(MbscTemperature));\r\n  var MbscDistance = (function (_super) {\r\n      __extends(MbscDistance, _super);\r\n      function MbscDistance(initialElem, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, view) || this;\r\n          _this.options = {};\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          _this.preset = 'distance';\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscDistance.prototype, \"value\", {\r\n          set: function (v) {\r\n              this.setNewValueProxy(v);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscDistance.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-distance]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscDistance.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscDistance.propDecorators = {\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n          'value': [{ type: core.Input, args: ['mbsc-distance',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['mbsc-distanceChange',] },],\r\n      };\r\n      return MbscDistance;\r\n  }(MbscMeasurementBase));\r\n  var MbscDistanceComponent = (function (_super) {\r\n      __extends(MbscDistanceComponent, _super);\r\n      function MbscDistanceComponent(initialElem, zone, control, inputService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, null) || this;\r\n          _this.errorMessage = '';\r\n          _this.placeholder = '';\r\n          return _this;\r\n      }\r\n      MbscDistanceComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscDistanceComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-distance',\r\n                      exportAs: 'mobiscroll',\r\n                      template: INPUT_TEMPLATE\r\n                  },] },\r\n      ];\r\n      MbscDistanceComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscDistanceComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n      };\r\n      return MbscDistanceComponent;\r\n  }(MbscDistance));\r\n  var MbscSpeed = (function (_super) {\r\n      __extends(MbscSpeed, _super);\r\n      function MbscSpeed(initialElem, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, view) || this;\r\n          _this.options = {};\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          _this.preset = 'speed';\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscSpeed.prototype, \"value\", {\r\n          set: function (v) {\r\n              this.setNewValueProxy(v);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscSpeed.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-speed]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscSpeed.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscSpeed.propDecorators = {\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n          'value': [{ type: core.Input, args: ['mbsc-speed',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['mbsc-speedChange',] },],\r\n      };\r\n      return MbscSpeed;\r\n  }(MbscMeasurementBase));\r\n  var MbscSpeedComponent = (function (_super) {\r\n      __extends(MbscSpeedComponent, _super);\r\n      function MbscSpeedComponent(initialElem, zone, control, inputService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, null) || this;\r\n          _this.errorMessage = '';\r\n          _this.placeholder = '';\r\n          return _this;\r\n      }\r\n      MbscSpeedComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscSpeedComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-speed',\r\n                      exportAs: 'mobiscroll',\r\n                      template: INPUT_TEMPLATE\r\n                  },] },\r\n      ];\r\n      MbscSpeedComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscSpeedComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n      };\r\n      return MbscSpeedComponent;\r\n  }(MbscSpeed));\r\n  var MbscForce = (function (_super) {\r\n      __extends(MbscForce, _super);\r\n      function MbscForce(initialElem, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, view) || this;\r\n          _this.options = {};\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          _this.preset = 'force';\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscForce.prototype, \"value\", {\r\n          set: function (v) {\r\n              this.setNewValueProxy(v);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscForce.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-force]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscForce.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscForce.propDecorators = {\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n          'value': [{ type: core.Input, args: ['mbsc-force',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['mbsc-forceChange',] },],\r\n      };\r\n      return MbscForce;\r\n  }(MbscMeasurementBase));\r\n  var MbscForceComponent = (function (_super) {\r\n      __extends(MbscForceComponent, _super);\r\n      function MbscForceComponent(initialElem, zone, control, inputService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, null) || this;\r\n          _this.errorMessage = '';\r\n          _this.placeholder = '';\r\n          return _this;\r\n      }\r\n      MbscForceComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscForceComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-force',\r\n                      exportAs: 'mobiscroll',\r\n                      template: INPUT_TEMPLATE\r\n                  },] },\r\n      ];\r\n      MbscForceComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscForceComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n      };\r\n      return MbscForceComponent;\r\n  }(MbscForce));\r\n  var MbscMass = (function (_super) {\r\n      __extends(MbscMass, _super);\r\n      function MbscMass(initialElem, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, view) || this;\r\n          _this.options = {};\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          _this.preset = 'mass';\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscMass.prototype, \"value\", {\r\n          set: function (v) {\r\n              this.setNewValueProxy(v);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscMass.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-mass]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscMass.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscMass.propDecorators = {\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n          'value': [{ type: core.Input, args: ['mbsc-mass',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['mbsc-massChange',] },],\r\n      };\r\n      return MbscMass;\r\n  }(MbscMeasurementBase));\r\n  var MbscMassComponent = (function (_super) {\r\n      __extends(MbscMassComponent, _super);\r\n      function MbscMassComponent(initialElem, zone, control, inputService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, null) || this;\r\n          _this.errorMessage = '';\r\n          _this.placeholder = '';\r\n          return _this;\r\n      }\r\n      MbscMassComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscMassComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-mass',\r\n                      exportAs: 'mobiscroll',\r\n                      template: INPUT_TEMPLATE\r\n                  },] },\r\n      ];\r\n      MbscMassComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscMassComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n      };\r\n      return MbscMassComponent;\r\n  }(MbscMass));\r\n  var comp$4 = [\r\n      MbscMeasurement,\r\n      MbscMeasurementBase,\r\n      MbscMeasurementChild,\r\n      MbscMeasurementComponent,\r\n      MbscTemperature,\r\n      MbscTemperatureComponent,\r\n      MbscDistance,\r\n      MbscDistanceComponent,\r\n      MbscSpeed,\r\n      MbscSpeedComponent,\r\n      MbscForce,\r\n      MbscForceComponent,\r\n      MbscMass,\r\n      MbscMassComponent\r\n  ];\r\n  var MbscMeasurementModule = (function () {\r\n      function MbscMeasurementModule() {\r\n      }\r\n      MbscMeasurementModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [common.CommonModule, MbscScrollerBaseModule, MbscInputModule],\r\n                      declarations: comp$4,\r\n                      exports: comp$4\r\n                  },] },\r\n      ];\r\n      MbscMeasurementModule.ctorParameters = function () { return []; };\r\n      return MbscMeasurementModule;\r\n  }());\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  var guid$1 = 1;\r\n  var ScrollView = function ScrollView(elm, settings, inherit) {\r\n    var $activeItem,\r\n        $cont,\r\n        $ctx,\r\n        $wnd,\r\n        contWidth,\r\n        itemWidth,\r\n        isClick,\r\n        observer,\r\n        oldWidth,\r\n        posDebounce,\r\n        rtl,\r\n        scrollView,\r\n        snap,\r\n        s,\r\n        totalWidth,\r\n        touched,\r\n        trigger,\r\n        cssClasses = {},\r\n        that = this,\r\n        $elm = $$1(elm);\r\n\r\n    function onResize(ev) {\r\n      clearTimeout(posDebounce);\r\n      posDebounce = setTimeout(function () {\r\n        size(!ev || ev.type !== 'load');\r\n      }, 200);\r\n    }\r\n\r\n    function onClick() {\r\n      if (isClick && this.parentNode === elm) {\r\n        onItemTap($$1(this), true);\r\n      }\r\n    }\r\n\r\n    function onItemTap($item, toggle, animTime) {\r\n      if (!$item.length) {\r\n        return;\r\n      }\r\n\r\n      if (animTime === undefined) {\r\n        animTime = 1000;\r\n      }\r\n\r\n      toggle = that._onItemTap($item, toggle);\r\n      $activeItem = $item;\r\n\r\n      if ($item.parent()[0] == elm) {\r\n        var bl = $item.offset().left,\r\n            bp = $item[0].offsetLeft,\r\n            bw = $item[0].offsetWidth,\r\n            cl = $cont.offset().left;\r\n\r\n        if (rtl) {\r\n          bp = totalWidth - bp - bw;\r\n        } // Scroll item to view\r\n\r\n\r\n        if (s.variant == 'a') {\r\n          if (bl < cl) {\r\n            scrollView.scroll(rtl ? bp + bw - contWidth : -bp, animTime, true);\r\n          } else if (bl + bw > cl + contWidth) {\r\n            scrollView.scroll(rtl ? bp : contWidth - bp - bw, animTime, true);\r\n          }\r\n        } else {\r\n          // Scroll item to center\r\n          scrollView.scroll((contWidth / 2 - bp - bw / 2) * (rtl ? -1 : 1), animTime, true);\r\n        }\r\n      }\r\n\r\n      if (toggle && !$item.hasClass('mbsc-disabled')) {\r\n        // Trigger tap event\r\n        trigger('onItemTap', {\r\n          target: $item[0]\r\n        });\r\n      }\r\n    }\r\n\r\n    function initMarkup() {\r\n      var $firstItem, props;\r\n\r\n      that._initMarkup($cont);\r\n\r\n      $elm.find('.mbsc-ripple').remove();\r\n      that._$items = $elm.children();\r\n\r\n      that._$items.each(function (i) {\r\n        var cssClass,\r\n            $item = $$1(this),\r\n            ref = $item.attr('data-ref');\r\n\r\n        if (!ref) {\r\n          ref = guid$1++;\r\n        }\r\n\r\n        if (i === 0) {\r\n          $firstItem = $item;\r\n        }\r\n\r\n        if (!$activeItem) {\r\n          $activeItem = that._getActiveItem($item);\r\n        }\r\n\r\n        props = that._getItemProps($item) || {};\r\n        cssClass = 'mbsc-scv-item mbsc-btn-e ' + (props.cssClass || '');\r\n        $item.attr('data-ref', ref).removeClass(cssClasses[ref]).addClass(cssClass);\r\n        cssClasses[ref] = cssClass;\r\n        $item.append(that._getText(mobiscroll, 0.2));\r\n      });\r\n\r\n      if (!$activeItem) {\r\n        $activeItem = $firstItem;\r\n      }\r\n\r\n      that._markupReady($cont);\r\n    }\r\n\r\n    function size(check, noScroll) {\r\n      var w = s.itemWidth,\r\n          layout = s.layout;\r\n      that.contWidth = contWidth = $cont.width();\r\n\r\n      if (that._checkResp()) {\r\n        return false;\r\n      }\r\n\r\n      if (check && oldWidth === contWidth || !contWidth) {\r\n        // Don't do anything if container width has not changed\r\n        return;\r\n      }\r\n\r\n      oldWidth = contWidth;\r\n\r\n      if (isNumeric(layout)) {\r\n        itemWidth = contWidth ? contWidth / layout : w;\r\n\r\n        if (itemWidth < w) {\r\n          layout = 'liquid';\r\n        }\r\n      }\r\n\r\n      if (w) {\r\n        if (layout == 'liquid') {\r\n          // The specified itemWidth will be handled as min width\r\n          itemWidth = contWidth ? contWidth / Math.min(Math.floor(contWidth / w), that._$items.length) : w;\r\n        } else if (layout == 'fixed') {\r\n          // Fixed width\r\n          itemWidth = w;\r\n        }\r\n      }\r\n\r\n      that._size(contWidth, itemWidth);\r\n\r\n      if (itemWidth) {\r\n        $elm.children().css('width', itemWidth + 'px');\r\n      }\r\n\r\n      that.totalWidth = totalWidth = elm.offsetWidth;\r\n      extend$1(scrollView.settings, {\r\n        contSize: contWidth,\r\n        maxSnapScroll: s.paging ? 1 : false,\r\n        maxScroll: 0,\r\n        minScroll: totalWidth > contWidth ? contWidth - totalWidth : 0,\r\n        snap: s.paging ? contWidth : snap ? itemWidth || '.mbsc-scv-item' : false,\r\n        elastic: totalWidth > contWidth ? itemWidth || contWidth : false\r\n      }); // Pass new values to scrollview\r\n\r\n      scrollView.refresh(noScroll); // Make sure the active item remains visible\r\n\r\n      if ($activeItem) {\r\n        onItemTap($activeItem, false);\r\n      }\r\n    } // Call the parent constructor\r\n\r\n\r\n    Base.call(this, elm, settings, true);\r\n\r\n    that.navigate = function ($item, toggle, animTime) {\r\n      onItemTap(that._getItem($item), toggle, animTime);\r\n    };\r\n\r\n    that.next = function (toggle) {\r\n      if ($activeItem) {\r\n        var $next = $activeItem.next();\r\n\r\n        if ($next.length) {\r\n          $activeItem = $next;\r\n          onItemTap($activeItem, toggle);\r\n        }\r\n      }\r\n    };\r\n\r\n    that.prev = function (toggle) {\r\n      if ($activeItem) {\r\n        var $prev = $activeItem.prev();\r\n\r\n        if ($prev.length) {\r\n          $activeItem = $prev;\r\n          onItemTap($activeItem, toggle);\r\n        }\r\n      }\r\n    };\r\n    /**\r\n     * Recalculates sizes.\r\n     */\r\n\r\n\r\n    that.refresh = that.position = function (noScroll) {\r\n      initMarkup();\r\n      size(false, noScroll);\r\n    };\r\n    /**\r\n     * Initialization.\r\n     */\r\n\r\n\r\n    that._init = function () {\r\n      var contClass;\r\n      $ctx = $$1(s.context);\r\n      $wnd = $$1(s.context == 'body' ? window : s.context);\r\n\r\n      that.__init();\r\n      /*\r\n      rtl = s.rtl;\r\n      snap = (s.itemWidth && s.layout != 'fixed' && s.snap === undefined) ? true : s.snap;\r\n      contClass = 'mbsc-scv-c mbsc-no-touch' + ' mbsc-' + s.theme + ' ' +\r\n          (s.cssClass || '') + ' ' +\r\n          (s.wrapperClass || '') +\r\n          (s.baseTheme ? ' mbsc-' + s.baseTheme : '') +\r\n          (rtl ? ' mbsc-rtl' : ' mbsc-ltr') +\r\n          (s.itemWidth ? ' mbsc-scv-hasw' : '') +\r\n          (s.context == 'body' ? '' : ' mbsc-scv-ctx') + ' ' +\r\n          (that._getContClass() || '');\r\n          */\r\n      // --- REMOTE TRIAL CODE START ---\r\n\r\n\r\n      rtl = that.remote.menustrip.rtlSetting;\r\n      snap = that.remote.menustrip.snapSetting;\r\n      contClass = that.remote.menustrip.contClass + (that._getContClass() || ''); // --- REMOTE TRIAL CODE END ---\r\n\r\n      if (!$cont) {\r\n        $cont = $$1('<div class=\"' + contClass + '\"><div class=\"mbsc-scv-sc\"></div></div>').on('click', '.mbsc-scv-item', onClick).insertAfter($elm);\r\n        $cont.find('.mbsc-scv-sc').append($elm); // When images are loaded, size migth change\r\n\r\n        $cont.find('img').on('load', onResize);\r\n        $wnd.on('orientationchange resize', onResize);\r\n        observer = resizeObserver($cont[0], onResize, s.zone);\r\n        scrollView = new ScrollViewBase($cont[0], {\r\n          axis: 'X',\r\n          contSize: 0,\r\n          maxScroll: 0,\r\n          maxSnapScroll: 1,\r\n          minScroll: 0,\r\n          snap: 1,\r\n          elastic: 1,\r\n          rtl: rtl,\r\n          mousewheel: s.mousewheel,\r\n          thresholdX: s.threshold,\r\n          stopProp: s.stopProp,\r\n          onStart: function onStart(ev) {\r\n            if (ev.domEvent.type == 'touchstart') {\r\n              isClick = false;\r\n\r\n              if (!touched) {\r\n                touched = true;\r\n                $ctx.find('.mbsc-no-touch').removeClass('mbsc-no-touch');\r\n              }\r\n            }\r\n          },\r\n          onBtnTap: function onBtnTap(ev) {\r\n            isClick = true; // Trigger click and activate target, if it's a form control\r\n\r\n            var domEvent = ev.domEvent,\r\n                target = domEvent.target;\r\n\r\n            if (domEvent.type === 'touchend' && s.tap) {\r\n              activateControl(target, getControlType($$1(target)), domEvent);\r\n            }\r\n          },\r\n          onGestureStart: function onGestureStart(ev) {\r\n            trigger('onGestureStart', ev);\r\n          },\r\n          onGestureEnd: function onGestureEnd(ev) {\r\n            trigger('onGestureEnd', ev);\r\n          },\r\n          onMove: function onMove(ev) {\r\n            trigger('onMove', ev);\r\n          },\r\n          onAnimationStart: function onAnimationStart(ev) {\r\n            trigger('onAnimationStart', ev);\r\n          },\r\n          onAnimationEnd: function onAnimationEnd(ev) {\r\n            trigger('onAnimationEnd', ev);\r\n          }\r\n        });\r\n      } else {\r\n        $cont.attr('class', contClass); // Remove ripple events (if theme changed)\r\n\r\n        if (elm.__mbscRippleOff) {\r\n          elm.__mbscRippleOff();\r\n        }\r\n      } // Prepare markup\r\n\r\n\r\n      $elm.css('display', '').addClass('mbsc-scv').removeClass('mbsc-cloak');\r\n      initMarkup();\r\n      trigger('onMarkupReady', {\r\n        target: $cont[0]\r\n      });\r\n      size();\r\n    };\r\n\r\n    that._size = noop;\r\n    that._initMarkup = noop;\r\n    that._markupReady = noop;\r\n    that._getContClass = noop;\r\n    that._getItemProps = noop;\r\n    that._getActiveItem = noop;\r\n    that.__init = noop;\r\n    that.__destroy = noop;\r\n    /**\r\n     * Destroy\r\n     */\r\n\r\n    that._destroy = function () {\r\n      that.__destroy();\r\n\r\n      $wnd.off('orientationchange resize', onResize);\r\n      $elm.removeClass('mbsc-scv').insertAfter($cont).find('.mbsc-scv-item').each(function () {\r\n        var $item = $$1(this);\r\n        $item.width('').removeClass(cssClasses[$item.attr('data-ref')]);\r\n      });\r\n      $cont.remove();\r\n      scrollView.destroy();\r\n      observer.detach();\r\n    };\r\n\r\n    that._getItem = function (item) {\r\n      if (typeof item !== 'object') {\r\n        item = that._$items.filter('[data-id=\"' + item + '\"]');\r\n      }\r\n\r\n      return $$1(item);\r\n    };\r\n\r\n    that._onItemTap = function ($item, toggle) {\r\n      if (toggle === undefined) {\r\n        return true;\r\n      }\r\n\r\n      return toggle;\r\n    }; // ---\r\n    // Constructor\r\n\r\n\r\n    s = that.settings;\r\n    trigger = that.trigger;\r\n\r\n    if (!inherit) {\r\n      that.init();\r\n    }\r\n  }; // Defaults\r\n\r\n  ScrollView.prototype = {\r\n    _class: 'scrollview',\r\n    _hasDef: true,\r\n    _hasTheme: true,\r\n    _hasLang: true,\r\n    _responsive: true,\r\n    _defaults: {\r\n      tap: hasGhostClick,\r\n      stopProp: false,\r\n      context: 'body',\r\n      layout: 'liquid'\r\n    }\r\n  };\r\n  classes.ScrollView = ScrollView;\r\n\r\n  var NavigationBase = function NavigationBase(elm, settings, inherit) {\r\n    var $ctx,\r\n        display,\r\n        multiple,\r\n        select,\r\n        selectedClass,\r\n        s,\r\n        $elm = $$1(elm),\r\n        that = this;\r\n\r\n    function removePagePadding() {\r\n      if (display && display != 'inline') {\r\n        $ctx.find('.mbsc-page').css('padding-' + display, '');\r\n      }\r\n    }\r\n\r\n    function selectItem($item) {\r\n      $item.addClass(selectedClass).attr('data-selected', 'true').attr('aria-selected', 'true');\r\n    }\r\n\r\n    function deselectItem($item) {\r\n      $item.removeClass(selectedClass).removeAttr('data-selected').removeAttr('aria-selected');\r\n    } // Call the parent constructor\r\n\r\n\r\n    ScrollView.call(this, elm, settings, true);\r\n\r\n    that.select = function ($item) {\r\n      if (!multiple) {\r\n        deselectItem(that._$items.filter('.mbsc-ms-item-sel'));\r\n      }\r\n\r\n      selectItem(that._getItem($item));\r\n    };\r\n\r\n    that.deselect = function ($item) {\r\n      deselectItem(that._getItem($item));\r\n    };\r\n\r\n    that.enable = function ($item) {\r\n      that._getItem($item).removeClass('mbsc-disabled').removeAttr('data-disabled').removeAttr('aria-disabled');\r\n    };\r\n\r\n    that.disable = function ($item) {\r\n      that._getItem($item).addClass('mbsc-disabled').attr('data-disabled', 'true').attr('aria-disabled', 'true');\r\n    };\r\n\r\n    that.setBadge = function ($item, content) {\r\n      var $badge;\r\n      $item = that._getItem($item).attr('data-badge', content);\r\n      $badge = $$1('.mbsc-ms-badge', $item);\r\n\r\n      if ($badge.length) {\r\n        if (content) {\r\n          $badge.html(content);\r\n        } else {\r\n          $badge.remove();\r\n        }\r\n      } else if (content) {\r\n        $item.append('<span class=\"mbsc-ms-badge\">' + content + '</span>');\r\n      }\r\n    };\r\n\r\n    that._markupReady = function ($cont) {\r\n      if (that._hasIcons) {\r\n        $cont.addClass('mbsc-ms-icons');\r\n      } else {\r\n        $cont.removeClass('mbsc-ms-icons');\r\n      }\r\n\r\n      if (that._hasText) {\r\n        $cont.addClass('mbsc-ms-txt');\r\n      } else {\r\n        $cont.removeClass('mbsc-ms-txt');\r\n      }\r\n\r\n      that.__markupReady($cont);\r\n    };\r\n\r\n    that._size = function (contWidth, itemWidth) {\r\n      that.__size(contWidth, itemWidth); // Add space to pages within context\r\n\r\n\r\n      if (display != 'inline') {\r\n        $ctx.find('.mbsc-page').css('padding-' + display, elm.offsetHeight + 'px');\r\n      }\r\n    };\r\n\r\n    that._onItemTap = function ($item, toggle) {\r\n      if (that.__onItemTap($item, toggle) === false) {\r\n        return false;\r\n      }\r\n\r\n      if (toggle === undefined) {\r\n        toggle = !multiple;\r\n      }\r\n\r\n      if (select && toggle && !$item.hasClass('mbsc-disabled')) {\r\n        if (multiple) {\r\n          if ($item.attr('data-selected') == 'true') {\r\n            deselectItem($item);\r\n          } else {\r\n            selectItem($item);\r\n          }\r\n        } else {\r\n          deselectItem(that._$items.filter('.mbsc-ms-item-sel'));\r\n          selectItem($item);\r\n        }\r\n      }\r\n\r\n      return toggle;\r\n    };\r\n\r\n    that._getActiveItem = function ($item) {\r\n      var selected = $item.attr('data-selected') == 'true';\r\n\r\n      if (select && !multiple && selected) {\r\n        return $item;\r\n      }\r\n    };\r\n\r\n    that._getItemProps = function ($item) {\r\n      var selected = $item.attr('data-selected') == 'true',\r\n          disabled = $item.attr('data-disabled') == 'true',\r\n          icon = $item.attr('data-icon'),\r\n          badge = $item.attr('data-badge');\r\n      $item.attr('data-role', 'button').attr('aria-selected', selected ? 'true' : 'false').attr('aria-disabled', disabled ? 'true' : 'false').find('.mbsc-ms-badge').remove();\r\n\r\n      if (badge) {\r\n        $item.append('<span class=\"mbsc-ms-badge\">' + badge + '</span>');\r\n      }\r\n\r\n      if (icon) {\r\n        that._hasIcons = true;\r\n      }\r\n\r\n      if ($item.text()) {\r\n        that._hasText = true;\r\n      }\r\n\r\n      return {\r\n        cssClass: 'mbsc-ms-item ' + (s.itemClass || '') + ' ' + (selected ? selectedClass : '') + (disabled ? ' mbsc-disabled ' + (s.disabledClass || '') : '') + (icon ? ' mbsc-ms-ic mbsc-ic mbsc-ic-' + icon : '')\r\n      };\r\n    };\r\n\r\n    that._getContClass = function () {\r\n      return ' mbsc-ms-c mbsc-ms-' + s.variant + ' mbsc-ms-' + display + (select ? '' : ' mbsc-ms-nosel') + (that.__getContClass() || '');\r\n    };\r\n\r\n    that.__init = function () {\r\n      that.___init();\r\n\r\n      $ctx = $$1(s.context); // Remove old padding from mbsc-page\r\n      // if display changed dynamically\r\n\r\n      removePagePadding();\r\n      display = s.display;\r\n      multiple = s.select == 'multiple';\r\n      select = s.select != 'off';\r\n      selectedClass = ' mbsc-ms-item-sel ' + (s.activeClass || '');\r\n      $elm.addClass('mbsc-ms mbsc-ms-base ' + (s.groupClass || ''));\r\n    };\r\n\r\n    that.__destroy = function () {\r\n      $elm.removeClass('mbsc-ms mbsc-ms-base ' + (s.groupClass || ''));\r\n      removePagePadding();\r\n\r\n      that.___destroy();\r\n    };\r\n\r\n    that.__onItemTap = noop;\r\n    that.__getContClass = noop;\r\n    that.__markupReady = noop;\r\n    that.__size = noop;\r\n    that.___init = noop;\r\n    that.___destroy = noop; // ---\r\n    // Constructor\r\n\r\n    s = that.settings;\r\n\r\n    if (!inherit) {\r\n      that.init();\r\n    }\r\n  }; // Defaults\r\n\r\n  NavigationBase.prototype = {\r\n    _defaults: extend$1({}, ScrollView.prototype._defaults)\r\n  };\r\n\r\n  var Navigation = function Navigation(elm, settings) {\r\n    var $elm = $$1(elm),\r\n        $menu,\r\n        $popup,\r\n        menuClass,\r\n        s,\r\n        popup,\r\n        isList = $elm.is('ul,ol'),\r\n        that = this; // Call the parent constructor\r\n\r\n    NavigationBase.call(this, elm, settings, true);\r\n\r\n    that._initMarkup = function () {\r\n      if ($menu) {\r\n        $menu.remove();\r\n      }\r\n\r\n      if ($popup) {\r\n        $elm.append($popup.children());\r\n      }\r\n    };\r\n\r\n    that.__size = function (contWidth, itemWidth) {\r\n      var showMore,\r\n          showMoreWidth = itemWidth || 72,\r\n          itemsNr = that._$items.length,\r\n          itemsWidth = 0;\r\n      popup.hide(); // show more menu\r\n\r\n      if (s.type == 'bottom') {\r\n        $elm.removeClass('mbsc-scv-liq'); //.empty(); // empty list\r\n\r\n        $menu.remove();\r\n\r\n        that._$items.remove().each(function (i) {\r\n          var $item = $$1(this);\r\n          $elm.append($item);\r\n          itemsWidth += itemWidth || this.offsetWidth || 0; // if next item doesn't fit, add to show more menu\r\n\r\n          if (Math.round(itemsWidth + (i < itemsNr - 1 ? showMoreWidth : 0)) > contWidth) {\r\n            showMore = true;\r\n            $popup.append($item.css('width', '').addClass('mbsc-fr-btn-e'));\r\n          }\r\n        });\r\n\r\n        $menu.attr('class', menuClass + (s.moreIcon ? ' mbsc-menu-item-ic mbsc-ms-ic mbsc-ic mbsc-ic-' + s.moreIcon : '')).html(that._hasIcons && that._hasText ? s.moreText : ''); // add show more item if needed\r\n\r\n        if (showMore) {\r\n          $elm.append($menu);\r\n        }\r\n      }\r\n\r\n      if (s.layout == 'liquid') {\r\n        $elm.addClass('mbsc-scv-liq');\r\n      }\r\n    };\r\n\r\n    that.__onItemTap = function ($item) {\r\n      if ($item.hasClass('mbsc-menu-item') && that.trigger('onMenuShow', {\r\n        target: $item[0],\r\n        menu: popup\r\n      }) !== false) {\r\n        popup.show(false, true);\r\n        return false;\r\n      }\r\n    };\r\n\r\n    that.__getContClass = function () {\r\n      return s.type == 'hamburger' ? ' mbsc-ms-hamburger' : '';\r\n    };\r\n\r\n    that.__markupReady = function ($cont) {\r\n      if (s.type == 'hamburger') {\r\n        $popup.append(that._$items.addClass('mbsc-fr-btn-e'));\r\n        $menu.attr('class', menuClass + (s.menuIcon ? ' mbsc-menu-item-ic mbsc-ms-ic mbsc-ic mbsc-ic-' + s.menuIcon : '')).html(s.menuText || '');\r\n        $elm.append($menu);\r\n\r\n        if (!s.menuText || !s.menuIcon) {\r\n          $cont.removeClass('mbsc-ms-icons');\r\n        }\r\n\r\n        if (!s.menuText) {\r\n          $cont.removeClass('mbsc-ms-txt');\r\n        } else {\r\n          $cont.addClass('mbsc-ms-txt');\r\n        }\r\n      }\r\n    };\r\n\r\n    that.___init = function () {\r\n      var $target;\r\n\r\n      if (s.type == 'tab') {\r\n        s.display = s.display || 'top';\r\n        s.variant = s.variant || 'b';\r\n      } else if (s.type == 'bottom') {\r\n        s.display = s.display || 'bottom';\r\n        s.variant = s.variant || 'a';\r\n      } else if (s.type == 'hamburger') {\r\n        s.display = s.display || 'inline';\r\n        s.variant = s.variant || 'a';\r\n      }\r\n\r\n      menuClass = 'mbsc-scv-item mbsc-ms-item mbsc-btn-e mbsc-menu-item ' + (s.itemClass || '');\r\n\r\n      if (!$menu) {\r\n        $menu = $$1(isList ? '<li></li>' : '<div></div>');\r\n        $popup = $$1(isList ? '<ul></ul>' : '<div></div>').addClass('mbsc-scv mbsc-ms');\r\n      }\r\n\r\n      popup = new Popup($popup[0], {\r\n        display: 'bubble',\r\n        theme: s.theme,\r\n        lang: s.lang,\r\n        context: s.context,\r\n        buttons: [],\r\n        anchor: $menu,\r\n        onBeforeShow: function onBeforeShow(event, inst) {\r\n          $target = null;\r\n          inst.settings.cssClass = 'mbsc-wdg mbsc-ms-a mbsc-ms-more' + (that._hasText ? '' : ' mbsc-ms-more-icons');\r\n        },\r\n        onBeforeClose: function onBeforeClose() {\r\n          return that.trigger('onMenuHide', {\r\n            target: $target && $target[0],\r\n            menu: popup\r\n          });\r\n        },\r\n        onMarkupReady: function onMarkupReady(event, inst) {\r\n          that.tap(inst._markup.find('.mbsc-fr-c'), function (ev) {\r\n            $target = $$1(ev.target).closest('.mbsc-ms-item');\r\n\r\n            if ($target.length && !$target.hasClass('mbsc-disabled')) {\r\n              that.navigate($target, true);\r\n              popup.hide();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    };\r\n\r\n    that.___destroy = function () {\r\n      popup.destroy();\r\n      $elm.append(that._$items);\r\n      $menu.remove();\r\n    }; // ---\r\n    // Constructor\r\n\r\n\r\n    s = that.settings;\r\n    that.init();\r\n  }; // Defaults\r\n\r\n  Navigation.prototype = {\r\n    _class: 'navigation',\r\n    _hasDef: true,\r\n    _hasTheme: true,\r\n    _hasLang: true,\r\n    _responsive: true,\r\n    _defaults: extend$1({}, NavigationBase.prototype._defaults, {\r\n      type: 'bottom',\r\n      moreText: 'More',\r\n      moreIcon: 'material-more-horiz',\r\n      menuIcon: 'material-menu'\r\n    })\r\n  };\r\n  classes.Navigation = Navigation;\r\n\r\n  var MbscNotifyItemService = (function () {\r\n      function MbscNotifyItemService() {\r\n          this._instanceObservable = new Observable();\r\n          this._addRemoveObservable = new Observable();\r\n          this.inst = null;\r\n      }\r\n      MbscNotifyItemService.prototype.notifyInstanceReady = function (instance) {\r\n          this.inst = instance;\r\n          this._instanceObservable.next(instance);\r\n      };\r\n      MbscNotifyItemService.prototype.notifyAddRemove = function (item) {\r\n          this._addRemoveObservable.next(item);\r\n      };\r\n      MbscNotifyItemService.prototype.onInstanceReady = function () {\r\n          return this._instanceObservable;\r\n      };\r\n      MbscNotifyItemService.prototype.onAddRemove = function () {\r\n          return this._addRemoveObservable;\r\n      };\r\n      MbscNotifyItemService.decorators = [\r\n          { type: core.Injectable },\r\n      ];\r\n      MbscNotifyItemService.ctorParameters = function () { return []; };\r\n      return MbscNotifyItemService;\r\n  }());\r\n  var MbscScrollItemBase = (function () {\r\n      function MbscScrollItemBase(notifyItemService, _elem) {\r\n          var _this = this;\r\n          this.notifyItemService = notifyItemService;\r\n          this._elem = _elem;\r\n          this._instance = undefined;\r\n          this.instanceObserver = this.notifyItemService.onInstanceReady().subscribe(function (instance) {\r\n              _this._instance = instance;\r\n          });\r\n          if (notifyItemService.inst) {\r\n              this._instance = notifyItemService.inst;\r\n          }\r\n      }\r\n      Object.defineProperty(MbscScrollItemBase.prototype, \"nativeElement\", {\r\n          get: function () {\r\n              return this._elem.nativeElement;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscScrollItemBase.prototype.ngAfterViewInit = function () {\r\n          this.notifyItemService.notifyAddRemove(this);\r\n      };\r\n      MbscScrollItemBase.prototype.ngOnDestroy = function () {\r\n          this.notifyItemService.onInstanceReady().unsubscribe(this.instanceObserver);\r\n          this.notifyItemService.notifyAddRemove(this);\r\n      };\r\n      MbscScrollItemBase.decorators = [\r\n          { type: core.Directive, args: [{ selector: '[mbsc-si-b' },] },\r\n      ];\r\n      MbscScrollItemBase.ctorParameters = function () { return [\r\n          { type: MbscNotifyItemService, },\r\n          { type: core.ElementRef, },\r\n      ]; };\r\n      MbscScrollItemBase.propDecorators = {\r\n          'id': [{ type: core.Input },],\r\n      };\r\n      return MbscScrollItemBase;\r\n  }());\r\n  var MbscScrollViewBase = (function (_super) {\r\n      __extends(MbscScrollViewBase, _super);\r\n      function MbscScrollViewBase(initialElem, zone, notifyItemService) {\r\n          var _this = _super.call(this, initialElem, zone) || this;\r\n          _this.notifyItemService = notifyItemService;\r\n          _this.onItemTap = new core.EventEmitter();\r\n          _this.onMarkupReady = new core.EventEmitter();\r\n          _this.onAnimationStart = new core.EventEmitter();\r\n          _this.onAnimationEnd = new core.EventEmitter();\r\n          _this.onMove = new core.EventEmitter();\r\n          _this.onGestureStart = new core.EventEmitter();\r\n          _this.onGestureEnd = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      MbscScrollViewBase.decorators = [\r\n          { type: core.Directive, args: [{ selector: '[mbsc-s-b' },] },\r\n      ];\r\n      MbscScrollViewBase.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: MbscNotifyItemService, },\r\n      ]; };\r\n      MbscScrollViewBase.propDecorators = {\r\n          'context': [{ type: core.Input },],\r\n          'itemWidth': [{ type: core.Input },],\r\n          'layout': [{ type: core.Input },],\r\n          'mousewheel': [{ type: core.Input },],\r\n          'snap': [{ type: core.Input },],\r\n          'threshold': [{ type: core.Input },],\r\n          'paging': [{ type: core.Input },],\r\n          'onItemTap': [{ type: core.Output },],\r\n          'onMarkupReady': [{ type: core.Output },],\r\n          'onAnimationStart': [{ type: core.Output },],\r\n          'onAnimationEnd': [{ type: core.Output },],\r\n          'onMove': [{ type: core.Output },],\r\n          'onGestureStart': [{ type: core.Output },],\r\n          'onGestureEnd': [{ type: core.Output },],\r\n      };\r\n      return MbscScrollViewBase;\r\n  }(MbscBase));\r\n  var MbscScrollViewBaseModule = (function () {\r\n      function MbscScrollViewBaseModule() {\r\n      }\r\n      MbscScrollViewBaseModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [common.CommonModule, MbscBaseModule],\r\n                      declarations: [MbscScrollItemBase, MbscScrollViewBase],\r\n                  },] },\r\n      ];\r\n      MbscScrollViewBaseModule.ctorParameters = function () { return []; };\r\n      return MbscScrollViewBaseModule;\r\n  }());\r\n\r\n  var MbscNavItemBase = (function (_super) {\r\n      __extends(MbscNavItemBase, _super);\r\n      function MbscNavItemBase(notifyItemService, elem) {\r\n          var _this = _super.call(this, notifyItemService, elem) || this;\r\n          _this.selectedChange = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscNavItemBase.prototype, \"disabled\", {\r\n          get: function () {\r\n              return this._disabled;\r\n          },\r\n          set: function (v) {\r\n              this._disabled = v;\r\n              if (this._instance) {\r\n                  if (this._disabled) {\r\n                      this._instance.disable(this._elem.nativeElement);\r\n                  }\r\n                  else {\r\n                      this._instance.enable(this._elem.nativeElement);\r\n                  }\r\n              }\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscNavItemBase.prototype, \"selected\", {\r\n          get: function () {\r\n              return this._selected;\r\n          },\r\n          set: function (v) {\r\n              this._selected = v;\r\n              if (this._instance) {\r\n                  if (this._selected) {\r\n                      this._instance.select(this._elem.nativeElement);\r\n                  }\r\n                  else {\r\n                      this._instance.deselect(this._elem.nativeElement);\r\n                  }\r\n              }\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscNavItemBase.prototype.toggle = function () {\r\n          this._selected = !this._selected;\r\n          this.selectedChange.emit(this._selected);\r\n      };\r\n      MbscNavItemBase.decorators = [\r\n          { type: core.Directive, args: [{ selector: '[mbsc-ni-b' },] },\r\n      ];\r\n      MbscNavItemBase.ctorParameters = function () { return [\r\n          { type: MbscNotifyItemService, },\r\n          { type: core.ElementRef, },\r\n      ]; };\r\n      MbscNavItemBase.propDecorators = {\r\n          'icon': [{ type: core.Input },],\r\n          'disabled': [{ type: core.Input },],\r\n          'selected': [{ type: core.Input },],\r\n          'selectedChange': [{ type: core.Output },],\r\n      };\r\n      return MbscNavItemBase;\r\n  }(MbscScrollItemBase));\r\n  var MbscNavigationBase = (function (_super) {\r\n      __extends(MbscNavigationBase, _super);\r\n      function MbscNavigationBase(initialElem, zone, notifyItemService) {\r\n          return _super.call(this, initialElem, zone, notifyItemService) || this;\r\n      }\r\n      MbscNavigationBase.prototype.tapHandler = function (event, inst) {\r\n          var selection = this.select || (inst && inst.settings.select);\r\n          switch (selection) {\r\n              case 'multiple': {\r\n                  var item = this._getItem(event.target);\r\n                  item.toggle();\r\n                  break;\r\n              }\r\n              case 'single': {\r\n                  var item = this._getItem(event.target);\r\n                  if (item && !item.selected) {\r\n                      this.items.forEach(function (item) {\r\n                          if (item.selected) {\r\n                              item.toggle();\r\n                          }\r\n                      });\r\n                      item.toggle();\r\n                  }\r\n              }\r\n          }\r\n          event.inst = inst;\r\n          this.onItemTap.emit(event);\r\n      };\r\n      MbscNavigationBase.prototype._getItem = function (nativeEl) {\r\n          return this.items.find(function (item) {\r\n              return item.nativeElement === nativeEl;\r\n          });\r\n      };\r\n      MbscNavigationBase.decorators = [\r\n          { type: core.Directive, args: [{ selector: '[mbsc-n-b' },] },\r\n      ];\r\n      MbscNavigationBase.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: MbscNotifyItemService, },\r\n      ]; };\r\n      MbscNavigationBase.propDecorators = {\r\n          'display': [{ type: core.Input },],\r\n          'options': [{ type: core.Input, args: ['options',] },],\r\n          'items': [{ type: core.ContentChildren, args: [MbscNavItemBase,] },],\r\n      };\r\n      return MbscNavigationBase;\r\n  }(MbscScrollViewBase));\r\n  var MbscNavigationBaseModule = (function () {\r\n      function MbscNavigationBaseModule() {\r\n      }\r\n      MbscNavigationBaseModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [common.CommonModule, MbscScrollViewBaseModule],\r\n                      declarations: [MbscNavigationBase, MbscNavItemBase],\r\n                  },] },\r\n      ];\r\n      MbscNavigationBaseModule.ctorParameters = function () { return []; };\r\n      return MbscNavigationBaseModule;\r\n  }());\r\n\r\n  var MbscNavItem = (function (_super) {\r\n      __extends(MbscNavItem, _super);\r\n      function MbscNavItem(notifyItemService, elem, inj, routerToken) {\r\n          var _this = _super.call(this, notifyItemService, elem) || this;\r\n          _this.inj = inj;\r\n          _this.routerLinkActiveOptions = { exact: false };\r\n          _this.instObserver = notifyItemService.onInstanceReady().subscribe(function (instance) {\r\n              if (_this.initialBadge) {\r\n                  instance.setBadge(_this.nativeElement, _this.initialBadge);\r\n              }\r\n          });\r\n          if (routerToken) {\r\n              _this.injectedRouter = routerToken;\r\n              _this.activatedRoute = _this.inj.get(_this.injectedRouter.routerState.root.__proto__.constructor, null);\r\n          }\r\n          if (_this.injectedRouter) {\r\n              _this.injectedRouter.events.subscribe(function (ev) {\r\n                  clearTimeout(_this.debounceHandler);\r\n                  _this.debounceHandler = setTimeout(function () {\r\n                      _this.checkSelected();\r\n                  });\r\n              });\r\n          }\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscNavItem.prototype, \"badge\", {\r\n          set: function (badge) {\r\n              if (this._instance) {\r\n                  this._instance.setBadge(this.nativeElement, badge);\r\n              }\r\n              else {\r\n                  this.initialBadge = badge;\r\n              }\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscNavItem.prototype.checkSelected = function () {\r\n          if (this.injectedRouter && this.routerLink !== null && this.routerLink !== undefined) {\r\n              var commands = Array.isArray(this.routerLink) ? this.routerLink : [this.routerLink];\r\n              var urlTree = this.injectedRouter.createUrlTree(commands, { relativeTo: this.activatedRoute });\r\n              var selected = this.injectedRouter.isActive(urlTree, this.routerLinkActiveOptions.exact);\r\n              if (selected) {\r\n                  this._selected = selected;\r\n              }\r\n              if (this._instance) {\r\n                  if (selected) {\r\n                      this._instance.select(this._elem.nativeElement);\r\n                  }\r\n                  else {\r\n                      this._instance.deselect(this._elem.nativeElement);\r\n                  }\r\n              }\r\n          }\r\n      };\r\n      MbscNavItem.prototype.ngOnDestroy = function () {\r\n          this.notifyItemService.onInstanceReady().unsubscribe(this.instObserver);\r\n          _super.prototype.ngOnDestroy.call(this);\r\n      };\r\n      MbscNavItem.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-nav-item',\r\n                      template: '<ng-content></ng-content>',\r\n                      host: {\r\n                          '[attr.data-icon]': 'icon',\r\n                          '[attr.data-disabled]': 'disabled',\r\n                          '[attr.data-selected]': 'selected',\r\n                          '[attr.data-id]': 'id'\r\n                      }\r\n                  },] },\r\n      ];\r\n      MbscNavItem.ctorParameters = function () { return [\r\n          { type: MbscNotifyItemService, },\r\n          { type: core.ElementRef, },\r\n          { type: core.Injector, },\r\n          { type: MbscRouterToken, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscNavItem.propDecorators = {\r\n          'badge': [{ type: core.Input },],\r\n          'routerLink': [{ type: core.Input },],\r\n          'routerLinkActiveOptions': [{ type: core.Input },],\r\n      };\r\n      return MbscNavItem;\r\n  }(MbscNavItemBase));\r\n  var MbscNav = (function (_super) {\r\n      __extends(MbscNav, _super);\r\n      function MbscNav(initialElem, zone, notifyItemService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, notifyItemService) || this;\r\n          _this.optionService = optionService;\r\n          _this.select = 'single';\r\n          _this.onMenuHide = new core.EventEmitter();\r\n          _this.onMenuShow = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      MbscNav.prototype.initControl = function () {\r\n          var _this = this;\r\n          var onItemTap = this.tapHandler.bind(this);\r\n          var onItemTapUser = this.options && this.options.onItemTap;\r\n          if (onItemTapUser) {\r\n              onItemTap = function (event, inst) {\r\n                  _this.tapHandler(event, inst);\r\n                  return onItemTapUser(event, inst);\r\n              };\r\n          }\r\n          var options = extend$1({ type: this.type }, this.optionService ? this.optionService.options : {}, this.options, this.inlineOptionsObj, { onItemTap: onItemTap });\r\n          this.instance = new Navigation(this.initialElem.nativeElement, options);\r\n          this.notifyItemService.notifyInstanceReady(this.instance);\r\n          this.addRemoveObserver = this.notifyItemService.onAddRemove().subscribe(function (item) {\r\n              _this.instance.refresh();\r\n          });\r\n      };\r\n      MbscNav.prototype.ngOnDestroy = function () {\r\n          this.notifyItemService.onAddRemove().unsubscribe(this.addRemoveObserver);\r\n          _super.prototype.ngOnDestroy.call(this);\r\n      };\r\n      MbscNav.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-nav',\r\n                      template: '<ng-content></ng-content>',\r\n                      providers: [MbscNotifyItemService],\r\n                      exportAs: 'mobiscroll',\r\n                      host: { 'class': 'mbsc-cloak' }\r\n                  },] },\r\n      ];\r\n      MbscNav.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: MbscNotifyItemService, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscNav.propDecorators = {\r\n          'moreText': [{ type: core.Input },],\r\n          'moreIcon': [{ type: core.Input },],\r\n          'menuText': [{ type: core.Input },],\r\n          'menuIcon': [{ type: core.Input },],\r\n          'onMenuHide': [{ type: core.Output },],\r\n          'onMenuShow': [{ type: core.Output },],\r\n          'items': [{ type: core.ContentChildren, args: [MbscNavItem,] },],\r\n      };\r\n      return MbscNav;\r\n  }(MbscNavigationBase));\r\n  var MbscBottomNav = (function (_super) {\r\n      __extends(MbscBottomNav, _super);\r\n      function MbscBottomNav(initialElem, zone, navItemService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, navItemService, optionService) || this;\r\n          _this.type = 'bottom';\r\n          return _this;\r\n      }\r\n      MbscBottomNav.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-bottom-nav',\r\n                      template: '<ng-content></ng-content>',\r\n                      providers: [MbscNotifyItemService],\r\n                      exportAs: 'mobiscroll',\r\n                      host: { 'class': 'mbsc-cloak' }\r\n                  },] },\r\n      ];\r\n      MbscBottomNav.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: MbscNotifyItemService, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      return MbscBottomNav;\r\n  }(MbscNav));\r\n  var MbscHamburgerNav = (function (_super) {\r\n      __extends(MbscHamburgerNav, _super);\r\n      function MbscHamburgerNav(initialElem, zone, navItemService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, navItemService, optionService) || this;\r\n          _this.type = 'hamburger';\r\n          return _this;\r\n      }\r\n      MbscHamburgerNav.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-hamburger-nav',\r\n                      template: '<ng-content></ng-content>',\r\n                      providers: [MbscNotifyItemService],\r\n                      exportAs: 'mobiscroll',\r\n                      host: { 'class': 'mbsc-cloak' }\r\n                  },] },\r\n      ];\r\n      MbscHamburgerNav.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: MbscNotifyItemService, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      return MbscHamburgerNav;\r\n  }(MbscNav));\r\n  var MbscTabNav = (function (_super) {\r\n      __extends(MbscTabNav, _super);\r\n      function MbscTabNav(initialElem, zone, navItemService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, navItemService, optionService) || this;\r\n          _this.type = 'tab';\r\n          return _this;\r\n      }\r\n      MbscTabNav.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-tab-nav',\r\n                      template: '<ng-content></ng-content>',\r\n                      providers: [MbscNotifyItemService],\r\n                      exportAs: 'mobiscroll',\r\n                      host: { 'class': 'mbsc-cloak' }\r\n                  },] },\r\n      ];\r\n      MbscTabNav.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: MbscNotifyItemService, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      return MbscTabNav;\r\n  }(MbscNav));\r\n  var comps = [\r\n      MbscNavItem,\r\n      MbscNav,\r\n      MbscBottomNav,\r\n      MbscHamburgerNav,\r\n      MbscTabNav\r\n  ];\r\n  var MbscNavigationModule = (function () {\r\n      function MbscNavigationModule() {\r\n      }\r\n      MbscNavigationModule.forRoot = function (config) {\r\n          return {\r\n              ngModule: MbscNavigationModule,\r\n              providers: [{\r\n                      provide: MbscRouterToken,\r\n                      useExisting: config.angularRouter\r\n                  }]\r\n          };\r\n      };\r\n      MbscNavigationModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [common.CommonModule, MbscNavigationBaseModule],\r\n                      declarations: comps,\r\n                      exports: comps\r\n                  },] },\r\n      ];\r\n      MbscNavigationModule.ctorParameters = function () { return []; };\r\n      return MbscNavigationModule;\r\n  }());\r\n\r\n  var NumberScroller = Measurement;\r\n  presets.number = presets.measurement;\r\n\r\n  var MbscNumber = (function (_super) {\r\n      __extends(MbscNumber, _super);\r\n      function MbscNumber(initialElem, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, view) || this;\r\n          _this.optionService = optionService;\r\n          _this.options = {};\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscNumber.prototype, \"value\", {\r\n          set: function (v) {\r\n              if (!this.control) {\r\n                  this.setNewValueProxy(v);\r\n              }\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscNumber.prototype.setNewValue = function (v) {\r\n          if (this.instance) {\r\n              var innerValue = this.instance.getVal();\r\n              if (innerValue !== v) {\r\n                  this.instance.setVal(v, true, false);\r\n                  if (this._inputService && this._inputService.input) {\r\n                      this._inputService.input.innerValue = this.instance._value;\r\n                  }\r\n              }\r\n          }\r\n      };\r\n      MbscNumber.prototype.initControl = function () {\r\n          var options = extend$1({ preset: 'number' }, this.optionService ? this.optionService.options : {}, this.options, this.inlineOptionsObj, this.optionExtensions);\r\n          this.instance = new NumberScroller(this.element, options);\r\n          if (this.initialValue !== undefined) {\r\n              this.instance.setVal(this.initialValue, true, false);\r\n          }\r\n      };\r\n      MbscNumber.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-number]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscNumber.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscNumber.propDecorators = {\r\n          'decimalSeparator': [{ type: core.Input },],\r\n          'defaultValue': [{ type: core.Input },],\r\n          'invalid': [{ type: core.Input },],\r\n          'max': [{ type: core.Input },],\r\n          'min': [{ type: core.Input },],\r\n          'scale': [{ type: core.Input },],\r\n          'step': [{ type: core.Input },],\r\n          'wholeText': [{ type: core.Input },],\r\n          'fractionText': [{ type: core.Input },],\r\n          'signText': [{ type: core.Input },],\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n          'value': [{ type: core.Input, args: ['mbsc-number',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['mbsc-numberChange',] },],\r\n      };\r\n      return MbscNumber;\r\n  }(MbscScrollerBase));\r\n  var MbscNumberComponent = (function (_super) {\r\n      __extends(MbscNumberComponent, _super);\r\n      function MbscNumberComponent(initialElem, zone, control, inputService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, null) || this;\r\n          _this.errorMessage = '';\r\n          _this.placeholder = '';\r\n          return _this;\r\n      }\r\n      MbscNumberComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscNumberComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-number',\r\n                      exportAs: 'mobiscroll',\r\n                      template: INPUT_TEMPLATE\r\n                  },] },\r\n      ];\r\n      MbscNumberComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscNumberComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n      };\r\n      return MbscNumberComponent;\r\n  }(MbscNumber));\r\n  var MbscNumberModule = (function () {\r\n      function MbscNumberModule() {\r\n      }\r\n      MbscNumberModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [common.CommonModule, MbscScrollerBaseModule, MbscInputModule],\r\n                      declarations: [MbscNumber, MbscNumberComponent],\r\n                      exports: [MbscNumber, MbscNumberComponent]\r\n                  },] },\r\n      ];\r\n      MbscNumberModule.ctorParameters = function () { return []; };\r\n      return MbscNumberModule;\r\n  }());\r\n\r\n  var presets$1 = {};\r\n  var Numpad = function Numpad(el, settings, inherit) {\r\n    var $markup,\r\n        deleteBtn,\r\n        disabledClass,\r\n        ph,\r\n        pos,\r\n        s,\r\n        mask,\r\n        sX,\r\n        sY,\r\n        eX,\r\n        eY,\r\n        diffX,\r\n        diffY,\r\n        action,\r\n        interval,\r\n        tempValueArray,\r\n        tempTotal,\r\n        trigger,\r\n        total,\r\n        valueArray,\r\n        $elm = $$1(el),\r\n        that = this,\r\n        actions = [],\r\n        tempActions = [],\r\n        tempVariables = {},\r\n        variables = {},\r\n        customKeys = {},\r\n        numericKeys = {\r\n      48: 0,\r\n      49: 1,\r\n      50: 2,\r\n      51: 3,\r\n      52: 4,\r\n      53: 5,\r\n      54: 6,\r\n      55: 7,\r\n      56: 8,\r\n      57: 9,\r\n      96: 0,\r\n      97: 1,\r\n      98: 2,\r\n      99: 3,\r\n      100: 4,\r\n      101: 5,\r\n      102: 6,\r\n      103: 7,\r\n      104: 8,\r\n      105: 9\r\n    };\r\n\r\n    function display(manual) {\r\n      // Validate\r\n      var i,\r\n          ret = s.validate.call(el, {\r\n        values: tempValueArray.slice(0),\r\n        variables: tempVariables\r\n      }, that) || [],\r\n          disabled = ret && ret.disabled || [];\r\n      that._isValid = ret.invalid ? false : true; // Generate formatted value\r\n\r\n      that._tempValue = s.formatValue.call(el, tempValueArray.slice(0), tempVariables, that);\r\n      pos = tempValueArray.length;\r\n      tempTotal = ret.length || total;\r\n\r\n      if (that._isVisible && mobiscroll.LIIiW) {\r\n        // Fill template with numbers\r\n        $$1('.mbsc-np-ph', $markup).each(function (i) {\r\n          $$1(this).html(s.fill == 'ltr' ? i >= pos ? ph : mask || tempValueArray[i] : i >= total - tempTotal ? i + pos < total ? ph : mask || tempValueArray[i + pos - total] : '');\r\n        }); // Fill variable placeholders\r\n\r\n        $$1('.mbsc-np-cph', $markup).each(function () {\r\n          $$1(this).html(tempVariables[$$1(this).attr('data-var')] || $$1(this).attr('data-ph'));\r\n        }); // Disable all numeric buttons if template is full\r\n\r\n        if (pos === total) {\r\n          for (i = 0; i <= 9; i++) {\r\n            disabled.push(i);\r\n          }\r\n        } // Disable invalid buttons\r\n\r\n\r\n        $$1('.mbsc-np-btn', $markup).removeClass(disabledClass);\r\n\r\n        for (i = 0; i < disabled.length; i++) {\r\n          $$1('.mbsc-np-btn[data-val=\"' + disabled[i] + '\"]', $markup).addClass(disabledClass);\r\n        } // Disable set button\r\n\r\n\r\n        if (that._isValid) {\r\n          $$1('.mbsc-fr-btn-s .mbsc-fr-btn', $markup).removeClass(disabledClass);\r\n        } else {\r\n          $$1('.mbsc-fr-btn-s .mbsc-fr-btn', $markup).addClass(disabledClass);\r\n        } // Fill input if in live mode\r\n\r\n\r\n        if (that.live) {\r\n          that._hasValue = manual || that._hasValue;\r\n          fillValue(manual, false, manual);\r\n\r\n          if (manual) {\r\n            trigger('onSet', {\r\n              valueText: that._value\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function fillValue(fill, disp, change, temp) {\r\n      if (disp) {\r\n        display();\r\n      }\r\n\r\n      if (!temp) {\r\n        valueArray = tempValueArray.slice(0);\r\n        variables = extend$1({}, tempVariables);\r\n        actions = tempActions.slice(0);\r\n        that._value = that._hasValue ? that._tempValue : null;\r\n      }\r\n\r\n      if (fill) {\r\n        if (that._isInput) {\r\n          $elm.val(that._hasValue && that._isValid ? that._value : '');\r\n        }\r\n\r\n        trigger('onFill', {\r\n          valueText: that._hasValue ? that._tempValue : '',\r\n          change: change\r\n        });\r\n\r\n        if (change) {\r\n          that._preventChange = true;\r\n          $elm.trigger('change');\r\n        }\r\n      }\r\n    }\r\n\r\n    function loadValues(values) {\r\n      var i,\r\n          vars,\r\n          val = values || [],\r\n          ret = [];\r\n      tempActions = [];\r\n      tempVariables = {};\r\n\r\n      for (i = 0; i < val.length; i++) {\r\n        //if (isNaN(parseInt(val[i]))) {\r\n        if (/:/.test(val[i])) {\r\n          vars = val[i].split(':');\r\n          tempVariables[vars[0]] = vars[1];\r\n          tempActions.push(vars[0]);\r\n        } else {\r\n          ret.push(val[i]);\r\n          tempActions.push('digit');\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    }\r\n\r\n    function triggerInput(btn, ev) {\r\n      trigger('onInput', {\r\n        domEvent: ev,\r\n        target: btn,\r\n        values: tempValueArray.slice(0),\r\n        valueText: that._tempValue,\r\n        variables: tempVariables\r\n      });\r\n    }\r\n\r\n    function addKeys(keys, pos) {\r\n      if (keys) {\r\n        keys = $$1.isArray(keys) ? keys : [keys];\r\n        keys.forEach(function (key) {\r\n          customKeys[key] = pos;\r\n        });\r\n      }\r\n    }\r\n\r\n    function onNumberTap(btn, val, ev) {\r\n      if (!pos && !val && !s.allowLeadingZero || btn.hasClass('mbsc-disabled') || btn.hasClass('mbsc-np-btn-empty')) {\r\n        return;\r\n      }\r\n\r\n      if (pos < total && mobiscroll.LIIiW) {\r\n        tempActions.push('digit');\r\n        tempValueArray.push(val);\r\n        display(true);\r\n        triggerInput(btn[0], ev);\r\n      }\r\n    }\r\n\r\n    function onCustomTap(btn, ev) {\r\n      var i,\r\n          v,\r\n          val = btn.attr('data-val'),\r\n          track = btn.attr('data-track') !== 'false',\r\n          variable = btn.attr('data-var');\r\n\r\n      if (!btn.hasClass('mbsc-disabled')) {\r\n        if (variable) {\r\n          v = variable.split(':');\r\n\r\n          if (track) {\r\n            tempActions.push(v[0]);\r\n          }\r\n\r\n          tempVariables[v[0]] = v[2] === undefined ? v[1] : tempVariables[v[0]] == v[1] ? v[2] : v[1];\r\n        }\r\n\r\n        if (val.length + pos <= tempTotal) {\r\n          for (i = 0; i < val.length; ++i) {\r\n            v = isNumeric(val[i]) ? +val[i] : val[i];\r\n\r\n            if (s.allowLeadingZero || pos || v) {\r\n              tempActions.push('digit');\r\n              tempValueArray.push(v);\r\n              pos = tempValueArray.length;\r\n            }\r\n          }\r\n        }\r\n\r\n        display(true);\r\n        triggerInput(btn[0], ev);\r\n      }\r\n    }\r\n\r\n    function onDeleteTap(ev) {\r\n      var i,\r\n          old,\r\n          act = tempActions.pop();\r\n\r\n      if (pos || act !== 'digit') {\r\n        if (act !== 'digit' && tempVariables[act]) {\r\n          delete tempVariables[act];\r\n          old = tempActions.slice(0);\r\n          tempActions = [];\r\n\r\n          for (i = 0; i < old.length; i++) {\r\n            if (old[i] !== act) {\r\n              tempActions.push(old[i]);\r\n            }\r\n          }\r\n        } else {\r\n          tempValueArray.pop();\r\n        }\r\n\r\n        display(true);\r\n        triggerInput(deleteBtn, ev);\r\n      }\r\n    }\r\n\r\n    function startDelete(ev) {\r\n      action = true;\r\n      sX = getCoord(ev, 'X');\r\n      sY = getCoord(ev, 'Y');\r\n      clearInterval(interval);\r\n      clearTimeout(interval);\r\n      onDeleteTap(ev);\r\n      interval = setInterval(function () {\r\n        onDeleteTap(ev);\r\n      }, 150);\r\n    }\r\n\r\n    function stopDelete() {\r\n      clearInterval(interval);\r\n      action = false;\r\n    }\r\n\r\n    function onStart(ev) {\r\n      if (testTouch(ev, this)) {\r\n        if (ev.type == 'keydown' && ev.keyCode != 32) {\r\n          return;\r\n        }\r\n\r\n        startDelete(ev);\r\n\r\n        if (ev.type == 'mousedown') {\r\n          $$1(document).on('mousemove', onMove).on('mouseup', onEnd);\r\n        }\r\n      }\r\n    }\r\n\r\n    function onMove(ev) {\r\n      if (action) {\r\n        eX = getCoord(ev, 'X');\r\n        eY = getCoord(ev, 'Y');\r\n        diffX = eX - sX;\r\n        diffY = eY - sY;\r\n\r\n        if (Math.abs(diffX) > 7 || Math.abs(diffY) > 7) {\r\n          stopDelete();\r\n        }\r\n      }\r\n    }\r\n\r\n    function onEnd(ev) {\r\n      if (action) {\r\n        ev.preventDefault();\r\n        stopDelete();\r\n\r\n        if (ev.type == 'mouseup') {\r\n          $$1(document).off('mousemove', onMove).off('mouseup', onEnd);\r\n        }\r\n      }\r\n    } // Call the parent constructor\r\n\r\n\r\n    Frame.call(this, el, settings, true); // Public functions\r\n\r\n    /**\r\n     * Sets the value\r\n     */\r\n\r\n    that.setVal = that._setVal = function (val, fill, change, temp) {\r\n      that._hasValue = val !== null && val !== undefined && val !== '';\r\n      tempValueArray = loadValues($$1.isArray(val) ? val.slice(0) : s.parseValue.call(el, val, that));\r\n      fillValue(fill, true, change === undefined ? fill : change, temp);\r\n    };\r\n    /**\r\n     * Returns the selected value\r\n     */\r\n\r\n\r\n    that.getVal = that._getVal = function (temp) {\r\n      return that._hasValue || temp ? that[temp ? '_tempValue' : '_value'] : null;\r\n    };\r\n    /*\r\n     * Sets the value (passed as an array)\r\n     */\r\n\r\n\r\n    that.setArrayVal = that.setVal;\r\n    /*\r\n     * Returns the selected wheel values as an array\r\n     */\r\n\r\n    that.getArrayVal = function (temp) {\r\n      return temp ? tempValueArray.slice(0) : that._hasValue ? valueArray.slice(0) : null;\r\n    }; // Protected overrides\r\n\r\n\r\n    that._readValue = function () {\r\n      var v = $elm.val() || '';\r\n\r\n      if (v !== '') {\r\n        that._hasValue = true;\r\n      }\r\n\r\n      if (mask) {\r\n        tempVariables = {};\r\n        tempActions = [];\r\n        tempValueArray = [];\r\n      } else {\r\n        tempVariables = that._hasValue ? variables : {};\r\n        tempActions = that._hasValue ? actions : [];\r\n        tempValueArray = that._hasValue && valueArray ? valueArray.slice(0) : loadValues(s.parseValue.call(el, v, that));\r\n        fillValue(false, true);\r\n      }\r\n    };\r\n\r\n    that._fillValue = function () {\r\n      that._hasValue = true;\r\n      fillValue(true, false, true);\r\n    };\r\n\r\n    that._generateContent = function () {\r\n      var i,\r\n          j,\r\n          v,\r\n          k = 1,\r\n          leftKey = s.leftKey,\r\n          rightKey = s.rightKey,\r\n          template = '',\r\n          html = ''; // Display\r\n\r\n      html += '<div class=\"mbsc-np-hdr\"><div role=\"button\" tabindex=\"0\" aria-label=\"' + s.deleteText + '\" class=\"mbsc-np-del mbsc-fr-btn-e mbsc-ic mbsc-ic-' + s.deleteIcon + '\"></div><div class=\"mbsc-np-dsp\">'; // Process template\r\n\r\n      template = s.template.replace(/d/g, '<span class=\"mbsc-np-ph\">' + ph + '</span>').replace(/&#100;/g, 'd'); // Generate the template for custom buttons\r\n\r\n      template = template.replace(/{([a-zA-Z0-9]*):?([a-zA-Z0-9\\-_]*)}/g, '<span class=\"mbsc-np-cph\" data-var=\"$1\" data-ph=\"$2\">$2</span>');\r\n      html += template;\r\n      html += '</div></div>'; // Digit buttons\r\n\r\n      html += '<div class=\"mbsc-np-tbl-c mbsc-w-p\"><div class=\"mbsc-np-tbl\">';\r\n\r\n      for (i = 0; i < 4; i++) {\r\n        html += '<div class=\"mbsc-np-row\">';\r\n\r\n        for (j = 0; j < 3; j++) {\r\n          v = k;\r\n\r\n          if (k == 10 || k == 12) {\r\n            v = '';\r\n          } else if (k == 11) {\r\n            v = 0;\r\n          }\r\n\r\n          if (v === '') {\r\n            if (k == 10 && leftKey) {\r\n              addKeys(leftKey.keys, 'left');\r\n              html += '<div role=\"button\" tabindex=\"0\" class=\"mbsc-np-btn mbsc-np-btn-custom mbsc-np-btn-custom-left mbsc-fr-btn-e\" ' + (leftKey.variable ? 'data-var=\"' + leftKey.variable + '\"' : '') + ' data-val=\"' + (leftKey.value || '') + '\" ' + (leftKey.track !== undefined ? ' data-track=\"' + leftKey.track + '\"' : '') + '>' + leftKey.text + '</div>';\r\n            } else if (k == 12 && s.rightKey) {\r\n              addKeys(rightKey.keys, 'right');\r\n              html += '<div role=\"button\" tabindex=\"0\" class=\"mbsc-np-btn mbsc-np-btn-custom mbsc-np-btn-custom-right mbsc-fr-btn-e\" ' + (rightKey.variable ? 'data-var=\"' + rightKey.variable + '\"' : '') + ' data-val=\"' + (rightKey.value || '') + '\" ' + (rightKey.track !== undefined ? ' data-track=\"' + rightKey.track + '\"' : '') + ' >' + rightKey.text + '</div>';\r\n            } else {\r\n              html += '<div class=\"mbsc-np-btn mbsc-np-btn-empty\"></div>';\r\n            }\r\n          } else {\r\n            html += '<div tabindex=\"0\" role=\"button\" class=\"mbsc-np-btn mbsc-fr-btn-e\" data-val=\"' + v + '\">' + v + that._getText(mobiscroll, 0.2) + '</div>';\r\n          }\r\n\r\n          k++;\r\n        }\r\n\r\n        html += '</div>';\r\n      }\r\n\r\n      html += '</div></div>';\r\n      return html;\r\n    };\r\n\r\n    that._markupReady = function () {\r\n      $markup = that._markup;\r\n      display();\r\n    };\r\n\r\n    that._attachEvents = function ($m) {\r\n      $m.on('keydown', function (ev) {\r\n        var btn,\r\n            key = ev.keyCode;\r\n\r\n        if (customKeys[key] !== undefined) {\r\n          btn = $$1('.mbsc-np-btn-custom-' + customKeys[key], $m);\r\n\r\n          if (btn.length) {\r\n            if (btn.attr('data-var') === 'sign:-:') {\r\n              tempVariables.sign = key === 107 || key === 187 ? '-' : '';\r\n            }\r\n\r\n            onCustomTap(btn, ev);\r\n          }\r\n        } else if (numericKeys[key] !== undefined) {\r\n          onNumberTap($$1('.mbsc-np-btn[data-val=\"' + numericKeys[key] + '\"]', $m), numericKeys[key], ev);\r\n        } else if (key == 8) {\r\n          ev.preventDefault();\r\n          onDeleteTap(ev);\r\n        }\r\n      });\r\n      that.tap($$1('.mbsc-np-btn', $m), function (ev) {\r\n        var btn = $$1(this);\r\n\r\n        if (btn.hasClass('mbsc-np-btn-custom')) {\r\n          onCustomTap(btn, ev);\r\n        } else {\r\n          onNumberTap(btn, +btn.attr('data-val'), ev);\r\n        }\r\n      }, false, 30, true);\r\n      deleteBtn = $$1('.mbsc-np-del', $m)[0];\r\n      listen(deleteBtn, 'touchstart', onStart, {\r\n        passive: true\r\n      });\r\n      listen(deleteBtn, 'mousedown', onStart);\r\n      listen(deleteBtn, 'keydown', onStart);\r\n      listen(deleteBtn, 'touchmove', onMove, {\r\n        passive: true\r\n      });\r\n      listen(deleteBtn, 'mousemove', onMove);\r\n      listen(deleteBtn, 'touchend', onEnd);\r\n      listen(deleteBtn, 'mouseup', onEnd);\r\n      listen(deleteBtn, 'keyup', onEnd);\r\n    };\r\n\r\n    that.__init = function () {\r\n      s = that.settings;\r\n      s.template = s.template.replace(/\\\\d/, '&#100;');\r\n      ph = s.placeholder;\r\n      total = (s.template.match(/d/g) || []).length;\r\n      disabledClass = 'mbsc-disabled ' + (s.disabledClass || '');\r\n      mask = s.mask;\r\n      trigger = that.trigger;\r\n\r\n      if (mask && $elm.is('input')) {\r\n        $elm.attr('type', 'password');\r\n      }\r\n    };\r\n\r\n    that._indexOf = function (cont, v) {\r\n      var i;\r\n\r\n      for (i = 0; i < cont.length; ++i) {\r\n        if (cont[i].toString() === v.toString()) {\r\n          return i;\r\n        }\r\n      }\r\n\r\n      return -1;\r\n    }; // Constructor\r\n\r\n\r\n    if (!inherit) {\r\n      that.init();\r\n    }\r\n  }; // Extend defaults\r\n\r\n  Numpad.prototype = {\r\n    _hasDef: true,\r\n    _hasTheme: true,\r\n    _hasLang: true,\r\n    _responsive: true,\r\n    _class: 'numpad',\r\n    _presets: presets$1,\r\n    _defaults: extend$1({}, Frame.prototype._defaults, {\r\n      template: 'dd.dd',\r\n      placeholder: '0',\r\n      deleteIcon: 'backspace',\r\n      allowLeadingZero: false,\r\n      headerText: false,\r\n      fill: 'rtl',\r\n      compClass: 'mbsc-np',\r\n      // Localization\r\n      deleteText: 'Delete',\r\n      decimalSeparator: '.',\r\n      thousandsSeparator: ',',\r\n      // @todo\r\n      // ---\r\n      //fillFullTemplate: true,\r\n      // ---\r\n      validate: noop,\r\n      parseValue: noop,\r\n      formatValue: function formatValue(value, variables, inst) {\r\n        var i,\r\n            j = 1,\r\n            s = inst.settings,\r\n            ph = s.placeholder,\r\n            template = s.template,\r\n            valueLen = value.length,\r\n            tempLen = template.length,\r\n            res = '';\r\n\r\n        for (i = 0; i < tempLen; i++) {\r\n          if (template[tempLen - i - 1] == 'd') {\r\n            if (j <= valueLen) {\r\n              res = value[valueLen - j] + res;\r\n            } else {\r\n              res = ph + res;\r\n            }\r\n\r\n            j++;\r\n          } else {\r\n            res = template[tempLen - i - 1] + res;\r\n          }\r\n        }\r\n\r\n        $$1.each(variables, function (i, v) {\r\n          res = res.replace('{' + i + '}', v);\r\n        });\r\n        return $$1('<div>' + res + '</div>').text();\r\n      }\r\n    })\r\n  };\r\n  classes.Numpad = Numpad;\r\n  mobiscroll.themes.numpad = mobiscroll.themes.frame; // Decimal preset\r\n  // ---\r\n\r\n  var decimalDefaults = {\r\n    entryMode: 'template',\r\n    min: 0,\r\n    max: 99.99,\r\n    maxScale: 4,\r\n    prefix: '',\r\n    suffix: '',\r\n    returnAffix: false\r\n  };\r\n\r\n  presets$1.decimal = function (inst) {\r\n    var orig = extend$1({}, inst.settings),\r\n        conditionalDefaults = {\r\n      scale: orig.entryMode == 'freeform' ? undefined : 2\r\n    },\r\n        s = extend$1(inst.settings, decimalDefaults, conditionalDefaults, orig),\r\n        scale = s.scale,\r\n        min = +s.min.toFixed(scale),\r\n        max = +s.max.toFixed(scale),\r\n        negativeNum = min < 0,\r\n        thousandRegex = new RegExp(s.thousandsSeparator, 'g'),\r\n        maxIntLength = (Math.floor(Math.max(max, Math.abs(min))) + '').length + 1,\r\n        freeEntry = s.entryMode == 'freeform';\r\n    /**\r\n     * Returns the number from the digits\r\n     * @param {Array} digitArray\r\n     * @param {boolean} isNegative\r\n     */\r\n\r\n    function getNumber(digitArray, isNegative) {\r\n      if (!digitArray.length) {\r\n        return null;\r\n      }\r\n\r\n      var ret = +digitArray.map(function (v, i) {\r\n        return (i === 0 && v === '.' ? '0' : '') + v;\r\n      }).join(''); // in the case of NOT the freeEntry mode, the decimal point wont be part of the digits array\r\n      // in that case the value will need to be adjusted to the right scale\r\n\r\n      if (!freeEntry) {\r\n        for (var i = 0; i < scale; i++) {\r\n          ret /= 10;\r\n        }\r\n      }\r\n\r\n      return isNegative ? ret * -1 : ret;\r\n    }\r\n    /**\r\n     * Returns the formatted value from the array of digits\r\n     * @param {Array} digitArray\r\n     */\r\n\r\n\r\n    function getFormatted(digitArray, forInput) {\r\n      var numberStr = '';\r\n\r\n      if (freeEntry && (scale === undefined || !forInput)) {\r\n        if (digitArray[0] === '.') {\r\n          // add missing leading zero when only the decimal point is pressed\r\n          numberStr += '0';\r\n        }\r\n\r\n        numberStr += digitArray.join('');\r\n      } else {\r\n        var nr = getNumber(digitArray);\r\n\r\n        if (forInput && freeEntry) {\r\n          numberStr = nr === null ? '' : nr.toFixed(scale);\r\n        } else {\r\n          numberStr = (nr === null ? 0 : nr).toFixed(scale);\r\n        }\r\n      } // split the value by the decimal separator to add thousand separators to the integer part\r\n\r\n\r\n      var parts = numberStr.split('.'),\r\n          integer = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, s.thousandsSeparator),\r\n          dec = parts[1] ? s.decimalSeparator + parts[1] : ''; // when decimal separator also needed when there is no decimal part in free entry mode\r\n      // because this function also used for the displayed number on the numpad, not only for the input\r\n\r\n      if (parts[1] !== undefined && !parts[1].length && freeEntry) {\r\n        dec = s.decimalSeparator;\r\n      }\r\n\r\n      return integer + dec;\r\n    } // Extended methods\r\n    // ---\r\n\r\n\r\n    inst.setVal = function (val, fill, change, temp) {\r\n      if (val || val === 0) {\r\n        if (typeof val === 'string') {\r\n          val = +val.replace(s.thousandsSeparator, '').replace(s.decimalSeparator, '.');\r\n        }\r\n\r\n        val = constrain(val, min, max);\r\n      }\r\n\r\n      return inst._setVal(val, fill, change, temp);\r\n    };\r\n\r\n    inst.getVal = function (temp) {\r\n      var val = inst._getVal(temp),\r\n          valNr = (val + '').replace(thousandRegex, '').replace(s.decimalSeparator, '.');\r\n\r\n      return isNumeric(valNr) ? +valNr : val;\r\n    }; // ---\r\n\r\n\r\n    var numberTemplate = Array(maxIntLength).join('d'); // in the case of freeEntry, the decimal point should not be part of the template\r\n\r\n    if (freeEntry) {\r\n      if (scale !== undefined) {\r\n        // +2 index required:\r\n        // - 1 for the decimal point\r\n        // - 1 for the join method, since the \"d\"s will be the separators (and there's one separator less than value)\r\n        numberTemplate += scale ? Array(scale + 2).join('d') : '';\r\n      } else {\r\n        numberTemplate += Array(s.maxScale + 2).join('d');\r\n      }\r\n    } else {\r\n      // +1 required for the join method, since the \"d\"s will be the separators (and there's one separator less than value)\r\n      numberTemplate += scale ? '.' + Array(scale + 1).join('d') : '';\r\n    }\r\n\r\n    var template = (negativeNum ? '{sign}' : '') + s.prefix.replace(/d/g, '\\\\d') + numberTemplate + s.suffix.replace(/d/g, '\\\\d');\r\n    return {\r\n      template: template,\r\n      leftKey: negativeNum ? {\r\n        text: '-/+',\r\n        variable: 'sign:-:',\r\n        track: false,\r\n        keys: [107, 109, 187, 189]\r\n      } : undefined,\r\n      rightKey: freeEntry ? {\r\n        text: s.decimalSeparator,\r\n        value: '.',\r\n        keys: [110, 190]\r\n      } : undefined,\r\n      allowLeadingZero: freeEntry,\r\n      parseValue: function parseValue(value) {\r\n        var i,\r\n            m,\r\n            v = value || s.defaultValue,\r\n            ret = [],\r\n            fixScale = scale !== undefined ? scale : s.maxScale;\r\n\r\n        if (value === '' || value === null || value === undefined) {\r\n          return ret;\r\n        }\r\n\r\n        if (+value === 0) {\r\n          if (freeEntry) {\r\n            return [0];\r\n          } else {\r\n            return [];\r\n          }\r\n        }\r\n\r\n        if (v) {\r\n          v = (v + '').replace(thousandRegex, '').replace(s.decimalSeparator, '.');\r\n          m = v.match(/\\d+\\.?\\d*/g);\r\n\r\n          if (m) {\r\n            m = (+m[0]).toFixed(fixScale);\r\n\r\n            for (i = 0; i < m.length; i++) {\r\n              if (m[i] != '.') {\r\n                if (+m[i]) {\r\n                  ret.push(+m[i]);\r\n                } else if (ret.length) {\r\n                  // No leading 0s\r\n                  // in freeEntry mode, zeros after the decimal point are only necessary if there are other nonzero digits after them\r\n                  // for example 10.0001 - decimal zeros are required => 10.0001 => [1, 0, ., 0, 0, 0, 1]\r\n                  // for example 10.1000 - decimal zeros are not required => 10.1 => [1, 0, ., 1]\r\n                  var decIndex = m.indexOf('.');\r\n                  var nonZero = m.length > i + 1 && m.substring(i + 1).match(/[1-9]+/);\r\n\r\n                  if (!freeEntry || i < decIndex || nonZero) {\r\n                    ret.push(0);\r\n                  }\r\n                }\r\n              } else if (freeEntry) {\r\n                // in the case of freeEntry, the decimal point should be part of the input digits\r\n                ret.push('.');\r\n              }\r\n            }\r\n\r\n            var decimalIndex = m.indexOf('.'); // if there are no digits after the point remove the point\r\n\r\n            if (ret.indexOf('.') >= 0 && (m.length <= decimalIndex + 1 || !m.substring(decimalIndex + 1).match(/[1-9]+/))) {\r\n              ret.splice(ret.indexOf('.'), 1);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (value < 0) {\r\n          // make the sign the last thing to manipulate\r\n          ret.unshift('sign:' + '-');\r\n        }\r\n\r\n        return ret;\r\n      },\r\n      formatValue: function formatValue(value, variables) {\r\n        var v = getFormatted(value, true),\r\n            nr = getNumber(value, variables && variables.sign == '-');\r\n        return (nr < 0 ? '-' : '') + (s.returnAffix ? s.prefix + v + s.suffix : v);\r\n      },\r\n      validate: function validate(data) {\r\n        var i,\r\n            digits = data.values,\r\n            v = getFormatted(digits),\r\n            nr = getNumber(digits, data.variables && data.variables.sign == '-'),\r\n            disabled = [],\r\n            invalid = nr > max || nr < min || (s.invalid ? inst._indexOf(s.invalid, nr) != -1 : false);\r\n\r\n        if (!digits.length && !s.allowLeadingZero && !freeEntry) {\r\n          disabled.push(0);\r\n        }\r\n\r\n        if (digits.length >= maxIntLength || digits.indexOf('.') !== -1) {\r\n          disabled.push('.');\r\n        }\r\n\r\n        if (freeEntry) {\r\n          if (digits.length == 1 && digits[0] === 0) {\r\n            for (i = 0; i <= 9; i++) {\r\n              disabled.push(i);\r\n            }\r\n          }\r\n\r\n          if (!digits.length || digits[digits.length - 1] == '.') {\r\n            invalid = true;\r\n          } // Only allow max maxScale decimal values\r\n\r\n\r\n          var sca = scale !== undefined ? scale : s.maxScale; // >= meaning: starting zero digit may be missing, that's why\r\n\r\n          if (digits.length >= sca + 1 && digits[digits.length - sca - 1] == '.') {\r\n            for (i = 0; i <= 9; i++) {\r\n              disabled.push(i);\r\n            }\r\n          }\r\n        } // Display the formatted value\r\n\r\n\r\n        if (inst.isVisible()) {\r\n          $$1('.mbsc-np-dsp', inst._markup).html((data.variables.sign || '') + s.prefix + v + s.suffix || '&nbsp;');\r\n        }\r\n\r\n        return {\r\n          disabled: disabled,\r\n          invalid: invalid\r\n        };\r\n      }\r\n    };\r\n  }; // ---\r\n  // Timespan preset\r\n  // ---\r\n\r\n\r\n  function getSeconds(value) {\r\n    var i = 0,\r\n        m = 1,\r\n        ret = 0;\r\n\r\n    while (value.length) {\r\n      if (i > 3) {\r\n        m = 60 * 60;\r\n      } else if (i > 1) {\r\n        m = 60;\r\n      }\r\n\r\n      ret = ret + value.pop() * m * (i % 2 ? 10 : 1);\r\n      i++;\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  var parts = ['h', 'm', 's'],\r\n      timespanDefaults = {\r\n    min: 0,\r\n    max: 362439,\r\n    //99 * 60 * 60 + 99 * 60 + 99\r\n    defaultValue: 0,\r\n    hourTextShort: 'h',\r\n    minuteTextShort: 'm',\r\n    secTextShort: 's'\r\n  };\r\n\r\n  presets$1.timespan = function (inst) {\r\n    var orig = extend$1({}, inst.settings),\r\n        s = extend$1(inst.settings, timespanDefaults, orig),\r\n        labels = {\r\n      h: s.hourTextShort.replace(/d/g, '\\\\d'),\r\n      m: s.minuteTextShort.replace(/d/g, '\\\\d'),\r\n      s: s.secTextShort.replace(/d/g, '\\\\d')\r\n    },\r\n        template = 'd<span class=\"mbsc-np-sup mbsc-np-time\">' + labels.s + '</span>';\r\n\r\n    function formatTime(seconds) {\r\n      var p,\r\n          ret = '',\r\n          m = 60 * 60;\r\n      $$1(parts).each(function (i, v) {\r\n        p = Math.floor(seconds / m);\r\n        seconds -= p * m;\r\n        m /= 60;\r\n\r\n        if (p > 0 || v == 's' && !ret) {\r\n          ret = ret + (ret ? ' ' : '') + p + labels[v];\r\n        }\r\n      });\r\n      return ret;\r\n    }\r\n\r\n    if (s.max > 9) {\r\n      template = 'd' + template;\r\n    }\r\n\r\n    if (s.max > 99) {\r\n      template = '<span class=\"mbsc-np-ts-m\">' + (s.max > 639 ? 'd' : '') + 'd</span><span class=\"mbsc-np-sup mbsc-np-time\">' + labels.m + '</span>' + template;\r\n    }\r\n\r\n    if (s.max > 6039) {\r\n      template = '<span class=\"mbsc-np-ts-h\">' + (s.max > 38439 ? 'd' : '') + 'd</span><span class=\"mbsc-np-sup mbsc-np-time\">' + labels.h + '</span>' + template;\r\n    } // Extended methods\r\n    // ---\r\n\r\n\r\n    inst.setVal = function (val, fill, change, temp) {\r\n      if (isNumeric(val)) {\r\n        val = formatTime(val);\r\n      }\r\n\r\n      return inst._setVal(val, fill, change, temp);\r\n    };\r\n\r\n    inst.getVal = function (temp) {\r\n      return inst._hasValue || temp ? getSeconds(inst.getArrayVal(temp)) : null;\r\n    }; // ---\r\n\r\n\r\n    return {\r\n      template: template,\r\n      parseValue: function parseValue(value) {\r\n        var p,\r\n            vv = value || formatTime(s.defaultValue),\r\n            ret = [];\r\n\r\n        if (vv) {\r\n          $$1(parts).each(function (i, v) {\r\n            p = new RegExp('(\\\\d+)' + labels[v], 'gi').exec(vv);\r\n\r\n            if (p) {\r\n              p = +p[1];\r\n\r\n              if (p > 9) {\r\n                ret.push(Math.floor(p / 10));\r\n                ret.push(p % 10);\r\n              } else {\r\n                if (ret.length) {\r\n                  // No leading 0s\r\n                  ret.push(0);\r\n                }\r\n\r\n                if (p || ret.length) {\r\n                  // No leading 0s\r\n                  ret.push(p);\r\n                }\r\n              }\r\n            } else if (ret.length) {\r\n              ret.push(0);\r\n              ret.push(0);\r\n            }\r\n          });\r\n        }\r\n\r\n        return ret;\r\n      },\r\n      formatValue: function formatValue(value) {\r\n        return formatTime(getSeconds(value));\r\n      },\r\n      validate: function validate(data) {\r\n        var value = data.values,\r\n            v = getSeconds(value.slice(0)),\r\n            disabled = [];\r\n\r\n        if (!value.length) {\r\n          disabled.push(0);\r\n        }\r\n\r\n        return {\r\n          disabled: disabled,\r\n          invalid: v > s.max || v < s.min || (s.invalid ? inst._indexOf(s.invalid, +v) != -1 : false)\r\n        };\r\n      }\r\n    };\r\n  }; // ---\r\n  // Time preset\r\n  // ---\r\n\r\n\r\n  var timeDefaults = {\r\n    timeFormat: 'hh:ii A',\r\n    amText: 'am',\r\n    pmText: 'pm'\r\n  };\r\n\r\n  presets$1.time = function (inst) {\r\n    var orig = extend$1({}, inst.settings),\r\n        s = extend$1(inst.settings, timeDefaults, orig),\r\n        timeFormat = s.timeFormat.split(':'),\r\n        isAmPM = s.timeFormat.match(/a/i),\r\n        am = isAmPM ? isAmPM[0] == 'a' ? s.amText : s.amText.toUpperCase() : '',\r\n        pm = isAmPM ? isAmPM[0] == 'a' ? s.pmText : s.pmText.toUpperCase() : '',\r\n        l = 0,\r\n        minH = s.min ? '' + s.min.getHours() : '',\r\n        maxH = s.max ? '' + s.max.getHours() : '',\r\n        minM = s.min ? '' + (s.min.getMinutes() < 10 ? '0' + s.min.getMinutes() : s.min.getMinutes()) : '',\r\n        maxM = s.max ? '' + (s.max.getMinutes() < 10 ? '0' + s.max.getMinutes() : s.max.getMinutes()) : '',\r\n        minS = s.min ? '' + (s.min.getSeconds() < 10 ? '0' + s.min.getSeconds() : s.min.getSeconds()) : '',\r\n        maxS = s.max ? '' + (s.max.getSeconds() < 10 ? '0' + s.max.getSeconds() : s.max.getSeconds()) : '';\r\n\r\n    if (s.min) {\r\n      s.min.setFullYear(2014, 7, 20);\r\n    }\r\n\r\n    if (s.max) {\r\n      s.max.setFullYear(2014, 7, 20);\r\n    }\r\n\r\n    function getFormattedTime(value, variables) {\r\n      var i,\r\n          ret = '';\r\n\r\n      for (i = 0; i < value.length; ++i) {\r\n        ret += value[i] + (i % 2 == (value.length % 2 == 1 ? 0 : 1) && i != value.length - 1 ? ':' : '');\r\n      }\r\n\r\n      $$1.each(variables, function (i, v) {\r\n        ret += ' ' + v;\r\n      });\r\n      return ret;\r\n    }\r\n\r\n    function disableButtons(value) {\r\n      var i,\r\n          isMinH,\r\n          isMaxH,\r\n          isMinM,\r\n          isMaxM,\r\n          invH,\r\n          invM,\r\n          invS,\r\n          hour,\r\n          minutes,\r\n          disabled = [],\r\n          digitNr = 2 * timeFormat.length;\r\n      l = digitNr;\r\n\r\n      if (!value.length) {\r\n        if (isAmPM) {\r\n          disabled.push(0);\r\n          disabled.push(s.leftKey.value);\r\n        }\r\n\r\n        disabled.push(s.rightKey.value);\r\n      }\r\n\r\n      if (!isAmPM && (digitNr - value.length < 2 || value[0] != 1 && (value[0] > 2 || value[1] > 3) && digitNr - value.length <= 2)) {\r\n        disabled.push('30');\r\n        disabled.push('00');\r\n      }\r\n\r\n      if ((isAmPM ? value[0] > 1 || value[1] > 2 : value[0] != 1 && (value[0] > 2 || value[1] > 3)) && value[0]) {\r\n        // if the hour number is not a two digit number\r\n        value.unshift(0);\r\n        l = digitNr - 1;\r\n      }\r\n\r\n      if (value.length == digitNr) {\r\n        for (i = 0; i <= 9; ++i) {\r\n          disabled.push(i);\r\n        }\r\n      } else if (value.length == 1 && isAmPM && value[0] == 1 || value.length && value.length % 2 === 0 || !isAmPM && value[0] == 2 && value[1] > 3 && value.length % 2 == 1) {\r\n        for (i = 6; i <= 9; ++i) {\r\n          disabled.push(i);\r\n        }\r\n      }\r\n\r\n      hour = value[1] !== undefined ? '' + value[0] + value[1] : '';\r\n      minutes = +maxM == +(value[3] !== undefined ? '' + value[2] + value[3] : '');\r\n\r\n      if (s.invalid) {\r\n        for (i = 0; i < s.invalid.length; ++i) {\r\n          invH = s.invalid[i].getHours();\r\n          invM = s.invalid[i].getMinutes();\r\n          invS = s.invalid[i].getSeconds();\r\n\r\n          if (invH == +hour) {\r\n            if (timeFormat.length == 2 && (invM < 10 ? 0 : +('' + invM)[0]) == +value[2]) {\r\n              // disable invalid minutes\r\n              disabled.push(invM < 10 ? invM : +('' + invM)[1]);\r\n              break;\r\n            } else if ((invS < 10 ? 0 : +('' + invS)[0]) == +value[4]) {\r\n              // disable invalid sec\r\n              disabled.push(invS < 10 ? invS : +('' + invS)[1]);\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (s.min || s.max) {\r\n        isMinH = +minH == +hour;\r\n        isMaxH = +maxH == +hour;\r\n        isMaxM = isMaxH && minutes;\r\n        isMinM = isMinH && minutes;\r\n\r\n        if (value.length === 0) {\r\n          for (i = isAmPM ? 2 : minH > 19 ? minH[0] : 3; i <= (minH[0] == 1 ? 9 : minH[0] - 1); ++i) {\r\n            // disables values lower than min and leves the 1,2 buttons\r\n            disabled.push(i);\r\n          }\r\n\r\n          if (minH >= 10) {\r\n            disabled.push(0);\r\n\r\n            if (minH[0] == 2) {\r\n              //if 2x hour is min\r\n              for (i = 3; i <= 9; ++i) {\r\n                disabled.push(i);\r\n              }\r\n            }\r\n          }\r\n\r\n          if (maxH && maxH < 10 || minH && minH >= 10) {\r\n            //disables values between min and max values\r\n            for (i = maxH && maxH < 10 ? +maxH[0] + 1 : 0; i < (minH && minH >= 10 ? minH[0] : 10); ++i) {\r\n              disabled.push(i);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (value.length == 1) {\r\n          if (value[0] === 0) {\r\n            // disable min values if 24h format, and starts with 0\r\n            for (i = 0; i < minH[0]; ++i) {\r\n              //kiveve minH[0] == 1 ? 9 :\r\n              disabled.push(i);\r\n            }\r\n          }\r\n\r\n          if (minH && value[0] !== 0 && (isAmPM ? value[0] == 1 : value[0] == 2)) {\r\n            // don't allow lower values entered, ex. 2:56\r\n            for (i = isAmPM ? 3 : 4; i <= 9; ++i) {\r\n              disabled.push(i);\r\n            }\r\n          }\r\n\r\n          if (value[0] == minH[0]) {\r\n            // is min value\r\n            for (i = 0; i < minH[1]; ++i) {\r\n              disabled.push(i);\r\n            }\r\n          }\r\n\r\n          if (value[0] == maxH[0] && !isAmPM) {\r\n            // is max value\r\n            for (i = +maxH[1] + 1; i <= 9; ++i) {\r\n              disabled.push(i);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (value.length == 2 && (isMinH || isMaxH)) {\r\n          for (i = isMaxH ? +maxM[0] + 1 : 0; i < (isMinH ? +minM[0] : 10); ++i) {\r\n            disabled.push(i);\r\n          }\r\n        }\r\n\r\n        if (value.length == 3 && (isMaxH && value[2] == maxM[0] || isMinH && value[2] == minM[0])) {\r\n          for (i = isMaxH && value[2] == maxM[0] ? +maxM[1] + 1 : 0; i < (isMinH && value[2] == minM[0] ? +minM[1] : 10); ++i) {\r\n            disabled.push(i);\r\n          }\r\n        }\r\n\r\n        if (value.length == 4 && (isMinM || isMaxM)) {\r\n          for (i = isMaxM ? +maxS[0] + 1 : 0; i < (isMinM ? +minS[0] : 10); ++i) {\r\n            disabled.push(i);\r\n          }\r\n        }\r\n\r\n        if (value.length == 5 && (isMinM && value[4] == minS[0] || isMaxM && value[4] == maxS[0])) {\r\n          for (i = isMaxM && value[4] == maxS[0] ? +maxS[1] + 1 : 0; i < (isMinM && value[4] == minS[0] ? +minS[1] : 10); ++i) {\r\n            disabled.push(i);\r\n          }\r\n        }\r\n      }\r\n\r\n      return disabled;\r\n    }\r\n\r\n    return {\r\n      placeholder: '-',\r\n      allowLeadingZero: true,\r\n      template: (timeFormat.length == 3 ? 'dd:dd:dd' : timeFormat.length == 2 ? 'dd:dd' : 'dd') + (isAmPM ? '<span class=\"mbsc-np-sup\">{ampm:--}</span>' : ''),\r\n      leftKey: isAmPM ? {\r\n        text: am,\r\n        variable: 'ampm:' + am,\r\n        value: '00'\r\n      } : {\r\n        text: ':00',\r\n        value: '00'\r\n      },\r\n      rightKey: isAmPM ? {\r\n        text: pm,\r\n        variable: 'ampm:' + pm,\r\n        value: '00'\r\n      } : {\r\n        text: ':30',\r\n        value: '30'\r\n      },\r\n      parseValue: function parseValue(value) {\r\n        var i,\r\n            m,\r\n            v = value || s.defaultValue,\r\n            ret = [];\r\n\r\n        if (v) {\r\n          v = v + '';\r\n          m = v.match(/\\d/g);\r\n\r\n          if (m) {\r\n            for (i = 0; i < m.length; i++) {\r\n              ret.push(+m[i]);\r\n            }\r\n          }\r\n\r\n          if (isAmPM) {\r\n            ret.push('ampm:' + (v.match(new RegExp(s.pmText, 'gi')) ? pm : am));\r\n          }\r\n        }\r\n\r\n        return ret;\r\n      },\r\n      formatValue: function formatValue(value, variables) {\r\n        return getFormattedTime(value, variables);\r\n      },\r\n      validate: function validate(data) {\r\n        var value = data.values,\r\n            variables = data.variables,\r\n            formattedTime = getFormattedTime(value, variables),\r\n            d = value.length >= 3 ? new Date(2014, 7, 20, '' + value[0] + (value.length % 2 === 0 ? value[1] : ''), '' + value[value.length % 2 === 0 ? 2 : 1] + value[value.length % 2 === 0 ? 3 : 2]) : '';\r\n        return {\r\n          disabled: disableButtons(value),\r\n          length: l,\r\n          invalid: (isAmPM ? !new RegExp('^(0?[1-9]|1[012])(:[0-5]\\\\d)?(:[0-5][0-9])' + ' (?:' + s.amText + '|' + s.pmText + ')$', 'i').test(formattedTime) : !/^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/.test(formattedTime)) || (s.invalid ? inst._indexOf(s.invalid, d) != -1 : false) || !((s.min ? s.min <= d : true) && (s.max ? d <= s.max : true))\r\n        };\r\n      }\r\n    };\r\n  }; // Date preset\r\n  // ---\r\n\r\n\r\n  var dateDefaults = {\r\n    dateOrder: 'mdy',\r\n    dateFormat: 'mm/dd/yy',\r\n    delimiter: '/'\r\n  };\r\n\r\n  presets$1.date = function (inst) {\r\n    var yi,\r\n        mi,\r\n        di,\r\n        i,\r\n        indexArray = [],\r\n        orig = extend$1({}, inst.settings),\r\n        s = extend$1(inst.settings, dateTimeDefaults, dateDefaults, orig),\r\n        templ = s.dateOrder,\r\n        minM = s.min ? '' + (s.getMonth(s.min) + 1) : 0,\r\n        maxM = s.max ? '' + (s.getMonth(s.max) + 1) : 0,\r\n        minD = s.min ? '' + s.getDay(s.min) : 0,\r\n        maxD = s.max ? '' + s.getDay(s.max) : 0,\r\n        minY = s.min ? '' + s.getYear(s.min) : 0,\r\n        maxY = s.max ? '' + s.getYear(s.max) : 0;\r\n    templ = templ.replace(/y+/gi, 'yyyy');\r\n    templ = templ.replace(/m+/gi, 'mm');\r\n    templ = templ.replace(/d+/gi, 'dd');\r\n    yi = templ.toUpperCase().indexOf('Y');\r\n    mi = templ.toUpperCase().indexOf('M');\r\n    di = templ.toUpperCase().indexOf('D');\r\n    templ = '';\r\n    indexArray.push({\r\n      val: yi,\r\n      n: 'yyyy'\r\n    }, {\r\n      val: mi,\r\n      n: 'mm'\r\n    }, {\r\n      val: di,\r\n      n: 'dd'\r\n    });\r\n    indexArray.sort(function (a, b) {\r\n      return a.val - b.val;\r\n    });\r\n    $$1.each(indexArray, function (i, v) {\r\n      templ += v.n;\r\n    });\r\n    yi = templ.indexOf('y');\r\n    mi = templ.indexOf('m');\r\n    di = templ.indexOf('d');\r\n    templ = '';\r\n\r\n    for (i = 0; i < 8; ++i) {\r\n      templ += 'd';\r\n\r\n      if (i + 1 == yi || i + 1 == mi || i + 1 == di) {\r\n        templ += s.delimiter;\r\n      }\r\n    }\r\n\r\n    function isleapYear(year) {\r\n      return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\r\n    }\r\n\r\n    function disableButtons(value) {\r\n      var i,\r\n          j,\r\n          invY,\r\n          invM,\r\n          invD,\r\n          disabled = [],\r\n          year = value[yi + 3] !== undefined ? '' + value[yi] + value[yi + 1] + value[yi + 2] + value[yi + 3] : '',\r\n          month = value[mi + 1] !== undefined ? '' + value[mi] + value[mi + 1] : '',\r\n          day = value[di + 1] !== undefined ? '' + value[di] + value[di + 1] : '',\r\n          maxDay = '' + s.getMaxDayOfMonth(year || 2012, month - 1 || 0),\r\n          // Use a leap year if no year present to allow day 29 to be enetered\r\n      isMin = minY === year && +minM === +month,\r\n          isMax = maxY === year && +maxM === +month;\r\n\r\n      if (s.invalid) {\r\n        for (i = 0; i < s.invalid.length; ++i) {\r\n          invY = s.getYear(s.invalid[i]);\r\n          invM = s.getMonth(s.invalid[i]);\r\n          invD = s.getDay(s.invalid[i]);\r\n\r\n          if (invY == +year && invM + 1 == +month) {\r\n            //disable the ivalid day\r\n            if ((invD < 10 ? 0 : +('' + invD)[0]) == +value[di]) {\r\n              disabled.push(invD < 10 ? invD : +('' + invD)[1]);\r\n              break;\r\n            }\r\n          }\r\n\r\n          if (invM + 1 == +month && invD == +day) {\r\n            //disable invalid year\r\n            if (('' + invY).substring(0, 3) == '' + value[yi] + value[yi + 1] + value[yi + 2]) {\r\n              disabled.push(('' + invY)[3]);\r\n              break;\r\n            }\r\n          }\r\n\r\n          if (invY == +year && invD == +day) {\r\n            //disable the ivalid month\r\n            if ((invM < 10 ? 0 : +('' + (invM + 1))[0]) == +value[mi]) {\r\n              disabled.push(invM < 10 ? invM : +('' + (invM + 1))[1]);\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      } // month check\r\n\r\n\r\n      if (day == '31' && (value.length == mi || value.length == mi + 1)) {\r\n        // disable 30 day months\r\n        if (value[mi] != 1) {\r\n          disabled.push(2, 4, 6, 9, 11);\r\n        } else {\r\n          disabled.push(1);\r\n        }\r\n      }\r\n\r\n      if (day == '30' && value[mi] === 0 && value.length <= mi + 1) {\r\n        // disable february\r\n        disabled.push(2);\r\n      }\r\n\r\n      if (value.length == mi) {\r\n        // before month's first digit set, disable values outside min/max\r\n        for (i = maxY === year && +maxM < 10 ? 1 : 2; i <= 9; ++i) {\r\n          disabled.push(i);\r\n        }\r\n\r\n        if (minY === year && +minM >= 10) {\r\n          disabled.push(0);\r\n        }\r\n      }\r\n\r\n      if (value.length == mi + 1) {\r\n        // before month's second digit set\r\n        if (value[mi] == 1) {\r\n          // if two digit month number\r\n          for (i = maxY === year ? +maxM[1] + 1 : 3; i <= 9; ++i) {\r\n            disabled.push(i);\r\n          }\r\n\r\n          if (minY == year) {\r\n            // if min year diable lower values\r\n            for (i = 0; i < +minM[1]; ++i) {\r\n              disabled.push(i);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (value[mi] === 0) {\r\n          //if month number starts with 0\r\n          disabled.push(0);\r\n\r\n          if (maxY === year || minY === year) {\r\n            // if min/max diable lower/greater values\r\n            for (i = maxY === year ? +day > +maxD ? +maxM : +maxM + 1 : 0; i <= (minY === year ? +day < +minD ? +minM - 1 : +minM - 1 : 9); ++i) {\r\n              disabled.push(i);\r\n            }\r\n          }\r\n        }\r\n      } // day check\r\n\r\n\r\n      if (value.length == di) {\r\n        // before day first digit set\r\n        for (i = isMax ? (+maxD > 10 ? +maxD[0] : 0) + 1 : +maxDay[0] + 1; i <= 9; ++i) {\r\n          disabled.push(i);\r\n        }\r\n\r\n        if (isMin) {\r\n          // if is min year and month disable lower values\r\n          for (i = 0; i < (+minD < 10 ? 0 : minD[0]); ++i) {\r\n            disabled.push(i);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (value.length == di + 1) {\r\n        // before day second digit set\r\n        if (value[di] >= 3 || month == '02') {\r\n          //disable greater values than the maxDay's second digit\r\n          for (i = +maxDay[1] + 1; i <= 9; ++i) {\r\n            disabled.push(i);\r\n          }\r\n        }\r\n\r\n        if (isMax && +maxD[0] == value[di]) {\r\n          //if max year and month disable greater values\r\n          for (i = +maxD[1] + 1; i <= 9; ++i) {\r\n            disabled.push(i);\r\n          }\r\n        }\r\n\r\n        if (isMin && minD[0] == value[di]) {\r\n          //if min year and month disable lower values\r\n          for (i = 0; i < +minD[1]; ++i) {\r\n            disabled.push(i);\r\n          }\r\n        }\r\n\r\n        if (value[di] === 0) {\r\n          // if month first digit 0\r\n          disabled.push(0);\r\n\r\n          if (isMax || isMin) {\r\n            // disable greater/lower valies if min or max\r\n            for (i = isMax ? +maxD + 1 : 1; i <= (isMin ? +minD - 1 : 9); ++i) {\r\n              disabled.push(i);\r\n            }\r\n          }\r\n        }\r\n      } // year check\r\n\r\n\r\n      if (value[yi + 2] !== undefined && month == '02' && day == '29') {\r\n        // if 29th and february than just leap years allowed\r\n        for (j = +('' + value[yi] + value[yi + 1] + value[yi + 2] + 0); j <= +('' + value[yi] + value[yi + 1] + value[yi + 2] + 9); ++j) {\r\n          disabled.push(!isleapYear(j) ? j % 10 : '');\r\n        }\r\n      }\r\n\r\n      if (value.length == yi) {\r\n        // before year's first digit set\r\n        if (s.min) {\r\n          // disable lower values\r\n          for (i = 0; i < +minY[0]; ++i) {\r\n            disabled.push(i);\r\n          }\r\n        }\r\n\r\n        if (s.max) {\r\n          //disable greater values\r\n          for (i = +maxY[0] + 1; i <= 9; ++i) {\r\n            disabled.push(i);\r\n          }\r\n        }\r\n\r\n        disabled.push(0);\r\n      }\r\n\r\n      if (s.min || s.max) {\r\n        for (j = 1; j < 4; ++j) {\r\n          if (value.length == yi + j) {\r\n            // before year's i-th digit set\r\n            if (value[yi + j - 1] == +minY[j - 1] && (j == 3 ? value[yi + j - 2] == +minY[j - 2] : true)) {\r\n              for (i = 0; i < +minY[j] + (j == 3 && value[mi + 1] && +minM > +month ? 1 : 0); ++i) {\r\n                //if month less than min-month than doesn't allow minYear\r\n                disabled.push(i);\r\n              }\r\n            }\r\n\r\n            if (value[yi + j - 1] == +maxY[j - 1] && (j == 3 ? value[yi + j - 2] == +maxY[j - 2] : true)) {\r\n              for (i = +maxY[j] + (j == 3 && +maxM < +month ? 0 : 1); i <= 9; ++i) {\r\n                //if month greater than max-month than doesn't allow maxYear\r\n                disabled.push(i);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return disabled;\r\n    }\r\n\r\n    function calcDate(value) {\r\n      return new Date(+('' + value[yi] + value[yi + 1] + value[yi + 2] + value[yi + 3]), +('' + value[mi] + value[mi + 1]) - 1, +('' + value[di] + value[di + 1]));\r\n    } // Extended methods\r\n    // ---\r\n\r\n\r\n    inst.getVal = function (temp) {\r\n      return inst._hasValue || temp ? calcDate(inst.getArrayVal(temp)) : null;\r\n    }; // ---\r\n\r\n\r\n    return {\r\n      placeholder: '-',\r\n      fill: 'ltr',\r\n      allowLeadingZero: true,\r\n      template: templ,\r\n      parseValue: function parseValue(value) {\r\n        var i,\r\n            ret = [],\r\n            v = value || s.defaultValue,\r\n            d = parseDate(s.dateFormat, v, s);\r\n\r\n        if (v) {\r\n          for (i = 0; i < indexArray.length; ++i) {\r\n            if (/m/i.test(indexArray[i].n)) {\r\n              ret = ret.concat(((s.getMonth(d) < 9 ? '0' : '') + (s.getMonth(d) + 1)).split(''));\r\n            } else if (/d/i.test(indexArray[i].n)) {\r\n              ret = ret.concat(((s.getDay(d) < 10 ? '0' : '') + s.getDay(d)).split(''));\r\n            } else {\r\n              ret = ret.concat((s.getYear(d) + '').split(''));\r\n            }\r\n          }\r\n        }\r\n\r\n        return ret;\r\n      },\r\n      formatValue: function formatValue(value) {\r\n        return formatDate(s.dateFormat, calcDate(value), s);\r\n      },\r\n      validate: function validate(data) {\r\n        var value = data.values,\r\n            d = calcDate(value);\r\n        return {\r\n          disabled: disableButtons(value),\r\n          invalid: !(d != 'Invalid Date' && (s.min ? s.min <= d : true) && (s.max ? d <= s.max : true)) || (s.invalid ? inst._indexOf(s.invalid, d) != -1 : false)\r\n        };\r\n      }\r\n    };\r\n  }; // ---\r\n\r\n  var MbscNumpadBase = (function (_super) {\r\n      __extends(MbscNumpadBase, _super);\r\n      function MbscNumpadBase(initialElem, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, view) || this;\r\n          _this.optionService = optionService;\r\n          _this.onSet = new core.EventEmitter();\r\n          _this.onClear = new core.EventEmitter();\r\n          _this.onInput = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      MbscNumpadBase.decorators = [\r\n          { type: core.Directive, args: [{ selector: '[mbsc-n-b]' },] },\r\n      ];\r\n      MbscNumpadBase.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscNumpadBase.propDecorators = {\r\n          'allowLeadingZero': [{ type: core.Input },],\r\n          'deleteIcon': [{ type: core.Input },],\r\n          'fill': [{ type: core.Input },],\r\n          'leftKey': [{ type: core.Input },],\r\n          'mask': [{ type: core.Input },],\r\n          'placeholderChar': [{ type: core.Input, args: ['char-placeholder',] },],\r\n          'rightKey': [{ type: core.Input },],\r\n          'template': [{ type: core.Input },],\r\n          'validate': [{ type: core.Input },],\r\n          'onSet': [{ type: core.Output },],\r\n          'onClear': [{ type: core.Output },],\r\n          'onInput': [{ type: core.Output },],\r\n          'cancelText': [{ type: core.Input },],\r\n          'clearText': [{ type: core.Input },],\r\n          'setText': [{ type: core.Input },],\r\n      };\r\n      return MbscNumpadBase;\r\n  }(MbscFrameBase));\r\n  var MbscNumpad = (function (_super) {\r\n      __extends(MbscNumpad, _super);\r\n      function MbscNumpad(initialElem, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, view) || this;\r\n          _this.options = {};\r\n          _this.preset = undefined;\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscNumpad.prototype, \"value\", {\r\n          set: function (v) {\r\n              if (!this.control) {\r\n                  this.setNewValueProxy(v);\r\n              }\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscNumpad.prototype.setNewValue = function (v) {\r\n          if (this.instance) {\r\n              var innerValue = this.instance.getVal();\r\n              if (innerValue !== v) {\r\n                  this.instance.setVal(v, true, false);\r\n                  if (this._inputService && this._inputService.input) {\r\n                      this._inputService.input.innerValue = this.instance._value;\r\n                  }\r\n              }\r\n          }\r\n      };\r\n      MbscNumpad.prototype.initControl = function () {\r\n          var options = extend$1({ preset: this.preset }, this.optionService ? this.optionService.options : {}, this.options, this.inlineOptionsObj, this.optionExtensions);\r\n          this.instance = new Numpad(this.element, options);\r\n          if (this.initialValue !== undefined) {\r\n              this.instance.setVal(this.initialValue, true, false);\r\n          }\r\n      };\r\n      MbscNumpad.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-numpad]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscNumpad.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscNumpad.propDecorators = {\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n          'value': [{ type: core.Input, args: ['mbsc-numpad',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['mbsc-numpadChange',] },],\r\n      };\r\n      return MbscNumpad;\r\n  }(MbscNumpadBase));\r\n  var MbscNumpadComponent = (function (_super) {\r\n      __extends(MbscNumpadComponent, _super);\r\n      function MbscNumpadComponent(initialElem, zone, control, inputService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, null) || this;\r\n          _this.errorMessage = '';\r\n          _this.placeholder = '';\r\n          return _this;\r\n      }\r\n      MbscNumpadComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscNumpadComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-numpad',\r\n                      exportAs: 'mobiscroll',\r\n                      template: INPUT_TEMPLATE\r\n                  },] },\r\n      ];\r\n      MbscNumpadComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscNumpadComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n      };\r\n      return MbscNumpadComponent;\r\n  }(MbscNumpad));\r\n  var MbscNumpadDecimal = (function (_super) {\r\n      __extends(MbscNumpadDecimal, _super);\r\n      function MbscNumpadDecimal(initialElem, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, view) || this;\r\n          _this.options = {};\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          _this.preset = 'decimal';\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscNumpadDecimal.prototype, \"value\", {\r\n          set: function (v) {\r\n              if (this.instance || v !== '') {\r\n                  this.setNewValueProxy(v);\r\n              }\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscNumpadDecimal.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-numpad-decimal]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscNumpadDecimal.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscNumpadDecimal.propDecorators = {\r\n          'value': [{ type: core.Input, args: ['mbsc-numpad-decimal',] },],\r\n          'decimalSeparator': [{ type: core.Input },],\r\n          'defaultValue': [{ type: core.Input },],\r\n          'entryMode': [{ type: core.Input },],\r\n          'invalid': [{ type: core.Input },],\r\n          'scale': [{ type: core.Input },],\r\n          'maxScale': [{ type: core.Input },],\r\n          'min': [{ type: core.Input },],\r\n          'max': [{ type: core.Input },],\r\n          'prefix': [{ type: core.Input },],\r\n          'returnAffix': [{ type: core.Input },],\r\n          'suffix': [{ type: core.Input },],\r\n          'thousandsSeparator': [{ type: core.Input },],\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['mbsc-numpad-decimalChange',] },],\r\n      };\r\n      return MbscNumpadDecimal;\r\n  }(MbscNumpad));\r\n  var MbscNumpadDecimalComponent = (function (_super) {\r\n      __extends(MbscNumpadDecimalComponent, _super);\r\n      function MbscNumpadDecimalComponent(initialElem, zone, control, inputService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, null) || this;\r\n          _this.errorMessage = '';\r\n          _this.placeholder = '';\r\n          return _this;\r\n      }\r\n      MbscNumpadDecimalComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscNumpadDecimalComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-numpad-decimal',\r\n                      exportAs: 'mobiscroll',\r\n                      template: INPUT_TEMPLATE\r\n                  },] },\r\n      ];\r\n      MbscNumpadDecimalComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscNumpadDecimalComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n      };\r\n      return MbscNumpadDecimalComponent;\r\n  }(MbscNumpadDecimal));\r\n  var MbscNumpadDate = (function (_super) {\r\n      __extends(MbscNumpadDate, _super);\r\n      function MbscNumpadDate(initialElem, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, view) || this;\r\n          _this.options = {};\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscNumpadDate.prototype, \"value\", {\r\n          set: function (v) {\r\n              if (this.instance || v !== '') {\r\n                  this.setNewValueProxy(v);\r\n              }\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscNumpadDate.prototype.setNewValue = function (v) {\r\n          if (this.instance) {\r\n              var innerValue = this.instance.getVal();\r\n              if ((innerValue && !v) ||\r\n                  (!innerValue && v) ||\r\n                  (innerValue && v && innerValue.getTime() !== v.getTime())) {\r\n                  this.instance.setVal(v, true, false);\r\n                  if (this._inputService && this._inputService.input) {\r\n                      this._inputService.input.innerValue = this.instance._value;\r\n                  }\r\n              }\r\n          }\r\n      };\r\n      MbscNumpadDate.prototype.initControl = function () {\r\n          var options = extend$1({ preset: 'date' }, this.optionService ? this.optionService.options : {}, this.options, this.inlineOptionsObj, this.optionExtensions);\r\n          this.instance = new Numpad(this.element, options);\r\n          if (this.initialValue !== undefined && this.initialValue !== \"\") {\r\n              this.instance.setVal(this.initialValue, true, false);\r\n          }\r\n      };\r\n      MbscNumpadDate.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-numpad-date]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscNumpadDate.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscNumpadDate.propDecorators = {\r\n          'value': [{ type: core.Input, args: ['mbsc-numpad-date',] },],\r\n          'dateFormat': [{ type: core.Input },],\r\n          'dateOrder': [{ type: core.Input },],\r\n          'delimiter': [{ type: core.Input },],\r\n          'defaultValue': [{ type: core.Input },],\r\n          'invalid': [{ type: core.Input },],\r\n          'min': [{ type: core.Input },],\r\n          'max': [{ type: core.Input },],\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['mbsc-numpad-dateChange',] },],\r\n      };\r\n      return MbscNumpadDate;\r\n  }(MbscNumpadBase));\r\n  var MbscNumpadDateComponent = (function (_super) {\r\n      __extends(MbscNumpadDateComponent, _super);\r\n      function MbscNumpadDateComponent(initialElem, zone, control, inputService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, null) || this;\r\n          _this.errorMessage = '';\r\n          _this.placeholder = '';\r\n          return _this;\r\n      }\r\n      MbscNumpadDateComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscNumpadDateComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-numpad-date',\r\n                      exportAs: 'mobiscroll',\r\n                      template: INPUT_TEMPLATE\r\n                  },] },\r\n      ];\r\n      MbscNumpadDateComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscNumpadDateComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n      };\r\n      return MbscNumpadDateComponent;\r\n  }(MbscNumpadDate));\r\n  var MbscNumpadTime = (function (_super) {\r\n      __extends(MbscNumpadTime, _super);\r\n      function MbscNumpadTime(initialElem, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, view) || this;\r\n          _this.options = {};\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscNumpadTime.prototype, \"value\", {\r\n          set: function (v) {\r\n              if (this.instance || v !== '') {\r\n                  this.setNewValueProxy(v);\r\n              }\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscNumpadTime.prototype.setNewValue = function (v) {\r\n          if (this.instance) {\r\n              var innerValue = this.instance.getVal();\r\n              if (innerValue !== v) {\r\n                  this.instance.setVal(v, true, false);\r\n                  if (this._inputService && this._inputService.input) {\r\n                      this._inputService.input.innerValue = this.instance._value;\r\n                  }\r\n              }\r\n          }\r\n      };\r\n      MbscNumpadTime.prototype.initControl = function () {\r\n          var options = extend$1({ preset: 'time' }, this.optionService ? this.optionService.options : {}, this.options, this.inlineOptionsObj, this.optionExtensions);\r\n          this.instance = new Numpad(this.element, options);\r\n          if (this.initialValue !== undefined && this.initialValue !== \"\") {\r\n              this.instance.setVal(this.initialValue, true, false);\r\n          }\r\n      };\r\n      MbscNumpadTime.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-numpad-time]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscNumpadTime.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscNumpadTime.propDecorators = {\r\n          'value': [{ type: core.Input, args: ['mbsc-numpad-time',] },],\r\n          'defaultValue': [{ type: core.Input },],\r\n          'invalid': [{ type: core.Input },],\r\n          'max': [{ type: core.Input },],\r\n          'min': [{ type: core.Input },],\r\n          'timeFormat': [{ type: core.Input },],\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['mbsc-numpad-timeChange',] },],\r\n      };\r\n      return MbscNumpadTime;\r\n  }(MbscNumpadBase));\r\n  var MbscNumpadTimeComponent = (function (_super) {\r\n      __extends(MbscNumpadTimeComponent, _super);\r\n      function MbscNumpadTimeComponent(initialElem, zone, control, inputService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, null) || this;\r\n          _this.errorMessage = '';\r\n          _this.placeholder = '';\r\n          return _this;\r\n      }\r\n      MbscNumpadTimeComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscNumpadTimeComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-numpad-time',\r\n                      exportAs: 'mobiscroll',\r\n                      template: INPUT_TEMPLATE\r\n                  },] },\r\n      ];\r\n      MbscNumpadTimeComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscNumpadTimeComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n      };\r\n      return MbscNumpadTimeComponent;\r\n  }(MbscNumpadTime));\r\n  var MbscNumpadTimespan = (function (_super) {\r\n      __extends(MbscNumpadTimespan, _super);\r\n      function MbscNumpadTimespan(initialElem, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, view) || this;\r\n          _this.options = {};\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          _this.preset = 'timespan';\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscNumpadTimespan.prototype, \"value\", {\r\n          set: function (v) {\r\n              if (this.instance || v !== '') {\r\n                  this.setNewValueProxy(v);\r\n              }\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscNumpadTimespan.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-numpad-timespan]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscNumpadTimespan.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscNumpadTimespan.propDecorators = {\r\n          'value': [{ type: core.Input, args: ['mbsc-numpad-timespan',] },],\r\n          'defaultValue': [{ type: core.Input },],\r\n          'invalid': [{ type: core.Input },],\r\n          'min': [{ type: core.Input },],\r\n          'max': [{ type: core.Input },],\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['mbsc-numpad-timespanChange',] },],\r\n      };\r\n      return MbscNumpadTimespan;\r\n  }(MbscNumpad));\r\n  var MbscNumpadTimespanComponent = (function (_super) {\r\n      __extends(MbscNumpadTimespanComponent, _super);\r\n      function MbscNumpadTimespanComponent(initialElem, zone, control, inputService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, null) || this;\r\n          _this.errorMessage = '';\r\n          _this.placeholder = '';\r\n          return _this;\r\n      }\r\n      MbscNumpadTimespanComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscNumpadTimespanComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-numpad-timespan',\r\n                      exportAs: 'mobiscroll',\r\n                      template: INPUT_TEMPLATE\r\n                  },] },\r\n      ];\r\n      MbscNumpadTimespanComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscNumpadTimespanComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n      };\r\n      return MbscNumpadTimespanComponent;\r\n  }(MbscNumpadTimespan));\r\n  var comps$1 = [\r\n      MbscNumpad,\r\n      MbscNumpadBase,\r\n      MbscNumpadComponent,\r\n      MbscNumpadDecimal,\r\n      MbscNumpadDecimalComponent,\r\n      MbscNumpadDate,\r\n      MbscNumpadDateComponent,\r\n      MbscNumpadTime,\r\n      MbscNumpadTimeComponent,\r\n      MbscNumpadTimespan,\r\n      MbscNumpadTimespanComponent\r\n  ];\r\n  var MbscNumpadModule = (function () {\r\n      function MbscNumpadModule() {\r\n      }\r\n      MbscNumpadModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [common.CommonModule, MbscFrameBaseModule, MbscInputModule],\r\n                      declarations: comps$1,\r\n                      exports: comps$1\r\n                  },] },\r\n      ];\r\n      MbscNumpadModule.ctorParameters = function () { return []; };\r\n      return MbscNumpadModule;\r\n  }());\r\n\r\n  var Optionlist = function Optionlist(elm, settings) {\r\n    var that = this; // Call the parent constructor\r\n\r\n    NavigationBase.call(this, elm, settings, true);\r\n    /**\r\n     * Optionlist initialization.\r\n     */\r\n\r\n    that.___init = function () {}; // Constructor\r\n\r\n\r\n    that.init();\r\n  }; // Defaults\r\n\r\n  Optionlist.prototype = {\r\n    _class: 'optionlist',\r\n    _hasDef: true,\r\n    _hasTheme: true,\r\n    _hasLang: true,\r\n    _responsive: true,\r\n    _defaults: extend$1({}, NavigationBase.prototype._defaults, {\r\n      select: 'multiple',\r\n      variant: 'a',\r\n      display: 'inline'\r\n    })\r\n  };\r\n  classes.Optionlist = Optionlist;\r\n  mobiscroll.themes.optionlist = mobiscroll.themes.navigation;\r\n\r\n  var MbscOptionItem = (function (_super) {\r\n      __extends(MbscOptionItem, _super);\r\n      function MbscOptionItem(notifyItemService, _elem) {\r\n          return _super.call(this, notifyItemService, _elem) || this;\r\n      }\r\n      MbscOptionItem.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-option-item',\r\n                      template: '<ng-content></ng-content>',\r\n                      host: {\r\n                          '[attr.data-icon]': 'icon',\r\n                          '[attr.data-disabled]': 'disabled',\r\n                          '[attr.data-selected]': 'selected',\r\n                          '[attr.data-id]': 'id'\r\n                      }\r\n                  },] },\r\n      ];\r\n      MbscOptionItem.ctorParameters = function () { return [\r\n          { type: MbscNotifyItemService, },\r\n          { type: core.ElementRef, },\r\n      ]; };\r\n      return MbscOptionItem;\r\n  }(MbscNavItemBase));\r\n  var MbscOptionlist = (function (_super) {\r\n      __extends(MbscOptionlist, _super);\r\n      function MbscOptionlist(initialElem, zone, notifyItemService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, notifyItemService) || this;\r\n          _this.optionService = optionService;\r\n          return _this;\r\n      }\r\n      MbscOptionlist.prototype.initControl = function () {\r\n          var _this = this;\r\n          var onItemTap = this.tapHandler.bind(this);\r\n          var onItemTapUser = this.options && this.options.onItemTap;\r\n          if (onItemTapUser) {\r\n              onItemTap = function (event, inst) {\r\n                  _this.tapHandler(event, inst);\r\n                  return onItemTapUser(event, inst);\r\n              };\r\n          }\r\n          var options = extend$1({}, this.optionService ? this.optionService.options : {}, this.options, this.inlineOptionsObj, { onItemTap: onItemTap });\r\n          this.instance = new Optionlist(this.initialElem.nativeElement, options);\r\n          this.notifyItemService.notifyInstanceReady(this.instance);\r\n          this.addRemoveObserver = this.notifyItemService.onAddRemove().subscribe(function (item) {\r\n              _this.instance.refresh();\r\n          });\r\n      };\r\n      MbscOptionlist.prototype.ngOnDestroy = function () {\r\n          this.notifyItemService.onAddRemove().unsubscribe(this.addRemoveObserver);\r\n          _super.prototype.ngOnDestroy.call(this);\r\n      };\r\n      MbscOptionlist.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-optionlist',\r\n                      template: '<ng-content></ng-content>',\r\n                      providers: [MbscNotifyItemService],\r\n                      exportAs: 'mobiscroll',\r\n                      host: { 'class': 'mbsc-cloak' }\r\n                  },] },\r\n      ];\r\n      MbscOptionlist.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: MbscNotifyItemService, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscOptionlist.propDecorators = {\r\n          'select': [{ type: core.Input },],\r\n          'items': [{ type: core.ContentChildren, args: [MbscOptionItem,] },],\r\n      };\r\n      return MbscOptionlist;\r\n  }(MbscNavigationBase));\r\n  var MbscOptionlistModule = (function () {\r\n      function MbscOptionlistModule() {\r\n      }\r\n      MbscOptionlistModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [MbscNavigationBaseModule],\r\n                      declarations: [MbscOptionItem, MbscOptionlist],\r\n                      exports: [MbscOptionItem, MbscOptionlist]\r\n                  },] },\r\n      ];\r\n      MbscOptionlistModule.ctorParameters = function () { return []; };\r\n      return MbscOptionlistModule;\r\n  }());\r\n\r\n  // ---\r\n\r\n  var Page = function Page(el, settings) {\r\n    var cssClass = '',\r\n        $elm = $$1(el),\r\n        that = this,\r\n        s = that.settings; // Call the parent constructor\r\n\r\n    Base.call(this, el, settings, true);\r\n    /**\r\n     * Page initialization.\r\n     */\r\n\r\n    that._init = function () {\r\n      var ctx = s.context,\r\n          $ctx = $$1(ctx),\r\n          $topMenu = $ctx.find('.mbsc-ms-top .mbsc-ms'),\r\n          $bottomMenu = $ctx.find('.mbsc-ms-bottom .mbsc-ms'),\r\n          css = {};\r\n\r\n      if (ctx == 'body') {\r\n        $$1('body,html').addClass('mbsc-page-ctx');\r\n      } else {\r\n        $ctx.addClass('mbsc-page-ctx');\r\n      }\r\n\r\n      if (cssClass) {\r\n        $elm.removeClass(cssClass);\r\n      }\r\n\r\n      if ($topMenu.length) {\r\n        css.paddingTop = $topMenu[0].offsetHeight;\r\n      }\r\n\r\n      if ($bottomMenu.length) {\r\n        css.paddingBottom = $bottomMenu[0].offsetHeight;\r\n      }\r\n\r\n      cssClass = 'mbsc-page mbsc-' + s.theme + (s.baseTheme ? ' mbsc-' + s.baseTheme : '') + (s.rtl ? ' mbsc-rtl' : ' mbsc-ltr');\r\n      $elm.addClass(cssClass).removeClass('mbsc-cloak').css(css);\r\n    };\r\n    /**\r\n     * Destroys the mobiscroll instance.\r\n     */\r\n\r\n\r\n    that._destroy = function () {\r\n      $elm.removeClass(cssClass);\r\n    }; // Constructor\r\n\r\n\r\n    s = that.settings;\r\n    that.init();\r\n  }; // Extend defaults\r\n\r\n  Page.prototype = {\r\n    _hasDef: true,\r\n    _hasTheme: true,\r\n    _hasLang: true,\r\n    _class: 'page',\r\n    _defaults: {\r\n      context: 'body'\r\n    }\r\n  };\r\n  classes.Page = Page;\r\n  mobiscroll.themes.page.mobiscroll = {}; // ---\r\n  // Page end\r\n  // Init mbsc-page elements on page load or when mbsc-enhance event is triggeres\r\n\r\n  autoInit('[mbsc-page]', Page);\r\n\r\n  var MbscPage = (function (_super) {\r\n      __extends(MbscPage, _super);\r\n      function MbscPage(hostElement, optionsService, zone) {\r\n          var _this = _super.call(this, hostElement, zone) || this;\r\n          _this.optionsService = optionsService;\r\n          return _this;\r\n      }\r\n      MbscPage.prototype.ngOnInit = function () {\r\n          var optionsObj = extend$1({}, this.options, this.inlineOptionsObj);\r\n          this.optionsService.options = optionsObj;\r\n      };\r\n      MbscPage.prototype.initControl = function () {\r\n          var options = extend$1({}, this.options, this.inlineOptionsObj);\r\n          this.instance = new Page(this.initElem.nativeElement, options);\r\n      };\r\n      MbscPage.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-page',\r\n                      template: '<div #initElement><ng-content></ng-content></div>',\r\n                      providers: [MbscOptionsService],\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscPage.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: MbscOptionsService, },\r\n          { type: core.NgZone, },\r\n      ]; };\r\n      MbscPage.propDecorators = {\r\n          'options': [{ type: core.Input },],\r\n          'context': [{ type: core.Input },],\r\n          'initElem': [{ type: core.ViewChild, args: ['initElement', { static: false },] },],\r\n      };\r\n      return MbscPage;\r\n  }(MbscBase));\r\n  var MbscNote = (function () {\r\n      function MbscNote(initialElem) {\r\n          this.initialElem = initialElem;\r\n          this.color = 'primary';\r\n      }\r\n      Object.defineProperty(MbscNote.prototype, \"classNames\", {\r\n          get: function () {\r\n              return 'mbsc-note mbsc-note-' + this.color;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscNote.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-note',\r\n                      template: '<ng-content></ng-content>',\r\n                      host: {\r\n                          '[class]': 'classNames'\r\n                      },\r\n                      styles: [':host { display: block; }']\r\n                  },] },\r\n      ];\r\n      MbscNote.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n      ]; };\r\n      MbscNote.propDecorators = {\r\n          'color': [{ type: core.Input },],\r\n      };\r\n      return MbscNote;\r\n  }());\r\n  var MbscAvatar = (function () {\r\n      function MbscAvatar() {\r\n          this.draggable = false;\r\n      }\r\n      MbscAvatar.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-avatar',\r\n                      template: '<img class=\"mbsc-avatar\" [src]=\"src\" [alt]=\"alt\" [draggable]=\"draggable\" />'\r\n                  },] },\r\n      ];\r\n      MbscAvatar.ctorParameters = function () { return []; };\r\n      MbscAvatar.propDecorators = {\r\n          'draggable': [{ type: core.Input },],\r\n          'src': [{ type: core.Input },],\r\n          'alt': [{ type: core.Input },],\r\n      };\r\n      return MbscAvatar;\r\n  }());\r\n  var MbscPageModule = (function () {\r\n      function MbscPageModule() {\r\n      }\r\n      MbscPageModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [MbscBaseModule],\r\n                      declarations: [MbscPage, MbscNote, MbscAvatar],\r\n                      exports: [MbscPage, MbscNote, MbscAvatar]\r\n                  },] },\r\n      ];\r\n      MbscPageModule.ctorParameters = function () { return []; };\r\n      return MbscPageModule;\r\n  }());\r\n\r\n  var MbscPopup = (function (_super) {\r\n      __extends(MbscPopup, _super);\r\n      function MbscPopup(initialElem, optionService, zone) {\r\n          var _this = _super.call(this, initialElem, zone) || this;\r\n          _this.optionService = optionService;\r\n          _this.onBeforeClose = new core.EventEmitter();\r\n          _this.onBeforeShow = new core.EventEmitter();\r\n          _this.onCancel = new core.EventEmitter();\r\n          _this.onClose = new core.EventEmitter();\r\n          _this.onDestroy = new core.EventEmitter();\r\n          _this.onFill = new core.EventEmitter();\r\n          _this.onMarkupReady = new core.EventEmitter();\r\n          _this.onPosition = new core.EventEmitter();\r\n          _this.onShow = new core.EventEmitter();\r\n          _this.onSet = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      MbscPopup.prototype.ngAfterViewInit = function () {\r\n          this.getInlineEvents();\r\n          var options = extend$1({}, this.optionService ? this.optionService.options : {}, this.options, this.inlineOptionsObj);\r\n          this.instance = new Popup(this.initialElem.nativeElement, options);\r\n      };\r\n      MbscPopup.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-popup',\r\n                      template: \"<ng-content></ng-content>\",\r\n                      exportAs: 'mobiscroll',\r\n                      host: { 'class': 'mbsc-cloak' }\r\n                  },] },\r\n      ];\r\n      MbscPopup.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.NgZone, },\r\n      ]; };\r\n      MbscPopup.propDecorators = {\r\n          'options': [{ type: core.Input, args: ['options',] },],\r\n          'anchor': [{ type: core.Input },],\r\n          'animate': [{ type: core.Input },],\r\n          'buttons': [{ type: core.Input },],\r\n          'closeOnOverlayTap': [{ type: core.Input },],\r\n          'context': [{ type: core.Input },],\r\n          'disabled': [{ type: core.Input },],\r\n          'display': [{ type: core.Input },],\r\n          'focusOnClose': [{ type: core.Input },],\r\n          'focusTrap': [{ type: core.Input },],\r\n          'headerText': [{ type: core.Input },],\r\n          'showOnFocus': [{ type: core.Input },],\r\n          'showOnTap': [{ type: core.Input },],\r\n          'touchUi': [{ type: core.Input },],\r\n          'okText': [{ type: core.Input },],\r\n          'cancelText': [{ type: core.Input },],\r\n          'onBeforeClose': [{ type: core.Output },],\r\n          'onBeforeShow': [{ type: core.Output },],\r\n          'onCancel': [{ type: core.Output },],\r\n          'onClose': [{ type: core.Output },],\r\n          'onDestroy': [{ type: core.Output },],\r\n          'onFill': [{ type: core.Output },],\r\n          'onMarkupReady': [{ type: core.Output },],\r\n          'onPosition': [{ type: core.Output },],\r\n          'onShow': [{ type: core.Output },],\r\n          'onSet': [{ type: core.Output },],\r\n      };\r\n      return MbscPopup;\r\n  }(MbscBase));\r\n  var MbscWidget = (function (_super) {\r\n      __extends(MbscWidget, _super);\r\n      function MbscWidget() {\r\n          return _super !== null && _super.apply(this, arguments) || this;\r\n      }\r\n      MbscWidget.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-widget',\r\n                      template: \"<ng-content></ng-content>\",\r\n                      exportAs: 'mobiscroll',\r\n                      host: { 'class': 'mbsc-cloak' }\r\n                  },] },\r\n      ];\r\n      MbscWidget.ctorParameters = function () { return []; };\r\n      return MbscWidget;\r\n  }(MbscPopup));\r\n  var MbscPopupModule = (function () {\r\n      function MbscPopupModule() {\r\n      }\r\n      MbscPopupModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [MbscBaseModule],\r\n                      declarations: [MbscPopup, MbscWidget],\r\n                      exports: [MbscPopup, MbscWidget]\r\n                  },] },\r\n      ];\r\n      MbscPopupModule.ctorParameters = function () { return []; };\r\n      return MbscPopupModule;\r\n  }());\r\n\r\n  var RangePicker = Scroller;\r\n  var defaults$c = {\r\n    autoCorrect: true,\r\n    showSelector: true,\r\n    minRange: 1,\r\n    rangeTap: true\r\n  };\r\n\r\n  presets.range = function (inst) {\r\n    // Private functions\r\n    // ---\r\n    function normalize(d, ref) {\r\n      if (d) {\r\n        d.setFullYear(ref.getFullYear());\r\n        d.setMonth(ref.getMonth());\r\n        d.setDate(ref.getDate());\r\n      }\r\n    }\r\n\r\n    function normalizeTime(date, isEnd) {\r\n      var o = inst._order,\r\n          d = new Date(date);\r\n\r\n      if (o.h === undefined) {\r\n        d.setHours(isEnd ? 23 : 0);\r\n      }\r\n\r\n      if (o.i === undefined) {\r\n        d.setMinutes(isEnd ? 59 : 0);\r\n      }\r\n\r\n      if (o.s === undefined) {\r\n        d.setSeconds(isEnd ? 59 : 0);\r\n      }\r\n\r\n      d.setMilliseconds(isEnd ? 999 : 0);\r\n      return d;\r\n    }\r\n\r\n    function updateInputs(change) {\r\n      inst._startDate = startDate = tempStartDate;\r\n      inst._endDate = endDate = tempEndDate;\r\n\r\n      if (s.startInput) {\r\n        $$1(s.startInput).val(inst.startVal);\r\n\r\n        if (change) {\r\n          $$1(s.startInput).trigger('change');\r\n        }\r\n      }\r\n\r\n      if (s.endInput) {\r\n        $$1(s.endInput).val(inst.endVal);\r\n\r\n        if (change) {\r\n          $$1(s.endInput).trigger('change');\r\n        }\r\n      }\r\n    }\r\n\r\n    function addDays(d, days) {\r\n      return new Date(d.getFullYear(), d.getMonth(), d.getDate() + days);\r\n    }\r\n\r\n    function checkRangeSize(curr) {\r\n      if (hasTime) {\r\n        // Check exact times in milliseconds for min and max ranges\r\n        if (tempEndDate - tempStartDate > s.maxRange - 1) {\r\n          if (curr) {\r\n            tempStartDate = new Date(Math.max(minDate, tempEndDate - s.maxRange + 1));\r\n          } else {\r\n            tempEndDate = new Date(Math.min(maxDate, +tempStartDate + s.maxRange - 1));\r\n          }\r\n        }\r\n\r\n        if (tempEndDate - tempStartDate < s.minRange - 1) {\r\n          if (curr) {\r\n            tempStartDate = new Date(Math.max(minDate, tempEndDate - s.minRange + 1));\r\n          } else {\r\n            tempEndDate = new Date(Math.min(maxDate, +tempStartDate + s.minRange - 1));\r\n          }\r\n        }\r\n      } else {\r\n        // Work with days only, not milliseconds. This way daylight saving times are handled\r\n        if (Math.ceil((tempEndDate - tempStartDate) / oneDay) > maxDays) {\r\n          if (curr) {\r\n            tempStartDate = normalizeTime(Math.max(minDate, addDays(tempEndDate, 1 - maxDays)), false);\r\n          } else {\r\n            tempEndDate = normalizeTime(Math.min(maxDate, addDays(tempStartDate, maxDays - 1)), true);\r\n          }\r\n        }\r\n\r\n        if (Math.ceil((tempEndDate - tempStartDate) / oneDay) < minDays) {\r\n          if (curr) {\r\n            tempStartDate = normalizeTime(Math.max(minDate, addDays(tempEndDate, 1 - minDays)), false);\r\n          } else {\r\n            tempEndDate = normalizeTime(Math.min(maxDate, addDays(tempStartDate, minDays - 1)), true);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function validate(dates, ui) {\r\n      var ret = true;\r\n\r\n      if (dates && tempStartDate && tempEndDate) {\r\n        // We need to check this 2 times, because the\r\n        // corrected range is constrained by min/max dates\r\n        checkRangeSize(curr);\r\n        checkRangeSize(!curr);\r\n      }\r\n\r\n      if (!tempStartDate || !tempEndDate) {\r\n        ret = false;\r\n      }\r\n\r\n      if (ui) {\r\n        highlightDays();\r\n      }\r\n\r\n      return ret;\r\n    }\r\n\r\n    function calcDayNr() {\r\n      return tempStartDate && tempEndDate ? Math.max(1, Math.round((new Date(tempEndDate).setHours(0, 0, 0, 0) - new Date(tempStartDate).setHours(0, 0, 0, 0)) / 86400000) + 1) : 0;\r\n    }\r\n\r\n    function selectTab(tab) {\r\n      tab.addClass(selectedClass).attr('aria-checked', 'true');\r\n    }\r\n\r\n    function setActiveTab() {\r\n      if (showSelector && ctx) {\r\n        $$1('.mbsc-range-btn', ctx).removeClass(selectedClass).removeAttr('aria-checked');\r\n        selectTab($$1('.mbsc-range-btn', ctx).eq(curr));\r\n      }\r\n    }\r\n\r\n    function highlightDays() {\r\n      var start,\r\n          startT,\r\n          end,\r\n          endT,\r\n          hl,\r\n          nr = 0,\r\n          startClass = autoChange || !curr ? ' mbsc-cal-day-hl mbsc-cal-sel-start' : ' mbsc-cal-sel-start',\r\n          endClass = autoChange || curr ? ' mbsc-cal-day-hl mbsc-cal-sel-end' : ' mbsc-cal-sel-end';\r\n      inst.startVal = tempStartDate ? formatDate(format, tempStartDate, s) : '';\r\n      inst.endVal = tempEndDate ? formatDate(format, tempEndDate, s) : '';\r\n\r\n      if (ctx) {\r\n        $$1('.mbsc-range-btn-v-start', ctx).html(inst.startVal || '&nbsp;');\r\n        $$1('.mbsc-range-btn-v-end', ctx).html(inst.endVal || '&nbsp;'); // Highlight dates\r\n\r\n        start = tempStartDate ? new Date(tempStartDate) : null;\r\n        end = tempEndDate ? new Date(tempEndDate) : null;\r\n\r\n        if (!start && end) {\r\n          start = new Date(end);\r\n        }\r\n\r\n        if (!end && start) {\r\n          end = new Date(start);\r\n        }\r\n\r\n        hl = curr ? end : start;\r\n        $$1('.mbsc-cal-day-picker .mbsc-cal-day-hl', ctx).removeClass(highlightClass);\r\n        $$1('.mbsc-cal-day-picker .mbsc-selected', ctx).removeClass('mbsc-cal-sel-start mbsc-cal-sel-end ' + selectedClass).removeAttr('aria-selected');\r\n\r\n        if (start && end) {\r\n          startT = start.setHours(0, 0, 0, 0);\r\n          endT = end.setHours(0, 0, 0, 0);\r\n\r\n          while (end >= start && nr < 126) {\r\n            $$1('.mbsc-cal-day[data-full=\"' + hl.getFullYear() + '-' + (hl.getMonth() + 1) + '-' + hl.getDate() + '\"]', ctx).addClass(selectedClass + ' ' + (hl.getTime() === startT ? startClass : '') + (hl.getTime() === endT ? endClass : '')).attr('aria-selected', 'true');\r\n            hl.setDate(hl.getDate() + (curr ? -1 : 1));\r\n            hl.setHours(0, 0, 0, 0);\r\n            nr++;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function setTimeInfo(d, end) {\r\n      return {\r\n        h: d ? d.getHours() : end ? 23 : 0,\r\n        i: d ? d.getMinutes() : end ? 59 : 0,\r\n        s: d ? d.getSeconds() : end ? 59 : 0\r\n      };\r\n    }\r\n\r\n    function validateDates() {\r\n      if (tempStartDate) {\r\n        init = true;\r\n        inst.setDate(tempStartDate, false, 0, true);\r\n        tempStartDate = inst.getDate(true);\r\n      }\r\n\r\n      if (tempEndDate) {\r\n        init = true;\r\n        inst.setDate(tempEndDate, false, 0, true);\r\n        tempEndDate = inst.getDate(true);\r\n      }\r\n    }\r\n\r\n    function onBtnClick(ev) {\r\n      if (testTouch(ev, this)) {\r\n        inst._showDayPicker();\r\n\r\n        inst.setActiveDate($$1(this).attr('data-select'));\r\n      }\r\n    } // ---\r\n\r\n\r\n    var base,\r\n        ctx,\r\n        dayChange,\r\n        format,\r\n        hasTime,\r\n        init,\r\n        maxDate,\r\n        minDate,\r\n        set,\r\n        tempStartDate,\r\n        tempStartTime,\r\n        tempEndDate,\r\n        tempEndTime,\r\n        timeOnly,\r\n        showSelector,\r\n        startDate = inst._startDate,\r\n        endDate = inst._endDate,\r\n        curr = 0,\r\n        now = new Date(),\r\n        orig = extend$1({}, inst.settings),\r\n        s = extend$1(inst.settings, defaults$c, orig),\r\n        startAnchor = s.anchor,\r\n        autoChange = s.rangeTap,\r\n        oneDay = 24 * 60 * 60 * 1000,\r\n        minDays = Math.max(1, Math.ceil(s.minRange / oneDay)),\r\n        maxDays = Math.max(1, Math.ceil(s.maxRange / oneDay)),\r\n        disabledClass = 'mbsc-disabled ' + (s.disabledClass || ''),\r\n        selectedClass = 'mbsc-selected ' + (s.selectedClass || ''),\r\n        highlightClass = 'mbsc-cal-day-hl',\r\n        def = s.defaultValue === null ? [] : s.defaultValue || [new Date(now.setHours(0, 0, 0, 0)), new Date(now.getFullYear(), now.getMonth(), now.getDate() + 6, 23, 59, 59, 999)];\r\n\r\n    if (autoChange) {\r\n      s.tabs = true;\r\n    }\r\n\r\n    base = CalendarBase.call(this, inst);\r\n    format = inst._format;\r\n    hasTime = /time/i.test(s.controls.join(','));\r\n    timeOnly = s.controls.join('') === 'time';\r\n    showSelector = s.showSelector;\r\n    maxDate = s.max ? normalizeTime(makeDate(s.max, format, s), true) : Infinity;\r\n    minDate = s.min ? normalizeTime(makeDate(s.min, format, s), false) : -Infinity;\r\n    def[0] = makeDate(def[0], format, s, s.isoParts);\r\n    def[1] = makeDate(def[1], format, s, s.isoParts);\r\n\r\n    if (s.startInput) {\r\n      inst.attachShow($$1(s.startInput), function () {\r\n        curr = 0;\r\n        s.anchor = startAnchor || $$1(s.startInput);\r\n      });\r\n    }\r\n\r\n    if (s.endInput) {\r\n      inst.attachShow($$1(s.endInput), function () {\r\n        curr = 1;\r\n        s.anchor = startAnchor || $$1(s.endInput);\r\n      });\r\n    }\r\n\r\n    inst._getDayProps = function (d, props) {\r\n      var start = tempStartDate ? new Date(tempStartDate.getFullYear(), tempStartDate.getMonth(), tempStartDate.getDate()) : null,\r\n          end = tempEndDate ? new Date(tempEndDate.getFullYear(), tempEndDate.getMonth(), tempEndDate.getDate()) : null;\r\n      return {\r\n        selected: start && end && d >= start && d <= tempEndDate,\r\n        cssClass: props.cssClass + ' ' + ((autoChange || !curr) && start && start.getTime() === d.getTime() || (autoChange || curr) && end && end.getTime() === d.getTime() ? highlightClass : '') + (start && start.getTime() === d.getTime() ? ' mbsc-cal-sel-start' : '') + (end && end.getTime() === d.getTime() ? ' mbsc-cal-sel-end' : '')\r\n      };\r\n    }; // Extended methods\r\n    // ---\r\n\r\n\r\n    inst.setVal = function (values, fill, change, temp, time) {\r\n      var v = values || [],\r\n          d = values;\r\n      tempStartDate = makeDate(v[0], format, s, s.isoParts);\r\n      tempEndDate = makeDate(v[1], format, s, s.isoParts);\r\n      validateDates();\r\n      inst.startVal = tempStartDate ? formatDate(format, tempStartDate, s) : '';\r\n      inst.endVal = tempEndDate ? formatDate(format, tempEndDate, s) : '';\r\n      d = base.parseValue(curr ? tempEndDate : tempStartDate, inst);\r\n\r\n      if (!temp) {\r\n        inst._startDate = startDate = tempStartDate;\r\n        inst._endDate = endDate = tempEndDate;\r\n      }\r\n\r\n      set = true;\r\n\r\n      inst._setVal(d, fill, change, temp, time);\r\n    };\r\n\r\n    inst.getVal = function (temp) {\r\n      return temp ? [returnDate(tempStartDate, s, format), returnDate(tempEndDate, s, format)] : inst._hasValue ? [returnDate(startDate, s, format), returnDate(endDate, s, format)] : null;\r\n    };\r\n\r\n    inst.setActiveDate = function (active) {\r\n      var hl; //if (!autoChange) {\r\n\r\n      curr = active == 'start' ? 0 : 1; //}\r\n\r\n      hl = active == 'start' ? tempStartDate : tempEndDate;\r\n\r\n      if (inst.isVisible()) {\r\n        //if (!autoChange) {\r\n        setActiveTab();\r\n\r\n        if (!autoChange) {\r\n          $$1('.mbsc-cal-table .mbsc-cal-day-hl', ctx).removeClass(highlightClass);\r\n\r\n          if (hl) {\r\n            $$1('.mbsc-cal-day[data-full=\"' + hl.getFullYear() + '-' + (hl.getMonth() + 1) + '-' + hl.getDate() + '\"]', ctx).addClass(highlightClass);\r\n          }\r\n        }\r\n\r\n        if (hl) {\r\n          init = true;\r\n          inst.setDate(hl, false, 1000, true);\r\n        }\r\n      }\r\n    };\r\n\r\n    inst.getValue = inst.getVal; // ---\r\n    // ---\r\n\r\n    return extend$1({}, base, {\r\n      highlight: false,\r\n      outerMonthChange: false,\r\n      formatValue: function formatValue() {\r\n        return inst.startVal + (s.endInput ? '' : inst.endVal ? ' - ' + inst.endVal : '');\r\n      },\r\n      parseValue: function parseValue(v) {\r\n        var parts = v ? v.split(' - ') : [],\r\n            startVal = s.startInput ? $$1(s.startInput).val() : parts[0],\r\n            endVal = s.endInput ? $$1(s.endInput).val() : parts[1];\r\n        s.defaultValue = def[1]; // used by parseDate\r\n\r\n        endDate = endVal ? parseDate(format, endVal, s) : def[1];\r\n        s.defaultValue = def[0]; // used by parseDate\r\n\r\n        startDate = startVal ? parseDate(format, startVal, s) : def[2];\r\n        s.defaultValue = def[curr];\r\n        inst.startVal = startDate ? formatDate(format, startDate, s) : '';\r\n        inst.endVal = endDate ? formatDate(format, endDate, s) : '';\r\n        inst._startDate = startDate;\r\n        inst._endDate = endDate;\r\n        return base.parseValue(curr ? endDate : startDate, inst);\r\n      },\r\n      onFill: function onFill(ev) {\r\n        updateInputs(ev.change);\r\n      },\r\n      onBeforeClose: function onBeforeClose(ev) {\r\n        // Don't allow invalid selection\r\n        if (ev.button === 'set' && !validate(true, true)) {\r\n          inst.setActiveDate(curr ? 'start' : 'end');\r\n          return false;\r\n        }\r\n      },\r\n      onHide: function onHide() {\r\n        base.onHide.call(inst);\r\n        curr = 0;\r\n        ctx = null;\r\n        s.anchor = startAnchor;\r\n      },\r\n      onClear: function onClear() {\r\n        if (autoChange) {\r\n          curr = 0;\r\n        }\r\n      },\r\n      onBeforeShow: function onBeforeShow() {\r\n        tempStartDate = startDate || def[0];\r\n        tempEndDate = endDate || def[1];\r\n        tempStartTime = setTimeInfo(tempStartDate, 0);\r\n        tempEndTime = setTimeInfo(tempEndDate, 1);\r\n\r\n        if (s.counter) {\r\n          s.headerText = function () {\r\n            var nr = calcDayNr();\r\n            return (nr > 1 ? s.selectedPluralText || s.selectedText : s.selectedText).replace(/{count}/, nr);\r\n          };\r\n        }\r\n\r\n        set = true;\r\n      },\r\n      onMarkupReady: function onMarkupReady(ev) {\r\n        var html; // Validate start end end dates\r\n\r\n        validateDates(); // Set the current date (start or end)\r\n\r\n        if (curr && tempEndDate || !curr && tempStartDate) {\r\n          init = true;\r\n          inst.setDate(curr ? tempEndDate : tempStartDate, false, 0, true);\r\n        }\r\n\r\n        highlightDays(); // Call calbase\r\n\r\n        base.onMarkupReady.call(this, ev);\r\n        ctx = $$1(ev.target);\r\n        ctx.addClass('mbsc-range');\r\n\r\n        if (showSelector) {\r\n          html = '<div class=\"mbsc-range-btn-t\" role=\"radiogroup\">' + '<div class=\"mbsc-range-btn-c mbsc-range-btn-start\"><div role=\"radio\" data-select=\"start\" class=\"mbsc-fr-btn-e mbsc-fr-btn-nhl mbsc-range-btn\">' + s.fromText + '<div class=\"mbsc-range-btn-v mbsc-range-btn-v-start\">' + (inst.startVal || '&nbsp;') + '</div></div></div>' + '<div class=\"mbsc-range-btn-c mbsc-range-btn-end\"><div role=\"radio\" data-select=\"end\" class=\"mbsc-fr-btn-e mbsc-fr-btn-nhl mbsc-range-btn\">' + s.toText + '<div class=\"mbsc-range-btn-v mbsc-range-btn-v-end\">' + (inst.endVal || '&nbsp;') + '</div></div></div>' + '</div>';\r\n\r\n          if (s.headerText) {\r\n            $$1('.mbsc-fr-hdr', ctx).after(html);\r\n          } else {\r\n            $$1('.mbsc-fr-w', ctx).prepend(html);\r\n          }\r\n\r\n          setActiveTab();\r\n        }\r\n\r\n        $$1('.mbsc-range-btn', ctx).each(function (i, el) {\r\n          listen(el, 'touchstart', onBtnClick, {\r\n            passive: true\r\n          });\r\n          listen(el, 'click', onBtnClick);\r\n        });\r\n      },\r\n      onDayChange: function onDayChange(day) {\r\n        day.active = curr ? 'end' : 'start';\r\n        dayChange = true;\r\n      },\r\n      onSetDate: function onSetDate(day) {\r\n        var d;\r\n\r\n        if (!init) {\r\n          d = normalizeTime(day.date, curr);\r\n\r\n          if (!set || dayChange) {\r\n            if (autoChange && dayChange) {\r\n              if (curr == 1 && d < tempStartDate) {\r\n                curr = 0;\r\n              }\r\n\r\n              if (curr) {\r\n                d.setHours(tempEndTime.h, tempEndTime.i, tempEndTime.s, 999);\r\n              } else {\r\n                d.setHours(tempStartTime.h, tempStartTime.i, tempStartTime.s, 0);\r\n              }\r\n            }\r\n\r\n            if (curr) {\r\n              tempEndDate = new Date(d);\r\n              tempEndTime = setTimeInfo(tempEndDate);\r\n            } else {\r\n              tempStartDate = new Date(d);\r\n              tempStartTime = setTimeInfo(tempStartDate);\r\n            } // Make sure times are on the same day for comparison\r\n\r\n\r\n            if (timeOnly && s.autoCorrect) {\r\n              normalize(tempStartDate, d);\r\n              normalize(tempEndDate, d);\r\n            } // Set end date on start selection if rangeTap is enabled\r\n\r\n\r\n            if (autoChange && dayChange && !curr) {\r\n              //tempEndDate = new Date(d.setHours(23, 59, 59, 999));\r\n              tempEndDate = null;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (timeOnly && !s.autoCorrect && tempEndDate < tempStartDate) {\r\n          // Set end time to next day\r\n          tempEndDate = new Date(tempEndDate.setDate(tempEndDate.getDate() + 1));\r\n        } // Validate min/max ranges\r\n\r\n\r\n        inst._isValid = validate(set || dayChange || s.autoCorrect, !init);\r\n        day.active = curr ? 'end' : 'start'; // Toggle start/end if rangeTap is enabled\r\n\r\n        if (!init && autoChange) {\r\n          if (dayChange) {\r\n            curr = curr ? 0 : 1;\r\n          }\r\n\r\n          setActiveTab();\r\n        }\r\n\r\n        if (inst.isVisible()) {\r\n          // Disable set button\r\n          if (inst._isValid) {\r\n            $$1('.mbsc-fr-btn-s .mbsc-fr-btn', inst._markup).removeClass(disabledClass);\r\n          } else {\r\n            $$1('.mbsc-fr-btn-s .mbsc-fr-btn', inst._markup).addClass(disabledClass);\r\n          }\r\n        }\r\n\r\n        dayChange = false;\r\n        set = false;\r\n        init = false;\r\n      },\r\n      onTabChange: function onTabChange(ev) {\r\n        if (ev.tab != 'calendar') {\r\n          inst.setDate(curr ? tempEndDate : tempStartDate, false, 1000, true);\r\n        }\r\n\r\n        validate(true, true);\r\n      }\r\n    });\r\n  };\r\n\r\n  var RANGE_SUB_TEMPLATE = \"<mbsc-input\\n    [controlNg]=\\\"false\\\" [name]=\\\"name\\\" [theme]=\\\"theme\\\" [disabled]=\\\"disabled\\\" [placeholder]=\\\"placeholder\\\"\\n    [error]=\\\"error\\\" [errorMessage]=\\\"errorMessage\\\" \\n    [icon]=\\\"inputIcon\\\" [icon-align]=\\\"iconAlign\\\">\\n    <ng-content></ng-content>\\n</mbsc-input>\";\r\n  var MbscRangeStartComponent = (function () {\r\n      function MbscRangeStartComponent(host, parent, zone, control) {\r\n          this.host = host;\r\n          this.parent = parent;\r\n          this.zone = zone;\r\n          this.control = control;\r\n          this.theme = undefined;\r\n          this.errorMessage = '';\r\n          this.placeholder = '';\r\n          this.rangeIndex = 0;\r\n          this.oldAccessor = null;\r\n          this.onChange = function (value) { };\r\n          this.onTouch = function () { };\r\n          this.initialSet = true;\r\n          this.checkAccessor();\r\n      }\r\n      Object.defineProperty(MbscRangeStartComponent.prototype, \"element\", {\r\n          get: function () {\r\n              var i = $$1(this.host.nativeElement).find('input');\r\n              return i[0];\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscRangeStartComponent.prototype.checkAccessor = function () {\r\n          if (this.control) {\r\n              if (this.control.valueAccessor !== this) {\r\n                  this.oldAccessor = this.control.valueAccessor;\r\n              }\r\n              this.control.valueAccessor = this;\r\n          }\r\n      };\r\n      MbscRangeStartComponent.prototype.handleChange = function () {\r\n          var _this = this;\r\n          $$1(this.element).on('change', function () {\r\n              _this.zone.run(function () {\r\n                  var arr = _this.parent.instance.getVal(), value = arr ? arr[_this.rangeIndex] : undefined, current = undefined, valueText = _this.parent.instance[_this.rangeIndex === 0 ? 'startVal' : 'endVal'];\r\n                  if (arr && value && _this.element.value !== valueText && _this.parent.enableManualEdit) {\r\n                      var newArr = new Array(2), otherIndex = _this.rangeIndex === 1 ? 0 : 1;\r\n                      newArr[_this.rangeIndex] = _this.element.value;\r\n                      newArr[otherIndex] = arr[otherIndex];\r\n                      _this.parent.instance.setVal(newArr, true, true);\r\n                  }\r\n                  else {\r\n                      if (_this.control && _this.control.value && _this.control.value instanceof Array) {\r\n                          current = _this.control.value[_this.rangeIndex];\r\n                      }\r\n                      else if (_this.control && _this.control.value) {\r\n                          current = _this.control.value;\r\n                      }\r\n                      if (_this.control) {\r\n                          if (!isDateEqual(current, value)) {\r\n                              _this.onChange(value);\r\n                              _this.control.control.patchValue(value);\r\n                          }\r\n                      }\r\n                  }\r\n              });\r\n          });\r\n      };\r\n      MbscRangeStartComponent.prototype.ngAfterViewInit = function () {\r\n          this.handleChange();\r\n          this.checkAccessor();\r\n      };\r\n      MbscRangeStartComponent.prototype.registerOnChange = function (fn) {\r\n          this.onChange = fn;\r\n      };\r\n      MbscRangeStartComponent.prototype.registerOnTouched = function (fn) {\r\n          this.onTouch = fn;\r\n      };\r\n      MbscRangeStartComponent.prototype.setDisabledState = function (isDisabled) {\r\n          this.disabled = isDisabled;\r\n          if (this.oldAccessor && this.oldAccessor.setDisabledState) {\r\n              this.oldAccessor.setDisabledState(isDisabled);\r\n          }\r\n      };\r\n      MbscRangeStartComponent.prototype.writeValue = function (v) {\r\n          var _this = this;\r\n          if (this.parent && this.parent.instance) {\r\n              var arr_1 = this.parent.instance.getVal(), val = (arr_1 && arr_1.length) ? arr_1[this.rangeIndex] : undefined;\r\n              if (!isDateEqual(v, val)) {\r\n                  if (v === undefined) {\r\n                      arr_1 = undefined;\r\n                  }\r\n                  else {\r\n                      arr_1 = arr_1 || [];\r\n                      arr_1[this.rangeIndex] = v;\r\n                  }\r\n                  this.parent.instance.setVal(arr_1, true, false);\r\n                  if (this.initialSet) {\r\n                      setTimeout(function () {\r\n                          _this.parent.instance.setVal(arr_1, true, false);\r\n                          _this.initialSet = false;\r\n                      });\r\n                  }\r\n              }\r\n          }\r\n      };\r\n      MbscRangeStartComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-range-start',\r\n                      template: RANGE_SUB_TEMPLATE\r\n                  },] },\r\n      ];\r\n      MbscRangeStartComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: MbscRangeComponent, decorators: [{ type: core.Inject, args: [core.forwardRef(function () { return MbscRangeComponent; }),] },] },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscRangeStartComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'disabled': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n      };\r\n      return MbscRangeStartComponent;\r\n  }());\r\n  var MbscRangeEndComponent = (function (_super) {\r\n      __extends(MbscRangeEndComponent, _super);\r\n      function MbscRangeEndComponent(el, parent, zone, control) {\r\n          var _this = _super.call(this, el, parent, zone, control) || this;\r\n          _this.rangeIndex = 1;\r\n          return _this;\r\n      }\r\n      MbscRangeEndComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-range-end',\r\n                      template: RANGE_SUB_TEMPLATE,\r\n                  },] },\r\n      ];\r\n      MbscRangeEndComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: MbscRangeComponent, decorators: [{ type: core.Inject, args: [core.forwardRef(function () { return MbscRangeComponent; }),] },] },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      return MbscRangeEndComponent;\r\n  }(MbscRangeStartComponent));\r\n  var MbscRange = (function (_super) {\r\n      __extends(MbscRange, _super);\r\n      function MbscRange(initialElem, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, view) || this;\r\n          _this.optionService = optionService;\r\n          _this.onSetDate = new core.EventEmitter();\r\n          _this.onCellHoverIn = new core.EventEmitter();\r\n          _this.onCellHoverOut = new core.EventEmitter();\r\n          _this.onDayChange = new core.EventEmitter();\r\n          _this.options = {};\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscRange.prototype, \"endInput\", {\r\n          set: function (v) {\r\n              var element = v;\r\n              if (typeof v == \"string\") {\r\n                  var hasInput = $$1(v).find('input');\r\n                  if (hasInput.length) {\r\n                      element = hasInput[0];\r\n                  }\r\n              }\r\n              this._endInput = element;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscRange.prototype, \"startInput\", {\r\n          set: function (v) {\r\n              var element = v;\r\n              if (typeof v == \"string\") {\r\n                  var hasInput = $$1(v).find('input');\r\n                  if (hasInput.length) {\r\n                      element = hasInput[0];\r\n                  }\r\n              }\r\n              this._startInput = element;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(MbscRange.prototype, \"value\", {\r\n          set: function (v) {\r\n              this.setNewValueProxy(v);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscRange.prototype.setNewValue = function (v) {\r\n          if (this.instance) {\r\n              if (!deepEqualsArray(v, this.instance.getVal())) {\r\n                  this.instance.setVal(v, true, false);\r\n                  if (this._inputService && this._inputService.input) {\r\n                      this._inputService.input.innerValue = this.instance._value;\r\n                  }\r\n              }\r\n          }\r\n      };\r\n      Object.defineProperty(MbscRange.prototype, \"optionExtensions\", {\r\n          get: function () {\r\n              var _this = this;\r\n              var externalOnClose = this.options && this.options.onClose;\r\n              var externalOnFill = this.options && this.options.onFill;\r\n              var onCloseEmitter = this.onClose;\r\n              return {\r\n                  onFill: function (event, inst) {\r\n                      if (!_this._wrapper) {\r\n                          if (_this.oldAccessor) {\r\n                              _this.oldAccessor.writeValue(event.valueText);\r\n                          }\r\n                      }\r\n                      if (externalOnFill) {\r\n                          externalOnFill(event, inst);\r\n                      }\r\n                  },\r\n                  onClose: function (event, inst) {\r\n                      _this.onTouch();\r\n                      if (externalOnClose) {\r\n                          externalOnClose(event, inst);\r\n                      }\r\n                      if (onCloseEmitter) {\r\n                          event.inst = inst;\r\n                          onCloseEmitter.emit(event);\r\n                      }\r\n                  }\r\n              };\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscRange.prototype.initControl = function () {\r\n          var options = extend$1({\r\n              preset: 'range',\r\n              skipShow: this._wrapper\r\n          }, this.optionService ? this.optionService.options : {}, this.options, this.inlineOptionsObj, {\r\n              endInput: this._wrapper ? this.end.element : this._endInput,\r\n              startInput: this._wrapper ? this.start.element : this._startInput\r\n          }, this.optionExtensions);\r\n          this.instance = new RangePicker(this._wrapper ? this.initialElem.nativeElement : this.element, options);\r\n          if (this.initialValue) {\r\n              this.instance.setVal(this.initialValue, true, false);\r\n          }\r\n      };\r\n      MbscRange.prototype.ngAfterContentInit = function () {\r\n          if (this.start || this.end) {\r\n              this._wrapper = true;\r\n          }\r\n          else {\r\n              this._wrapper = false;\r\n          }\r\n      };\r\n      MbscRange.prototype.handleChange = function () {\r\n          var _this = this;\r\n          if (this._wrapper) {\r\n              $$1(this.start.element).on('change', function () {\r\n                  _this.zone.run(function () {\r\n                      var value = _this.instance.getVal();\r\n                      if (_this.control) {\r\n                          if (!deepEqualsArray(_this.control.value, value)) {\r\n                              _this.onChange(value);\r\n                              _this.control.control.patchValue(value);\r\n                          }\r\n                      }\r\n                      else {\r\n                          _this.onChangeEmitter.emit(value);\r\n                      }\r\n                  });\r\n              });\r\n              $$1(this.end.element).on('change', function () {\r\n                  _this.zone.run(function () {\r\n                      var value = _this.instance.getVal();\r\n                      if (_this.control) {\r\n                          if (!deepEqualsArray(_this.control.value, value)) {\r\n                              _this.onChange(value);\r\n                              _this.control.control.patchValue(value);\r\n                          }\r\n                      }\r\n                      else {\r\n                          _this.onChangeEmitter.emit(value);\r\n                      }\r\n                  });\r\n              });\r\n          }\r\n          else {\r\n              var that_1 = this;\r\n              $$1(this.element).on('change', function () {\r\n                  that_1.zone.run(function () {\r\n                      if (that_1.element.value !== that_1.instance._value && that_1.enableManualEdit) {\r\n                          var v = that_1.element.value && that_1.element.value.split(' - ');\r\n                          if (v) {\r\n                              that_1.instance.setVal(v, true, true);\r\n                          }\r\n                      }\r\n                      else {\r\n                          var value = that_1.instance.getVal();\r\n                          if (that_1.control) {\r\n                              that_1.onChange(value);\r\n                              that_1.control.control.patchValue(value);\r\n                          }\r\n                          else {\r\n                              that_1.onChangeEmitter.emit(value);\r\n                          }\r\n                      }\r\n                  });\r\n              });\r\n          }\r\n      };\r\n      MbscRange.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-range]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscRange.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscRange.propDecorators = {\r\n          'autoCorrect': [{ type: core.Input },],\r\n          'controls': [{ type: core.Input },],\r\n          'endInput': [{ type: core.Input },],\r\n          'maxRange': [{ type: core.Input },],\r\n          'minRange': [{ type: core.Input },],\r\n          'showSelector': [{ type: core.Input },],\r\n          'startInput': [{ type: core.Input },],\r\n          'fromText': [{ type: core.Input },],\r\n          'toText': [{ type: core.Input },],\r\n          'onSetDate': [{ type: core.Output },],\r\n          'onCellHoverIn': [{ type: core.Output },],\r\n          'onCellHoverOut': [{ type: core.Output },],\r\n          'onDayChange': [{ type: core.Output },],\r\n          'start': [{ type: core.ContentChild, args: [MbscRangeStartComponent, { static: false },] },],\r\n          'end': [{ type: core.ContentChild, args: [MbscRangeEndComponent, { static: false },] },],\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n          'value': [{ type: core.Input, args: ['mbsc-range',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['mbsc-rangeChange',] },],\r\n      };\r\n      return MbscRange;\r\n  }(MbscCalBase));\r\n  var MbscRangeComponent = (function (_super) {\r\n      __extends(MbscRangeComponent, _super);\r\n      function MbscRangeComponent(initialElem, zone, control, inputService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, null) || this;\r\n          _this.errorMessage = '';\r\n          _this.placeholder = '';\r\n          return _this;\r\n      }\r\n      MbscRangeComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscRangeComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-range',\r\n                      exportAs: 'mobiscroll',\r\n                      template: \"<ng-content select=\\\"mbsc-range-start\\\"></ng-content>\\n    <ng-content select=\\\"mbsc-range-end\\\"></ng-content>\\n    <mbsc-input *ngIf=\\\"!_wrapper && (!inline || showInput)\\\" \\n        [controlNg]=\\\"false\\\" [name]=\\\"name\\\" [theme]=\\\"theme\\\" [disabled]=\\\"disabled\\\" [dropdown]=\\\"dropdown\\\" [placeholder]=\\\"placeholder\\\"\\n        [error]=\\\"error\\\" [errorMessage]=\\\"errorMessage\\\" \\n        [icon]=\\\"inputIcon\\\" [icon-align]=\\\"iconAlign\\\">\\n        <ng-content></ng-content>\\n    </mbsc-input>\",\r\n                  },] },\r\n      ];\r\n      MbscRangeComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscRangeComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n      };\r\n      return MbscRangeComponent;\r\n  }(MbscRange));\r\n  var MbscRangeModule = (function () {\r\n      function MbscRangeModule() {\r\n      }\r\n      MbscRangeModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [common.CommonModule, MbscCalBaseModule, MbscInputModule],\r\n                      declarations: [MbscRangeStartComponent, MbscRangeEndComponent, MbscRange, MbscRangeComponent],\r\n                      exports: [MbscRangeStartComponent, MbscRangeEndComponent, MbscRange, MbscRangeComponent]\r\n                  },] },\r\n      ];\r\n      MbscRangeModule.ctorParameters = function () { return []; };\r\n      return MbscRangeModule;\r\n  }());\r\n\r\n  var MbscScroller = (function (_super) {\r\n      __extends(MbscScroller, _super);\r\n      function MbscScroller(initialElement, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElement, zone, control, inputService, view) || this;\r\n          _this.optionService = optionService;\r\n          _this.options = {};\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscScroller.prototype, \"value\", {\r\n          set: function (v) {\r\n              this.setNewValueProxy(v);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscScroller.prototype.setNewValue = function (v) {\r\n          if (this.instance) {\r\n              var innerValue = this.instance.getVal();\r\n              if (innerValue !== v) {\r\n                  this.instance.setVal(v, true, false);\r\n                  if (this._inputService && this._inputService.input) {\r\n                      this._inputService.input.innerValue = this.instance._value;\r\n                  }\r\n              }\r\n          }\r\n      };\r\n      MbscScroller.prototype.initControl = function () {\r\n          var options = extend$1({}, this.optionService ? this.optionService.options : {}, this.options, this.inlineOptionsObj, this.optionExtensions);\r\n          this.instance = new Scroller(this.element, options);\r\n          if (this.initialValue !== undefined) {\r\n              this.instance.setVal(this.initialValue, true, false);\r\n          }\r\n      };\r\n      MbscScroller.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-scroller]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscScroller.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscScroller.propDecorators = {\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n          'value': [{ type: core.Input, args: ['mbsc-scroller',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['mbsc-scrollerChange',] },],\r\n      };\r\n      return MbscScroller;\r\n  }(MbscScrollerBase));\r\n  var MbscScrollerComponent = (function (_super) {\r\n      __extends(MbscScrollerComponent, _super);\r\n      function MbscScrollerComponent(initialElem, zone, control, inputService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, null) || this;\r\n          _this.errorMessage = '';\r\n          _this.placeholder = '';\r\n          return _this;\r\n      }\r\n      MbscScrollerComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscScrollerComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-scroller',\r\n                      exportAs: 'mobiscroll',\r\n                      template: INPUT_TEMPLATE\r\n                  },] },\r\n      ];\r\n      MbscScrollerComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscScrollerComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n      };\r\n      return MbscScrollerComponent;\r\n  }(MbscScroller));\r\n  var MbscScrollerModule = (function () {\r\n      function MbscScrollerModule() {\r\n      }\r\n      MbscScrollerModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [common.CommonModule, MbscScrollerBaseModule, MbscInputModule],\r\n                      declarations: [MbscScroller, MbscScrollerComponent],\r\n                      exports: [MbscScroller, MbscScrollerComponent]\r\n                  },] },\r\n      ];\r\n      MbscScrollerModule.ctorParameters = function () { return []; };\r\n      return MbscScrollerModule;\r\n  }());\r\n\r\n  var MbscScrollView = (function (_super) {\r\n      __extends(MbscScrollView, _super);\r\n      function MbscScrollView(initialElem, zone, notifyItemService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, notifyItemService) || this;\r\n          _this.optionService = optionService;\r\n          return _this;\r\n      }\r\n      MbscScrollView.prototype.initControl = function () {\r\n          var _this = this;\r\n          var options = extend$1({}, this.optionService ? this.optionService.options : {}, this.options, this.inlineOptionsObj);\r\n          this.instance = new ScrollView(this.initialElem.nativeElement, options);\r\n          this.notifyItemService.notifyInstanceReady(this.instance);\r\n          this.addRemoveObserver = this.notifyItemService.onAddRemove().subscribe(function (item) {\r\n              _this.instance.refresh();\r\n          });\r\n      };\r\n      MbscScrollView.prototype.ngOnDestroy = function () {\r\n          this.notifyItemService.onAddRemove().unsubscribe(this.addRemoveObserver);\r\n          _super.prototype.ngOnDestroy.call(this);\r\n      };\r\n      MbscScrollView.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-scrollview]',\r\n                      exportAs: 'mobiscroll',\r\n                      providers: [MbscNotifyItemService],\r\n                      host: { 'class': 'mbsc-cloak' }\r\n                  },] },\r\n      ];\r\n      MbscScrollView.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: MbscNotifyItemService, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscScrollView.propDecorators = {\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n      };\r\n      return MbscScrollView;\r\n  }(MbscScrollViewBase));\r\n  var MbscScrollViewItem = (function (_super) {\r\n      __extends(MbscScrollViewItem, _super);\r\n      function MbscScrollViewItem(initialElem, notifyItemService) {\r\n          return _super.call(this, notifyItemService, initialElem) || this;\r\n      }\r\n      MbscScrollViewItem.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-scrollview-item]',\r\n                      host: {\r\n                          '[attr.data-id]': 'id'\r\n                      }\r\n                  },] },\r\n      ];\r\n      MbscScrollViewItem.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: MbscNotifyItemService, },\r\n      ]; };\r\n      return MbscScrollViewItem;\r\n  }(MbscScrollItemBase));\r\n  var MbscScrollViewComponent = (function (_super) {\r\n      __extends(MbscScrollViewComponent, _super);\r\n      function MbscScrollViewComponent(initialElem, zone, notifyItemService, optionService) {\r\n          return _super.call(this, initialElem, zone, notifyItemService, optionService) || this;\r\n      }\r\n      MbscScrollViewComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-scrollview',\r\n                      exportAs: 'mobiscroll',\r\n                      template: \"<ng-content></ng-content>\",\r\n                      providers: [MbscNotifyItemService]\r\n                  },] },\r\n      ];\r\n      MbscScrollViewComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: MbscNotifyItemService, },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscScrollViewComponent.propDecorators = {\r\n          'options': [{ type: core.Input, args: ['options',] },],\r\n      };\r\n      return MbscScrollViewComponent;\r\n  }(MbscScrollView));\r\n  var MbscScrollViewItemComponent = (function (_super) {\r\n      __extends(MbscScrollViewItemComponent, _super);\r\n      function MbscScrollViewItemComponent(initialElem, notifyItemService) {\r\n          return _super.call(this, initialElem, notifyItemService) || this;\r\n      }\r\n      MbscScrollViewItemComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-scrollview-item',\r\n                      template: '<ng-content></ng-content>',\r\n                      host: {\r\n                          '[attr.data-id]': 'id'\r\n                      }\r\n                  },] },\r\n      ];\r\n      MbscScrollViewItemComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: MbscNotifyItemService, },\r\n      ]; };\r\n      return MbscScrollViewItemComponent;\r\n  }(MbscScrollViewItem));\r\n  var MbscScrollViewModule = (function () {\r\n      function MbscScrollViewModule() {\r\n      }\r\n      MbscScrollViewModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [MbscScrollViewBaseModule],\r\n                      declarations: [MbscScrollView, MbscScrollViewComponent, MbscScrollViewItem, MbscScrollViewItemComponent],\r\n                      exports: [MbscScrollView, MbscScrollViewComponent, MbscScrollViewItem, MbscScrollViewItemComponent]\r\n                  },] },\r\n      ];\r\n      MbscScrollViewModule.ctorParameters = function () { return []; };\r\n      return MbscScrollViewModule;\r\n  }());\r\n\r\n  var Select$1 = Scroller;\r\n  var defaults$d = {\r\n    inputClass: '',\r\n    rtl: false,\r\n    showInput: true,\r\n    groupLabel: 'Groups',\r\n    dataHtml: 'html',\r\n    dataText: 'text',\r\n    dataValue: 'value',\r\n    dataGroup: 'group',\r\n    dataDisabled: 'disabled',\r\n    filterPlaceholderText: 'Type to filter',\r\n    filterEmptyText: 'No results',\r\n    filterClearIcon: 'material-close'\r\n  };\r\n\r\n  presets.select = function (inst, settings) {\r\n    var $input,\r\n        dataArray,\r\n        filterLength,\r\n        filterText,\r\n        group,\r\n        groupArray,\r\n        groupWheel,\r\n        groups,\r\n        groupWheelIdx,\r\n        hasRemoteData,\r\n        option,\r\n        optionArray,\r\n        optionWheel,\r\n        optionWheelIdx,\r\n        prevent,\r\n        defaultValue = '',\r\n        selectedTexts = {},\r\n        animTime = 1000,\r\n        elm = this,\r\n        $elm = $$1(elm),\r\n        orig = extend$1({}, inst.settings),\r\n        s = extend$1(inst.settings, defaults$d, orig),\r\n        $filterEmpty = $$1('<div class=\"mbsc-sel-empty\">' + s.filterEmptyText + '</div>'),\r\n        origReadOnly = s.readonly,\r\n        options = {},\r\n        layout = s.layout || (/top|bottom|inline/.test(s.display) || s.filter ? 'liquid' : ''),\r\n        isLiquid = layout == 'liquid' || !s.touchUi,\r\n        multiple = isNumeric(s.select) ? s.select : s.select == 'multiple' || $elm.prop('multiple'),\r\n        tapSelect = multiple || (s.filter || s.tapSelect ? 1 : false),\r\n        id = this.id + '_dummy',\r\n        lbl = $$1('label[for=\"' + this.id + '\"]').attr('for', id),\r\n        label = s.label !== undefined ? s.label : lbl.length ? lbl.text() : $elm.attr('name'),\r\n        groupSetup = s.group,\r\n        hasData = !!s.data,\r\n        hasGroups = hasData ? !!s.group : $$1('optgroup', $elm).length,\r\n        hasGroupWheel = hasGroups && groupSetup && groupSetup.groupWheel !== false,\r\n        groupSep = hasGroups && groupSetup && hasGroupWheel && groupSetup.clustered === true,\r\n        groupHdr = hasGroups && (!groupSetup || groupSetup.header !== false && !groupSep),\r\n        values = $elm.val() || (multiple ? [] : ['']),\r\n        invalid = [];\r\n\r\n    function prepareData(filter) {\r\n      var gr,\r\n          html,\r\n          lbl,\r\n          opt,\r\n          txt,\r\n          val,\r\n          l = 0,\r\n          c = 0,\r\n          groupIndexes = {};\r\n      options = {};\r\n      groups = {};\r\n      optionArray = [];\r\n      groupArray = []; // Reset invalids\r\n\r\n      invalid.length = 0;\r\n\r\n      if (hasData) {\r\n        $$1.each(dataArray, function (i, v) {\r\n          txt = v[s.dataText] + ''; // Convert to string\r\n\r\n          html = v[s.dataHtml];\r\n          val = v[s.dataValue];\r\n          lbl = v[s.dataGroup];\r\n          opt = {\r\n            value: val,\r\n            html: html,\r\n            text: txt,\r\n            index: i,\r\n            cssClass: groupHdr ? 'mbsc-sel-gr-itm' : ''\r\n          };\r\n          options[val] = opt;\r\n\r\n          if (!filter || matchesFilter(txt, filter)) {\r\n            optionArray.push(opt);\r\n\r\n            if (hasGroups) {\r\n              if (groupIndexes[lbl] === undefined) {\r\n                gr = {\r\n                  text: lbl,\r\n                  value: c,\r\n                  options: [],\r\n                  index: c\r\n                };\r\n                groups[c] = gr;\r\n                groupIndexes[lbl] = c;\r\n                groupArray.push(gr);\r\n                c++;\r\n              } else {\r\n                gr = groups[groupIndexes[lbl]];\r\n              }\r\n\r\n              if (groupSep) {\r\n                opt.index = gr.options.length;\r\n              }\r\n\r\n              opt.group = groupIndexes[lbl];\r\n              gr.options.push(opt);\r\n            }\r\n\r\n            if (v[s.dataDisabled]) {\r\n              invalid.push(val);\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        if (hasGroups) {\r\n          var addGroup = true;\r\n          $$1('optgroup', $elm).each(function (i) {\r\n            groups[i] = {\r\n              text: this.label,\r\n              value: i,\r\n              options: [],\r\n              index: i\r\n            };\r\n            addGroup = true;\r\n            $$1('option', this).each(function (j) {\r\n              opt = {\r\n                value: this.value,\r\n                text: this.text,\r\n                index: groupSep ? j : l++,\r\n                group: i,\r\n                cssClass: groupHdr ? 'mbsc-sel-gr-itm' : ''\r\n              };\r\n              options[this.value] = opt;\r\n\r\n              if (!filter || matchesFilter(this.text, filter)) {\r\n                if (addGroup) {\r\n                  groupArray.push(groups[i]);\r\n                  addGroup = false;\r\n                }\r\n\r\n                optionArray.push(opt);\r\n                groups[i].options.push(opt);\r\n\r\n                if (this.disabled) {\r\n                  invalid.push(this.value);\r\n                }\r\n              }\r\n            });\r\n          });\r\n        } else {\r\n          $$1('option', $elm).each(function (i) {\r\n            opt = {\r\n              value: this.value,\r\n              text: this.text,\r\n              index: i\r\n            };\r\n            options[this.value] = opt;\r\n\r\n            if (!filter || matchesFilter(this.text, filter)) {\r\n              optionArray.push(opt);\r\n\r\n              if (this.disabled) {\r\n                invalid.push(this.value);\r\n              }\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      if (s.defaultValue) {\r\n        defaultValue = s.defaultValue;\r\n      } else if (optionArray.length) {\r\n        defaultValue = optionArray[0].value;\r\n      } else {\r\n        defaultValue = '';\r\n      }\r\n\r\n      if (groupHdr) {\r\n        optionArray = [];\r\n        l = 0;\r\n        $$1.each(groups, function (i, gr) {\r\n          if (gr.options.length) {\r\n            val = '__group' + i;\r\n            opt = {\r\n              text: gr.text,\r\n              value: val,\r\n              group: i,\r\n              index: l++,\r\n              cssClass: 'mbsc-sel-gr'\r\n            };\r\n            options[val] = opt;\r\n            optionArray.push(opt);\r\n            invalid.push(opt.value);\r\n            $$1.each(gr.options, function (j, opt) {\r\n              opt.index = l++;\r\n              optionArray.push(opt);\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      if ($filterEmpty) {\r\n        if (optionArray.length) {\r\n          $filterEmpty.removeClass('mbsc-sel-empty-v');\r\n        } else {\r\n          $filterEmpty.addClass('mbsc-sel-empty-v');\r\n        }\r\n      }\r\n    }\r\n\r\n    function genValues(data, tapSelect, label, multiple, cssClass) {\r\n      var i,\r\n          values = [];\r\n\r\n      if (data) {\r\n        for (i = 0; i < data.length; i++) {\r\n          values.push({\r\n            value: data[i].value,\r\n            display: data[i].html || data[i].text,\r\n            cssClass: data[i].cssClass\r\n          });\r\n        }\r\n      }\r\n\r\n      return {\r\n        circular: false,\r\n        multiple: tapSelect && !multiple ? 1 : multiple,\r\n        cssClass: (tapSelect && !multiple ? 'mbsc-sel-one' : '') + ' ' + cssClass,\r\n        data: values,\r\n        label: label\r\n      };\r\n    }\r\n\r\n    function genGroupWheel() {\r\n      return genValues(groupArray, tapSelect, s.groupLabel, false, 'mbsc-sel-gr-whl');\r\n    }\r\n\r\n    function genOptWheel() {\r\n      return genValues(groupSep && groups[group] ? groups[group].options : optionArray, tapSelect, label, multiple, '');\r\n    }\r\n\r\n    function genWheels() {\r\n      var w = [[]];\r\n\r\n      if (hasGroupWheel) {\r\n        groupWheel = genGroupWheel();\r\n\r\n        if (isLiquid) {\r\n          w[0][groupWheelIdx] = groupWheel;\r\n        } else {\r\n          w[groupWheelIdx] = [groupWheel];\r\n        }\r\n      }\r\n\r\n      optionWheel = genOptWheel();\r\n\r\n      if (isLiquid) {\r\n        w[0][optionWheelIdx] = optionWheel;\r\n      } else {\r\n        w[optionWheelIdx] = [optionWheel];\r\n      }\r\n\r\n      return w;\r\n    }\r\n\r\n    function getOption(v) {\r\n      if (multiple) {\r\n        if (v && isString(v)) {\r\n          v = v.split(',');\r\n        }\r\n\r\n        if ($$1.isArray(v)) {\r\n          v = v[0];\r\n        }\r\n      }\r\n\r\n      option = v === undefined || v === null || v === '' ? defaultValue : v;\r\n\r\n      if (!options[option] && optionArray && optionArray.length) {\r\n        option = optionArray[0].value;\r\n      }\r\n\r\n      if (hasGroupWheel) {\r\n        group = options[option] ? options[option].group : null;\r\n      }\r\n    }\r\n\r\n    function getText(opt) {\r\n      return selectedTexts[opt] || (options[opt] ? options[opt].text : '');\r\n    }\r\n\r\n    function formatValue(d, inst, fill) {\r\n      var i,\r\n          opt,\r\n          sel = [],\r\n          selected = fill ? inst._selected : inst._tempSelected;\r\n\r\n      if (tapSelect) {\r\n        for (i in selected[optionWheelIdx]) {\r\n          sel.push(getText(i));\r\n        }\r\n\r\n        return sel.join(', ');\r\n      }\r\n\r\n      opt = d[optionWheelIdx];\r\n      return getText(opt);\r\n    }\r\n\r\n    function onFill() {\r\n      var i,\r\n          html = '',\r\n          val = inst.getVal(),\r\n          txt = s.formatValue.call(elm, inst.getArrayVal(), inst, true);\r\n\r\n      if (!(s.filter && s.display == 'inline')) {\r\n        $input.val(txt);\r\n      } // If we have a native select, but data was passed in setting,\r\n      // create an option tag with the selected value\r\n\r\n\r\n      if ($elm.is('select') && hasData) {\r\n        if (multiple) {\r\n          for (i = 0; i < val.length; i++) {\r\n            html += '<option value=\"' + val[i] + '\">' + getText(val[i]) + '</option>';\r\n          }\r\n        } else {\r\n          html = '<option value=\"' + (val === null ? '' : val) + '\">' + txt + '</option>';\r\n        }\r\n\r\n        $elm.html(html);\r\n      }\r\n\r\n      if (elm !== $input[0]) {\r\n        // if the target is the same, we should not overwrite it\r\n        $elm.val(val);\r\n      }\r\n    }\r\n\r\n    function changeWheel() {\r\n      var wheels = {};\r\n      wheels[optionWheelIdx] = genOptWheel();\r\n      prevent = true;\r\n      inst.changeWheel(wheels);\r\n    }\r\n\r\n    function matchesFilter(str, filter) {\r\n      filter = filter.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'); // escape the special characters\r\n\r\n      return str.match(new RegExp(filter, 'ig'));\r\n    }\r\n\r\n    function getData(data) {\r\n      return s.data.dataField ? data[s.data.dataField] : s.data.processResponse ? s.data.processResponse(data) : data;\r\n    }\r\n\r\n    function prepareWheels(filter) {\r\n      var wheels = {};\r\n      prepareData(filter);\r\n      getOption(option);\r\n      s.wheels = genWheels();\r\n      wheels[optionWheelIdx] = optionWheel;\r\n      inst._tempWheelArray[optionWheelIdx] = option;\r\n\r\n      if (hasGroupWheel) {\r\n        wheels[groupWheelIdx] = groupWheel;\r\n        inst._tempWheelArray[groupWheelIdx] = group;\r\n      }\r\n\r\n      inst.changeWheel(wheels, 0, true);\r\n      onFill();\r\n    }\r\n\r\n    function triggerOnFilter(value) {\r\n      return inst.trigger('onFilter', {\r\n        filterText: value\r\n      });\r\n    }\r\n\r\n    function loadGroupOptions(values) {\r\n      if (values[groupWheelIdx] != group) {\r\n        group = values[groupWheelIdx];\r\n        option = groups[group].options[0].value;\r\n        values[optionWheelIdx] = option;\r\n\r\n        if (groupSep) {\r\n          changeWheel();\r\n        } else {\r\n          inst.setArrayVal(values, false, false, true, animTime);\r\n        }\r\n      }\r\n    } // Extended methods\r\n    // ---\r\n\r\n\r\n    inst.setVal = function (val, fill, change, temp, time) {\r\n      if (tapSelect) {\r\n        if (val !== null && val !== undefined && !multiple) {\r\n          val = [val];\r\n        }\r\n\r\n        if (val && isString(val)) {\r\n          val = val.split(',');\r\n        }\r\n\r\n        inst._tempSelected[optionWheelIdx] = arrayToObject(val);\r\n\r\n        if (!temp) {\r\n          inst._selected[optionWheelIdx] = arrayToObject(val);\r\n        }\r\n\r\n        val = val ? val[0] : null;\r\n\r\n        if (hasGroupWheel) {\r\n          var opt = options[val],\r\n              gr = opt && opt.group;\r\n          inst._tempSelected[groupWheelIdx] = arrayToObject([gr]);\r\n\r\n          if (!temp) {\r\n            inst._selected[groupWheelIdx] = arrayToObject([gr]);\r\n          }\r\n        }\r\n      }\r\n\r\n      inst._setVal(val, fill, change, temp, time);\r\n    };\r\n\r\n    inst.getVal = function (temp, group) {\r\n      var val;\r\n\r\n      if (tapSelect) {\r\n        val = objectToArray(temp ? inst._tempSelected[optionWheelIdx] : inst._selected[optionWheelIdx]);\r\n        val = multiple ? val : val.length ? val[0] : null;\r\n      } else {\r\n        val = temp ? inst._tempWheelArray : inst._hasValue ? inst._wheelArray : null;\r\n        val = val ? val[optionWheelIdx] : null;\r\n      }\r\n\r\n      return multiple ? val : val !== undefined ? hasGroups && group ? [options[val] ? options[val].group : null, val] : val : null;\r\n    };\r\n\r\n    inst.refresh = function (data, filter, callback) {\r\n      callback = callback || noop;\r\n\r\n      if (data) {\r\n        dataArray = data;\r\n\r\n        if (!hasRemoteData) {\r\n          // Save data, otherwise it will get lost on an option call,\r\n          // and filtering does not work as well after async data update\r\n          s.data = data;\r\n        }\r\n      } else if ($$1.isArray(s.data)) {\r\n        dataArray = s.data;\r\n      }\r\n\r\n      if (!data && hasRemoteData && filter === undefined) {\r\n        // reload the data from remote source\r\n        getJson(s.data.url, function (data) {\r\n          dataArray = getData(data);\r\n          prepareWheels();\r\n          callback();\r\n        }, s.data.dataType);\r\n      } else {\r\n        prepareWheels(filter);\r\n        callback();\r\n      }\r\n    }; // ---\r\n    // Inits\r\n    // ---\r\n\r\n\r\n    if (!settings.invalid) {\r\n      s.invalid = invalid;\r\n    }\r\n\r\n    if (hasGroupWheel) {\r\n      groupWheelIdx = 0;\r\n      optionWheelIdx = 1;\r\n    } else {\r\n      groupWheelIdx = -1;\r\n      optionWheelIdx = 0;\r\n    }\r\n\r\n    if (tapSelect) {\r\n      if (multiple && $elm.is('select')) {\r\n        $elm.prop('multiple', true);\r\n      }\r\n\r\n      if (values && isString(values)) {\r\n        values = values.split(',');\r\n      }\r\n\r\n      inst._selected[optionWheelIdx] = arrayToObject(values);\r\n    } // Remove dummy element if exists\r\n\r\n\r\n    if (inst._$input) {\r\n      inst._$input.remove();\r\n    } // Check if mobiscroll form already initialized this select\r\n\r\n\r\n    if ($elm.next().is('.mbsc-select-input')) {\r\n      $input = $elm.next().removeAttr('tabindex');\r\n    } else {\r\n      if (s.input) {\r\n        $input = $$1(s.input);\r\n      } else {\r\n        // Create dummy input\r\n        if (s.filter && s.display == 'inline') {\r\n          inst._$input = $$1('<div class=\"mbsc-sel-input-wrap\"><input type=\"text\" id=\"' + id + '\" class=\"mbsc-select-input mbsc-control ' + s.inputClass + '\" readonly /></div>');\r\n        } else {\r\n          $input = $$1('<input type=\"text\" id=\"' + id + '\" class=\"mbsc-select-input mbsc-control ' + s.inputClass + '\" readonly />');\r\n          inst._$input = $input;\r\n        }\r\n\r\n        if (s.showInput) {\r\n          inst._$input.insertAfter($elm);\r\n\r\n          if (!$input) {\r\n            $input = inst._$input.find('#' + id);\r\n          }\r\n        }\r\n      }\r\n    } // Show scroller on input tap\r\n\r\n\r\n    inst.attachShow($input.attr('placeholder', s.placeholder || ''));\r\n\r\n    if ($input[0] !== elm) {\r\n      $elm.addClass('mbsc-sel-hdn').attr('tabindex', -1);\r\n\r\n      if (!s.showInput) {\r\n        $elm.attr('data-enhance', false);\r\n      }\r\n    }\r\n\r\n    if (tapSelect && !(s.rows % 2)) {\r\n      s.rows = s.rows - 1;\r\n    }\r\n\r\n    if (s.filter) {\r\n      filterLength = s.filter.minLength || 0;\r\n    }\r\n\r\n    hasRemoteData = s.data && s.data.url;\r\n\r\n    if (hasRemoteData) {\r\n      inst.refresh();\r\n    } else {\r\n      if (hasData) {\r\n        dataArray = s.data;\r\n      }\r\n\r\n      prepareData();\r\n      getOption($elm.val());\r\n    } // ---\r\n\r\n\r\n    return {\r\n      layout: layout,\r\n      headerText: false,\r\n      anchor: $input,\r\n      compClass: 'mbsc-sc mbsc-sel' + (tapSelect ? ' mbsc-sel-multi' : ''),\r\n      setOnTap: hasGroupWheel ? [false, true] : true,\r\n      formatValue: formatValue,\r\n      tapSelect: tapSelect,\r\n      parseValue: function parseValue(val) {\r\n        getOption(val === undefined ? $elm.val() : val);\r\n        return hasGroupWheel ? [group, option] : [option];\r\n      },\r\n      validate: function validate(data) {\r\n        var index = data.index,\r\n            disabled = [];\r\n        disabled[optionWheelIdx] = s.invalid;\r\n\r\n        if (groupSep && !prevent && index === undefined) {\r\n          changeWheel();\r\n        }\r\n\r\n        prevent = false;\r\n        return {\r\n          disabled: disabled\r\n        };\r\n      },\r\n      onRead: onFill,\r\n      onFill: onFill,\r\n      onMarkupReady: function onMarkupReady(event, inst) {\r\n        if (s.filter) {\r\n          var $filterInput,\r\n              debounce,\r\n              filterInput,\r\n              $cont = $$1('.mbsc-fr-w', event.target),\r\n              $filterClear = $$1('<span class=\"mbsc-sel-filter-clear mbsc-ic mbsc-ic-' + s.filterClearIcon + '\"></span>');\r\n\r\n          if (s.display == 'inline') {\r\n            $filterInput = $input;\r\n            $input.parent().find('.mbsc-sel-filter-clear').remove();\r\n          } else {\r\n            $cont.find('.mbsc-fr-c').before('<div class=\"mbsc-input mbsc-sel-filter-cont mbsc-control-w mbsc-' + s.theme + (s.baseTheme ? ' mbsc-' + s.baseTheme : '') + '\"><span class=\"mbsc-input-wrap\"><input tabindex=\"0\" type=\"text\" class=\"mbsc-sel-filter-input mbsc-control\"/></span></div>');\r\n            $filterInput = $cont.find('.mbsc-sel-filter-input');\r\n          }\r\n\r\n          filterText = null;\r\n          filterInput = $filterInput[0];\r\n          $filterInput.prop('readonly', false).attr('placeholder', s.filterPlaceholderText).parent().append($filterClear);\r\n          $cont.find('.mbsc-fr-c').prepend($filterEmpty); // Will focus in the input on show\r\n\r\n          inst._activeElm = filterInput;\r\n          inst.tap($filterClear, function () {\r\n            filterText = null;\r\n            filterInput.value = '';\r\n            inst.refresh();\r\n            $filterClear.removeClass('mbsc-sel-filter-show-clear');\r\n            triggerOnFilter('');\r\n          });\r\n          $filterInput.on('keydown', function (ev) {\r\n            // Enter and Esc\r\n            if (ev.keyCode == 13 || ev.keyCode == 27) {\r\n              ev.stopPropagation();\r\n              filterInput.blur();\r\n            }\r\n          }).on('input', function () {\r\n            clearTimeout(debounce);\r\n\r\n            if (filterInput.value.length) {\r\n              $filterClear.addClass('mbsc-sel-filter-show-clear');\r\n            } else {\r\n              $filterClear.removeClass('mbsc-sel-filter-show-clear');\r\n            }\r\n\r\n            debounce = setTimeout(function () {\r\n              if (filterText === filterInput.value || triggerOnFilter(filterInput.value) === false) {\r\n                return;\r\n              }\r\n\r\n              filterText = filterInput.value;\r\n\r\n              if (filterText.length >= filterLength || !filterText.length) {\r\n                if (hasRemoteData && s.data.remoteFilter) {\r\n                  getJson(s.data.url + encodeURIComponent(filterText), function (data) {\r\n                    inst.refresh(getData(data));\r\n                  }, s.data.dataType);\r\n                } else {\r\n                  inst.refresh(undefined, filterText);\r\n                }\r\n              }\r\n            }, 500);\r\n          });\r\n        }\r\n      },\r\n      onBeforeShow: function onBeforeShow() {\r\n        if (multiple && s.counter) {\r\n          s.headerText = function () {\r\n            var length = 0;\r\n            $$1.each(inst._tempSelected[optionWheelIdx], function () {\r\n              length++;\r\n            });\r\n            return (length > 1 ? s.selectedPluralText || s.selectedText : s.selectedText).replace(/{count}/, length);\r\n          };\r\n        }\r\n\r\n        getOption($elm.val());\r\n\r\n        if (tapSelect && hasGroupWheel) {\r\n          inst._selected[groupWheelIdx] = arrayToObject([group]);\r\n        }\r\n\r\n        if (s.filter) {\r\n          prepareData(undefined);\r\n        }\r\n\r\n        inst.settings.wheels = genWheels();\r\n        prevent = true;\r\n      },\r\n      onWheelGestureStart: function onWheelGestureStart(ev) {\r\n        if (ev.index == groupWheelIdx) {\r\n          s.readonly = [false, true];\r\n        }\r\n      },\r\n      onWheelAnimationEnd: function onWheelAnimationEnd(ev) {\r\n        var values = inst.getArrayVal(true);\r\n\r\n        if (ev.index == groupWheelIdx) {\r\n          s.readonly = origReadOnly;\r\n\r\n          if (!tapSelect) {\r\n            loadGroupOptions(values);\r\n          }\r\n        } else if (ev.index == optionWheelIdx && values[optionWheelIdx] != option) {\r\n          option = values[optionWheelIdx];\r\n\r\n          if (hasGroupWheel && options[option] && options[option].group != group) {\r\n            group = options[option].group;\r\n            values[groupWheelIdx] = group;\r\n            inst._tempSelected[groupWheelIdx] = arrayToObject([group]);\r\n            inst.setArrayVal(values, false, false, true, animTime);\r\n          }\r\n        }\r\n      },\r\n      onItemTap: function onItemTap(ev) {\r\n        var values;\r\n\r\n        if (ev.index == optionWheelIdx) {\r\n          selectedTexts[ev.value] = options[ev.value].text;\r\n\r\n          if (tapSelect && !multiple && ev.selected) {\r\n            inst._prevItemTap = true;\r\n            return false;\r\n          }\r\n        }\r\n\r\n        if (ev.index == groupWheelIdx && tapSelect) {\r\n          if (ev.selected) {\r\n            inst._prevItemTap = true;\r\n            return false;\r\n          }\r\n\r\n          values = inst.getArrayVal(true);\r\n          values[groupWheelIdx] = ev.value;\r\n          loadGroupOptions(values);\r\n        }\r\n      },\r\n      onClose: function onClose() {\r\n        if (hasRemoteData && s.data.remoteFilter && filterText) {\r\n          inst.refresh();\r\n        }\r\n      },\r\n      onDestroy: function onDestroy() {\r\n        // Remove dummy input\r\n        if (inst._$input) {\r\n          inst._$input.remove();\r\n        } // Revert select attributes and classes\r\n\r\n\r\n        $elm.removeClass('mbsc-sel-hdn').removeAttr('tabindex');\r\n      }\r\n    };\r\n  };\r\n\r\n  var MbscSelect = (function (_super) {\r\n      __extends(MbscSelect, _super);\r\n      function MbscSelect(initialElement, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElement, zone, control, inputService, view) || this;\r\n          _this.optionService = optionService;\r\n          _this.placeholder = '';\r\n          _this.onFilter = new core.EventEmitter();\r\n          _this.options = {};\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscSelect.prototype, \"value\", {\r\n          set: function (v) {\r\n              if (!this.control) {\r\n                  this.setNewValueProxy(v);\r\n              }\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscSelect.prototype.refreshData = function (newData) {\r\n          this.instance.refresh(newData);\r\n      };\r\n      MbscSelect.prototype.initControl = function () {\r\n          var target = this.target;\r\n          if (target) {\r\n              if (typeof target !== 'string' && target._elementRef && target._elementRef.nativeElement) {\r\n                  target = target._elementRef.nativeElement;\r\n                  var inputUnder = $$1('input', target);\r\n                  if (inputUnder.length) {\r\n                      target = inputUnder;\r\n                  }\r\n              }\r\n          }\r\n          else {\r\n              var contentInput = $$1('input', this.initialElem.nativeElement).length;\r\n              if (contentInput) {\r\n                  target = this.element;\r\n              }\r\n              if (!target && this.initialElem.nativeElement.nodeName === 'ION-INPUT') {\r\n                  target = this.initialElem.nativeElement;\r\n              }\r\n          }\r\n          var options = extend$1({ preset: 'select', input: target }, this.optionService ? this.optionService.options : {}, this.options, this.inlineOptionsObj, this.optionExtensions);\r\n          this.instance = new Select$1(this.element, options);\r\n          if (this.initialValue !== undefined) {\r\n              this.instance.setVal(this.initialValue, true, false);\r\n          }\r\n      };\r\n      MbscSelect.prototype.setElement = function () {\r\n          this.element = this.initialElem.nativeElement;\r\n          var contentSelect = $$1('select', this.initialElem.nativeElement);\r\n          if (contentSelect.length) {\r\n              this.element = contentSelect[0];\r\n          }\r\n          else {\r\n              _super.prototype.setElement.call(this);\r\n          }\r\n      };\r\n      MbscSelect.prototype.ngOnInit = function () {\r\n          this.isMulti = this.options && this.options.select && this.options.select !== 'single';\r\n          this.cloneDictionary.data = [];\r\n          _super.prototype.ngOnInit.call(this);\r\n      };\r\n      MbscSelect.prototype.setNewValue = function (v) {\r\n          if (this.instance) {\r\n              var changed = void 0;\r\n              if (this.isMulti) {\r\n                  changed = !deepEqualsArray(v, this.instance.getVal());\r\n              }\r\n              else {\r\n                  var innerValue = this.instance.getVal();\r\n                  changed = innerValue !== v;\r\n              }\r\n              if (changed) {\r\n                  this.instance.setVal(v, true, false);\r\n                  if (this._inputService && this._inputService.input) {\r\n                      this._inputService.input.innerValue = this.instance._value;\r\n                  }\r\n              }\r\n          }\r\n      };\r\n      MbscSelect.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-select]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscSelect.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscSelect.propDecorators = {\r\n          'counter': [{ type: core.Input },],\r\n          'data': [{ type: core.Input, args: ['mbsc-data',] },],\r\n          'dataText': [{ type: core.Input },],\r\n          'dataGroup': [{ type: core.Input },],\r\n          'dataValue': [{ type: core.Input },],\r\n          'filter': [{ type: core.Input },],\r\n          'filterPlaceholderText': [{ type: core.Input },],\r\n          'filterEmptyText': [{ type: core.Input },],\r\n          'group': [{ type: core.Input },],\r\n          'groupLabel': [{ type: core.Input },],\r\n          'inputClass': [{ type: core.Input },],\r\n          'invalid': [{ type: core.Input },],\r\n          'label': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n          'select': [{ type: core.Input },],\r\n          'showInput': [{ type: core.Input },],\r\n          'onFilter': [{ type: core.Output },],\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n          'target': [{ type: core.Input, args: ['mbsc-target',] },],\r\n          'value': [{ type: core.Input, args: ['mbsc-select',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['mbsc-selectChange',] },],\r\n      };\r\n      return MbscSelect;\r\n  }(MbscScrollerBase));\r\n  var MbscSelectComponent = (function (_super) {\r\n      __extends(MbscSelectComponent, _super);\r\n      function MbscSelectComponent(initialElem, zone, control, inputService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, null) || this;\r\n          _this.errorMessage = '';\r\n          _this.dropdown = true;\r\n          _this.placeholder = '';\r\n          return _this;\r\n      }\r\n      MbscSelectComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscSelectComponent.prototype.ngOnInit = function () {\r\n          _super.prototype.ngOnInit.call(this);\r\n          if (this.inline) {\r\n              var showInput = this.showInput || (this.options && this.options.showInput);\r\n              var filter = this.filter || (this.options && this.options.filter);\r\n              if (showInput === undefined) {\r\n                  this.inlineOptionsObj.showInput = this.showInput = !!filter;\r\n              }\r\n          }\r\n      };\r\n      MbscSelectComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-select',\r\n                      exportAs: 'mobiscroll',\r\n                      template: INPUT_TEMPLATE\r\n                  },] },\r\n      ];\r\n      MbscSelectComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscSelectComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n          'data': [{ type: core.Input },],\r\n          'dropdown': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n      };\r\n      return MbscSelectComponent;\r\n  }(MbscSelect));\r\n  var MbscSelectModule = (function () {\r\n      function MbscSelectModule() {\r\n      }\r\n      MbscSelectModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [common.CommonModule, MbscScrollerBaseModule, MbscInputModule],\r\n                      declarations: [MbscSelect, MbscSelectComponent],\r\n                      exports: [MbscSelect, MbscSelectComponent]\r\n                  },] },\r\n      ];\r\n      MbscSelectModule.ctorParameters = function () { return []; };\r\n      return MbscSelectModule;\r\n  }());\r\n\r\n  var Timer = Scroller;\r\n  var defaults$e = {\r\n    autostart: false,\r\n    step: 1,\r\n    // in seconds\r\n    useShortLabels: false,\r\n    // Localization\r\n    labels: ['Years', 'Months', 'Days', 'Hours', 'Minutes', 'Seconds', ''],\r\n    labelsShort: ['Yrs', 'Mths', 'Days', 'Hrs', 'Mins', 'Secs', ''],\r\n    startText: 'Start',\r\n    stopText: 'Stop',\r\n    resetText: 'Reset',\r\n    lapText: 'Lap',\r\n    hideText: 'Hide',\r\n    mode: 'countdown'\r\n  };\r\n\r\n  presets.timer = function (inst) {\r\n    /**\r\n     * Converts a date to UTC\r\n     * @param   d   (Date)  Date to convert\r\n     * @return      (Date)  Date converted to UTC\r\n     */\r\n    function toUtc(d) {\r\n      return new Date(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate(), d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds());\r\n    }\r\n    /**\r\n     * Calculates the parts of the time differnce\r\n     * @param   time    (Integer)   Time in milliseconds\r\n     * @return          (Object)    Time splitted to the required parts (years, months, days, hours, minutes, seconds)\r\n     */\r\n\r\n\r\n    function getParts(time) {\r\n      var ret = {};\r\n\r\n      if (dateMode && obj[max].index > obj.days.index) {\r\n        var i,\r\n            v,\r\n            o,\r\n            prev,\r\n            now = new Date(),\r\n            d2 = up ? now : origTime,\r\n            d1 = up ? origTime : now;\r\n        d1 = toUtc(d1);\r\n        d2 = toUtc(d2);\r\n        ret.years = d2.getFullYear() - d1.getFullYear();\r\n        ret.months = d2.getMonth() - d1.getMonth();\r\n        ret.days = d2.getDate() - d1.getDate();\r\n        ret.hours = d2.getHours() - d1.getHours();\r\n        ret.minutes = d2.getMinutes() - d1.getMinutes();\r\n        ret.seconds = d2.getSeconds() - d1.getSeconds();\r\n        ret.fract = (d2.getMilliseconds() - d1.getMilliseconds()) / 10;\r\n\r\n        for (i = unique.length; i > 0; i--) {\r\n          v = unique[i - 1];\r\n          o = obj[v];\r\n          prev = unique[$$1.inArray(v, unique) - 1];\r\n\r\n          if (obj[prev] && ret[v] < 0) {\r\n            ret[prev]--;\r\n            ret[v] += prev == 'months' ? 32 - new Date(d2.getFullYear(), d2.getMonth(), 32).getDate() : o.until + 1;\r\n          }\r\n        }\r\n\r\n        if (max == 'months') {\r\n          ret.months += ret.years * 12;\r\n          delete ret.years;\r\n        }\r\n      } else {\r\n        $$1(unique).each(function (i, v) {\r\n          if (obj[v].index <= obj[max].index) {\r\n            ret[v] = Math.floor(time / obj[v].limit);\r\n            time -= ret[v] * obj[v].limit;\r\n          }\r\n        });\r\n      }\r\n\r\n      return ret;\r\n    }\r\n    /**\r\n     * Generates a specific wheel\r\n     * @param   v   (String)  Unique identifier\r\n     */\r\n\r\n\r\n    function genWheel(v) {\r\n      var st = 1,\r\n          o = obj[v],\r\n          wh = o.wheel,\r\n          prefix = o.prefix,\r\n          from = 0,\r\n          until = o.until,\r\n          next = obj[unique[$$1.inArray(v, unique) - 1]];\r\n\r\n      if (o.index <= obj[max].index && (!next || next.limit > step)) {\r\n        if (!wheels[v]) {\r\n          w[0].push(wh);\r\n        }\r\n\r\n        wheels[v] = 1;\r\n        wh.data = [];\r\n        wh.label = o.label || '';\r\n        wh.cssClass = 'mbsc-timer-whl-' + v;\r\n\r\n        if (step >= o.limit) {\r\n          // Calculate steps on last wheel\r\n          st = Math.max(Math.round(step / o.limit), 1);\r\n          tstep = st * o.limit; // Timer is calculated with rounded step\r\n        }\r\n\r\n        if (v == max) {\r\n          wh.min = 0;\r\n\r\n          wh.data = function (i) {\r\n            return {\r\n              value: i,\r\n              display: genValue(i, prefix, o.label)\r\n            };\r\n          };\r\n\r\n          wh.getIndex = function (v) {\r\n            return v;\r\n          };\r\n        } else {\r\n          for (i = from; i <= until; i += st) {\r\n            wh.data.push({\r\n              value: i,\r\n              display: genValue(i, prefix, o.label)\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function genValue(i, prefix, lbl) {\r\n      return (prefix || '') + (i < 10 ? '0' : '') + i + '<span class=\"mbsc-timer-lbl\">' + lbl + '</span>';\r\n    }\r\n    /**\r\n     * Converts the time into array containing the parts\r\n     * @param   time    (Integer)   Time in milliseconds\r\n     * @return          (Array)     Time splitted to the required parts (years, months, days, hours, minutes, seconds)\r\n     */\r\n\r\n\r\n    function getArray(time) {\r\n      var arr = [],\r\n          st,\r\n          p = getParts(time);\r\n      $$1(unique).each(function (i, v) {\r\n        if (wheels[v]) {\r\n          st = Math.max(Math.round(step / obj[v].limit), 1);\r\n          arr.push(Math.round(p[v] / st) * st);\r\n        }\r\n      });\r\n      return arr;\r\n    }\r\n    /**\r\n     * Calculates the time\r\n     * @param   reset   (Boolean)   Reset the timer or not\r\n     */\r\n\r\n\r\n    function calcTime(reset) {\r\n      if (dateMode) {\r\n        time = origTime - new Date();\r\n\r\n        if (time < 0) {\r\n          time *= -1;\r\n          up = true;\r\n        } else {\r\n          up = false;\r\n        }\r\n\r\n        timer = 0;\r\n        infinit = true;\r\n      } else if (origTime !== undefined) {\r\n        infinit = false;\r\n        time = origTime * 1000;\r\n        up = s.mode != 'countdown';\r\n\r\n        if (reset) {\r\n          timer = 0;\r\n        }\r\n      } else {\r\n        time = 0;\r\n        up = s.mode != 'countdown';\r\n        infinit = up;\r\n\r\n        if (reset) {\r\n          timer = 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    function updateUI() {\r\n      if (running) {\r\n        $$1('.mbsc-fr-w', ctx).addClass('mbsc-timer-running mbsc-timer-locked');\r\n        $$1('.mbsc-timer-btn-toggle-c > div', ctx).text(s.stopText);\r\n\r\n        if (inst.buttons.start.icon) {\r\n          $$1('.mbsc-timer-btn-toggle-c > div', ctx).removeClass('mbsc-ic-' + inst.buttons.start.icon);\r\n        }\r\n\r\n        if (inst.buttons.stop.icon) {\r\n          $$1('.mbsc-timer-btn-toggle-c > div', ctx).addClass('mbsc-ic-' + inst.buttons.stop.icon);\r\n        }\r\n\r\n        if (s.mode == 'stopwatch') {\r\n          $$1('.mbsc-timer-btn-resetlap-c > div', ctx).text(s.lapText);\r\n\r\n          if (inst.buttons.reset.icon) {\r\n            $$1('.mbsc-timer-btn-resetlap-c > div', ctx).removeClass('mbsc-ic-' + inst.buttons.reset.icon);\r\n          }\r\n\r\n          if (inst.buttons.lap.icon) {\r\n            $$1('.mbsc-timer-btn-resetlap-c > div', ctx).addClass('mbsc-ic-' + inst.buttons.lap.icon);\r\n          }\r\n        }\r\n      } else {\r\n        $$1('.mbsc-fr-w', ctx).removeClass('mbsc-timer-running');\r\n        $$1('.mbsc-timer-btn-toggle-c > div', ctx).text(s.startText);\r\n\r\n        if (inst.buttons.start.icon) {\r\n          $$1('.mbsc-timer-btn-toggle-c > div', ctx).addClass('mbsc-ic-' + inst.buttons.start.icon);\r\n        }\r\n\r\n        if (inst.buttons.stop.icon) {\r\n          $$1('.mbsc-timer-btn-toggle-c > div', ctx).removeClass('mbsc-ic-' + inst.buttons.stop.icon);\r\n        }\r\n\r\n        if (s.mode == 'stopwatch') {\r\n          $$1('.mbsc-timer-btn-resetlap-c > div', ctx).text(s.resetText);\r\n\r\n          if (inst.buttons.reset.icon) {\r\n            $$1('.mbsc-timer-btn-resetlap-c > div', ctx).addClass('mbsc-ic-' + inst.buttons.reset.icon);\r\n          }\r\n\r\n          if (inst.buttons.lap.icon) {\r\n            $$1('.mbsc-timer-btn-resetlap-c > div', ctx).removeClass('mbsc-ic-' + inst.buttons.lap.icon);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    var i,\r\n        interval,\r\n        tstep,\r\n        startTime,\r\n        started,\r\n        ellapsed,\r\n        time,\r\n        timer,\r\n        up,\r\n        ctx,\r\n        lap,\r\n        orig = extend$1({}, inst.settings),\r\n        s = extend$1(inst.settings, defaults$e, orig),\r\n        lbls = s.useShortLabels ? s.labelsShort : s.labels,\r\n        animTime = 1000,\r\n        buttons = ['resetlap', 'toggle'],\r\n        unique = ['years', 'months', 'days', 'hours', 'minutes', 'seconds', 'fract'],\r\n        obj = {\r\n      'years': {\r\n        index: 6,\r\n        until: 10,\r\n        limit: 1000 * 60 * 60 * 24 * 365,\r\n        label: lbls[0],\r\n        wheel: {}\r\n      },\r\n      'months': {\r\n        index: 5,\r\n        until: 11,\r\n        limit: 1000 * 60 * 60 * 24 * 30,\r\n        label: lbls[1],\r\n        wheel: {}\r\n      },\r\n      'days': {\r\n        index: 4,\r\n        until: 31,\r\n        limit: 1000 * 60 * 60 * 24,\r\n        label: lbls[2],\r\n        wheel: {}\r\n      },\r\n      'hours': {\r\n        index: 3,\r\n        until: 23,\r\n        limit: 1000 * 60 * 60,\r\n        label: lbls[3],\r\n        wheel: {}\r\n      },\r\n      'minutes': {\r\n        index: 2,\r\n        until: 59,\r\n        limit: 1000 * 60,\r\n        label: lbls[4],\r\n        wheel: {}\r\n      },\r\n      'seconds': {\r\n        index: 1,\r\n        until: 59,\r\n        limit: 1000,\r\n        label: lbls[5],\r\n        wheel: {}\r\n      },\r\n      'fract': {\r\n        index: 0,\r\n        until: 99,\r\n        limit: 10,\r\n        label: lbls[6],\r\n        prefix: '.',\r\n        wheel: {}\r\n      }\r\n    },\r\n        wheels = {},\r\n        laps = [],\r\n        lastLap = 0,\r\n        running = false,\r\n        stopped = true,\r\n        infinit = false,\r\n        step = Math.max(10, s.step * 1000),\r\n        max = s.maxWheel,\r\n        locked = s.mode == 'stopwatch' || dateMode,\r\n        origTime = s.targetTime,\r\n        dateMode = origTime && origTime.getTime !== undefined,\r\n        w = [[]]; // Extended methods\r\n    // ---\r\n    // Start the counter\r\n\r\n    inst.start = function () {\r\n      if (stopped) {\r\n        inst.reset();\r\n      }\r\n\r\n      if (!running) {\r\n        calcTime();\r\n\r\n        if (!infinit && timer >= time) {\r\n          return;\r\n        }\r\n\r\n        running = true;\r\n        stopped = false;\r\n        started = new Date();\r\n        startTime = timer;\r\n        s.readonly = true;\r\n        inst.setVal(getArray(up ? timer : time - timer), true, true, false, 100);\r\n        interval = setInterval(function () {\r\n          timer = new Date() - started + startTime;\r\n          inst.setVal(getArray(up ? timer : time - timer), true, true, false, Math.min(100, tstep - 10));\r\n\r\n          if (!infinit && timer + tstep >= time) {\r\n            clearInterval(interval);\r\n            setTimeout(function () {\r\n              // Do last tick with precision\r\n              inst.stop();\r\n              timer = time;\r\n              inst.setVal(getArray(up ? timer : 0), true, true, false, 100);\r\n              inst.trigger('onFinish', {\r\n                time: time\r\n              });\r\n              stopped = true;\r\n            }, time - timer);\r\n          }\r\n        }, tstep);\r\n        updateUI();\r\n        inst.trigger('onStart');\r\n      }\r\n    }; // Stop the counter\r\n\r\n\r\n    inst.stop = function () {\r\n      if (running) {\r\n        running = false;\r\n        clearInterval(interval); // Time correction\r\n\r\n        timer = new Date() - started + startTime;\r\n        updateUI();\r\n        inst.trigger('onStop', {\r\n          ellapsed: timer\r\n        });\r\n      }\r\n    };\r\n\r\n    inst.toggle = function () {\r\n      if (running) {\r\n        inst.stop();\r\n      } else {\r\n        inst.start();\r\n      }\r\n    }; // Reset the counter\r\n\r\n\r\n    inst.reset = function () {\r\n      inst.stop();\r\n      timer = 0;\r\n      laps = [];\r\n      lastLap = 0;\r\n      inst.setVal(getArray(up ? 0 : time), true, true, false, animTime);\r\n      inst.settings.readonly = locked;\r\n      stopped = true;\r\n\r\n      if (!locked) {\r\n        $$1('.mbsc-fr-w', ctx).removeClass('mbsc-timer-locked');\r\n      }\r\n\r\n      inst.trigger('onReset');\r\n    }; // Lap\r\n\r\n\r\n    inst.lap = function () {\r\n      if (running) {\r\n        ellapsed = new Date() - started + startTime;\r\n        lap = ellapsed - lastLap;\r\n        lastLap = ellapsed;\r\n        laps.push(ellapsed);\r\n        inst.trigger('onLap', {\r\n          ellapsed: ellapsed,\r\n          lap: lap,\r\n          laps: laps\r\n        });\r\n      }\r\n    };\r\n\r\n    inst.resetlap = function () {\r\n      if (running && s.mode == 'stopwatch') {\r\n        inst.lap();\r\n      } else {\r\n        inst.reset();\r\n      }\r\n    };\r\n\r\n    inst.getTime = function () {\r\n      return time;\r\n    };\r\n\r\n    inst.setTime = function (t) {\r\n      origTime = t / 1000;\r\n      time = t;\r\n    };\r\n\r\n    inst.getEllapsedTime = function () {\r\n      return stopped ? 0 : running ? new Date() - started + startTime : timer;\r\n    };\r\n\r\n    inst.setEllapsedTime = function (t, change) {\r\n      if (!stopped) {\r\n        startTime = timer = t;\r\n        started = new Date();\r\n        inst.setVal(getArray(up ? timer : time - timer), true, change, false, animTime);\r\n      }\r\n    }; // ---\r\n    // Constructor\r\n\r\n\r\n    calcTime(true);\r\n\r\n    if (!max && !time) {\r\n      max = 'minutes';\r\n    }\r\n\r\n    if (s.display !== 'inline') {\r\n      buttons.unshift('hide');\r\n    } // Determine maximum wheel\r\n\r\n\r\n    if (!max) {\r\n      $$1(unique).each(function (i, v) {\r\n        if (!max && time >= obj[v].limit) {\r\n          max = v;\r\n          return false;\r\n        }\r\n      });\r\n    } // Generate wheels\r\n\r\n\r\n    $$1(unique).each(function (i, v) {\r\n      genWheel(v);\r\n    });\r\n    tstep = Math.max(97, tstep); // timer step cannot be less then 100 ms\r\n\r\n    if (s.autostart) {\r\n      setTimeout(function () {\r\n        inst.start();\r\n      }, 0);\r\n    }\r\n\r\n    inst.handlers.toggle = inst.toggle;\r\n    inst.handlers.start = inst.start;\r\n    inst.handlers.stop = inst.stop;\r\n    inst.handlers.resetlap = inst.resetlap;\r\n    inst.handlers.reset = inst.reset;\r\n    inst.handlers.lap = inst.lap;\r\n    inst.buttons.toggle = {\r\n      parentClass: 'mbsc-timer-btn-toggle-c',\r\n      text: s.startText,\r\n      icon: s.startIcon,\r\n      handler: 'toggle'\r\n    };\r\n    inst.buttons.start = {\r\n      text: s.startText,\r\n      icon: s.startIcon,\r\n      handler: 'start'\r\n    };\r\n    inst.buttons.stop = {\r\n      text: s.stopText,\r\n      icon: s.stopIcon,\r\n      handler: 'stop'\r\n    };\r\n    inst.buttons.reset = {\r\n      text: s.resetText,\r\n      icon: s.resetIcon,\r\n      handler: 'reset'\r\n    };\r\n    inst.buttons.lap = {\r\n      text: s.lapText,\r\n      icon: s.lapIcon,\r\n      handler: 'lap'\r\n    };\r\n    inst.buttons.resetlap = {\r\n      parentClass: 'mbsc-timer-btn-resetlap-c',\r\n      text: s.resetText,\r\n      icon: s.resetIcon,\r\n      handler: 'resetlap'\r\n    };\r\n    inst.buttons.hide = {\r\n      parentClass: 'mbsc-timer-btn-hide-c',\r\n      text: s.hideText,\r\n      icon: s.closeIcon,\r\n      handler: 'cancel'\r\n    }; // Return settings\r\n\r\n    return {\r\n      minWidth: 100,\r\n      wheels: w,\r\n      headerText: false,\r\n      readonly: locked,\r\n      buttons: buttons,\r\n      compClass: 'mbsc-timer mbsc-sc',\r\n      parseValue: function parseValue() {\r\n        return getArray(up ? 0 : time);\r\n      },\r\n      formatValue: function formatValue(d) {\r\n        var ret = '',\r\n            j = 0;\r\n        $$1(unique).each(function (i, v) {\r\n          if (v == 'fract') {\r\n            return;\r\n          }\r\n\r\n          if (wheels[v]) {\r\n            ret += d[j] + (v == 'seconds' && wheels.fract ? '.' + d[j + 1] : '') + ' ' + lbls[i] + ' ';\r\n            j++;\r\n          }\r\n        });\r\n        return ret;\r\n      },\r\n      validate: function validate(data) {\r\n        var values = data.values,\r\n            i = data.index,\r\n            j = 0;\r\n\r\n        if (stopped && i !== undefined) {\r\n          origTime = 0;\r\n          $$1(unique).each(function (i, v) {\r\n            if (wheels[v]) {\r\n              origTime += obj[v].limit * values[j];\r\n              j++;\r\n            }\r\n          });\r\n          origTime /= 1000;\r\n          calcTime(true);\r\n        }\r\n      },\r\n      onBeforeShow: function onBeforeShow() {\r\n        s.showLabel = true;\r\n      },\r\n      onMarkupReady: function onMarkupReady(ev) {\r\n        ctx = $$1(ev.target);\r\n        updateUI();\r\n\r\n        if (locked) {\r\n          $$1('.mbsc-fr-w', ctx).addClass('mbsc-timer-locked');\r\n        }\r\n      },\r\n      onPosition: function onPosition(ev) {\r\n        // Force width to fit buttons\r\n        $$1('.mbsc-fr-w', ev.target).css('min-width', 0).css('min-width', $$1('.mbsc-fr-btn-cont', ev.target)[0].offsetWidth);\r\n      },\r\n      onDestroy: function onDestroy() {\r\n        clearInterval(interval);\r\n      }\r\n    };\r\n  };\r\n\r\n  var MbscTimer = (function (_super) {\r\n      __extends(MbscTimer, _super);\r\n      function MbscTimer(initialElement, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElement, zone, control, inputService, view) || this;\r\n          _this.optionService = optionService;\r\n          _this.onLap = new core.EventEmitter();\r\n          _this.onFinish = new core.EventEmitter();\r\n          _this.onReset = new core.EventEmitter();\r\n          _this.onStart = new core.EventEmitter();\r\n          _this.onStop = new core.EventEmitter();\r\n          _this.options = {};\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscTimer.prototype, \"value\", {\r\n          set: function (v) {\r\n              this.setNewValueProxy(v);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscTimer.prototype.setNewValue = function (v) {\r\n          if (this.instance) {\r\n              if (!this.instance._timer || Math.abs(this.instance._timer - v) > 10) {\r\n                  this.instance.setEllapsedTime(v, false);\r\n                  if (this._inputService && this._inputService.input) {\r\n                      this._inputService.input.innerValue = this.instance._value;\r\n                  }\r\n              }\r\n          }\r\n      };\r\n      MbscTimer.prototype.handleChange = function () {\r\n          var that = this;\r\n          $$1(this.element).on('change', function () {\r\n              that.zone.run(function () {\r\n                  that.instance._timer = that.instance.getEllapsedTime();\r\n                  if (that.control) {\r\n                      that.control.control.patchValue(that.instance._timer);\r\n                  }\r\n                  else {\r\n                      that.onChangeEmitter.emit(that.instance._timer);\r\n                  }\r\n              });\r\n          });\r\n      };\r\n      MbscTimer.prototype.initControl = function () {\r\n          var options = extend$1({ preset: 'timer' }, this.optionService ? this.optionService.options : {}, this.options, this.inlineOptionsObj, this.optionExtensions);\r\n          this.instance = new Timer(this.element, options);\r\n          if (this.initialValue !== undefined) {\r\n              this.instance.setVal(this.initialValue, true, false);\r\n          }\r\n      };\r\n      MbscTimer.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-timer]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscTimer.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscTimer.propDecorators = {\r\n          'autostart': [{ type: core.Input },],\r\n          'maxWheel': [{ type: core.Input },],\r\n          'mode': [{ type: core.Input },],\r\n          'step': [{ type: core.Input },],\r\n          'targetTime': [{ type: core.Input },],\r\n          'useShortLabels': [{ type: core.Input },],\r\n          'hideText': [{ type: core.Input },],\r\n          'labels': [{ type: core.Input },],\r\n          'labelsShort': [{ type: core.Input },],\r\n          'lapText': [{ type: core.Input },],\r\n          'resetText': [{ type: core.Input },],\r\n          'startText': [{ type: core.Input },],\r\n          'stopText': [{ type: core.Input },],\r\n          'onLap': [{ type: core.Output },],\r\n          'onFinish': [{ type: core.Output },],\r\n          'onReset': [{ type: core.Output },],\r\n          'onStart': [{ type: core.Output },],\r\n          'onStop': [{ type: core.Output },],\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n          'value': [{ type: core.Input, args: ['mbsc-timer',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['mbsc-timerChange',] },],\r\n      };\r\n      return MbscTimer;\r\n  }(MbscScrollerBase));\r\n  var MbscTimerComponent = (function (_super) {\r\n      __extends(MbscTimerComponent, _super);\r\n      function MbscTimerComponent(initialElem, zone, control, inputService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, null) || this;\r\n          _this.errorMessage = '';\r\n          _this.placeholder = '';\r\n          return _this;\r\n      }\r\n      MbscTimerComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscTimerComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-timer',\r\n                      exportAs: 'mobiscroll',\r\n                      template: INPUT_TEMPLATE\r\n                  },] },\r\n      ];\r\n      MbscTimerComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscTimerComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n      };\r\n      return MbscTimerComponent;\r\n  }(MbscTimer));\r\n  var MbscTimerModule = (function () {\r\n      function MbscTimerModule() {\r\n      }\r\n      MbscTimerModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [common.CommonModule, MbscScrollerBaseModule, MbscInputModule],\r\n                      declarations: [MbscTimer, MbscTimerComponent],\r\n                      exports: [MbscTimer, MbscTimerComponent]\r\n                  },] },\r\n      ];\r\n      MbscTimerModule.ctorParameters = function () { return []; };\r\n      return MbscTimerModule;\r\n  }());\r\n\r\n  var Timespan = Scroller;\r\n  var defaults$f = {\r\n    wheelOrder: 'hhiiss',\r\n    useShortLabels: false,\r\n    min: 0,\r\n    max: Infinity,\r\n    // Localization\r\n    labels: ['Years', 'Months', 'Days', 'Hours', 'Minutes', 'Seconds'],\r\n    //, ''],\r\n    labelsShort: ['Yrs', 'Mths', 'Days', 'Hrs', 'Mins', 'Secs'] //, '']\r\n\r\n  };\r\n\r\n  presets.timespan = function (inst) {\r\n    /**\r\n     * Calculates the parts of the time differnce.\r\n     * @param {Integer} time - Time in milliseconds.\r\n     * @return {Object} - Time splitted to the required parts (years, months, days, hours, minutes, seconds).\r\n     */\r\n    function getParts(time) {\r\n      var ret = {};\r\n      $$1(unique).each(function (i, v) {\r\n        ret[v] = wheels[v] ? Math.floor(time / obj[v].limit) : 0;\r\n        time -= ret[v] * obj[v].limit;\r\n      });\r\n      return ret;\r\n    }\r\n    /**\r\n     * Generates a specific wheel.\r\n     * @param {String} v - Unique identifier.\r\n     */\r\n\r\n\r\n    function genWheel(v) {\r\n      var leading = false,\r\n          st = steps[wheels[v] - 1] || 1,\r\n          o = obj[v],\r\n          lbl = o.label,\r\n          w = o.wheel;\r\n      w.data = [];\r\n      w.label = o.label;\r\n\r\n      if (ord.match(new RegExp(o.re + o.re, 'i'))) {\r\n        leading = true;\r\n      }\r\n\r\n      if (v == max) {\r\n        w.min = minParts[v];\r\n        w.max = maxParts[v];\r\n\r\n        w.data = function (i) {\r\n          return {\r\n            value: i * st,\r\n            display: genValue(i * st, leading, lbl)\r\n          };\r\n        };\r\n\r\n        w.getIndex = function (v) {\r\n          return Math.round(v / st);\r\n        };\r\n      } else {\r\n        for (i = 0; i <= o.until; i += st) {\r\n          w.data.push({\r\n            value: i,\r\n            display: genValue(i, leading, lbl)\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    function genValue(i, leading, lbl) {\r\n      return (i < 10 && leading ? '0' : '') + i + '<span class=\"mbsc-ts-lbl\">' + lbl + '</span>';\r\n    }\r\n\r\n    function calcTime(arr) {\r\n      var j = 0,\r\n          time = 0;\r\n      $$1.each(o, function (i, v) {\r\n        if (!isNaN(+arr[j])) {\r\n          time += obj[v.v].limit * arr[i];\r\n        }\r\n      });\r\n      return time;\r\n    }\r\n\r\n    function step(v, st) {\r\n      return Math.floor(v / st) * st;\r\n    }\r\n\r\n    var i,\r\n        j,\r\n        p,\r\n        minParts,\r\n        maxParts,\r\n        orig = extend$1({}, inst.settings),\r\n        s = extend$1(inst.settings, defaults$f, orig),\r\n        ord = s.wheelOrder,\r\n        lbls = s.useShortLabels ? s.labelsShort : s.labels,\r\n        unique = ['years', 'months', 'days', 'hours', 'minutes', 'seconds'],\r\n        //, 'fract'],\r\n    obj = {\r\n      'years': {\r\n        ord: 0,\r\n        index: 6,\r\n        until: 10,\r\n        limit: 1000 * 60 * 60 * 24 * 365,\r\n        label: lbls[0],\r\n        re: 'y',\r\n        wheel: {}\r\n      },\r\n      'months': {\r\n        ord: 1,\r\n        index: 5,\r\n        until: 11,\r\n        limit: 1000 * 60 * 60 * 24 * 30,\r\n        label: lbls[1],\r\n        re: 'm',\r\n        wheel: {}\r\n      },\r\n      'days': {\r\n        ord: 2,\r\n        index: 4,\r\n        until: 31,\r\n        limit: 1000 * 60 * 60 * 24,\r\n        label: lbls[2],\r\n        re: 'd',\r\n        wheel: {}\r\n      },\r\n      'hours': {\r\n        ord: 3,\r\n        index: 3,\r\n        until: 23,\r\n        limit: 1000 * 60 * 60,\r\n        label: lbls[3],\r\n        re: 'h',\r\n        wheel: {}\r\n      },\r\n      'minutes': {\r\n        ord: 4,\r\n        index: 2,\r\n        until: 59,\r\n        limit: 1000 * 60,\r\n        label: lbls[4],\r\n        re: 'i',\r\n        wheel: {}\r\n      },\r\n      'seconds': {\r\n        ord: 5,\r\n        index: 1,\r\n        until: 59,\r\n        limit: 1000,\r\n        label: lbls[5],\r\n        re: 's',\r\n        wheel: {}\r\n      } //,\r\n      //'fract': { index: 0, until: 99, limit: 10, label: lbls[6], prefix: '.', short: 'u' }\r\n\r\n    },\r\n        o = [],\r\n        steps = s.steps || [],\r\n        wheels = {},\r\n        max = 'seconds',\r\n        defaultVal = s.defaultValue || Math.max(s.min, Math.min(0, s.max)),\r\n        w = [[]]; // Constructor\r\n    // Generate wheels\r\n\r\n    $$1(unique).each(function (i, v) {\r\n      j = ord.search(new RegExp(obj[v].re, 'i'));\r\n\r\n      if (j > -1) {\r\n        o.push({\r\n          o: j,\r\n          v: v\r\n        });\r\n\r\n        if (obj[v].index > obj[max].index) {\r\n          max = v;\r\n        }\r\n      }\r\n    });\r\n    o.sort(function (a, b) {\r\n      return a.o > b.o ? 1 : -1;\r\n    });\r\n    $$1.each(o, function (i, v) {\r\n      wheels[v.v] = i + 1;\r\n      w[0].push(obj[v.v].wheel);\r\n    });\r\n    minParts = getParts(s.min);\r\n    maxParts = getParts(s.max);\r\n    $$1.each(o, function (i, v) {\r\n      genWheel(v.v);\r\n    }); // Extended methods\r\n    // ---\r\n\r\n    inst.getVal = function (temp, formatted) {\r\n      return formatted ? inst._getVal(temp) : inst._hasValue || temp ? calcTime(inst.getArrayVal(temp)) : null;\r\n    }; // ---\r\n    // Return settings\r\n\r\n\r\n    return {\r\n      minWidth: 100,\r\n      showLabel: true,\r\n      wheels: w,\r\n      compClass: 'mbsc-ts mbsc-sc',\r\n      parseValue: function parseValue(val) {\r\n        var ret = [],\r\n            m;\r\n\r\n        if (isNumeric(val) || !val) {\r\n          p = getParts(val || defaultVal);\r\n          $$1.each(o, function (i, v) {\r\n            ret.push(p[v.v]);\r\n          });\r\n        } else {\r\n          $$1.each(o, function (i, v) {\r\n            m = new RegExp('(\\\\d+)\\\\s?(' + s.labels[obj[v.v].ord] + '|' + s.labelsShort[obj[v.v].ord] + ')', 'gi').exec(val);\r\n            ret.push(m ? m[1] : 0);\r\n          });\r\n        }\r\n\r\n        $$1(ret).each(function (i, v) {\r\n          // Steps\r\n          ret[i] = step(v, steps[i] || 1);\r\n        });\r\n        return ret;\r\n      },\r\n      formatValue: function formatValue(d) {\r\n        var ret = '';\r\n        $$1.each(o, function (i, v) {\r\n          ret += +d[i] ? d[i] + ' ' + obj[v.v].label + ' ' : '';\r\n        });\r\n        return ret ? ret.replace(/\\s+$/g, '') : 0;\r\n      },\r\n      validate: function validate(data) {\r\n        var p,\r\n            i,\r\n            index,\r\n            dis,\r\n            values = data.values,\r\n            dir = data.direction,\r\n            disabled = [],\r\n            maxprop = true,\r\n            minprop = true;\r\n        $$1(unique).each(function (x, v) {\r\n          if (wheels[v] !== undefined) {\r\n            index = wheels[v] - 1;\r\n            disabled[index] = [];\r\n            dis = {};\r\n\r\n            if (v != max) {\r\n              if (maxprop) {\r\n                for (i = maxParts[v] + 1; i <= obj[v].until; i++) {\r\n                  dis[i] = true;\r\n                }\r\n              }\r\n\r\n              if (minprop) {\r\n                for (i = 0; i < minParts[v]; i++) {\r\n                  dis[i] = true;\r\n                }\r\n              }\r\n            }\r\n\r\n            values[index] = inst.getValidValue(index, values[index], dir, dis);\r\n            p = getParts(calcTime(values));\r\n            maxprop = maxprop && p[v] == maxParts[v];\r\n            minprop = minprop && p[v] == minParts[v];\r\n            $$1.each(dis, function (i) {\r\n              disabled[index].push(i);\r\n            });\r\n          }\r\n        });\r\n        return {\r\n          disabled: disabled\r\n        };\r\n      }\r\n    };\r\n  };\r\n\r\n  var MbscTimespan = (function (_super) {\r\n      __extends(MbscTimespan, _super);\r\n      function MbscTimespan(initialElement, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElement, zone, control, inputService, view) || this;\r\n          _this.optionService = optionService;\r\n          _this.options = {};\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscTimespan.prototype, \"value\", {\r\n          set: function (v) {\r\n              this.setNewValueProxy(v);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscTimespan.prototype.setNewValue = function (v) {\r\n          if (this.instance) {\r\n              var innerValue = this.instance.getVal();\r\n              if (innerValue !== v) {\r\n                  this.instance.setVal(v, true, false);\r\n                  if (this._inputService && this._inputService.input) {\r\n                      this._inputService.input.innerValue = this.instance._value;\r\n                  }\r\n              }\r\n          }\r\n      };\r\n      MbscTimespan.prototype.initControl = function () {\r\n          var options = extend$1({ preset: 'timespan' }, this.optionService ? this.optionService.options : {}, this.options, this.inlineOptionsObj, this.optionExtensions);\r\n          this.instance = new Timespan(this.element, options);\r\n          if (this.initialValue !== undefined) {\r\n              this.instance.setVal(this.initialValue, true, false);\r\n          }\r\n      };\r\n      MbscTimespan.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-timespan]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscTimespan.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscTimespan.propDecorators = {\r\n          'defaultValue': [{ type: core.Input },],\r\n          'max': [{ type: core.Input },],\r\n          'min': [{ type: core.Input },],\r\n          'steps': [{ type: core.Input },],\r\n          'useShortLabels': [{ type: core.Input },],\r\n          'wheelOrder': [{ type: core.Input },],\r\n          'labels': [{ type: core.Input },],\r\n          'labelsShort': [{ type: core.Input },],\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n          'value': [{ type: core.Input, args: ['mbsc-timespan',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['mbsc-timespanChange',] },],\r\n      };\r\n      return MbscTimespan;\r\n  }(MbscScrollerBase));\r\n  var MbscTimespanComponent = (function (_super) {\r\n      __extends(MbscTimespanComponent, _super);\r\n      function MbscTimespanComponent(initialElem, zone, control, inputService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, null) || this;\r\n          _this.errorMessage = '';\r\n          _this.placeholder = '';\r\n          return _this;\r\n      }\r\n      MbscTimespanComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscTimespanComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-timespan',\r\n                      exportAs: 'mobiscroll',\r\n                      template: INPUT_TEMPLATE\r\n                  },] },\r\n      ];\r\n      MbscTimespanComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscTimespanComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n      };\r\n      return MbscTimespanComponent;\r\n  }(MbscTimespan));\r\n  var MbscTimespanModule = (function () {\r\n      function MbscTimespanModule() {\r\n      }\r\n      MbscTimespanModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [common.CommonModule, MbscScrollerBaseModule, MbscInputModule],\r\n                      declarations: [MbscTimespan, MbscTimespanComponent],\r\n                      exports: [MbscTimespan, MbscTimespanComponent]\r\n                  },] },\r\n      ];\r\n      MbscTimespanModule.ctorParameters = function () { return []; };\r\n      return MbscTimespanModule;\r\n  }());\r\n\r\n  var Treelist = Scroller;\r\n  presets.treelist = List;\r\n\r\n  var MbscTreelist = (function (_super) {\r\n      __extends(MbscTreelist, _super);\r\n      function MbscTreelist(initialElement, zone, control, inputService, optionService, view) {\r\n          var _this = _super.call(this, initialElement, zone, control, inputService, view) || this;\r\n          _this.optionService = optionService;\r\n          _this.placeholder = '';\r\n          _this.options = {};\r\n          _this.onChangeEmitter = new core.EventEmitter();\r\n          return _this;\r\n      }\r\n      Object.defineProperty(MbscTreelist.prototype, \"value\", {\r\n          set: function (v) {\r\n              this.setNewValueProxy(v);\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n      });\r\n      MbscTreelist.prototype.initControl = function () {\r\n          var _this = this;\r\n          var target = this.target;\r\n          if (target) {\r\n              if (typeof target !== 'string' && target._elementRef && target._elementRef.nativeElement) {\r\n                  target = target._elementRef.nativeElement;\r\n              }\r\n              else if (target.getInputElement) {\r\n                  target.getInputElement().then(function (inp) {\r\n                      _this.updateOptions({ input: inp }, true, false, false);\r\n                  });\r\n              }\r\n          }\r\n          var options = extend$1({ preset: 'treelist', input: target }, this.optionService ? this.optionService.options : {}, this.options, this.inlineOptionsObj, this.optionExtensions);\r\n          this.instance = new Treelist(this.element, options);\r\n          if (this.initialValue !== undefined) {\r\n              this.instance.setVal(this.initialValue, true, false);\r\n          }\r\n      };\r\n      MbscTreelist.prototype.setNewValue = function (v) {\r\n          if (this.instance && this.instance.getVal() !== v) {\r\n              this.instance.setVal(v, true, false);\r\n              if (this._inputService && this._inputService.input) {\r\n                  this._inputService.input.innerValue = this.instance._value;\r\n              }\r\n          }\r\n      };\r\n      MbscTreelist.decorators = [\r\n          { type: core.Directive, args: [{\r\n                      selector: '[mbsc-treelist]',\r\n                      exportAs: 'mobiscroll'\r\n                  },] },\r\n      ];\r\n      MbscTreelist.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n          { type: core.ViewContainerRef, },\r\n      ]; };\r\n      MbscTreelist.propDecorators = {\r\n          'defaultValue': [{ type: core.Input },],\r\n          'inputClass': [{ type: core.Input },],\r\n          'invalid': [{ type: core.Input },],\r\n          'labels': [{ type: core.Input },],\r\n          'placeholder': [{ type: core.Input },],\r\n          'showInput': [{ type: core.Input },],\r\n          'wheelArray': [{ type: core.Input, args: ['mbsc-data',] },],\r\n          'options': [{ type: core.Input, args: ['mbsc-options',] },],\r\n          'target': [{ type: core.Input, args: ['mbsc-target',] },],\r\n          'value': [{ type: core.Input, args: ['mbsc-treelist',] },],\r\n          'onChangeEmitter': [{ type: core.Output, args: ['mbsc-treelistChange',] },],\r\n      };\r\n      return MbscTreelist;\r\n  }(MbscScrollerBase));\r\n  var MbscTreelistComponent = (function (_super) {\r\n      __extends(MbscTreelistComponent, _super);\r\n      function MbscTreelistComponent(initialElem, zone, control, inputService, optionService) {\r\n          var _this = _super.call(this, initialElem, zone, control, inputService, optionService, null) || this;\r\n          _this.errorMessage = '';\r\n          _this.placeholder = '';\r\n          _this.showInput = false;\r\n          _this.inlineOptionsObj = {\r\n              showInput: false\r\n          };\r\n          return _this;\r\n      }\r\n      MbscTreelistComponent.prototype.ngAfterViewInit = function () {\r\n          _super.prototype.ngAfterViewInit.call(this);\r\n          this.setThemeClasses();\r\n      };\r\n      MbscTreelistComponent.decorators = [\r\n          { type: core.Component, args: [{\r\n                      selector: 'mbsc-treelist',\r\n                      exportAs: 'mobiscroll',\r\n                      template: INPUT_TEMPLATE\r\n                  },] },\r\n      ];\r\n      MbscTreelistComponent.ctorParameters = function () { return [\r\n          { type: core.ElementRef, },\r\n          { type: core.NgZone, },\r\n          { type: forms.NgControl, decorators: [{ type: core.Optional },] },\r\n          { type: MbscInputService, decorators: [{ type: core.Optional },] },\r\n          { type: MbscOptionsService, decorators: [{ type: core.Optional },] },\r\n      ]; };\r\n      MbscTreelistComponent.propDecorators = {\r\n          'inputIcon': [{ type: core.Input, args: ['icon',] },],\r\n          'iconAlign': [{ type: core.Input, args: ['icon-align',] },],\r\n          'name': [{ type: core.Input },],\r\n          'error': [{ type: core.Input },],\r\n          'errorMessage': [{ type: core.Input },],\r\n          'options': [{ type: core.Input },],\r\n          'wheelArray': [{ type: core.Input, args: ['data',] },],\r\n          'placeholder': [{ type: core.Input },],\r\n      };\r\n      return MbscTreelistComponent;\r\n  }(MbscTreelist));\r\n  var MbscTreelistModule = (function () {\r\n      function MbscTreelistModule() {\r\n      }\r\n      MbscTreelistModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [common.CommonModule, MbscScrollerBaseModule, MbscInputModule],\r\n                      declarations: [MbscTreelist, MbscTreelistComponent],\r\n                      exports: [MbscTreelist, MbscTreelistComponent]\r\n                  },] },\r\n      ];\r\n      MbscTreelistModule.ctorParameters = function () { return []; };\r\n      return MbscTreelistModule;\r\n  }());\r\n\r\n  var directives = [\r\n      MbscInput,\r\n      MbscCalendar, MbscCalendarComponent,\r\n      MbscCard, MbscCardComponent, MbscCardContent, MbscCardFooter, MbscCardHeader, MbscCardSubtitle, MbscCardTitle,\r\n      MbscColor, MbscColorComponent,\r\n      MbscDate, MbscTime, MbscDatetime, MbscDateComponent, MbscTimeComponent, MbscDatetimeComponent,\r\n      MbscEventcalendar, MbscEventcalendarComponent,\r\n      MbscForm, MbscRating, MbscDropdown, MbscTextarea, MbscButton, MbscCheckbox, MbscSwitch, MbscStepper, MbscProgress, MbscSlider, MbscRadio, MbscRadioGroup, MbscSegmentedGroup, MbscSegmented, MbscFormGroup, MbscFormGroupTitle, MbscFormGroupContent, MbscAccordion,\r\n      MbscImage, MbscImageComponent, MbscImageItem,\r\n      MbscListview, MbscListviewSublist, MbscListviewItem, MbscListviewHeader,\r\n      MbscMeasurement, MbscDistance, MbscForce, MbscMass, MbscSpeed, MbscTemperature, MbscMeasurementComponent, MbscTemperatureComponent, MbscForceComponent, MbscSpeedComponent, MbscMassComponent, MbscDistanceComponent,\r\n      MbscNav, MbscBottomNav, MbscHamburgerNav, MbscTabNav, MbscNavItem,\r\n      MbscNumber, MbscNumberComponent,\r\n      MbscNumpad, MbscNumpadDecimal, MbscNumpadDate, MbscNumpadTime, MbscNumpadTimespan, MbscNumpadComponent, MbscNumpadDateComponent, MbscNumpadDecimalComponent, MbscNumpadTimeComponent, MbscNumpadTimespanComponent,\r\n      MbscOptionlist, MbscOptionItem,\r\n      MbscPage, MbscNote, MbscAvatar,\r\n      MbscPopup, MbscWidget,\r\n      MbscRange, MbscRangeComponent, MbscRangeStartComponent, MbscRangeEndComponent,\r\n      MbscScroller, MbscScrollerComponent,\r\n      MbscScrollView, MbscScrollViewItem, MbscScrollViewComponent, MbscScrollViewItemComponent,\r\n      MbscSelect, MbscSelectComponent,\r\n      MbscTimer, MbscTimerComponent,\r\n      MbscTimespan, MbscTimespanComponent,\r\n      MbscTreelist, MbscTreelistComponent,\r\n  ];\r\n  var modules = [\r\n      MbscInputModule,\r\n      MbscCalendarModule,\r\n      MbscCardModule,\r\n      MbscColorModule,\r\n      MbscDatetimeModule,\r\n      MbscEventcalendarModule,\r\n      MbscFormsModule,\r\n      MbscImageModule,\r\n      MbscListviewModule,\r\n      MbscMeasurementModule,\r\n      MbscNavigationModule,\r\n      MbscNumberModule,\r\n      MbscNumpadModule,\r\n      MbscOptionlistModule,\r\n      MbscPageModule,\r\n      MbscPopupModule,\r\n      MbscRangeModule,\r\n      MbscScrollerModule,\r\n      MbscScrollViewModule,\r\n      MbscSelectModule,\r\n      MbscTimerModule,\r\n      MbscTimespanModule,\r\n      MbscTreelistModule\r\n  ];\r\n  var MbscModule = (function () {\r\n      function MbscModule() {\r\n      }\r\n      MbscModule.forRoot = function (config) {\r\n          return {\r\n              ngModule: MbscModule,\r\n              providers: [{\r\n                      provide: MbscRouterToken,\r\n                      useExisting: config.angularRouter\r\n                  }]\r\n          };\r\n      };\r\n      MbscModule.decorators = [\r\n          { type: core.NgModule, args: [{\r\n                      imports: [forms.FormsModule, common.CommonModule, modules],\r\n                      exports: [directives, modules]\r\n                  },] },\r\n      ];\r\n      MbscModule.ctorParameters = function () { return []; };\r\n      return MbscModule;\r\n  }());\r\n\r\n  // Arabic\r\n\r\n  function intPart(floatNum) {\r\n    if (floatNum < -0.0000001) {\r\n      return Math.ceil(floatNum - 0.0000001);\r\n    }\r\n\r\n    return Math.floor(floatNum + 0.0000001);\r\n  }\r\n\r\n  function hijriToGregorian(hY, hM, hD) {\r\n    hY = parseInt(hY);\r\n    hM = parseInt(hM);\r\n    hD = parseInt(hD);\r\n    var jd,\r\n        l,\r\n        j,\r\n        n,\r\n        i,\r\n        k,\r\n        gregDate = new Array(3);\r\n    jd = intPart((11 * hY + 3) / 30) + 354 * hY + 30 * hM - intPart((hM - 1) / 2) + hD + 1948440 - 385;\r\n\r\n    if (jd > 2299160) {\r\n      l = jd + 68569;\r\n      n = intPart(4 * l / 146097);\r\n      l = l - intPart((146097 * n + 3) / 4);\r\n      i = intPart(4000 * (l + 1) / 1461001);\r\n      l = l - intPart(1461 * i / 4) + 31;\r\n      j = intPart(80 * l / 2447);\r\n      hD = l - intPart(2447 * j / 80);\r\n      l = intPart(j / 11);\r\n      hM = j + 2 - 12 * l;\r\n      hY = 100 * (n - 49) + i + l;\r\n    } else {\r\n      j = jd + 1402;\r\n      k = intPart((j - 1) / 1461);\r\n      l = j - 1461 * k;\r\n      n = intPart((l - 1) / 365) - intPart(l / 1461);\r\n      i = l - 365 * n + 30;\r\n      j = intPart(80 * i / 2447);\r\n      hD = i - intPart(2447 * j / 80);\r\n      i = intPart(j / 11);\r\n      hM = j + 2 - 12 * i;\r\n      hY = 4 * k + n + i - 4716;\r\n    }\r\n\r\n    gregDate[2] = hD;\r\n    gregDate[1] = hM;\r\n    gregDate[0] = hY;\r\n    return gregDate;\r\n  }\r\n\r\n  function gregorianToHijri(gY, gM, gD) {\r\n    gY = parseInt(gY);\r\n    gM = parseInt(gM);\r\n    gD = parseInt(gD);\r\n    var jd,\r\n        l,\r\n        j,\r\n        n,\r\n        hijriDate = new Array(0, 0, 0);\r\n\r\n    if (gY > 1582 || gY == 1582 && gM > 10 || gY == 1582 && gM == 10 && gD > 14) {\r\n      jd = intPart(1461 * (gY + 4800 + intPart((gM - 14) / 12)) / 4) + intPart(367 * (gM - 2 - 12 * intPart((gM - 14) / 12)) / 12) - intPart(3 * intPart((gY + 4900 + intPart((gM - 14) / 12)) / 100) / 4) + gD - 32075;\r\n    } else {\r\n      jd = 367 * gY - intPart(7 * (gY + 5001 + intPart((gM - 9) / 7)) / 4) + intPart(275 * gM / 9) + gD + 1729777;\r\n    }\r\n\r\n    l = jd - 1948440 + 10632;\r\n    n = intPart((l - 1) / 10631);\r\n    l = l - 10631 * n + 354;\r\n    j = intPart((10985 - l) / 5316) * intPart(50 * l / 17719) + intPart(l / 5670) * intPart(43 * l / 15238);\r\n    l = l - intPart((30 - j) / 15) * intPart(17719 * j / 50) - intPart(j / 16) * intPart(15238 * j / 43) + 29;\r\n    gM = intPart(24 * l / 709);\r\n    gD = l - intPart(709 * gM / 24);\r\n    gY = 30 * n + j - 30;\r\n    hijriDate[2] = gD;\r\n    hijriDate[1] = gM;\r\n    hijriDate[0] = gY;\r\n    return hijriDate;\r\n  }\r\n\r\n  calendars.hijri = {\r\n    getYear: function getYear(date) {\r\n      return gregorianToHijri(date.getFullYear(), date.getMonth() + 1, date.getDate())[0];\r\n    },\r\n    getMonth: function getMonth(date) {\r\n      return --gregorianToHijri(date.getFullYear(), date.getMonth() + 1, date.getDate())[1];\r\n    },\r\n    getDay: function getDay(date) {\r\n      return gregorianToHijri(date.getFullYear(), date.getMonth() + 1, date.getDate())[2];\r\n    },\r\n    getDate: function getDate(y, m, d, h, i, s, u) {\r\n      if (m < 0) {\r\n        y += Math.floor(m / 12);\r\n        m = m % 12 ? 12 + m % 12 : 0;\r\n      }\r\n\r\n      if (m > 11) {\r\n        y += Math.floor(m / 12);\r\n        m = m % 12;\r\n      }\r\n\r\n      var gregorianDate = hijriToGregorian(y, +m + 1, d);\r\n      return new Date(gregorianDate[0], gregorianDate[1] - 1, gregorianDate[2], h || 0, i || 0, s || 0, u || 0);\r\n    },\r\n    getMaxDayOfMonth: function getMaxDayOfMonth(hY, hM) {\r\n      if (hM < 0) {\r\n        hY += Math.floor(hM / 12);\r\n        hM = hM % 12 ? 12 + hM % 12 : 0;\r\n      }\r\n\r\n      if (hM > 11) {\r\n        hY += Math.floor(hM / 12);\r\n        hM = hM % 12;\r\n      }\r\n\r\n      var daysPerMonth = [30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29],\r\n          leapYear = (hY * 11 + 14) % 30 < 11;\r\n      return daysPerMonth[hM] + (hM === 11 && leapYear ? 1 : 0);\r\n    }\r\n  };\r\n\r\n  // Arabic\r\n  mobiscroll.i18n.ar = {\r\n    // Core\r\n    rtl: true,\r\n    // Right to left mode\r\n    setText: 'تعيين',\r\n    cancelText: 'إلغاء',\r\n    clearText: 'مسح',\r\n    selectedText: '{count} المحدد',\r\n    // Datetime component\r\n    dateFormat: 'dd/mm/yy',\r\n    dayNames: ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\r\n    dayNamesShort: ['أحد', 'اثنين', 'ثلاثاء', 'أربعاء', 'خميس', 'جمعة', 'سبت'],\r\n    dayNamesMin: ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\r\n    dayText: 'يوم',\r\n    hourText: 'ساعات',\r\n    minuteText: 'الدقائق',\r\n    monthNames: ['يناير', 'فبراير', 'مارس', 'ابريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'],\r\n    monthNamesShort: ['يناير', 'فبراير', 'مارس', 'ابريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'],\r\n    monthText: 'شهر',\r\n    secText: 'ثواني',\r\n    amText: 'ص',\r\n    pmText: 'م',\r\n    timeFormat: 'hh:ii A',\r\n    yearText: 'عام',\r\n    nowText: 'الآن',\r\n    // Calendar component\r\n    firstDay: 0,\r\n    dateText: 'تاريخ',\r\n    timeText: 'وقت',\r\n    closeText: 'إغلاق',\r\n    todayText: 'اليوم',\r\n    prevMonthText: 'الشهر السابق',\r\n    nextMonthText: 'الشهر القادم',\r\n    prevYearText: 'السنه السابقة',\r\n    nextYearText: 'العام القادم',\r\n    allDayText: 'اليوم كله',\r\n    noEventsText: 'لا توجد احداث',\r\n    // Event calendar\r\n    eventText: 'الحدث',\r\n    eventsText: 'أحداث',\r\n    moreEventsText: 'واحد آخر',\r\n    moreEventsPluralText: 'اثنان آخران {count}',\r\n    // Daterange component\r\n    fromText: 'يبدا',\r\n    toText: 'ينتهي',\r\n    // Measurement components\r\n    wholeText: 'كامل',\r\n    fractionText: 'جزء',\r\n    unitText: 'وحدة',\r\n    // Numpad date\r\n    delimiter: '/',\r\n    // Numpad decimal\r\n    decimalSeparator: '.',\r\n    thousandsSeparator: ',',\r\n    // Timer / Timespan component\r\n    labels: ['سنوات', 'أشهر', 'أيام', 'ساعة', 'دقائق', 'ثواني', ''],\r\n    labelsShort: ['سنوات', 'أشهر', 'أيام', 'ساعة', 'دقائق', 'ثواني', ''],\r\n    // Timer component\r\n    startText: 'بدء',\r\n    stopText: 'إيقاف',\r\n    resetText: 'إعادة ضبط',\r\n    lapText: 'الدورة',\r\n    hideText: 'إخفاء',\r\n    // Forms\r\n    offText: 'إيقاف',\r\n    onText: 'تشغيل',\r\n    // Listview\r\n    backText: 'رجوع',\r\n    undoText: 'تراجع'\r\n  };\r\n\r\n  // Bulgarian\r\n  mobiscroll.i18n.bg = {\r\n    // Core\r\n    setText: 'Задаване',\r\n    cancelText: 'Отмяна',\r\n    clearText: 'Изчистване',\r\n    selectedText: '{count} подбран',\r\n    // Datetime component\r\n    dateFormat: 'dd.mm.yy',\r\n    dayNames: ['Неделя', 'Понеделник', 'Вторник', 'Сряда', 'Четвъртък', 'Петък', 'Събота'],\r\n    dayNamesShort: ['Нед', 'Пон', 'Вто', 'Сря', 'Чет', 'Пет', 'Съб'],\r\n    dayNamesMin: ['Не', 'По', 'Вт', 'Ср', 'Че', 'Пе', 'Съ'],\r\n    dayText: 'ден',\r\n    delimiter: '.',\r\n    hourText: 'час',\r\n    minuteText: 'минута',\r\n    monthNames: ['Януари', 'Февруари', 'Март', 'Април', 'Май', 'Юни', 'Юли', 'Август', 'Септември', 'Октомври', 'Ноември', 'Декември'],\r\n    monthNamesShort: ['Яну', 'Фев', 'Мар', 'Апр', 'Май', 'Юни', 'Юли', 'Авг', 'Сеп', 'Окт', 'Нов', 'Дек'],\r\n    monthText: 'месец',\r\n    secText: 'секунди',\r\n    timeFormat: 'H:ii',\r\n    yearText: 'година',\r\n    nowText: 'Сега',\r\n    pmText: 'pm',\r\n    amText: 'am',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'Дата',\r\n    timeText: 'път',\r\n    todayText: 'днес',\r\n    prevMonthText: 'Предишния месец',\r\n    nextMonthText: 'Следващият месец',\r\n    prevYearText: 'Предходната година',\r\n    nextYearText: 'Следващата година',\r\n    closeText: 'затвори',\r\n    eventText: 'Събитие',\r\n    eventsText: 'Събития',\r\n    allDayText: 'Цял ден',\r\n    noEventsText: 'Няма събития',\r\n    moreEventsText: 'Още {count}',\r\n    // Daterange component\r\n    fromText: 'ОТ',\r\n    toText: 'ДО',\r\n    // Measurement components\r\n    wholeText: 'цяло',\r\n    fractionText: 'фракция',\r\n    unitText: 'единица',\r\n    // Time / Timespan component\r\n    labels: ['Години', 'месеца', 'дни', 'часа', 'минути', 'секунди', ''],\r\n    labelsShort: ['Години', 'месеца', 'дни', 'часа', 'минути', 'секунди', ''],\r\n    // Timer component\r\n    startText: 'Старт',\r\n    stopText: 'Стоп',\r\n    resetText: 'Нулиране',\r\n    lapText: 'Обиколка',\r\n    hideText: 'крия',\r\n    // Listview\r\n    backText: 'връщане',\r\n    undoText: 'ОТМЯНА',\r\n    // Form\r\n    offText: 'ИЗКЛ',\r\n    onText: 'ВКЛ',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // Català\r\n  mobiscroll.i18n.ca = {\r\n    // Core\r\n    setText: 'Acceptar',\r\n    cancelText: 'Cancel·lar',\r\n    clearText: 'Esborrar',\r\n    selectedText: '{count} seleccionat',\r\n    selectedPluralText: '{count} seleccionats',\r\n    // Datetime component\r\n    dateFormat: 'dd/mm/yy',\r\n    dayNames: ['Diumenge', 'Dilluns', 'Dimarts', 'Dimecres', 'Dijous', 'Divendres', 'Dissabte'],\r\n    dayNamesShort: ['Dg', 'Dl', 'Dt', 'Dc', 'Dj', 'Dv', 'Ds'],\r\n    dayNamesMin: ['Dg', 'Dl', 'Dt', 'Dc', 'Dj', 'Dv', 'Ds'],\r\n    dayText: 'Dia',\r\n    hourText: 'Hores',\r\n    minuteText: 'Minuts',\r\n    monthNames: ['Gener', 'Febrer', 'Març', 'Abril', 'Maig', 'Juny', 'Juliol', 'Agost', 'Setembre', 'Octubre', 'Novembre', 'Desembre'],\r\n    monthNamesShort: ['Gen', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Oct', 'Nov', 'Des'],\r\n    monthText: 'Mes',\r\n    secText: 'Segons',\r\n    timeFormat: 'HH:ii',\r\n    yearText: 'Any',\r\n    nowText: 'Ara',\r\n    pmText: 'pm',\r\n    amText: 'am',\r\n    todayText: 'Avui',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'Data',\r\n    timeText: 'Temps',\r\n    closeText: 'Tancar',\r\n    allDayText: 'Tot el dia',\r\n    noEventsText: 'Cap esdeveniment',\r\n    eventText: 'Esdeveniments',\r\n    eventsText: 'Esdeveniments',\r\n    moreEventsText: '{count} més',\r\n    // Daterange component\r\n    fromText: 'Iniciar',\r\n    toText: 'Final',\r\n    // Measurement components\r\n    wholeText: 'Sencer',\r\n    fractionText: 'Fracció',\r\n    unitText: 'Unitat',\r\n    // Time / Timespan component\r\n    labels: ['Anys', 'Mesos', 'Dies', 'Hores', 'Minuts', 'Segons', ''],\r\n    labelsShort: ['Anys', 'Mesos', 'Dies', 'Hrs', 'Mins', 'Secs', ''],\r\n    // Timer component\r\n    startText: 'Iniciar',\r\n    stopText: 'Aturar',\r\n    resetText: 'Reiniciar',\r\n    lapText: 'Volta',\r\n    hideText: 'Amagar',\r\n    // Listview\r\n    backText: 'Enrere',\r\n    undoText: 'Desfés',\r\n    // Form\r\n    offText: 'No',\r\n    onText: 'Si'\r\n  };\r\n\r\n  // Cestina\r\n  mobiscroll.i18n.cs = {\r\n    // Core\r\n    setText: 'Zadej',\r\n    cancelText: 'Storno',\r\n    clearText: 'Vymazat',\r\n    selectedText: 'Označený: {count}',\r\n    // Datetime component\r\n    dateFormat: 'dd.mm.yy',\r\n    dayNames: ['Neděle', 'Pondělí', 'Úterý', 'Středa', 'Čtvrtek', 'Pátek', 'Sobota'],\r\n    dayNamesShort: ['Ne', 'Po', 'Út', 'St', 'Čt', 'Pá', 'So'],\r\n    dayNamesMin: ['N', 'P', 'Ú', 'S', 'Č', 'P', 'S'],\r\n    dayText: 'Den',\r\n    hourText: 'Hodiny',\r\n    minuteText: 'Minuty',\r\n    monthNames: ['Leden', 'Únor', 'Březen', 'Duben', 'Květen', 'Červen', 'Červenec', 'Srpen', 'Září', 'Říjen', 'Listopad', 'Prosinec'],\r\n    monthNamesShort: ['Led', 'Úno', 'Bře', 'Dub', 'Kvě', 'Čer', 'Čvc', 'Spr', 'Zář', 'Říj', 'Lis', 'Pro'],\r\n    monthText: 'Měsíc',\r\n    secText: 'Sekundy',\r\n    timeFormat: 'HH:ii',\r\n    yearText: 'Rok',\r\n    nowText: 'Teď',\r\n    amText: 'am',\r\n    pmText: 'pm',\r\n    todayText: 'Dnes',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'Datum',\r\n    timeText: 'Čas',\r\n    closeText: 'Zavřít',\r\n    allDayText: 'Celý den',\r\n    noEventsText: 'Žádné události',\r\n    eventText: 'Událostí',\r\n    eventsText: 'Události',\r\n    moreEventsText: '{count} další',\r\n    // Daterange component\r\n    fromText: 'Začátek',\r\n    toText: 'Konec',\r\n    // Measurement components\r\n    wholeText: 'Celý',\r\n    fractionText: 'Část',\r\n    unitText: 'Jednotka',\r\n    // Time / Timespan component\r\n    labels: ['Roky', 'Měsíce', 'Dny', 'Hodiny', 'Minuty', 'Sekundy', ''],\r\n    labelsShort: ['Rok', 'Měs', 'Dny', 'Hod', 'Min', 'Sec', ''],\r\n    // Timer component\r\n    startText: 'Start',\r\n    stopText: 'Stop',\r\n    resetText: 'Resetovat',\r\n    lapText: 'Etapa',\r\n    hideText: 'Schovat',\r\n    // Listview\r\n    backText: 'Zpět',\r\n    undoText: 'Zpět',\r\n    // Form\r\n    offText: 'O',\r\n    onText: 'I',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // Dansk\r\n  mobiscroll.i18n.da = {\r\n    // Core\r\n    setText: 'Sæt',\r\n    cancelText: 'Annuller',\r\n    clearText: 'Ryd',\r\n    selectedText: '{count} valgt',\r\n    selectedPluralText: '{count} valgt',\r\n    // Datetime component\r\n    dateFormat: 'dd/mm/yy',\r\n    dayNames: ['Søndag', 'Mandag', 'Tirsdag', 'Onsdag', 'Torsdag', 'Fredag', 'Lørdag'],\r\n    dayNamesShort: ['Søn', 'Man', 'Tir', 'Ons', 'Tor', 'Fre', 'Lør'],\r\n    dayNamesMin: ['S', 'M', 'T', 'O', 'T', 'F', 'L'],\r\n    dayText: 'Dag',\r\n    hourText: 'Timer',\r\n    minuteText: 'Minutter',\r\n    monthNames: ['Januar', 'Februar', 'Marts', 'April', 'Maj', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'December'],\r\n    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'Maj', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dec'],\r\n    monthText: 'Måned',\r\n    secText: 'Sekunder',\r\n    amText: 'am',\r\n    pmText: 'pm',\r\n    timeFormat: 'HH.ii',\r\n    yearText: 'År',\r\n    nowText: 'Nu',\r\n    todayText: 'I dag',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'Dato',\r\n    timeText: 'Tid',\r\n    closeText: 'Luk',\r\n    allDayText: 'Hele dagen',\r\n    noEventsText: 'Ingen begivenheder',\r\n    eventText: 'Begivenheder',\r\n    eventsText: 'Begivenheder',\r\n    moreEventsText: '{count} mere',\r\n    // Daterange component\r\n    fromText: 'Start',\r\n    toText: 'Slut',\r\n    // Measurement components\r\n    wholeText: 'Hele',\r\n    fractionText: 'Dele',\r\n    unitText: 'Enhed',\r\n    // Time / Timespan component\r\n    labels: ['År', 'Måneder', 'Dage', 'Timer', 'Minutter', 'Sekunder', ''],\r\n    labelsShort: ['År', 'Mdr', 'Dg', 'Timer', 'Min', 'Sek', ''],\r\n    // Timer component\r\n    startText: 'Start',\r\n    stopText: 'Stop',\r\n    resetText: 'Nulstil',\r\n    lapText: 'Omgang',\r\n    hideText: 'Skjul',\r\n    // Forms\r\n    offText: 'Fra',\r\n    onText: 'Til',\r\n    // Listview\r\n    backText: 'Tilbage',\r\n    undoText: 'Fortryd'\r\n  };\r\n\r\n  // Deutsch\r\n  mobiscroll.i18n.de = {\r\n    // Core\r\n    setText: 'OK',\r\n    cancelText: 'Abbrechen',\r\n    clearText: 'Löschen',\r\n    selectedText: '{count} ausgewählt',\r\n    // Datetime component\r\n    dateFormat: 'dd.mm.yy',\r\n    dayNames: ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag'],\r\n    dayNamesShort: ['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa'],\r\n    dayNamesMin: ['S', 'M', 'D', 'M', 'D', 'F', 'S'],\r\n    dayText: 'Tag',\r\n    delimiter: '.',\r\n    hourText: 'Stunde',\r\n    minuteText: 'Minuten',\r\n    monthNames: ['Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'],\r\n    monthNamesShort: ['Jan', 'Feb', 'Mär', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez'],\r\n    monthText: 'Monat',\r\n    secText: 'Sekunden',\r\n    timeFormat: 'HH:ii',\r\n    yearText: 'Jahr',\r\n    nowText: 'Jetzt',\r\n    pmText: 'pm',\r\n    amText: 'am',\r\n    todayText: 'Heute',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'Datum',\r\n    timeText: 'Zeit',\r\n    closeText: 'Schließen',\r\n    allDayText: 'Ganztägig',\r\n    noEventsText: 'Keine Ereignisse',\r\n    eventText: 'Ereignis',\r\n    eventsText: 'Ereignisse',\r\n    moreEventsText: '{count} weiteres Element',\r\n    moreEventsPluralText: '{count} weitere Elemente',\r\n    // Daterange component\r\n    fromText: 'Von',\r\n    toText: 'Bis',\r\n    // Measurement components\r\n    wholeText: 'Ganze Zahl',\r\n    fractionText: 'Bruchzahl',\r\n    unitText: 'Maßeinheit',\r\n    // Time / Timespan component\r\n    labels: ['Jahre', 'Monate', 'Tage', 'Stunden', 'Minuten', 'Sekunden', ''],\r\n    labelsShort: ['Jahr.', 'Mon.', 'Tag.', 'Std.', 'Min.', 'Sek.', ''],\r\n    // Timer component\r\n    startText: 'Starten',\r\n    stopText: 'Stoppen',\r\n    resetText: 'Zurücksetzen',\r\n    lapText: 'Lap',\r\n    hideText: 'Ausblenden',\r\n    // Listview\r\n    backText: 'Zurück',\r\n    undoText: 'Rückgängig machen',\r\n    // Form\r\n    offText: 'Aus',\r\n    onText: 'Ein',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // Greek\r\n  mobiscroll.i18n.el = {\r\n    // Core\r\n    setText: 'Ορισμος',\r\n    cancelText: 'Ακυρωση',\r\n    clearText: 'Διαγραφη',\r\n    selectedText: '{count} επιλεγμένα',\r\n    // Datetime component\r\n    dateFormat: 'dd/mm/yy',\r\n    dayNames: ['Κυριακή', 'Δευτέρα', 'Τρίτη', 'Τετάρτη', 'Πέμπτη', 'Παρασκευή', 'Σάββατο'],\r\n    dayNamesShort: ['Κυρ', 'Δευ', 'Τρι', 'Τετ', 'Πεμ', 'Παρ', 'Σαβ'],\r\n    dayNamesMin: ['Κυ', 'Δε', 'Τρ', 'Τε', 'Πε', 'Πα', 'Σα'],\r\n    dayText: 'ημέρα',\r\n    delimiter: '/',\r\n    hourText: 'ώρα',\r\n    minuteText: 'λεπτό',\r\n    monthNames: ['Ιανουάριος', 'Φεβρουάριος', 'Μάρτιος', 'Απρίλιος', 'Μάιος', 'Ιούνιος', 'Ιούλιος', 'Αύγουστος', 'Σεπτέμβριος', 'Οκτώβριος', 'Νοέμβριος', 'Δεκέμβριος'],\r\n    monthNamesShort: ['Ιαν', 'Φεβ', 'Μαρ', 'Απρ', 'Μαι', 'Ιουν', 'Ιουλ', 'Αυγ', 'Σεπ', 'Οκτ', 'Νοε', 'Δεκ'],\r\n    monthText: 'Μήνας',\r\n    secText: 'δευτερόλεπτα',\r\n    timeFormat: 'H:ii',\r\n    yearText: 'έτος',\r\n    nowText: 'τώρα',\r\n    pmText: 'μμ',\r\n    amText: 'πμ',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'Ημερομηνία',\r\n    timeText: 'φορά',\r\n    todayText: 'Σήμερα',\r\n    prevMonthText: 'Προηγούμενο μήνα',\r\n    nextMonthText: 'Επόμενο μήνα',\r\n    prevYearText: 'Προηγούμενο έτος',\r\n    nextYearText: 'Επόμενο έτος',\r\n    closeText: 'Κλείσιμο',\r\n    eventText: 'Γεγονότα',\r\n    eventsText: 'Γεγονότα',\r\n    allDayText: 'Ολοήμερο',\r\n    noEventsText: 'Δεν υπάρχουν γεγονότα',\r\n    moreEventsText: '{count} ακόμη',\r\n    // Daterange component\r\n    fromText: 'Αρχή',\r\n    toText: 'Τέλος',\r\n    // Measurement components\r\n    wholeText: 'Ολόκληρος',\r\n    fractionText: 'κλάσμα',\r\n    unitText: 'Μονάδα',\r\n    // Time / Timespan component\r\n    labels: ['Χρόνια', 'Μήνες', 'Ημέρες', 'Ωρες', 'Λεπτά', 'δευτερόλεπτα', ''],\r\n    labelsShort: ['Χρόνια', 'Μήνες', 'Ημέρες', 'Ωρες', 'Λεπτά', 'δευτ', ''],\r\n    // Timer component\r\n    startText: '΄Εναρξη',\r\n    stopText: 'Διακοπή',\r\n    resetText: 'Επαναφορά',\r\n    lapText: 'Γύρος',\r\n    hideText: 'κρύβω',\r\n    // Listview\r\n    backText: 'Πίσω',\r\n    undoText: 'Αναιρεση',\r\n    // Form\r\n    offText: 'Ανενεργό',\r\n    onText: 'Ενεργό',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // English (UK)\r\n  mobiscroll.i18n['en-GB'] = mobiscroll.i18n['en-UK'] = {\r\n    dateFormat: 'dd/mm/yy',\r\n    timeFormat: 'HH:ii'\r\n  };\r\n\r\n  // Español\r\n  mobiscroll.i18n.es = {\r\n    // Core\r\n    setText: 'Aceptar',\r\n    cancelText: 'Cancelar',\r\n    clearText: 'Borrar',\r\n    selectedText: '{count} seleccionado',\r\n    selectedPluralText: '{count} seleccionados',\r\n    // Datetime component\r\n    dateFormat: 'dd/mm/yy',\r\n    dayNames: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],\r\n    dayNamesShort: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sá'],\r\n    dayNamesMin: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],\r\n    dayText: 'Día',\r\n    hourText: 'Horas',\r\n    minuteText: 'Minutos',\r\n    monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],\r\n    monthNamesShort: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],\r\n    monthText: 'Mes',\r\n    secText: 'Segundos',\r\n    timeFormat: 'HH:ii',\r\n    yearText: 'A&ntilde;o',\r\n    nowText: 'Ahora',\r\n    pmText: 'pm',\r\n    amText: 'am',\r\n    todayText: 'Hoy',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'Fecha',\r\n    timeText: 'Tiempo',\r\n    closeText: 'Cerrar',\r\n    allDayText: 'Todo el día',\r\n    noEventsText: 'No hay eventos',\r\n    eventText: 'Evento',\r\n    eventsText: 'Eventos',\r\n    moreEventsText: '{count} más',\r\n    // Daterange component\r\n    fromText: 'Iniciar',\r\n    toText: 'Final',\r\n    // Measurement components\r\n    wholeText: 'Entero',\r\n    fractionText: 'Fracción',\r\n    unitText: 'Unidad',\r\n    // Time / Timespan component\r\n    labels: ['Años', 'Meses', 'Días', 'Horas', 'Minutos', 'Segundos', ''],\r\n    labelsShort: ['Año', 'Mes', 'Día', 'Hora', 'Min', 'Seg', ''],\r\n    // Timer component\r\n    startText: 'Iniciar',\r\n    stopText: 'Deténgase',\r\n    resetText: 'Reinicializar',\r\n    lapText: 'Lap',\r\n    hideText: 'Esconder',\r\n    // Listview\r\n    backText: 'Atrás',\r\n    undoText: 'Deshacer',\r\n    // Form\r\n    offText: 'No',\r\n    onText: 'Sí',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // فارسی\r\n  var gDaysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\r\n      jDaysInMonth = [31, 31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 29];\r\n\r\n  function jalaliToGregorian(jY, jM, jD) {\r\n    jY = parseInt(jY);\r\n    jM = parseInt(jM);\r\n    jD = parseInt(jD);\r\n    var i;\r\n    var jy = jY - 979;\r\n    var jm = jM - 1;\r\n    var jd = jD - 1;\r\n    var jDayNo = 365 * jy + parseInt(jy / 33) * 8 + parseInt((jy % 33 + 3) / 4);\r\n\r\n    for (i = 0; i < jm; ++i) {\r\n      jDayNo += jDaysInMonth[i];\r\n    }\r\n\r\n    jDayNo += jd;\r\n    var gDayNo = jDayNo + 79;\r\n    var gy = 1600 + 400 * parseInt(gDayNo / 146097);\r\n    gDayNo = gDayNo % 146097;\r\n    var leap = true;\r\n\r\n    if (gDayNo >= 36525) {\r\n      gDayNo--;\r\n      gy += 100 * parseInt(gDayNo / 36524);\r\n      gDayNo = gDayNo % 36524;\r\n\r\n      if (gDayNo >= 365) {\r\n        gDayNo++;\r\n      } else {\r\n        leap = false;\r\n      }\r\n    }\r\n\r\n    gy += 4 * parseInt(gDayNo / 1461);\r\n    gDayNo %= 1461;\r\n\r\n    if (gDayNo >= 366) {\r\n      leap = false;\r\n      gDayNo--;\r\n      gy += parseInt(gDayNo / 365);\r\n      gDayNo = gDayNo % 365;\r\n    }\r\n\r\n    for (i = 0; gDayNo >= gDaysInMonth[i] + (i == 1 && leap); i++) {\r\n      gDayNo -= gDaysInMonth[i] + (i == 1 && leap);\r\n    }\r\n\r\n    var gm = i + 1;\r\n    var gd = gDayNo + 1;\r\n    return [gy, gm, gd];\r\n  }\r\n\r\n  function checkDate(jY, jM, jD) {\r\n    return !(jY < 0 || jY > 32767 || jM < 1 || jM > 12 || jD < 1 || jD > jDaysInMonth[jM - 1] + (jM == 12 && (jY - 979) % 33 % 4 === 0));\r\n  }\r\n\r\n  function gregorianToJalali(gY, gM, gD) {\r\n    gY = parseInt(gY);\r\n    gM = parseInt(gM);\r\n    gD = parseInt(gD);\r\n    var i;\r\n    var gy = gY - 1600;\r\n    var gm = gM - 1;\r\n    var gd = gD - 1;\r\n    var gDayNo = 365 * gy + parseInt((gy + 3) / 4) - parseInt((gy + 99) / 100) + parseInt((gy + 399) / 400);\r\n\r\n    for (i = 0; i < gm; ++i) {\r\n      gDayNo += gDaysInMonth[i];\r\n    }\r\n\r\n    if (gm > 1 && (gy % 4 === 0 && gy % 100 !== 0 || gy % 400 === 0)) {\r\n      ++gDayNo;\r\n    }\r\n\r\n    gDayNo += gd;\r\n    var jDayNo = gDayNo - 79;\r\n    var jNp = parseInt(jDayNo / 12053);\r\n    jDayNo %= 12053;\r\n    var jy = 979 + 33 * jNp + 4 * parseInt(jDayNo / 1461);\r\n    jDayNo %= 1461;\r\n\r\n    if (jDayNo >= 366) {\r\n      jy += parseInt((jDayNo - 1) / 365);\r\n      jDayNo = (jDayNo - 1) % 365;\r\n    }\r\n\r\n    for (i = 0; i < 11 && jDayNo >= jDaysInMonth[i]; ++i) {\r\n      jDayNo -= jDaysInMonth[i];\r\n    }\r\n\r\n    var jm = i + 1;\r\n    var jd = jDayNo + 1;\r\n    return [jy, jm, jd];\r\n  }\r\n\r\n  calendars.jalali = {\r\n    getYear: function getYear(date) {\r\n      return gregorianToJalali(date.getFullYear(), date.getMonth() + 1, date.getDate())[0];\r\n    },\r\n    getMonth: function getMonth(date) {\r\n      return --gregorianToJalali(date.getFullYear(), date.getMonth() + 1, date.getDate())[1];\r\n    },\r\n    getDay: function getDay(date) {\r\n      return gregorianToJalali(date.getFullYear(), date.getMonth() + 1, date.getDate())[2];\r\n    },\r\n    getDate: function getDate(y, m, d, h, i, s, u) {\r\n      if (m < 0) {\r\n        y += Math.floor(m / 12);\r\n        m = m % 12 ? 12 + m % 12 : 0;\r\n      }\r\n\r\n      if (m > 11) {\r\n        y += Math.floor(m / 12);\r\n        m = m % 12;\r\n      }\r\n\r\n      var gregorianDate = jalaliToGregorian(y, +m + 1, d);\r\n      return new Date(gregorianDate[0], gregorianDate[1] - 1, gregorianDate[2], h || 0, i || 0, s || 0, u || 0);\r\n    },\r\n    getMaxDayOfMonth: function getMaxDayOfMonth(y, m) {\r\n      var maxdays = 31;\r\n\r\n      if (m < 0) {\r\n        y += Math.floor(m / 12);\r\n        m = m % 12 ? 12 + m % 12 : 0;\r\n      }\r\n\r\n      if (m > 11) {\r\n        y += Math.floor(m / 12);\r\n        m = m % 12;\r\n      }\r\n\r\n      while (checkDate(y, m + 1, maxdays) === false) {\r\n        maxdays--;\r\n      }\r\n\r\n      return maxdays;\r\n    }\r\n  };\r\n\r\n  // فارسی\r\n  mobiscroll.i18n.fa = {\r\n    // Core\r\n    setText: 'تاييد',\r\n    cancelText: 'انصراف',\r\n    clearText: 'واضح ',\r\n    selectedText: '{count} منتخب',\r\n    // Datetime component\r\n    calendarSystem: 'jalali',\r\n    dateFormat: 'yy/mm/dd',\r\n    dayNames: ['يکشنبه', 'دوشنبه', 'سه‌شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه'],\r\n    dayNamesShort: ['ی', 'د', 'س', 'چ', 'پ', 'ج', 'ش'],\r\n    dayNamesMin: ['ی', 'د', 'س', 'چ', 'پ', 'ج', 'ش'],\r\n    dayText: 'روز',\r\n    hourText: 'ساعت',\r\n    minuteText: 'دقيقه',\r\n    monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تير', 'مرداد', 'شهريور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\r\n    monthNamesShort: ['فروردين', 'ارديبهشت', 'خرداد', 'تير', 'مرداد', 'شهريور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\r\n    monthText: 'ماه',\r\n    secText: 'ثانيه',\r\n    timeFormat: 'HH:ii',\r\n    timeWheels: 'iiHH',\r\n    // Need this for correct RTL display\r\n    yearText: 'سال',\r\n    nowText: 'اکنون',\r\n    amText: 'ب',\r\n    pmText: 'ص',\r\n    todayText: 'امروز',\r\n    //getNumber: function (n) {\r\n    //    var i,\r\n    //        nums = [\"۰\", \"۱\", \"۲\", \"۳\", \"۴\", \"۵\", \"۶\", \"۷\", \"۸\", \"۹\"],\r\n    //        res = '';\r\n    //    n = n + '';\r\n    //    for (i = 0; i < n.length; i++) {\r\n    //        res += nums[+n[i]];\r\n    //    }\r\n    //    return res;\r\n    //},\r\n    // Calendar component\r\n    firstDay: 6,\r\n    rtl: true,\r\n    dateText: 'تاریخ ',\r\n    timeText: 'زمان ',\r\n    closeText: 'نزدیک',\r\n    allDayText: 'تمام روز',\r\n    noEventsText: 'هیچ رویداد',\r\n    eventText: 'رویداد',\r\n    eventsText: 'رویدادها',\r\n    moreEventsText: '{count} مورد دیگر',\r\n    // Daterange component\r\n    fromText: 'شروع ',\r\n    toText: 'پایان',\r\n    // Measurement components\r\n    wholeText: 'تمام',\r\n    fractionText: 'کسر',\r\n    unitText: 'واحد',\r\n    // Time / Timespan component\r\n    labels: ['سال', 'ماه', 'روز', 'ساعت', 'دقیقه', 'ثانیه', ''],\r\n    labelsShort: ['سال', 'ماه', 'روز', 'ساعت', 'دقیقه', 'ثانیه', ''],\r\n    // Timer component\r\n    startText: 'شروع',\r\n    stopText: 'پايان',\r\n    resetText: 'تنظیم مجدد',\r\n    lapText: 'Lap',\r\n    hideText: 'پنهان کردن',\r\n    // Listview\r\n    backText: 'پشت',\r\n    undoText: 'واچیدن'\r\n  };\r\n\r\n  // Suomi\r\n  mobiscroll.i18n.fi = {\r\n    // Core\r\n    setText: 'Aseta',\r\n    cancelText: 'Peruuta',\r\n    clearText: 'Tyhjennä',\r\n    selectedText: '{count} valita',\r\n    // Datetime component\r\n    dateFormat: 'd. MM yy',\r\n    dayNames: ['Sunnuntai', 'Maanantai', 'Tiistai', 'Keskiviiko', 'Torstai', 'Perjantai', 'Lauantai'],\r\n    dayNamesShort: ['Su', 'Ma', 'Ti', 'Ke', 'To', 'Pe', 'La'],\r\n    dayNamesMin: ['S', 'M', 'T', 'K', 'T', 'P', 'L'],\r\n    dayText: 'Päivä',\r\n    delimiter: '.',\r\n    hourText: 'Tuntia',\r\n    minuteText: 'Minuutti',\r\n    monthNames: ['Tammikuu', 'Helmikuu', 'Maaliskuu', 'Huhtikuu', 'Toukokuu', 'Kesäkuu', 'Heinäkuu', 'Elokuu', 'Syyskuu', 'Lokakuu', 'Marraskuu', 'Joulukuu'],\r\n    monthNamesShort: ['Tam', 'Hel', 'Maa', 'Huh', 'Tou', 'Kes', 'Hei', 'Elo', 'Syy', 'Lok', 'Mar', 'Jou'],\r\n    monthText: 'Kuukausi',\r\n    secText: 'Sekunda',\r\n    timeFormat: 'H:ii',\r\n    yearText: 'Vuosi',\r\n    nowText: 'Nyt',\r\n    pmText: 'pm',\r\n    amText: 'am',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'Päiväys',\r\n    timeText: 'Aika',\r\n    todayText: 'Tänään',\r\n    prevMonthText: 'Edellinen kuukausi',\r\n    nextMonthText: 'Ensi kuussa',\r\n    prevYearText: 'Edellinen vuosi',\r\n    nextYearText: 'Ensi vuosi',\r\n    closeText: 'Sulje',\r\n    eventText: 'Tapahtumia',\r\n    eventsText: 'Tapahtumia',\r\n    allDayText: 'Koko päivä',\r\n    noEventsText: 'Ei tapahtumia',\r\n    moreEventsText: '{count} muu',\r\n    moreEventsPluralText: '{count} muuta',\r\n    // Daterange component\r\n    fromText: 'Alkaa',\r\n    toText: 'Päättyy',\r\n    // Measurement components\r\n    wholeText: 'Kokonainen',\r\n    fractionText: 'Murtoluku',\r\n    unitText: 'Yksikkö',\r\n    // Time / Timespan component\r\n    labels: ['Vuosi', 'Kuukausi', 'Päivä', 'Tunnin', 'Minuutti', 'sekuntia', ''],\r\n    labelsShort: ['Vuo', 'Kuu', 'Päi', 'Tun', 'Min', 'Sek', ''],\r\n    // Timer component\r\n    startText: 'Käynnistys',\r\n    stopText: 'Seis',\r\n    resetText: 'Aseta uudelleen',\r\n    lapText: 'Kierros',\r\n    hideText: 'Vuota',\r\n    // Listview\r\n    backText: 'Edellinen',\r\n    undoText: 'Kumoa',\r\n    // Form\r\n    offText: 'Pois',\r\n    onText: 'Päällä',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // Français\r\n  mobiscroll.i18n.fr = {\r\n    // Core\r\n    setText: 'Terminer',\r\n    cancelText: 'Annuler',\r\n    clearText: 'Effacer',\r\n    selectedText: '{count} sélectionné',\r\n    selectedPluralText: '{count} sélectionnés',\r\n    // Datetime component\r\n    dateFormat: 'dd/mm/yy',\r\n    dayNames: ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'],\r\n    dayNamesShort: ['Dim.', 'Lun.', 'Mar.', 'Mer.', 'Jeu.', 'Ven.', 'Sam.'],\r\n    dayNamesMin: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],\r\n    dayText: 'Jour',\r\n    monthText: 'Mois',\r\n    monthNames: ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'],\r\n    monthNamesShort: ['Janv.', 'Févr.', 'Mars', 'Avril', 'Mai', 'Juin', 'Juil.', 'Août', 'Sept.', 'Oct.', 'Nov.', 'Déc.'],\r\n    hourText: 'Heures',\r\n    minuteText: 'Minutes',\r\n    secText: 'Secondes',\r\n    timeFormat: 'HH:ii',\r\n    yearText: 'Année',\r\n    nowText: 'Maintenant',\r\n    pmText: 'pm',\r\n    amText: 'am',\r\n    todayText: \"Aujourd'hui\",\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'Date',\r\n    timeText: 'Heure',\r\n    closeText: 'Fermer',\r\n    allDayText: 'Toute la journée',\r\n    noEventsText: 'Aucun événement',\r\n    eventText: 'Événement',\r\n    eventsText: 'Événements',\r\n    moreEventsText: '{count} autre',\r\n    moreEventsPluralText: '{count} autres',\r\n    // Daterange component\r\n    fromText: 'Démarrer',\r\n    toText: 'Fin',\r\n    // Measurement components\r\n    wholeText: 'Entier',\r\n    fractionText: 'Fraction',\r\n    unitText: 'Unité',\r\n    // Time / Timespan component\r\n    labels: ['Ans', 'Mois', 'Jours', 'Heures', 'Minutes', 'Secondes', ''],\r\n    labelsShort: ['Ans', 'Mois', 'Jours', 'Hrs', 'Min', 'Sec', ''],\r\n    // Timer component\r\n    startText: 'Démarrer',\r\n    stopText: 'Arrêter',\r\n    resetText: 'Réinitialiser',\r\n    lapText: 'Lap',\r\n    hideText: 'Cachez',\r\n    // Listview\r\n    backText: 'Retour',\r\n    undoText: 'Annuler',\r\n    // Form\r\n    offText: 'Non',\r\n    onText: 'Oui',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // Hebrew\r\n  mobiscroll.i18n.he = {\r\n    // Core\r\n    rtl: true,\r\n    // Right to left mode\r\n    setText: 'שמירה',\r\n    cancelText: 'ביטול',\r\n    clearText: 'נקה',\r\n    selectedText: '{count} נבחר',\r\n    selectedPluralText: '{count} נבחרו',\r\n    // Datetime component\r\n    dateFormat: 'dd/mm/yy',\r\n    dayNames: ['ראשון', 'שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת'],\r\n    dayNamesShort: [\"א'\", \"ב'\", \"ג'\", \"ד'\", \"ה'\", \"ו'\", \"ש'\"],\r\n    dayNamesMin: ['א', 'ב', 'ג', 'ד', 'ה', 'ו', 'ש'],\r\n    dayText: 'יום',\r\n    hourText: 'שעות',\r\n    minuteText: 'דקות',\r\n    monthNames: ['ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר'],\r\n    monthNamesShort: [\"ינו\", \"פבר\", \"מרץ\", \"אפר\", \"מאי\", \"יונ\", \"יול\", \"אוג\", \"ספט\", \"אוק\", \"נוב\", \"דצמ\"],\r\n    monthText: 'חודש',\r\n    secText: 'שניות',\r\n    amText: 'am',\r\n    pmText: 'pm',\r\n    timeFormat: 'HH:ii',\r\n    timeWheels: 'iiHH',\r\n    // Need this for correct RTL display\r\n    yearText: 'שנה',\r\n    nowText: 'עכשיו',\r\n    // Calendar component\r\n    firstDay: 0,\r\n    dateText: 'תאריך',\r\n    timeText: 'זמן',\r\n    closeText: 'סגירה',\r\n    todayText: 'היום',\r\n    allDayText: 'כל היום',\r\n    noEventsText: 'אין אירועים',\r\n    // Event calendar\r\n    eventText: 'מִקרֶה',\r\n    eventsText: 'מִקרֶה',\r\n    moreEventsText: 'אירוע אחד נוסף',\r\n    moreEventsPluralText: '{count} אירועים נוספים',\r\n    // Daterange component\r\n    fromText: 'התחלה',\r\n    toText: 'סיום',\r\n    // Measurement components\r\n    wholeText: 'כֹּל',\r\n    fractionText: 'שבריר',\r\n    unitText: 'יחידה',\r\n    // Time / Timespan component\r\n    labels: ['שנים', 'חודשים', 'ימים', 'שעות', 'דקות', 'שניים', ''],\r\n    labelsShort: ['שנים', 'חודשים', 'ימים', 'שעות', 'דקות', 'שניים', ''],\r\n    // Timer component\r\n    startText: 'התחל',\r\n    stopText: 'עצור',\r\n    resetText: 'אתחול',\r\n    lapText: 'הקפה',\r\n    hideText: 'הסתר',\r\n    // Forms\r\n    offText: 'כיבוי',\r\n    onText: 'הפעלה',\r\n    // Listview\r\n    backText: 'חזור',\r\n    undoText: 'ביטול פעולה'\r\n  };\r\n\r\n  // Hindi\r\n  mobiscroll.i18n.hi = {\r\n    // Core\r\n    setText: 'सैट करें',\r\n    cancelText: 'रद्द करें',\r\n    clearText: 'साफ़ को',\r\n    selectedText: '{count} चयनित',\r\n    // Datetime component\r\n    dateFormat: 'dd/mm/yy',\r\n    dayNames: ['रविवार', 'सोमवार', 'मंगलवार', 'बुधवार', 'गुरुवार', 'शुक्रवार', 'शनिवार'],\r\n    dayNamesShort: ['रवि', 'सोम', 'मंगल', 'बुध', 'गुरु', 'शुक्र', 'शनि'],\r\n    dayNamesMin: ['रवि', 'सोम', 'मंगल', 'बुध', 'गुरु', 'शुक्र', 'शनि'],\r\n    dayText: 'दिन',\r\n    delimiter: '.',\r\n    hourText: 'घंटा',\r\n    minuteText: 'मिनट',\r\n    monthNames: ['जनवरी ', 'फरवरी', 'मार्च', 'अप्रेल', 'मई', 'जून', 'जूलाई', 'अगस्त ', 'सितम्बर', 'अक्टूबर', 'नवम्बर', 'दिसम्बर'],\r\n    monthNamesShort: ['जन', 'फर', 'मार्च', 'अप्रेल', 'मई', 'जून', 'जूलाई', 'अग', 'सित', 'अक्ट', 'नव', 'दि'],\r\n    monthText: 'महीना',\r\n    secText: 'सेकंड',\r\n    timeFormat: 'H:ii',\r\n    yearText: 'साल',\r\n    nowText: 'अब',\r\n    pmText: 'अपराह्न',\r\n    amText: 'पूर्वाह्न',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'तिथि',\r\n    timeText: 'समय',\r\n    todayText: 'आज',\r\n    prevMonthText: 'पिछ्ला महिना',\r\n    nextMonthText: 'अगले महीने',\r\n    prevYearText: 'पिछला साल',\r\n    nextYearText: 'अगले वर्ष',\r\n    closeText: 'बंद',\r\n    eventText: 'इवेट३',\r\n    eventsText: 'इवेट३',\r\n    allDayText: 'पूरे दिन',\r\n    noEventsText: 'Ei tapahtumia',\r\n    moreEventsText: '{count} और',\r\n    // Daterange component\r\n    fromText: 'से',\r\n    toText: 'तक',\r\n    // Measurement components\r\n    wholeText: 'समूचा',\r\n    fractionText: 'अंश',\r\n    unitText: 'इकाई',\r\n    // Time / Timespan component\r\n    labels: ['साल', 'महीने', 'दिन', 'घंटे', 'मिनट', 'सेकंड', ''],\r\n    labelsShort: ['साल', 'महीने', 'दिन', 'घंटे', 'मिनट', 'सेकंड', ''],\r\n    // Timer component\r\n    startText: 'प्रारंभ',\r\n    stopText: 'रोकें',\r\n    resetText: 'रीसेट करें',\r\n    lapText: 'लैप',\r\n    hideText: 'छिपाना',\r\n    // Listview\r\n    backText: 'वापस',\r\n    // check\r\n    undoText: 'वापस लाएं',\r\n    // Form\r\n    offText: 'बंद',\r\n    onText: 'चालू',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // Croatian\r\n  mobiscroll.i18n.hr = {\r\n    // Core\r\n    setText: 'Postavi',\r\n    cancelText: 'Izlaz',\r\n    clearText: 'Izbriši',\r\n    selectedText: '{count} odabran',\r\n    // Datetime component\r\n    dateFormat: 'dd.mm.yy',\r\n    dayNames: ['Nedjelja', 'Ponedjeljak', 'Utorak', 'Srijeda', 'Četvrtak', 'Petak', 'Subota'],\r\n    dayNamesShort: ['Ned', 'Pon', 'Uto', 'Sri', 'Čet', 'Pet', 'Sub'],\r\n    dayNamesMin: ['Ne', 'Po', 'Ut', 'Sr', 'Če', 'Pe', 'Su'],\r\n    dayText: 'Dan',\r\n    delimiter: '.',\r\n    hourText: 'Sat',\r\n    minuteText: 'Minuta',\r\n    monthNames: ['Siječanj', 'Veljača', 'Ožujak', 'Travanj', 'Svibanj', 'Lipanj', 'Srpanj', 'Kolovoz', 'Rujan', 'Listopad', 'Studeni', 'Prosinac'],\r\n    monthNamesShort: ['Sij', 'Velj', 'Ožu', 'Tra', 'Svi', 'Lip', 'Srp', 'Kol', 'Ruj', 'Lis', 'Stu', 'Pro'],\r\n    monthText: 'Mjesec',\r\n    secText: 'Sekunda',\r\n    timeFormat: 'H:ii',\r\n    yearText: 'Godina',\r\n    nowText: 'Sada',\r\n    pmText: 'pm',\r\n    amText: 'am',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'Datum',\r\n    timeText: 'Vrijeme',\r\n    todayText: 'Danas',\r\n    prevMonthText: 'Prethodni mjesec',\r\n    nextMonthText: 'Sljedeći mjesec',\r\n    prevYearText: 'Prethodni godina',\r\n    nextYearText: 'Slijedeće godine',\r\n    closeText: 'Zatvori',\r\n    eventText: 'Događaj',\r\n    eventsText: 'događaja',\r\n    allDayText: 'Cijeli dan',\r\n    noEventsText: 'Bez događaja',\r\n    moreEventsText: 'Još {count}',\r\n    // Daterange component\r\n    fromText: 'Počinje',\r\n    toText: 'Završava',\r\n    // Measurement components\r\n    wholeText: 'Cjelina',\r\n    fractionText: 'Frakcija',\r\n    unitText: 'Jedinica',\r\n    // Time / Timespan component\r\n    labels: ['godina', 'mjesec', 'dan', 'sat', 'minuta', 'sekunda', ''],\r\n    labelsShort: ['god', 'mje', 'dan', 'sat', 'min', 'sec', ''],\r\n    // Timer component\r\n    startText: 'Početak',\r\n    stopText: 'Prekid',\r\n    resetText: 'Resetiraj',\r\n    lapText: 'Ciklus',\r\n    hideText: 'Sakriti',\r\n    // Listview\r\n    backText: 'Natrag',\r\n    undoText: 'Poništavanje',\r\n    // Form\r\n    offText: 'Uklj.',\r\n    onText: 'Isklj.',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // Magyar\r\n  mobiscroll.i18n.hu = {\r\n    // Core\r\n    setText: 'OK',\r\n    cancelText: 'Mégse',\r\n    clearText: 'Törlés',\r\n    selectedText: '{count} kiválasztva',\r\n    // Datetime component\r\n    dateFormat: 'yy.mm.dd.',\r\n    dayNames: ['Vasárnap', 'Hétfő', 'Kedd', 'Szerda', 'Csütörtök', 'Péntek', 'Szombat'],\r\n    dayNamesShort: ['Va', 'Hé', 'Ke', 'Sze', 'Csü', 'Pé', 'Szo'],\r\n    dayNamesMin: ['V', 'H', 'K', 'Sz', 'Cs', 'P', 'Sz'],\r\n    dayText: 'Nap',\r\n    delimiter: '.',\r\n    hourText: 'Óra',\r\n    minuteText: 'Perc',\r\n    monthNames: ['Január', 'Február', 'Március', 'Április', 'Május', 'Június', 'Július', 'Augusztus', 'Szeptember', 'Október', 'November', 'December'],\r\n    monthNamesShort: ['Jan', 'Feb', 'Már', 'Ápr', 'Máj', 'Jún', 'Júl', 'Aug', 'Szep', 'Okt', 'Nov', 'Dec'],\r\n    monthText: 'Hónap',\r\n    secText: 'Másodperc',\r\n    timeFormat: 'H:ii',\r\n    yearText: 'Év',\r\n    nowText: 'Most',\r\n    pmText: 'pm',\r\n    amText: 'am',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'Dátum',\r\n    timeText: 'Idő',\r\n    todayText: 'Ma',\r\n    prevMonthText: 'Előző hónap',\r\n    nextMonthText: 'Következő hónap',\r\n    prevYearText: 'Előző év',\r\n    nextYearText: 'Következő év',\r\n    closeText: 'Bezár',\r\n    eventText: 'esemény',\r\n    eventsText: 'esemény',\r\n    allDayText: 'Egész nap',\r\n    noEventsText: 'Nincs esemény',\r\n    moreEventsText: '{count} további',\r\n    // Daterange component\r\n    fromText: 'Eleje',\r\n    toText: 'Vége',\r\n    // Measurement components\r\n    wholeText: 'Egész',\r\n    fractionText: 'Tört',\r\n    unitText: 'Egység',\r\n    // Time / Timespan component\r\n    labels: ['Év', 'Hónap', 'Nap', 'Óra', 'Perc', 'Másodperc', ''],\r\n    labelsShort: ['Év', 'Hó.', 'Nap', 'Óra', 'Perc', 'Mp.', ''],\r\n    // Timer component\r\n    startText: 'Indít',\r\n    stopText: 'Megállít',\r\n    resetText: 'Visszaállít',\r\n    lapText: 'Lap',\r\n    hideText: 'Elrejt',\r\n    // Listview\r\n    backText: 'Vissza',\r\n    undoText: 'Visszavon',\r\n    // Form\r\n    offText: 'Ki',\r\n    onText: 'Be',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // Italiano \r\n  mobiscroll.i18n.it = {\r\n    // Core\r\n    setText: 'OK',\r\n    cancelText: 'Annulla',\r\n    clearText: 'Chiarire',\r\n    selectedText: '{count} selezionato',\r\n    selectedPluralText: '{count} selezionati',\r\n    // Datetime component\r\n    dateFormat: 'dd/mm/yy',\r\n    dayNames: ['Domenica', 'Lunedì', 'Mertedì', 'Mercoledì', 'Giovedì', 'Venerdì', 'Sabato'],\r\n    dayNamesShort: ['Do', 'Lu', 'Ma', 'Me', 'Gi', 'Ve', 'Sa'],\r\n    dayNamesMin: ['D', 'L', 'M', 'M', 'G', 'V', 'S'],\r\n    dayText: 'Giorno',\r\n    hourText: 'Ore',\r\n    minuteText: 'Minuti',\r\n    monthNames: ['Gennaio', 'Febbraio', 'Marzo', 'Aprile', 'Maggio', 'Giugno', 'Luglio', 'Agosto', 'Settembre', 'Ottobre', 'Novembre', 'Dicembre'],\r\n    monthNamesShort: ['Gen', 'Feb', 'Mar', 'Apr', 'Mag', 'Giu', 'Lug', 'Ago', 'Set', 'Ott', 'Nov', 'Dic'],\r\n    monthText: 'Mese',\r\n    secText: 'Secondi',\r\n    timeFormat: 'HH:ii',\r\n    yearText: 'Anno',\r\n    nowText: 'Ora',\r\n    pmText: 'pm',\r\n    amText: 'am',\r\n    todayText: 'Oggi',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'Data',\r\n    timeText: 'Volta',\r\n    closeText: 'Chiudere',\r\n    allDayText: 'Tutto il giorno',\r\n    noEventsText: 'Nessun evento',\r\n    eventText: 'Evento',\r\n    eventsText: 'Eventi',\r\n    moreEventsText: '{count} altro',\r\n    moreEventsPluralText: 'altri {count}',\r\n    // Daterange component\r\n    fromText: 'Inizio',\r\n    toText: 'Fine',\r\n    // Measurement components\r\n    wholeText: 'Intero',\r\n    fractionText: 'Frazione',\r\n    unitText: 'Unità',\r\n    // Time / Timespan component\r\n    labels: ['Anni', 'Mesi', 'Giorni', 'Ore', 'Minuti', 'Secondi', ''],\r\n    labelsShort: ['Anni', 'Mesi', 'Gio', 'Ore', 'Min', 'Sec', ''],\r\n    // Timer component\r\n    startText: 'Inizio',\r\n    stopText: 'Arresto',\r\n    resetText: 'Ripristina',\r\n    lapText: 'Lap',\r\n    hideText: 'Nascondi',\r\n    // Listview\r\n    backText: 'Indietro',\r\n    undoText: 'Annulla',\r\n    // Form\r\n    offText: 'Via',\r\n    onText: 'Su',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // 日本語 - Japanese\r\n  mobiscroll.i18n.ja = {\r\n    // Core\r\n    setText: 'セット',\r\n    cancelText: 'キャンセル',\r\n    clearText: 'クリア',\r\n    selectedText: '{count} 選択',\r\n    // Datetime component\r\n    dateFormat: 'yy年mm月dd日',\r\n    dayNames: ['日', '月', '火', '水', '木', '金', '土'],\r\n    dayNamesShort: ['日', '月', '火', '水', '木', '金', '土'],\r\n    dayNamesMin: ['日', '月', '火', '水', '木', '金', '土'],\r\n    dayText: '日',\r\n    hourText: '時',\r\n    minuteText: '分',\r\n    monthNames: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\r\n    monthNamesShort: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\r\n    monthText: '月',\r\n    secText: '秒',\r\n    timeFormat: 'HH:ii',\r\n    yearText: '年',\r\n    nowText: '今',\r\n    pmText: '午後',\r\n    amText: '午前',\r\n    yearSuffix: '年',\r\n    monthSuffix: '月',\r\n    daySuffix: '日',\r\n    todayText: '今日',\r\n    // Calendar component\r\n    dateText: '日付',\r\n    timeText: '時間',\r\n    closeText: 'クローズ',\r\n    allDayText: '終日',\r\n    noEventsText: 'イベントはありません',\r\n    eventText: 'イベント',\r\n    eventsText: 'イベント',\r\n    moreEventsText: '他 {count} 件',\r\n    // Daterange component\r\n    fromText: '開始',\r\n    toText: '終わり',\r\n    // Measurement components\r\n    wholeText: '全数',\r\n    fractionText: '分数',\r\n    unitText: '単位',\r\n    // Time / Timespan component\r\n    labels: ['年間', '月間', '日間', '時間', '分', '秒', ''],\r\n    labelsShort: ['年間', '月間', '日間', '時間', '分', '秒', ''],\r\n    // Timer component\r\n    startText: '開始',\r\n    stopText: '停止',\r\n    resetText: 'リセット',\r\n    lapText: 'ラップ',\r\n    hideText: '隠す',\r\n    // Listview\r\n    backText: 'バック',\r\n    undoText: 'アンドゥ'\r\n  };\r\n\r\n  // Korean\r\n  mobiscroll.i18n.ko = {\r\n    // Core\r\n    setText: '설정',\r\n    cancelText: '취소',\r\n    clearText: '삭제',\r\n    selectedText: '{count} 선택된',\r\n    // Datetime component\r\n    dateFormat: 'yy년mm월dd일',\r\n    dayNames: ['일요일', '월요일', '화요일', '수요일', '목요일', '금요일', '토요일'],\r\n    dayNamesShort: ['일', '월', '화', '수', '목', '금', '토'],\r\n    dayNamesMin: ['일', '월', '화', '수', '목', '금', '토'],\r\n    dayText: '일',\r\n    delimiter: '-',\r\n    hourText: '시간',\r\n    minuteText: '분',\r\n    monthNames: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],\r\n    monthNamesShort: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],\r\n    monthText: '달',\r\n    secText: '초',\r\n    timeFormat: 'H:ii',\r\n    yearText: '년',\r\n    nowText: '지금',\r\n    pmText: '오후',\r\n    amText: '오전',\r\n    yearSuffix: '년',\r\n    monthSuffix: '월',\r\n    daySuffix: '일',\r\n    // Calendar component\r\n    firstDay: 0,\r\n    dateText: '날짜',\r\n    timeText: '시간',\r\n    todayText: '오늘',\r\n    prevMonthText: '이전 달',\r\n    nextMonthText: '다음 달',\r\n    prevYearText: '이전 년',\r\n    nextYearText: '다음 년',\r\n    closeText: '닫기',\r\n    eventText: '이벤트',\r\n    eventsText: '이벤트',\r\n    allDayText: '종일',\r\n    noEventsText: '이벤트 없음',\r\n    moreEventsText: '{count}개 더보기',\r\n    // Daterange component\r\n    fromText: '시작',\r\n    toText: '종료',\r\n    // Measurement components\r\n    wholeText: '정수',\r\n    fractionText: '분수',\r\n    unitText: '단위',\r\n    // Time / Timespan component\r\n    labels: ['년', '달', '일', '시간', '분', '초', ''],\r\n    labelsShort: ['년', '달', '일', '시간', '분', '초', ''],\r\n    // Timer component\r\n    startText: '시작',\r\n    stopText: '중지 ',\r\n    resetText: '초기화',\r\n    lapText: '기록',\r\n    hideText: '숨는 장소',\r\n    // Listview\r\n    backText: '뒤로',\r\n    undoText: '실행취소',\r\n    // Form\r\n    offText: '끔',\r\n    onText: '켬',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // Lietuvių\r\n  mobiscroll.i18n.lt = {\r\n    // Core\r\n    setText: 'OK',\r\n    cancelText: 'Atšaukti',\r\n    clearText: 'Išvalyti',\r\n    selectedText: 'Pasirinktas {count}',\r\n    selectedPluralText: 'Pasirinkti {count}',\r\n    // Datetime component\r\n    dateFormat: 'yy-mm-dd',\r\n    dayNames: ['Sekmadienis', 'Pirmadienis', 'Antradienis', 'Trečiadienis', 'Ketvirtadienis', 'Penktadienis', 'Šeštadienis'],\r\n    dayNamesShort: ['S', 'Pr', 'A', 'T', 'K', 'Pn', 'Š'],\r\n    dayNamesMin: ['S', 'Pr', 'A', 'T', 'K', 'Pn', 'Š'],\r\n    dayText: 'Diena',\r\n    hourText: 'Valanda',\r\n    minuteText: 'Minutes',\r\n    monthNames: ['Sausis', 'Vasaris', 'Kovas', 'Balandis', 'Gegužė', 'Birželis', 'Liepa', 'Rugpjūtis', 'Rugsėjis', 'Spalis', 'Lapkritis', 'Gruodis'],\r\n    monthNamesShort: ['Sau', 'Vas', 'Kov', 'Bal', 'Geg', 'Bir', 'Lie', 'Rugp', 'Rugs', 'Spa', 'Lap', 'Gruo'],\r\n    monthText: 'Mėnuo',\r\n    secText: 'Sekundes',\r\n    amText: 'am',\r\n    pmText: 'pm',\r\n    timeFormat: 'HH:ii',\r\n    yearText: 'Metai',\r\n    nowText: 'Dabar',\r\n    todayText: 'Šiandien',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'Data',\r\n    timeText: 'Laikas',\r\n    closeText: 'Uždaryti',\r\n    allDayText: 'Visą dieną',\r\n    noEventsText: 'Nėra įvykių',\r\n    eventText: 'Įvykių',\r\n    eventsText: 'Įvykiai',\r\n    moreEventsText: 'Dar {count}',\r\n    // Daterange component\r\n    fromText: 'Nuo',\r\n    toText: 'Iki',\r\n    // Measurement components\r\n    wholeText: 'Visas',\r\n    fractionText: 'Frakcija',\r\n    unitText: 'Vienetas',\r\n    // Time / Timespan component\r\n    labels: ['Metai', 'Mėnesiai', 'Dienos', 'Valandos', 'Minutes', 'Sekundes', ''],\r\n    labelsShort: ['m', 'mėn.', 'd', 'h', 'min', 's', ''],\r\n    // Timer component\r\n    startText: 'Pradėti',\r\n    stopText: 'Sustabdyti',\r\n    resetText: 'Išnaujo',\r\n    lapText: 'Ratas',\r\n    hideText: 'Slėpti',\r\n    // Listview\r\n    backText: 'Atgal',\r\n    undoText: 'Anuliuoti',\r\n    // Form\r\n    offText: 'Išj.',\r\n    onText: 'Įj.',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // Nederlands\r\n  mobiscroll.i18n.nl = {\r\n    // Core\r\n    setText: 'Instellen',\r\n    cancelText: 'Annuleren',\r\n    clearText: 'Leegmaken',\r\n    selectedText: '{count} gekozen',\r\n    // Datetime component\r\n    dateFormat: 'dd-mm-yy',\r\n    dayNames: ['Zondag', 'Maandag', 'Dinsdag', 'Woensdag', 'Donderdag', 'Vrijdag', 'Zaterdag'],\r\n    dayNamesShort: ['zo', 'ma', 'di', 'wo', 'do', 'vr', 'za'],\r\n    dayNamesMin: ['z', 'm', 'd', 'w', 'd', 'v', 'z'],\r\n    dayText: 'Dag',\r\n    hourText: 'Uur',\r\n    minuteText: 'Minuten',\r\n    monthNames: ['januari', 'februari', 'maart', 'april', 'mei', 'juni', 'juli', 'augustus', 'september', 'oktober', 'november', 'december'],\r\n    monthNamesShort: ['jan', 'feb', 'mrt', 'apr', 'mei', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec'],\r\n    monthText: 'Maand',\r\n    secText: 'Seconden',\r\n    timeFormat: 'HH:ii',\r\n    yearText: 'Jaar',\r\n    nowText: 'Nu',\r\n    pmText: 'pm',\r\n    amText: 'am',\r\n    todayText: 'Vandaag',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'Datum',\r\n    timeText: 'Tijd',\r\n    closeText: 'Sluiten',\r\n    allDayText: 'Hele dag',\r\n    noEventsText: 'Geen activiteiten',\r\n    eventText: 'Activiteit',\r\n    eventsText: 'Activiteiten',\r\n    moreEventsText: 'nog {count}',\r\n    // Daterange component\r\n    fromText: 'Start',\r\n    toText: 'Einde',\r\n    // Measurement components\r\n    wholeText: 'geheel',\r\n    fractionText: 'fractie',\r\n    unitText: 'eenheid',\r\n    // Time / Timespan component\r\n    labels: ['Jaren', 'Maanden', 'Dagen', 'Uren', 'Minuten', 'Seconden', ''],\r\n    labelsShort: ['j', 'm', 'd', 'u', 'min', 'sec', ''],\r\n    // Timer component\r\n    startText: 'Start',\r\n    stopText: 'Stop',\r\n    resetText: 'Reset',\r\n    lapText: 'Ronde',\r\n    hideText: 'Verbergen',\r\n    // Listview\r\n    backText: 'Terug',\r\n    undoText: 'Onged. maken',\r\n    // Form\r\n    offText: 'Uit',\r\n    onText: 'Aan',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // Norsk\r\n  mobiscroll.i18n.no = {\r\n    // Core\r\n    setText: 'OK',\r\n    cancelText: 'Avbryt',\r\n    clearText: 'Tømme',\r\n    selectedText: '{count} valgt',\r\n    // Datetime component\r\n    dateFormat: 'dd.mm.yy',\r\n    dayNames: ['Søndag', 'Mandag', 'Tirsdag', 'Onsdag', 'Torsdag', 'Fredag', 'Lørdag'],\r\n    dayNamesShort: ['Sø', 'Ma', 'Ti', 'On', 'To', 'Fr', 'Lø'],\r\n    dayNamesMin: ['S', 'M', 'T', 'O', 'T', 'F', 'L'],\r\n    dayText: 'Dag',\r\n    delimiter: '.',\r\n    hourText: 'Time',\r\n    minuteText: 'Minutt',\r\n    monthNames: ['Januar', 'Februar', 'Mars', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Desember'],\r\n    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Des'],\r\n    monthText: 'Måned',\r\n    secText: 'Sekund',\r\n    timeFormat: 'HH:ii',\r\n    yearText: 'År',\r\n    nowText: 'Nå',\r\n    pmText: 'pm',\r\n    amText: 'am',\r\n    todayText: 'I dag',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'Dato',\r\n    timeText: 'Tid',\r\n    closeText: 'Lukk',\r\n    allDayText: 'Hele dagen',\r\n    noEventsText: 'Ingen hendelser',\r\n    eventText: 'Hendelse',\r\n    eventsText: 'Hendelser',\r\n    moreEventsText: '{count} mere',\r\n    // Daterange component\r\n    fromText: 'Start',\r\n    toText: 'End',\r\n    // Measurement components\r\n    wholeText: 'Hele',\r\n    fractionText: 'Fraksjon',\r\n    unitText: 'Enhet',\r\n    // Time / Timespan component\r\n    labels: ['År', 'Måneder', 'Dager', 'Timer', 'Minutter', 'Sekunder', ''],\r\n    labelsShort: ['År', 'Mån', 'Dag', 'Time', 'Min', 'Sek', ''],\r\n    // Timer component\r\n    startText: 'Start',\r\n    stopText: 'Stopp',\r\n    resetText: 'Tilbakestille',\r\n    lapText: 'Runde',\r\n    hideText: 'Skjul',\r\n    // Listview\r\n    backText: 'Tilbake',\r\n    undoText: 'Angre',\r\n    // Form\r\n    offText: 'Av',\r\n    onText: 'På',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // Polski\r\n  mobiscroll.i18n.pl = {\r\n    // Core\r\n    setText: 'Zestaw',\r\n    cancelText: 'Anuluj',\r\n    clearText: 'Oczyścić',\r\n    selectedText: 'Wybór: {count}',\r\n    // Datetime component\r\n    dateFormat: 'yy-mm-dd',\r\n    dayNames: ['Niedziela', 'Poniedziałek', 'Wtorek', 'Środa', 'Czwartek', 'Piątek', 'Sobota'],\r\n    dayNamesShort: ['Niedz.', 'Pon.', 'Wt.', 'Śr.', 'Czw.', 'Pt.', 'Sob.'],\r\n    dayNamesMin: ['N', 'P', 'W', 'Ś', 'C', 'P', 'S'],\r\n    dayText: 'Dzień',\r\n    hourText: 'Godziny',\r\n    minuteText: 'Minuty',\r\n    monthNames: ['Styczeń', 'Luty', 'Marzec', 'Kwiecień', 'Maj', 'Czerwiec', 'Lipiec', 'Sierpień', 'Wrzesień', 'Październik', 'Listopad', 'Grudzień'],\r\n    monthNamesShort: ['Sty', 'Lut', 'Mar', 'Kwi', 'Maj', 'Cze', 'Lip', 'Sie', 'Wrz', 'Paź', 'Lis', 'Gru'],\r\n    monthText: 'Miesiąc',\r\n    secText: 'Sekundy',\r\n    timeFormat: 'HH:ii',\r\n    yearText: 'Rok',\r\n    nowText: 'Teraz',\r\n    amText: 'am',\r\n    pmText: 'pm',\r\n    todayText: 'Dzisiaj',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'Data',\r\n    timeText: 'Czas',\r\n    closeText: 'Zakończenie',\r\n    allDayText: 'Cały dzień',\r\n    noEventsText: 'Brak wydarzeń',\r\n    eventText: 'Wydarzeń',\r\n    eventsText: 'Wydarzenia',\r\n    moreEventsText: 'Jeszcze {count}',\r\n    // Daterange component\r\n    fromText: 'Rozpoczęcie',\r\n    toText: 'Koniec',\r\n    // Measurement components\r\n    wholeText: 'Cały',\r\n    fractionText: 'Ułamek',\r\n    unitText: 'Jednostka',\r\n    // Time / Timespan component\r\n    labels: ['Lata', 'Miesiąc', 'Dni', 'Godziny', 'Minuty', 'Sekundy', ''],\r\n    labelsShort: ['R', 'M', 'Dz', 'Godz', 'Min', 'Sek', ''],\r\n    // Timer component\r\n    startText: 'Rozpoczęcie',\r\n    stopText: 'Zatrzymać',\r\n    resetText: 'Zresetować',\r\n    lapText: 'Zakładka',\r\n    hideText: 'Ukryć',\r\n    // Listview\r\n    backText: 'Wróć',\r\n    undoText: 'Cofnij',\r\n    // Form\r\n    offText: 'Wył',\r\n    onText: 'Wł',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // Português Brasileiro\r\n  mobiscroll.i18n['pt-BR'] = {\r\n    // Core\r\n    setText: 'Selecionar',\r\n    cancelText: 'Cancelar',\r\n    clearText: 'Claro',\r\n    selectedText: '{count} selecionado',\r\n    selectedPluralText: '{count} selecionados',\r\n    // Datetime component\r\n    dateFormat: 'dd/mm/yy',\r\n    dayNames: ['Domingo', 'Segunda-feira', 'Terça-feira', 'Quarta-feira', 'Quinta-feira', 'Sexta-feira', 'Sábado'],\r\n    dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'],\r\n    dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S'],\r\n    dayText: 'Dia',\r\n    hourText: 'Hora',\r\n    minuteText: 'Minutos',\r\n    monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\r\n    monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],\r\n    monthText: 'Mês',\r\n    secText: 'Segundo',\r\n    timeFormat: 'HH:ii',\r\n    yearText: 'Ano',\r\n    nowText: 'Agora',\r\n    pmText: 'pm',\r\n    amText: 'am',\r\n    todayText: 'Hoje',\r\n    // Calendar component\r\n    dateText: 'Data',\r\n    timeText: 'Tempo',\r\n    closeText: 'Fechar',\r\n    allDayText: 'Dia inteiro',\r\n    noEventsText: 'Nenhum evento',\r\n    eventText: 'Evento',\r\n    eventsText: 'Eventos',\r\n    moreEventsText: 'Mais {count}',\r\n    // Daterange component\r\n    fromText: 'In&iacute;cio',\r\n    toText: 'Fim',\r\n    // Measurement components\r\n    wholeText: 'Inteiro',\r\n    fractionText: 'Fração',\r\n    unitText: 'Unidade',\r\n    // Time / Timespan component\r\n    labels: ['Anos', 'Meses', 'Dias', 'Horas', 'Minutos', 'Segundos', ''],\r\n    labelsShort: ['Ano', 'M&ecirc;s', 'Dia', 'Hora', 'Min', 'Seg', ''],\r\n    // Timer component\r\n    startText: 'Começar',\r\n    stopText: 'Pare',\r\n    resetText: 'Reinicializar',\r\n    lapText: 'Lap',\r\n    hideText: 'Esconder',\r\n    // Listview\r\n    backText: 'Anterior',\r\n    undoText: 'Desfazer',\r\n    // Form\r\n    offText: 'Desl',\r\n    onText: 'Lig',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // Português Europeu\r\n  mobiscroll.i18n['pt-PT'] = {\r\n    // Core\r\n    setText: 'Seleccionar',\r\n    cancelText: 'Cancelar',\r\n    clearText: 'Claro',\r\n    selectedText: '{count} selecionado',\r\n    selectedPluralText: '{count} selecionados',\r\n    // Datetime component\r\n    dateFormat: 'dd-mm-yy',\r\n    dayNames: ['Domingo', 'Segunda-feira', 'Terça-feira', 'Quarta-feira', 'Quinta-feira', 'Sexta-feira', 'Sábado'],\r\n    dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'],\r\n    dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S'],\r\n    dayText: 'Dia',\r\n    hourText: 'Horas',\r\n    minuteText: 'Minutos',\r\n    monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\r\n    monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],\r\n    monthText: 'Mês',\r\n    secText: 'Segundo',\r\n    timeFormat: 'HH:ii',\r\n    yearText: 'Ano',\r\n    nowText: 'Actualizar',\r\n    pmText: 'pm',\r\n    amText: 'am',\r\n    todayText: 'Hoy',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'Data',\r\n    timeText: 'Tempo',\r\n    closeText: 'Fechar',\r\n    allDayText: 'Todo o dia',\r\n    noEventsText: 'Nenhum evento',\r\n    eventText: 'Evento',\r\n    eventsText: 'Eventos',\r\n    moreEventsText: 'mais {count}',\r\n    // Daterange component\r\n    fromText: 'Início',\r\n    toText: 'Fim',\r\n    // Measurement components\r\n    wholeText: 'Inteiro',\r\n    fractionText: 'Fracção',\r\n    unitText: 'Unidade',\r\n    // Time / Timespan component\r\n    labels: ['Anos', 'Meses', 'Dias', 'Horas', 'Minutos', 'Segundos', ''],\r\n    labelsShort: ['Ano', 'Mês', 'Dia', 'Hora', 'Min', 'Seg', ''],\r\n    // Timer component\r\n    startText: 'Começar',\r\n    stopText: 'Parar',\r\n    resetText: 'Reinicializar',\r\n    lapText: 'Lap',\r\n    hideText: 'Esconder',\r\n    // Listview\r\n    backText: 'Anterior',\r\n    undoText: 'Anular',\r\n    // Form\r\n    offText: 'Desl',\r\n    onText: 'Lig',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // Română\r\n  mobiscroll.i18n.ro = {\r\n    // Core\r\n    setText: 'Setare',\r\n    cancelText: 'Anulare',\r\n    clearText: 'Ştergere',\r\n    selectedText: '{count} selectat',\r\n    selectedPluralText: '{count} selectate',\r\n    // Datetime component\r\n    dateFormat: 'dd.mm.yy',\r\n    dayNames: ['Duminică', 'Luni', 'Marți', 'Miercuri', 'Joi', 'Vineri', 'Sâmbătă'],\r\n    dayNamesShort: ['Du', 'Lu', 'Ma', 'Mi', 'Jo', 'Vi', 'Sâ'],\r\n    dayNamesMin: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],\r\n    dayText: ' Ziua',\r\n    delimiter: '.',\r\n    hourText: ' Ore ',\r\n    minuteText: 'Minute',\r\n    monthNames: ['Ianuarie', 'Februarie', 'Martie', 'Aprilie', 'Mai', 'Iunie', 'Iulie', 'August', 'Septembrie', 'Octombrie', 'Noiembrie', 'Decembrie'],\r\n    monthNamesShort: ['Ian.', 'Feb.', 'Mar.', 'Apr.', 'Mai', 'Iun.', 'Iul.', 'Aug.', 'Sept.', 'Oct.', 'Nov.', 'Dec.'],\r\n    monthText: 'Luna',\r\n    secText: 'Secunde',\r\n    timeFormat: 'HH:ii',\r\n    yearText: 'Anul',\r\n    nowText: 'Acum',\r\n    amText: 'am',\r\n    pmText: 'pm',\r\n    todayText: 'Astăzi',\r\n    prevMonthText: 'Luna anterioară',\r\n    nextMonthText: 'Luna următoare',\r\n    prevYearText: 'Anul anterior',\r\n    nextYearText: 'Anul următor',\r\n    eventText: 'Eveniment',\r\n    eventsText: 'Evenimente',\r\n    allDayText: 'Toată ziua',\r\n    noEventsText: 'Niciun eveniment',\r\n    moreEventsText: 'Încă unul',\r\n    moreEventsPluralText: 'Încă {count}',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'Data',\r\n    timeText: 'Ora',\r\n    closeText: 'Închidere',\r\n    // Daterange component\r\n    fromText: 'Start',\r\n    toText: 'Final',\r\n    // Measurement components\r\n    wholeText: 'Complet',\r\n    fractionText: 'Parţial',\r\n    unitText: 'Unitate',\r\n    // Time / Timespan component\r\n    labels: ['Ani', 'Luni', 'Zile', 'Ore', 'Minute', 'Secunde', ''],\r\n    labelsShort: ['Ani', 'Luni', 'Zile', 'Ore', 'Min.', 'Sec.', ''],\r\n    // Timer component\r\n    startText: 'Start',\r\n    stopText: 'Stop',\r\n    resetText: 'Resetare',\r\n    lapText: 'Tură',\r\n    hideText: 'Ascundere',\r\n    // Listview\r\n    backText: 'Înapoi',\r\n    undoText: 'Anulează',\r\n    // Form\r\n    offText: 'Nu',\r\n    onText: 'Da',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // Русский (UA)\r\n  mobiscroll.i18n['ru-UA'] = {\r\n    // Core\r\n    setText: 'Установить',\r\n    cancelText: 'Отменить',\r\n    clearText: 'Очиститьr',\r\n    selectedText: '{count} Вібрать',\r\n    // Datetime component\r\n    dateFormat: 'dd.mm.yy',\r\n    dayNames: ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота'],\r\n    dayNamesShort: ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'],\r\n    dayNamesMin: ['в', 'п', 'в', 'с', 'ч', 'п', 'с'],\r\n    dayText: 'День',\r\n    delimiter: '.',\r\n    hourText: 'Часы',\r\n    minuteText: 'Минуты',\r\n    monthNames: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\r\n    monthNamesShort: ['Янв.', 'Февр.', 'Март', 'Апр.', 'Май', 'Июнь', 'Июль', 'Авг.', 'Сент.', 'Окт.', 'Нояб.', 'Дек.'],\r\n    monthText: 'Месяцы',\r\n    secText: 'Сикунды',\r\n    timeFormat: 'HH:ii',\r\n    yearText: 'Год',\r\n    nowText: 'Сейчас',\r\n    amText: 'am',\r\n    pmText: 'pm',\r\n    todayText: 'Cегодня',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'Дата',\r\n    timeText: 'Время',\r\n    closeText: 'Закрыть',\r\n    allDayText: 'Весь день',\r\n    noEventsText: 'Нет событий',\r\n    eventText: 'Мероприятия',\r\n    eventsText: 'Мероприятия',\r\n    moreEventsText: 'Ещё {count}',\r\n    // Daterange component\r\n    fromText: 'Начало',\r\n    toText: 'Конец',\r\n    // Measurement components\r\n    wholeText: 'Весь',\r\n    fractionText: 'Часть',\r\n    unitText: 'Единица',\r\n    // Time / Timespan component\r\n    labels: ['Годы', ' Месяцы ', ' Дни ', ' Часы ', ' Минуты ', ' Секунды', ''],\r\n    labelsShort: ['Год', 'Мес.', 'Дн.', 'Ч.', 'Мин.', 'Сек.', ''],\r\n    // Timer component\r\n    startText: 'Старт',\r\n    stopText: 'Стоп',\r\n    resetText: ' Сброс ',\r\n    lapText: ' Этап ',\r\n    hideText: ' Скрыть ',\r\n    // Listview\r\n    backText: 'назад',\r\n    undoText: 'ОтменитЬ',\r\n    // Form\r\n    offText: 'O',\r\n    onText: 'I',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // Русский\r\n  mobiscroll.i18n['ru-RU'] = mobiscroll.i18n.ru = {\r\n    // Core\r\n    setText: 'Установить',\r\n    cancelText: 'Отмена',\r\n    clearText: 'Очистить',\r\n    selectedText: '{count} Выбрать',\r\n    // Datetime component\r\n    dateFormat: 'dd.mm.yy',\r\n    dayNames: ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота'],\r\n    dayNamesShort: ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'],\r\n    dayNamesMin: ['в', 'п', 'в', 'с', 'ч', 'п', 'с'],\r\n    dayText: 'День',\r\n    delimiter: '.',\r\n    hourText: 'Час',\r\n    minuteText: 'Минут',\r\n    monthNames: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\r\n    monthNamesShort: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],\r\n    monthText: 'Месяц',\r\n    secText: 'Секунд',\r\n    timeFormat: 'HH:ii',\r\n    yearText: 'Год',\r\n    nowText: 'Сейчас',\r\n    amText: 'am',\r\n    pmText: 'pm',\r\n    todayText: 'Cегодня',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'Дата',\r\n    timeText: 'Время',\r\n    closeText: 'Закрыть',\r\n    allDayText: 'Весь день',\r\n    noEventsText: 'Нет событий',\r\n    eventText: 'Мероприятия',\r\n    eventsText: 'Мероприятия',\r\n    moreEventsText: 'Ещё {count}',\r\n    // Daterange component\r\n    fromText: 'Начало',\r\n    toText: 'Конец',\r\n    // Measurement components\r\n    wholeText: 'Целое',\r\n    fractionText: 'Дробное',\r\n    unitText: 'Единица',\r\n    // Time / Timespan component\r\n    labels: ['Лет', 'Месяцев', 'Дней', 'Часов', 'Минут', 'Секунд', ''],\r\n    labelsShort: ['Лет', 'Мес', 'Дн', 'Час', 'Мин', 'Сек', ''],\r\n    // Timer component\r\n    startText: 'Старт',\r\n    stopText: 'Стоп',\r\n    resetText: 'Сбросить',\r\n    lapText: 'Круг',\r\n    hideText: 'Скрыть',\r\n    // Listview\r\n    backText: 'назад',\r\n    undoText: 'ОтменитЬ',\r\n    // Form\r\n    offText: 'O',\r\n    onText: 'I',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // Slovencina\r\n  mobiscroll.i18n.sk = {\r\n    // Core\r\n    setText: 'Zadaj',\r\n    cancelText: 'Zrušiť',\r\n    clearText: 'Vymazať',\r\n    selectedText: 'Označený: {count}',\r\n    // Datetime component\r\n    dateFormat: 'd.m.yy',\r\n    dayNames: ['Nedeľa', 'Pondelok', 'Utorok', 'Streda', 'Štvrtok', 'Piatok', 'Sobota'],\r\n    dayNamesShort: ['Ne', 'Po', 'Ut', 'St', 'Št', 'Pi', 'So'],\r\n    dayNamesMin: ['N', 'P', 'U', 'S', 'Š', 'P', 'S'],\r\n    dayText: 'Ďeň',\r\n    hourText: 'Hodiny',\r\n    minuteText: 'Minúty',\r\n    monthNames: ['Január', 'Február', 'Marec', 'Apríl', 'Máj', 'Jún', 'Júl', 'August', 'September', 'Október', 'November', 'December'],\r\n    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'Máj', 'Jún', 'Júl', 'Aug', 'Sep', 'Okt', 'Nov', 'Dec'],\r\n    monthText: 'Mesiac',\r\n    secText: 'Sekundy',\r\n    timeFormat: 'H:ii',\r\n    yearText: 'Rok',\r\n    nowText: 'Teraz',\r\n    amText: 'am',\r\n    pmText: 'pm',\r\n    todayText: 'Dnes',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'Datum',\r\n    timeText: 'Čas',\r\n    closeText: 'Zavrieť',\r\n    allDayText: 'Celý deň',\r\n    noEventsText: 'Žiadne udalosti',\r\n    eventText: 'Udalostí',\r\n    eventsText: 'Udalosti',\r\n    moreEventsText: '{count} ďalšia',\r\n    moreEventsPluralText: '{count} ďalšie',\r\n    // Daterange component\r\n    fromText: 'Začiatok',\r\n    toText: 'Koniec',\r\n    // Measurement components\r\n    wholeText: 'Celý',\r\n    fractionText: 'Časť',\r\n    unitText: 'Jednotka',\r\n    // Time / Timespan component\r\n    labels: ['Roky', 'Mesiace', 'Dni', 'Hodiny', 'Minúty', 'Sekundy', ''],\r\n    labelsShort: ['Rok', 'Mes', 'Dni', 'Hod', 'Min', 'Sec', ''],\r\n    // Timer component\r\n    startText: 'Start',\r\n    stopText: 'Stop',\r\n    resetText: 'Resetovať',\r\n    lapText: 'Etapa',\r\n    hideText: 'Schovať',\r\n    // Listview\r\n    backText: 'Späť',\r\n    undoText: 'Späť',\r\n    // Form\r\n    offText: 'O',\r\n    onText: 'I',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // Serbian\r\n  mobiscroll.i18n.sr = {\r\n    // Core\r\n    setText: 'Постави',\r\n    cancelText: 'Откажи',\r\n    clearText: 'Обриши',\r\n    selectedText: '{count} изабрана',\r\n    // Datetime component\r\n    dateFormat: 'dd.mm.yy',\r\n    dayNames: ['Недеља', 'Понедељак', 'Уторак', 'Среда', 'Четвртак', 'Петак', 'Субота'],\r\n    dayNamesShort: ['Нед', 'Пон', 'Уто', 'Сре', 'Чет', 'Пет', 'Суб'],\r\n    dayNamesMin: ['Не', 'По', 'Ут', 'Ср', 'Че', 'Пе', 'Су'],\r\n    dayText: 'Дан',\r\n    delimiter: '.',\r\n    hourText: 'Час',\r\n    minuteText: 'Минут',\r\n    monthNames: ['Јануар', 'Фебруар', 'Март', 'Април', 'Мај', 'Јун', 'Јул', 'Август', 'Септембар', 'Октобар', 'Новембар', 'Децембар'],\r\n    monthNamesShort: ['Јан', 'Феб', 'Мар', 'Апр', 'Мај', 'Јун', 'Јул', 'Авг', 'Сеп', 'Окт', 'Нов', 'Дец'],\r\n    monthText: 'месец',\r\n    secText: 'Секунд',\r\n    timeFormat: 'H:ii',\r\n    yearText: 'година',\r\n    nowText: 'сада',\r\n    pmText: 'pm',\r\n    amText: 'am',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'Датум',\r\n    timeText: 'време',\r\n    todayText: 'Данас',\r\n    prevMonthText: 'Претходни мјесец',\r\n    nextMonthText: 'Следећег месеца',\r\n    prevYearText: 'Претходна године',\r\n    nextYearText: 'Следеће године',\r\n    closeText: 'Затвори',\r\n    eventText: 'Догађај',\r\n    eventsText: 'Догађаји',\r\n    allDayText: 'Цео дан',\r\n    noEventsText: 'Нема догађаја',\r\n    moreEventsText: 'Још {count}',\r\n    // Daterange component\r\n    fromText: 'Од',\r\n    toText: 'До',\r\n    // Measurement components\r\n    wholeText: 'цео',\r\n    fractionText: 'Фракција',\r\n    unitText: 'единица',\r\n    // Time / Timespan component\r\n    labels: ['Године', 'Месеци', 'Дана', 'Сати', 'Минута', 'Секунди', ''],\r\n    labelsShort: ['Год', 'Мес', 'Дана', 'Сати', 'Мину', 'Секу', ''],\r\n    // Timer component\r\n    startText: 'Започни',\r\n    stopText: 'Стоп',\r\n    resetText: 'Ресетуј',\r\n    lapText: 'Круг',\r\n    hideText: 'Сакрити',\r\n    // Listview\r\n    backText: 'Повратак',\r\n    undoText: 'Опозови',\r\n    // Form\r\n    offText: 'нe',\r\n    onText: 'да',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // Svenska\r\n  mobiscroll.i18n.sv = {\r\n    // Core\r\n    setText: 'OK',\r\n    cancelText: 'Avbryt',\r\n    clearText: 'Klara',\r\n    selectedText: '{count} vald',\r\n    // Datetime component\r\n    dateFormat: 'yy-mm-dd',\r\n    dayNames: ['Söndag', 'Måndag', 'Tisdag', 'Onsdag', 'Torsdag', 'Fredag', 'Lördag'],\r\n    dayNamesShort: ['Sö', 'Må', 'Ti', 'On', 'To', 'Fr', 'Lö'],\r\n    dayNamesMin: ['S', 'M', 'T', 'O', 'T', 'F', 'L'],\r\n    dayText: 'Dag',\r\n    hourText: 'Timme',\r\n    minuteText: 'Minut',\r\n    monthNames: ['Januari', 'Februari', 'Mars', 'April', 'Maj', 'Juni', 'Juli', 'Augusti', 'September', 'Oktober', 'November', 'December'],\r\n    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'Maj', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dec'],\r\n    monthText: 'Månad',\r\n    secText: 'Sekund',\r\n    timeFormat: 'HH:ii',\r\n    yearText: 'År',\r\n    nowText: 'Nu',\r\n    pmText: 'pm',\r\n    amText: 'am',\r\n    todayText: 'I dag',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'Datum',\r\n    timeText: 'Tid',\r\n    closeText: 'Stäng',\r\n    allDayText: 'Heldag',\r\n    noEventsText: 'Inga aktiviteter',\r\n    eventText: 'Händelse',\r\n    eventsText: 'Händelser',\r\n    moreEventsText: '{count} till',\r\n    // Daterange component\r\n    fromText: 'Start',\r\n    toText: 'Slut',\r\n    // Measurement components\r\n    wholeText: 'Hela',\r\n    fractionText: 'Bråk',\r\n    unitText: 'Enhet',\r\n    // Time / Timespan component\r\n    labels: ['År', 'Månader', 'Dagar', 'Timmar', 'Minuter', 'Sekunder', ''],\r\n    labelsShort: ['År', 'Mån', 'Dag', 'Tim', 'Min', 'Sek', ''],\r\n    // Timer component\r\n    startText: 'Start',\r\n    stopText: 'Stopp',\r\n    resetText: 'Återställ',\r\n    lapText: 'Varv',\r\n    hideText: 'Dölj',\r\n    // Listview\r\n    backText: 'Tillbaka',\r\n    undoText: 'Ångra',\r\n    // Form\r\n    offText: 'Av',\r\n    onText: 'På'\r\n  };\r\n\r\n  // Thai\r\n  mobiscroll.i18n.th = {\r\n    // Core\r\n    setText: 'ตั้งค่า',\r\n    cancelText: 'ยกเลิก',\r\n    clearText: 'ล้าง',\r\n    selectedText: '{count} เลือก',\r\n    // Datetime component\r\n    dateFormat: \"dd/mm/yy\",\r\n    dayNames: [\"อาทิตย์\", \"จันทร์\", \"อังคาร\", \"พุธ\", \"พฤหัสบดี\", \"ศุกร์\", \"เสาร์\"],\r\n    dayNamesShort: [\"อา.\", \"จ.\", \"อ.\", \"พ.\", \"พฤ.\", \"ศ.\", \"ส.\"],\r\n    dayNamesMin: [\"อา.\", \"จ.\", \"อ.\", \"พ.\", \"พฤ.\", \"ศ.\", \"ส.\"],\r\n    dayText: 'วัน',\r\n    delimiter: '.',\r\n    hourText: 'ชั่วโมง',\r\n    minuteText: 'นาที',\r\n    monthNames: [\"มกราคม\", \"กุมภาพันธ์\", \"มีนาคม\", \"เมษายน\", \"พฤษภาคม\", \"มิถุนายน\", \"กรกฎาคม\", \"สิงหาคม\", \"กันยายน\", \"ตุลาคม\", \"พฤศจิกายน\", \"ธันวาคม\"],\r\n    monthNamesShort: [\"ม.ค.\", \"ก.พ.\", \"มี.ค.\", \"เม.ย.\", \"พ.ค.\", \"มิ.ย.\", \"ก.ค.\", \"ส.ค.\", \"ก.ย.\", \"ต.ค.\", \"พ.ย.\", \"ธ.ค.\"],\r\n    monthText: 'เดือน',\r\n    secText: 'วินาที',\r\n    timeFormat: 'HH:ii',\r\n    yearText: 'ปี',\r\n    nowText: 'ตอนนี้',\r\n    pmText: 'pm',\r\n    amText: 'am',\r\n    // Calendar component\r\n    firstDay: 0,\r\n    dateText: 'วัน',\r\n    timeText: 'เวลา',\r\n    today: \"วันนี้\",\r\n    prevMonthText: 'เดือนก่อนหน้า',\r\n    nextMonthText: 'เดือนถัดไป',\r\n    prevYearText: 'ปีก่อนหน้า',\r\n    nextYearText: 'ปีถัดไป',\r\n    closeText: \"ปิด\",\r\n    eventText: 'เหตุการณ์',\r\n    eventsText: 'เหตุการณ์',\r\n    allDayText: 'ตลอดวัน',\r\n    noEventsText: 'ไม่มีกิจกรรม',\r\n    moreEventsText: 'อีก {count} กิจกรรม',\r\n    // Daterange component\r\n    fromText: 'จาก',\r\n    toText: 'ถึง',\r\n    // Measurement components\r\n    wholeText: 'ทั้งหมด',\r\n    fractionText: 'เศษส่วน',\r\n    unitText: 'หน่วย',\r\n    // Time / Timespan component\r\n    labels: ['ปี', 'เดือน', 'วัน', 'ชั่วโมง', 'นาที', 'วินาที', ''],\r\n    labelsShort: ['ปี', 'เดือน', 'วัน', 'ชั่วโมง', 'นาที', 'วินาที', ''],\r\n    // Timer component\r\n    startText: 'เริ่ม',\r\n    stopText: 'หยุด',\r\n    resetText: 'รีเซ็ต',\r\n    lapText: 'รอบ',\r\n    hideText: 'ซ่อน',\r\n    // Listview\r\n    backText: 'ย้อนกลับ',\r\n    undoText: 'เลิกทา',\r\n    // Form\r\n    offText: 'ปิด',\r\n    onText: 'เปิด',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // Türkçe\r\n  mobiscroll.i18n.tr = {\r\n    // Core\r\n    setText: 'Seç',\r\n    cancelText: 'İptal',\r\n    clearText: 'Temizleyin',\r\n    selectedText: '{count} seçilmiş',\r\n    // Datetime component\r\n    dateFormat: 'dd.mm.yy',\r\n    dayNames: ['Pazar', 'Pazartesi', 'Salı', 'Çarşamba', 'Perşembe', 'Cuma', 'Cumartesi'],\r\n    dayNamesShort: ['Paz', 'Pzt', 'Sal', 'Çar', 'Per', 'Cum', 'Cmt'],\r\n    dayNamesMin: ['P', 'P', 'S', 'Ç', 'P', 'C', 'C'],\r\n    dayText: 'Gün',\r\n    delimiter: '.',\r\n    hourText: 'Saat',\r\n    minuteText: 'Dakika',\r\n    monthNames: ['Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran', 'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık'],\r\n    monthNamesShort: ['Oca', 'Şub', 'Mar', 'Nis', 'May', 'Haz', 'Tem', 'Ağu', 'Eyl', 'Eki', 'Kas', 'Ara'],\r\n    monthText: 'Ay',\r\n    secText: 'Saniye',\r\n    timeFormat: 'HH:ii',\r\n    yearText: 'Yıl',\r\n    nowText: 'Şimdi',\r\n    pmText: 'pm',\r\n    amText: 'am',\r\n    todayText: 'Bugün',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'Tarih',\r\n    timeText: 'Zaman',\r\n    closeText: 'Kapatmak',\r\n    allDayText: 'Tüm gün',\r\n    noEventsText: 'Etkinlik Yok',\r\n    eventText: 'Etkinlik',\r\n    eventsText: 'Etkinlikler',\r\n    moreEventsText: '{count} tane daha',\r\n    // Daterange component\r\n    fromText: 'Başla',\r\n    toText: 'Son',\r\n    // Measurement components\r\n    wholeText: 'Tam',\r\n    fractionText: 'Kesir',\r\n    unitText: 'Birim',\r\n    // Time / Timespan component\r\n    labels: ['Yıl', 'Ay', 'Gün', 'Saat', 'Dakika', 'Saniye', ''],\r\n    labelsShort: ['Yıl', 'Ay', 'Gün', 'Sa', 'Dak', 'Sn', ''],\r\n    // Timer component\r\n    startText: 'Başla',\r\n    stopText: 'Durdur',\r\n    resetText: 'Sıfırla',\r\n    lapText: 'Tur',\r\n    hideText: 'Gizle',\r\n    // Listview\r\n    backText: 'Geri',\r\n    undoText: 'Geri Al',\r\n    // Form\r\n    offText: 'O',\r\n    onText: 'I',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: '.'\r\n  };\r\n\r\n  // Ukrainian\r\n  mobiscroll.i18n.ua = {\r\n    // Core\r\n    setText: 'встановити',\r\n    cancelText: 'відміна',\r\n    clearText: 'очистити',\r\n    selectedText: '{count} вибрані',\r\n    // Datetime component\r\n    dateFormat: \"dd.mm.yy\",\r\n    dayNames: [\"неділя\", \"понеділок\", \"вівторок\", \"середа\", \"четвер\", \"п’ятниця\", \"субота\"],\r\n    dayNamesShort: [\"нед\", \"пнд\", \"вів\", \"срд\", \"чтв\", \"птн\", \"сбт\"],\r\n    dayNamesMin: [\"Нд\", \"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\"],\r\n    dayText: 'День',\r\n    delimiter: '.',\r\n    hourText: 'година',\r\n    minuteText: 'хвилина',\r\n    monthNames: [\"Січень\", \"Лютий\", \"Березень\", \"Квітень\", \"Травень\", \"Червень\", \"Липень\", \"Серпень\", \"Вересень\", \"Жовтень\", \"Листопад\", \"Грудень\"],\r\n    monthNamesShort: [\"Січ\", \"Лют\", \"Бер\", \"Кві\", \"Тра\", \"Чер\", \"Лип\", \"Сер\", \"Вер\", \"Жов\", \"Лис\", \"Гру\"],\r\n    monthText: 'Місяць',\r\n    secText: 'Секунд',\r\n    timeFormat: 'H:ii',\r\n    yearText: 'Рік',\r\n    nowText: 'Зараз',\r\n    pmText: 'pm',\r\n    amText: 'am',\r\n    // Calendar component\r\n    firstDay: 1,\r\n    dateText: 'дата',\r\n    timeText: 'Час',\r\n    todayText: 'Сьогодні',\r\n    prevMonthText: 'Попередній місяць',\r\n    nextMonthText: 'Наступного місяця',\r\n    prevYearText: 'Попередній рік',\r\n    nextYearText: 'Наступного року',\r\n    closeText: \"Закрити\",\r\n    eventText: 'подія',\r\n    eventsText: 'події',\r\n    allDayText: 'Увесь день',\r\n    noEventsText: 'Жодної події',\r\n    moreEventsText: 'та ще {count}',\r\n    // Daterange component\r\n    fromText: 'від',\r\n    toText: 'кінець',\r\n    // Measurement components\r\n    wholeText: 'всі',\r\n    fractionText: 'фракція',\r\n    unitText: 'одиниця',\r\n    // Time / Timespan component\r\n    labels: ['Рік', 'Місяць', 'День', 'година', 'хвилина', 'Секунд', ''],\r\n    labelsShort: ['Рік', 'Місяць', 'День', 'година', 'хвилина', 'Секунд', ''],\r\n    // Timer component\r\n    startText: 'Початок',\r\n    stopText: 'СТОП',\r\n    resetText: 'скинути',\r\n    lapText: 'коло',\r\n    hideText: 'сховати',\r\n    // Listview\r\n    backText: 'назад',\r\n    undoText: 'відмінити',\r\n    // Form\r\n    offText: 'Вимикати',\r\n    onText: 'Увімкнути',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // Vietnamese \r\n  mobiscroll.i18n.vi = {\r\n    // Core\r\n    setText: 'Đặt',\r\n    cancelText: 'Hủy bò',\r\n    clearText: 'Xóa',\r\n    selectedText: '{count} chọn',\r\n    // Datetime component\r\n    dateFormat: 'dd/mm/yy',\r\n    dayNames: ['Chủ Nhật', 'Thứ Hai', 'Thứ Ba', 'Thứ Tư', 'Thứ Năm', 'Thứ Sáu', 'Thứ Bảy'],\r\n    dayNamesShort: ['CN', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7'],\r\n    dayNamesMin: ['CN', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7'],\r\n    dayText: '',\r\n    delimiter: '/',\r\n    hourText: 'Giờ',\r\n    minuteText: 'Phút',\r\n    monthNames: ['Tháng Một', 'Tháng Hai', 'Tháng Ba', 'Tháng Tư', 'Tháng Năm', 'Tháng Sáu', 'Tháng Bảy', 'Tháng Tám', 'Tháng Chín', 'Tháng Mười', 'Tháng Mười Một', 'Tháng Mười Hai'],\r\n    monthNamesShort: ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6', 'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'],\r\n    monthText: 'Tháng',\r\n    secText: 'Giây',\r\n    timeFormat: 'H:ii',\r\n    yearText: 'Năm',\r\n    nowText: 'Bây giờ',\r\n    pmText: 'pm',\r\n    amText: 'am',\r\n    // Calendar component\r\n    firstDay: 0,\r\n    dateText: 'Ngày',\r\n    timeText: 'Hồi',\r\n    todayText: 'Hôm nay',\r\n    prevMonthText: 'Tháng trước',\r\n    nextMonthText: 'Tháng tới',\r\n    prevYearText: 'Măm trước',\r\n    nextYearText: 'Năm tới',\r\n    closeText: 'Đóng',\r\n    eventText: 'Sự kiện',\r\n    eventsText: 'Sự kiện',\r\n    allDayText: 'Cả ngày',\r\n    noEventsText: 'Không có sự kiện',\r\n    moreEventsText: '{count} thẻ khác',\r\n    // Daterange component\r\n    fromText: 'Từ',\r\n    toText: 'Tới',\r\n    // Measurement components\r\n    wholeText: 'Toàn thể',\r\n    fractionText: 'Phân số',\r\n    unitText: 'đơn vị',\r\n    // Time / Timespan component\r\n    labels: ['Năm', 'Tháng', 'Ngày', 'Giờ', 'Phút', 'Giây', ''],\r\n    labelsShort: ['Năm', 'Tháng', 'Ngày', 'Giờ', 'Phút', 'Giây', ''],\r\n    // Timer component\r\n    startText: 'Bắt đầu',\r\n    stopText: 'Dừng',\r\n    resetText: 'Đặt lại',\r\n    lapText: 'Vòng',\r\n    hideText: 'Giấu',\r\n    // Listview\r\n    backText: 'Quay lại',\r\n    undoText: 'Hoàn tác',\r\n    // Form\r\n    offText: 'Tất',\r\n    onText: 'Bật',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  // Chinese\r\n  mobiscroll.i18n.zh = {\r\n    // Core\r\n    setText: '确定',\r\n    cancelText: '取消',\r\n    clearText: '明确',\r\n    selectedText: '{count} 选',\r\n    // Datetime component\r\n    dateFormat: 'yy年mm月d日',\r\n    dayNames: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],\r\n    dayNamesShort: ['日', '一', '二', '三', '四', '五', '六'],\r\n    dayNamesMin: ['日', '一', '二', '三', '四', '五', '六'],\r\n    dayText: '日',\r\n    hourText: '时',\r\n    minuteText: '分',\r\n    monthNames: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\r\n    monthNamesShort: ['一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '十一', '十二'],\r\n    monthText: '月',\r\n    secText: '秒',\r\n    timeFormat: 'HH:ii',\r\n    yearText: '年',\r\n    nowText: '当前',\r\n    pmText: '下午',\r\n    amText: '上午',\r\n    yearSuffix: '年',\r\n    monthSuffix: '月',\r\n    daySuffix: '日',\r\n    todayText: '今天',\r\n    // Calendar component\r\n    dateText: '日',\r\n    timeText: '时间',\r\n    closeText: '关闭',\r\n    allDayText: '全天',\r\n    noEventsText: '无事件',\r\n    eventText: '活动',\r\n    eventsText: '活动',\r\n    moreEventsText: '他 {count} 件',\r\n    // Daterange component\r\n    fromText: '开始时间',\r\n    toText: '结束时间',\r\n    // Measurement components\r\n    wholeText: '合计',\r\n    fractionText: '分数',\r\n    unitText: '单位',\r\n    // Time / Timespan component\r\n    labels: ['年', '月', '日', '小时', '分钟', '秒', ''],\r\n    labelsShort: ['年', '月', '日', '点', '分', '秒', ''],\r\n    // Timer component\r\n    startText: '开始',\r\n    stopText: '停止',\r\n    resetText: '重置',\r\n    lapText: '圈',\r\n    hideText: '隐藏',\r\n    // Listview\r\n    backText: '返回',\r\n    undoText: '复原',\r\n    // Form\r\n    offText: '关闭',\r\n    onText: '开启',\r\n    // Numpad\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: ' '\r\n  };\r\n\r\n  var themes$1 = mobiscroll.themes;\r\n  themes$1.frame.bootstrap = {\r\n    disabledClass: 'disabled',\r\n    selectedClass: 'btn-primary',\r\n    selectedTabClass: 'active',\r\n    tabLink: true,\r\n    todayClass: 'text-primary mbsc-cal-today',\r\n    onMarkupInserted: function onMarkupInserted(ev) {\r\n      var dw = $$1(ev.target),\r\n          calTabs = $$1('.mbsc-cal-tabs', dw);\r\n      $$1('.mbsc-fr-popup', dw).addClass('popover');\r\n      $$1('.mbsc-fr-w', dw).addClass('popover-content');\r\n      $$1('.mbsc-fr-hdr', dw).addClass('popover-title popover-header');\r\n      $$1('.mbsc-fr-arr-i', dw).addClass('popover');\r\n      $$1('.mbsc-fr-arr', dw).addClass('arrow');\r\n      $$1('.mbsc-fr-btn', dw).addClass('btn btn-default btn-secondary');\r\n      $$1('.mbsc-fr-btn-s .mbsc-fr-btn', dw).removeClass('btn-default btn-secondary').addClass('btn btn-primary'); // Calendar tabs\r\n\r\n      calTabs.addClass('nav nav-tabs');\r\n      calTabs.find('.mbsc-cal-tab').addClass('nav-item'); // 4.x\r\n\r\n      calTabs.find('a').addClass('nav-link'); // 4.x\r\n\r\n      calTabs.find('.mbsc-cal-tab.active .nav-link').addClass('active'); // 4.x\r\n      // Calendar year/month selector\r\n\r\n      $$1('.mbsc-cal-picker', dw).addClass('popover'); // Rangepicker start/end buttons\r\n\r\n      $$1('.mbsc-range-btn', dw).addClass('btn btn-sm btn-small btn-default'); // Numpad \r\n\r\n      $$1('.mbsc-np-btn', dw).addClass('btn btn-default'); // Select filter\r\n\r\n      $$1('.mbsc-sel-filter-cont', dw).removeClass('mbsc-input');\r\n      $$1('.mbsc-sel-filter-input', dw).addClass('form-control');\r\n    },\r\n    onTabChange: function onTabChange(ev, inst) {\r\n      $$1('.mbsc-cal-tabs .nav-link', inst._markup).removeClass('active');\r\n      $$1('.mbsc-cal-tab.active .nav-link', inst._markup).addClass('active');\r\n    },\r\n    onPosition: function onPosition(ev) {\r\n      setTimeout(function () {\r\n        $$1('.mbsc-fr-bubble-top, .mbsc-fr-bubble-top .mbsc-fr-arr-i', ev.target).removeClass('bottom bs-popover-bottom').addClass('top bs-popover-top');\r\n        $$1('.mbsc-fr-bubble-bottom, .mbsc-fr-bubble-bottom .mbsc-fr-arr-i', ev.target).removeClass('top bs-popover-top').addClass('bottom  bs-popover-bottom');\r\n      }, 10);\r\n    }\r\n  };\r\n  themes$1.scroller.bootstrap = extend$1({}, themes$1.frame.bootstrap, {\r\n    dateDisplay: 'Mddyy',\r\n    btnCalPrevClass: 'mbsc-ic mbsc-ic-arrow-left5',\r\n    // calendar\r\n    btnCalNextClass: 'mbsc-ic mbsc-ic-arrow-right5',\r\n    // calendar\r\n    btnPlusClass: 'mbsc-ic mbsc-ic-arrow-down5 btn-light',\r\n    // scroller\r\n    btnMinusClass: 'mbsc-ic mbsc-ic-arrow-up5 btn-light',\r\n    // scroller\r\n    selectedLineHeight: true,\r\n    onEventBubbleShow: function onEventBubbleShow(ev) {\r\n      var evc = $$1(ev.eventList);\r\n      $$1('.mbsc-cal-event-list', evc).addClass('list-group');\r\n      $$1('.mbsc-cal-event', evc).addClass('list-group-item');\r\n    }\r\n  });\r\n  themes$1.navigation.bootstrap = {\r\n    wrapperClass: 'popover panel panel-default',\r\n    groupClass: 'btn-group',\r\n    activeClass: 'btn-primary',\r\n    disabledClass: 'disabled',\r\n    itemClass: 'btn btn-default'\r\n  };\r\n  themes$1.form.bootstrap = {};\r\n\r\n  var themes$2 = mobiscroll.themes;\r\n  themes$2.frame.ios = {\r\n    display: 'bottom',\r\n    // frame\r\n    headerText: false,\r\n    // frame\r\n    btnWidth: false,\r\n    // frame\r\n    deleteIcon: 'ios-backspace',\r\n    // numpad\r\n    scroll3d: os != 'wp' && (os != 'android' || majorVersion > 7)\r\n  };\r\n  themes$2.scroller.ios = extend$1({}, themes$2.frame.ios, {\r\n    rows: 5,\r\n    // scroller\r\n    height: 34,\r\n    // scroller\r\n    minWidth: 55,\r\n    // scroller\r\n    selectedLineHeight: true,\r\n    // scroller\r\n    selectedLineBorder: 1,\r\n    // scroller\r\n    showLabel: false,\r\n    // scroller\r\n    useShortLabels: true,\r\n    // timespan/timer\r\n    btnPlusClass: 'mbsc-ic mbsc-ic-arrow-down5',\r\n    // scroller\r\n    btnMinusClass: 'mbsc-ic mbsc-ic-arrow-up5',\r\n    // scroller\r\n    checkIcon: 'ion-ios7-checkmark-empty',\r\n    // select\r\n    filterClearIcon: 'ion-close-circled',\r\n    // select\r\n    dateDisplay: 'MMdyy',\r\n    // date\r\n    btnCalPrevClass: 'mbsc-ic mbsc-ic-arrow-left5',\r\n    // calendar\r\n    btnCalNextClass: 'mbsc-ic mbsc-ic-arrow-right5' // calendar\r\n\r\n  });\r\n  themes$2.listview.ios = {\r\n    leftArrowClass: 'mbsc-ic-ion-ios7-arrow-back',\r\n    rightArrowClass: 'mbsc-ic-ion-ios7-arrow-forward'\r\n  };\r\n  themes$2.form.ios = {};\r\n\r\n  function _addRipple($control, ev) {\r\n    var x = getCoord(ev, 'X', true),\r\n        y = getCoord(ev, 'Y', true),\r\n        control = $control[0],\r\n        rect = $control.offset(),\r\n        left = x - rect.left,\r\n        top = y - rect.top,\r\n        width = Math.max(left, control.offsetWidth - left),\r\n        height = Math.max(top, control.offsetHeight - top),\r\n        size = 2 * Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\r\n\r\n    _removeRipple($ripple);\r\n\r\n    $ripple = $$1('<span class=\"mbsc-ripple\"></span>').css({\r\n      backgroundColor: getComputedStyle(control).color,\r\n      width: size,\r\n      height: size,\r\n      top: y - rect.top - size / 2,\r\n      left: x - rect.left - size / 2\r\n    }).appendTo($control);\r\n    setTimeout(function () {\r\n      $ripple.addClass('mbsc-ripple-scaled mbsc-ripple-visible');\r\n    }, 10);\r\n  }\r\n\r\n  function _removeRipple($r) {\r\n    setTimeout(function () {\r\n      if ($r) {\r\n        $r.removeClass('mbsc-ripple-visible');\r\n        setTimeout(function () {\r\n          $r.remove();\r\n        }, 2000);\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  function initRipple($markup, selector, disabled, nohl) {\r\n    var startX,\r\n        startY,\r\n        markup = $markup[0];\r\n\r\n    function onStart(ev) {\r\n      var target = closest(markup, ev.target, selector);\r\n\r\n      if (target && testTouch(ev, target)) {\r\n        startX = getCoord(ev, 'X');\r\n        startY = getCoord(ev, 'Y');\r\n        $active$1 = $$1(target);\r\n\r\n        if (!$active$1.hasClass(disabled) && !$active$1.hasClass(nohl)) {\r\n          _addRipple($active$1, ev);\r\n        } else {\r\n          $active$1 = null;\r\n        }\r\n      }\r\n    }\r\n\r\n    function onMove(ev) {\r\n      if ($active$1 && Math.abs(getCoord(ev, 'X') - startX) > 9 || Math.abs(getCoord(ev, 'Y') - startY) > 9) {\r\n        _removeRipple($ripple);\r\n\r\n        $active$1 = null;\r\n      }\r\n    }\r\n\r\n    function onEnd() {\r\n      if ($active$1) {\r\n        setTimeout(function () {\r\n          _removeRipple($ripple);\r\n        }, 100);\r\n        $active$1 = null;\r\n      }\r\n    }\r\n\r\n    if (markup) {\r\n      if (markup.__mbscRippleOff) {\r\n        markup.__mbscRippleOff();\r\n      }\r\n\r\n      listen(markup, 'touchstart', onStart, {\r\n        passive: true\r\n      });\r\n      listen(markup, 'mousedown', onStart);\r\n      listen(markup, 'touchmove', onMove, {\r\n        passive: true\r\n      });\r\n      listen(markup, 'mousemove', onMove);\r\n      listen(markup, 'touchend', onEnd);\r\n      listen(markup, 'touchcancel', onEnd);\r\n      listen(markup, 'mouseleave', onEnd);\r\n      listen(markup, 'mouseup', onEnd);\r\n\r\n      markup.__mbscRippleOff = function () {\r\n        unlisten(markup, 'touchstart', onStart, {\r\n          passive: true\r\n        });\r\n        unlisten(markup, 'mousedown', onStart);\r\n        unlisten(markup, 'touchmove', onMove, {\r\n          passive: true\r\n        });\r\n        unlisten(markup, 'mousemove', onMove);\r\n        unlisten(markup, 'touchend', onEnd);\r\n        unlisten(markup, 'touchcancel', onEnd);\r\n        unlisten(markup, 'mouseleave', onEnd);\r\n        unlisten(markup, 'mouseup', onEnd);\r\n        delete markup.__mbscRippleOff;\r\n      };\r\n    }\r\n  }\r\n\r\n  var $active$1,\r\n      $ripple,\r\n      themes$3 = mobiscroll.themes;\r\n  themes$3.frame.material = {\r\n    headerText: false,\r\n    btnWidth: false,\r\n    deleteIcon: 'material-backspace',\r\n    onMarkupReady: function onMarkupReady(ev) {\r\n      initRipple($$1(ev.target), '.mbsc-fr-btn-e', 'mbsc-disabled', 'mbsc-fr-btn-nhl');\r\n    }\r\n  };\r\n  themes$3.scroller.material = extend$1({}, themes$3.frame.material, {\r\n    showLabel: false,\r\n    selectedLineBorder: 2,\r\n    weekDays: 'min',\r\n    icon: {\r\n      filled: 'material-star',\r\n      empty: 'material-star-outline'\r\n    },\r\n    checkIcon: 'material-check',\r\n    btnPlusClass: 'mbsc-ic mbsc-ic-material-keyboard-arrow-down',\r\n    btnMinusClass: 'mbsc-ic mbsc-ic-material-keyboard-arrow-up',\r\n    btnCalPrevClass: 'mbsc-ic mbsc-ic-material-keyboard-arrow-left',\r\n    btnCalNextClass: 'mbsc-ic mbsc-ic-material-keyboard-arrow-right'\r\n  });\r\n  themes$3.listview.material = {\r\n    leftArrowClass: 'mbsc-ic-material-keyboard-arrow-left',\r\n    rightArrowClass: 'mbsc-ic-material-keyboard-arrow-right',\r\n    onItemActivate: function onItemActivate(ev) {\r\n      _addRipple($$1(ev.target), ev.domEvent);\r\n    },\r\n    onItemDeactivate: function onItemDeactivate() {\r\n      _removeRipple($ripple);\r\n    },\r\n    onSlideStart: function onSlideStart(ev) {\r\n      $$1('.mbsc-ripple', ev.target).remove();\r\n    },\r\n    onSortStart: function onSortStart(ev) {\r\n      $$1('.mbsc-ripple', ev.target).remove();\r\n    }\r\n  };\r\n  themes$3.navigation.material = {\r\n    onInit: function onInit() {\r\n      initRipple($$1(this), '.mbsc-ms-item.mbsc-btn-e', 'mbsc-disabled', 'mbsc-btn-nhl');\r\n    },\r\n    onMarkupInit: function onMarkupInit() {\r\n      $$1('.mbsc-ripple', this).remove();\r\n    },\r\n    onDestroy: function onDestroy() {\r\n      if (this.__mbscRippleOff) {\r\n        this.__mbscRippleOff();\r\n      }\r\n    }\r\n  };\r\n  themes$3.form.material = {\r\n    addRipple: function addRipple(elm, ev) {\r\n      _addRipple(elm, ev);\r\n    },\r\n    removeRipple: function removeRipple() {\r\n      _removeRipple($ripple);\r\n    }\r\n  };\r\n\r\n  var themes$4 = mobiscroll.themes;\r\n  themes$4.frame.windows = {\r\n    headerText: false,\r\n    deleteIcon: 'backspace4',\r\n    //setIcon: 'material-check',\r\n    //cancelIcon: 'material-close',\r\n    //closeIcon: 'material-close',\r\n    //clearIcon: 'material-close',\r\n    //okIcon: 'material-check',\r\n    //nowIcon: 'loop2',\r\n    //startIcon: 'play3',\r\n    //stopIcon: 'pause2',\r\n    //resetIcon: 'stop2',\r\n    //lapIcon: 'loop2',\r\n    //btnWidth: false,\r\n    btnReverse: true\r\n  };\r\n  themes$4.scroller.windows = extend$1({}, themes$4.frame.windows, {\r\n    rows: 6,\r\n    // scroller\r\n    minWidth: 88,\r\n    height: 44,\r\n    btnPlusClass: 'mbsc-ic mbsc-ic-arrow-down5',\r\n    btnMinusClass: 'mbsc-ic mbsc-ic-arrow-up5',\r\n    checkIcon: 'material-check',\r\n    dateDisplay: 'MMdyy',\r\n    // date\r\n    showLabel: false,\r\n    showScrollArrows: true,\r\n    btnCalPrevClass: 'mbsc-ic mbsc-ic-arrow-left5',\r\n    // calendar\r\n    btnCalNextClass: 'mbsc-ic mbsc-ic-arrow-right5',\r\n    // calendar\r\n    dayNamesShort: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\r\n    useShortLabels: true // timespan/timer\r\n\r\n  });\r\n  themes$4.form.windows = {};\r\n\r\n  mobiscroll.customTheme('ios-dark', 'ios');\r\n\r\n  mobiscroll.customTheme('material-dark', 'material');\r\n\r\n  mobiscroll.customTheme('mobiscroll-dark', 'mobiscroll');\r\n\r\n  mobiscroll.customTheme('windows-dark', 'windows');\r\n\r\n  var themes$5 = mobiscroll.themes;\r\n  var theme = 'mobiscroll';\r\n\r\n  if (os == 'android') {\r\n    theme = 'material';\r\n  } else if (os == 'ios') {\r\n    theme = 'ios';\r\n  } else if (os == 'wp') {\r\n    theme = 'windows';\r\n  }\r\n\r\n  $$1.each(themes$5.frame, function (key, settings) {\r\n    // Stop at the first custom theme with the OS base theme\r\n    if (theme && settings.baseTheme == theme && key != theme + '-dark') {\r\n      mobiscroll.autoTheme = key;\r\n      return false;\r\n    } else if (key == theme) {\r\n      mobiscroll.autoTheme = key;\r\n    }\r\n  });\r\n\r\n  mobiscroll.customTheme('ios-gray', 'ios');\r\n  mobiscroll.customTheme('material-indigo', 'material');\r\n  mobiscroll.customTheme('mobiscroll-lime', 'mobiscroll');\r\n  mobiscroll.customTheme('windows-yellow', 'windows');\r\n\r\n  mobiscroll.apiKey = '6e71703d';\r\n  mobiscroll.apiUrl = 'https://trial.mobiscroll.com/';\r\n  mobiscroll.fw = 'angular';\r\n\r\n  exports.MbscAccordion = MbscAccordion;\r\n  exports.MbscAvatar = MbscAvatar;\r\n  exports.MbscBottomNav = MbscBottomNav;\r\n  exports.MbscButton = MbscButton;\r\n  exports.MbscCalendar = MbscCalendar;\r\n  exports.MbscCalendarComponent = MbscCalendarComponent;\r\n  exports.MbscCalendarModule = MbscCalendarModule;\r\n  exports.MbscCard = MbscCard;\r\n  exports.MbscCardComponent = MbscCardComponent;\r\n  exports.MbscCardContent = MbscCardContent;\r\n  exports.MbscCardFooter = MbscCardFooter;\r\n  exports.MbscCardHeader = MbscCardHeader;\r\n  exports.MbscCardModule = MbscCardModule;\r\n  exports.MbscCardSubtitle = MbscCardSubtitle;\r\n  exports.MbscCardTitle = MbscCardTitle;\r\n  exports.MbscCheckbox = MbscCheckbox;\r\n  exports.MbscColor = MbscColor;\r\n  exports.MbscColorComponent = MbscColorComponent;\r\n  exports.MbscColorModule = MbscColorModule;\r\n  exports.MbscDate = MbscDate;\r\n  exports.MbscDateComponent = MbscDateComponent;\r\n  exports.MbscDatetime = MbscDatetime;\r\n  exports.MbscDatetimeComponent = MbscDatetimeComponent;\r\n  exports.MbscDatetimeModule = MbscDatetimeModule;\r\n  exports.MbscDistance = MbscDistance;\r\n  exports.MbscDistanceComponent = MbscDistanceComponent;\r\n  exports.MbscDropdown = MbscDropdown;\r\n  exports.MbscEventcalendar = MbscEventcalendar;\r\n  exports.MbscEventcalendarComponent = MbscEventcalendarComponent;\r\n  exports.MbscEventcalendarModule = MbscEventcalendarModule;\r\n  exports.MbscForce = MbscForce;\r\n  exports.MbscForceComponent = MbscForceComponent;\r\n  exports.MbscForm = MbscForm;\r\n  exports.MbscFormGroup = MbscFormGroup;\r\n  exports.MbscFormGroupContent = MbscFormGroupContent;\r\n  exports.MbscFormGroupTitle = MbscFormGroupTitle;\r\n  exports.MbscFormsModule = MbscFormsModule;\r\n  exports.MbscHamburgerNav = MbscHamburgerNav;\r\n  exports.MbscImage = MbscImage;\r\n  exports.MbscImageComponent = MbscImageComponent;\r\n  exports.MbscImageItem = MbscImageItem;\r\n  exports.MbscImageModule = MbscImageModule;\r\n  exports.MbscInput = MbscInput;\r\n  exports.MbscInputModule = MbscInputModule;\r\n  exports.MbscListview = MbscListview;\r\n  exports.MbscListviewHeader = MbscListviewHeader;\r\n  exports.MbscListviewItem = MbscListviewItem;\r\n  exports.MbscListviewModule = MbscListviewModule;\r\n  exports.MbscListviewSublist = MbscListviewSublist;\r\n  exports.MbscMass = MbscMass;\r\n  exports.MbscMassComponent = MbscMassComponent;\r\n  exports.MbscMeasurement = MbscMeasurement;\r\n  exports.MbscMeasurementComponent = MbscMeasurementComponent;\r\n  exports.MbscMeasurementModule = MbscMeasurementModule;\r\n  exports.MbscModule = MbscModule;\r\n  exports.MbscNav = MbscNav;\r\n  exports.MbscNavItem = MbscNavItem;\r\n  exports.MbscNavigationModule = MbscNavigationModule;\r\n  exports.MbscNote = MbscNote;\r\n  exports.MbscNumber = MbscNumber;\r\n  exports.MbscNumberComponent = MbscNumberComponent;\r\n  exports.MbscNumberModule = MbscNumberModule;\r\n  exports.MbscNumpad = MbscNumpad;\r\n  exports.MbscNumpadComponent = MbscNumpadComponent;\r\n  exports.MbscNumpadDate = MbscNumpadDate;\r\n  exports.MbscNumpadDateComponent = MbscNumpadDateComponent;\r\n  exports.MbscNumpadDecimal = MbscNumpadDecimal;\r\n  exports.MbscNumpadDecimalComponent = MbscNumpadDecimalComponent;\r\n  exports.MbscNumpadModule = MbscNumpadModule;\r\n  exports.MbscNumpadTime = MbscNumpadTime;\r\n  exports.MbscNumpadTimeComponent = MbscNumpadTimeComponent;\r\n  exports.MbscNumpadTimespan = MbscNumpadTimespan;\r\n  exports.MbscNumpadTimespanComponent = MbscNumpadTimespanComponent;\r\n  exports.MbscOptionItem = MbscOptionItem;\r\n  exports.MbscOptionlist = MbscOptionlist;\r\n  exports.MbscOptionlistModule = MbscOptionlistModule;\r\n  exports.MbscPage = MbscPage;\r\n  exports.MbscPageModule = MbscPageModule;\r\n  exports.MbscPopup = MbscPopup;\r\n  exports.MbscPopupModule = MbscPopupModule;\r\n  exports.MbscProgress = MbscProgress;\r\n  exports.MbscRadio = MbscRadio;\r\n  exports.MbscRadioGroup = MbscRadioGroup;\r\n  exports.MbscRange = MbscRange;\r\n  exports.MbscRangeComponent = MbscRangeComponent;\r\n  exports.MbscRangeEndComponent = MbscRangeEndComponent;\r\n  exports.MbscRangeModule = MbscRangeModule;\r\n  exports.MbscRangeStartComponent = MbscRangeStartComponent;\r\n  exports.MbscRating = MbscRating;\r\n  exports.MbscRouterToken = MbscRouterToken;\r\n  exports.MbscScrollView = MbscScrollView;\r\n  exports.MbscScrollViewComponent = MbscScrollViewComponent;\r\n  exports.MbscScrollViewItem = MbscScrollViewItem;\r\n  exports.MbscScrollViewItemComponent = MbscScrollViewItemComponent;\r\n  exports.MbscScrollViewModule = MbscScrollViewModule;\r\n  exports.MbscScroller = MbscScroller;\r\n  exports.MbscScrollerComponent = MbscScrollerComponent;\r\n  exports.MbscScrollerModule = MbscScrollerModule;\r\n  exports.MbscSegmented = MbscSegmented;\r\n  exports.MbscSegmentedGroup = MbscSegmentedGroup;\r\n  exports.MbscSelect = MbscSelect;\r\n  exports.MbscSelectComponent = MbscSelectComponent;\r\n  exports.MbscSelectModule = MbscSelectModule;\r\n  exports.MbscSlider = MbscSlider;\r\n  exports.MbscSpeed = MbscSpeed;\r\n  exports.MbscSpeedComponent = MbscSpeedComponent;\r\n  exports.MbscStepper = MbscStepper;\r\n  exports.MbscSwitch = MbscSwitch;\r\n  exports.MbscTabNav = MbscTabNav;\r\n  exports.MbscTemperature = MbscTemperature;\r\n  exports.MbscTemperatureComponent = MbscTemperatureComponent;\r\n  exports.MbscTextarea = MbscTextarea;\r\n  exports.MbscTime = MbscTime;\r\n  exports.MbscTimeComponent = MbscTimeComponent;\r\n  exports.MbscTimer = MbscTimer;\r\n  exports.MbscTimerComponent = MbscTimerComponent;\r\n  exports.MbscTimerModule = MbscTimerModule;\r\n  exports.MbscTimespan = MbscTimespan;\r\n  exports.MbscTimespanComponent = MbscTimespanComponent;\r\n  exports.MbscTimespanModule = MbscTimespanModule;\r\n  exports.MbscTreelist = MbscTreelist;\r\n  exports.MbscTreelistComponent = MbscTreelistComponent;\r\n  exports.MbscTreelistModule = MbscTreelistModule;\r\n  exports.MbscWidget = MbscWidget;\r\n  exports.mobiscroll = mobiscroll;\r\n  exports.ɵa = MbscOptionsService;\r\n  exports.ɵb = MbscInputService;\r\n  exports.ɵba = MbscCalBaseModule;\r\n  exports.ɵbb = MbscDatetimeBase;\r\n  exports.ɵbc = MbscDatetimeBaseModule;\r\n  exports.ɵbd = MbscNavItemBase;\r\n  exports.ɵbe = MbscNavigationBase;\r\n  exports.ɵbf = MbscNavigationBaseModule;\r\n  exports.ɵbg = MbscNotifyItemService;\r\n  exports.ɵbh = MbscScrollItemBase;\r\n  exports.ɵbi = MbscScrollViewBase;\r\n  exports.ɵbj = MbscScrollViewBaseModule;\r\n  exports.ɵc = MbscListService;\r\n  exports.ɵd = MbscBase;\r\n  exports.ɵe = MbscValueBase;\r\n  exports.ɵf = MbscCloneBase;\r\n  exports.ɵg = MbscControlBase;\r\n  exports.ɵh = MbscFrameBase;\r\n  exports.ɵi = MbscScrollerBase;\r\n  exports.ɵj = MbscBaseModule;\r\n  exports.ɵk = MbscFrameBaseModule;\r\n  exports.ɵl = MbscScrollerBaseModule;\r\n  exports.ɵm = INPUT_TEMPLATE;\r\n  exports.ɵn = MbscDateBase;\r\n  exports.ɵo = MbscFormBase;\r\n  exports.ɵp = MbscFormValueBase;\r\n  exports.ɵq = MbscInputBase;\r\n  exports.ɵr = MbscRadioService;\r\n  exports.ɵs = MbscRadioGroupBase;\r\n  exports.ɵt = MbscListviewService;\r\n  exports.ɵu = MbscSublistService;\r\n  exports.ɵv = MbscListitemService;\r\n  exports.ɵw = MbscMeasurementBase;\r\n  exports.ɵx = MbscMeasurementChild;\r\n  exports.ɵy = MbscNumpadBase;\r\n  exports.ɵz = MbscCalBase;\r\n\r\n  Object.defineProperty(exports, '__esModule', { value: true });\r\n\r\n})));\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}